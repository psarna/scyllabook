<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2006" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1989.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1989.00"> </text><svg id="frames" x="10" width="1180" total_samples="16237"><g><title>calculate_sigpending (30 samples, 0.18%)</title><rect x="0.0000%" y="1893" width="0.1848%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="30"/><text x="0.2500%" y="1903.50"></text></g><g><title>__perf_event_task_sched_in (32 samples, 0.20%)</title><rect x="0.5604%" y="1861" width="0.1971%" height="15" fill="rgb(217,0,24)" fg:x="91" fg:w="32"/><text x="0.8104%" y="1871.50"></text></g><g><title>x86_pmu_enable_all (19 samples, 0.12%)</title><rect x="0.6405%" y="1845" width="0.1170%" height="15" fill="rgb(221,193,54)" fg:x="104" fg:w="19"/><text x="0.8905%" y="1855.50"></text></g><g><title>native_write_msr (19 samples, 0.12%)</title><rect x="0.6405%" y="1829" width="0.1170%" height="15" fill="rgb(248,212,6)" fg:x="104" fg:w="19"/><text x="0.8905%" y="1839.50"></text></g><g><title>schedule_tail (95 samples, 0.59%)</title><rect x="0.1848%" y="1893" width="0.5851%" height="15" fill="rgb(208,68,35)" fg:x="30" fg:w="95"/><text x="0.4348%" y="1903.50"></text></g><g><title>finish_task_switch.isra.0 (95 samples, 0.59%)</title><rect x="0.1848%" y="1877" width="0.5851%" height="15" fill="rgb(232,128,0)" fg:x="30" fg:w="95"/><text x="0.4348%" y="1887.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="0.7575%" y="1861" width="0.0123%" height="15" fill="rgb(207,160,47)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1871.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="0.7575%" y="1845" width="0.0123%" height="15" fill="rgb(228,23,34)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1855.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="0.7575%" y="1829" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1839.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="0.7575%" y="1813" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1823.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="0.7575%" y="1797" width="0.0123%" height="15" fill="rgb(250,228,42)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1807.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="0.7575%" y="1781" width="0.0123%" height="15" fill="rgb(240,193,28)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1791.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="0.7575%" y="1765" width="0.0123%" height="15" fill="rgb(216,20,37)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1775.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="0.7575%" y="1749" width="0.0123%" height="15" fill="rgb(206,188,39)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1759.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="0.7575%" y="1733" width="0.0123%" height="15" fill="rgb(217,207,13)" fg:x="123" fg:w="2"/><text x="1.0075%" y="1743.50"></text></g><g><title>ret_from_fork (127 samples, 0.78%)</title><rect x="0.0000%" y="1909" width="0.7822%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="127"/><text x="0.2500%" y="1919.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="0.7698%" y="1893" width="0.0123%" height="15" fill="rgb(225,20,46)" fg:x="125" fg:w="2"/><text x="1.0198%" y="1903.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="0.7698%" y="1877" width="0.0123%" height="15" fill="rgb(210,31,41)" fg:x="125" fg:w="2"/><text x="1.0198%" y="1887.50"></text></g><g><title>switch_fpu_return (2 samples, 0.01%)</title><rect x="0.7698%" y="1861" width="0.0123%" height="15" fill="rgb(221,200,47)" fg:x="125" fg:w="2"/><text x="1.0198%" y="1871.50"></text></g><g><title>copy_kernel_to_fpregs (2 samples, 0.01%)</title><rect x="0.7698%" y="1845" width="0.0123%" height="15" fill="rgb(226,26,5)" fg:x="125" fg:w="2"/><text x="1.0198%" y="1855.50"></text></g><g><title>console::term::Term::flush (2 samples, 0.01%)</title><rect x="0.8006%" y="1621" width="0.0123%" height="15" fill="rgb(249,33,26)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1631.50"></text></g><g><title>console::term::Term::write_through (2 samples, 0.01%)</title><rect x="0.8006%" y="1605" width="0.0123%" height="15" fill="rgb(235,183,28)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1615.50"></text></g><g><title>console::term::Term::write_through_common (2 samples, 0.01%)</title><rect x="0.8006%" y="1589" width="0.0123%" height="15" fill="rgb(221,5,38)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1599.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="0.8006%" y="1573" width="0.0123%" height="15" fill="rgb(247,18,42)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1583.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="0.8006%" y="1557" width="0.0123%" height="15" fill="rgb(241,131,45)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1567.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="0.8006%" y="1541" width="0.0123%" height="15" fill="rgb(249,31,29)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1551.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (2 samples, 0.01%)</title><rect x="0.8006%" y="1525" width="0.0123%" height="15" fill="rgb(225,111,53)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1535.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.01%)</title><rect x="0.8006%" y="1509" width="0.0123%" height="15" fill="rgb(238,160,17)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1519.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (2 samples, 0.01%)</title><rect x="0.8006%" y="1493" width="0.0123%" height="15" fill="rgb(214,148,48)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1503.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.01%)</title><rect x="0.8006%" y="1477" width="0.0123%" height="15" fill="rgb(232,36,49)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1487.50"></text></g><g><title>__GI___libc_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1461" width="0.0123%" height="15" fill="rgb(209,103,24)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1471.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="0.8006%" y="1445" width="0.0123%" height="15" fill="rgb(229,88,8)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1455.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="0.8006%" y="1429" width="0.0123%" height="15" fill="rgb(213,181,19)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1439.50"></text></g><g><title>ksys_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1413" width="0.0123%" height="15" fill="rgb(254,191,54)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1423.50"></text></g><g><title>vfs_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1397" width="0.0123%" height="15" fill="rgb(241,83,37)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1407.50"></text></g><g><title>new_sync_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1381" width="0.0123%" height="15" fill="rgb(233,36,39)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1391.50"></text></g><g><title>file_tty_write.constprop.0 (2 samples, 0.01%)</title><rect x="0.8006%" y="1365" width="0.0123%" height="15" fill="rgb(226,3,54)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1375.50"></text></g><g><title>n_tty_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1349" width="0.0123%" height="15" fill="rgb(245,192,40)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1359.50"></text></g><g><title>pty_write (2 samples, 0.01%)</title><rect x="0.8006%" y="1333" width="0.0123%" height="15" fill="rgb(238,167,29)" fg:x="130" fg:w="2"/><text x="1.0506%" y="1343.50"></text></g><g><title>indicatif::progress::ProgressDrawTarget::apply_draw_state (3 samples, 0.02%)</title><rect x="0.8006%" y="1637" width="0.0185%" height="15" fill="rgb(232,182,51)" fg:x="130" fg:w="3"/><text x="1.0506%" y="1647.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="0.7945%" y="1877" width="0.0308%" height="15" fill="rgb(231,60,39)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1887.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="0.7945%" y="1861" width="0.0308%" height="15" fill="rgb(208,69,12)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1871.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5 samples, 0.03%)</title><rect x="0.7945%" y="1845" width="0.0308%" height="15" fill="rgb(235,93,37)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1855.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5 samples, 0.03%)</title><rect x="0.7945%" y="1829" width="0.0308%" height="15" fill="rgb(213,116,39)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="0.7945%" y="1813" width="0.0308%" height="15" fill="rgb(222,207,29)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1823.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="0.7945%" y="1797" width="0.0308%" height="15" fill="rgb(206,96,30)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="0.7945%" y="1781" width="0.0308%" height="15" fill="rgb(218,138,4)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="0.7945%" y="1765" width="0.0308%" height="15" fill="rgb(250,191,14)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1775.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5 samples, 0.03%)</title><rect x="0.7945%" y="1749" width="0.0308%" height="15" fill="rgb(239,60,40)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1759.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.03%)</title><rect x="0.7945%" y="1733" width="0.0308%" height="15" fill="rgb(206,27,48)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1743.50"></text></g><g><title>latte::progress::FastProgressBar::wrap::{{closure}} (5 samples, 0.03%)</title><rect x="0.7945%" y="1717" width="0.0308%" height="15" fill="rgb(225,35,8)" fg:x="129" fg:w="5"/><text x="1.0445%" y="1727.50"></text></g><g><title>indicatif::progress::ProgressBar::set_position (4 samples, 0.02%)</title><rect x="0.8006%" y="1701" width="0.0246%" height="15" fill="rgb(250,213,24)" fg:x="130" fg:w="4"/><text x="1.0506%" y="1711.50"></text></g><g><title>indicatif::progress::ProgressBar::update_and_draw (4 samples, 0.02%)</title><rect x="0.8006%" y="1685" width="0.0246%" height="15" fill="rgb(247,123,22)" fg:x="130" fg:w="4"/><text x="1.0506%" y="1695.50"></text></g><g><title>indicatif::progress::ProgressBar::draw (4 samples, 0.02%)</title><rect x="0.8006%" y="1669" width="0.0246%" height="15" fill="rgb(231,138,38)" fg:x="130" fg:w="4"/><text x="1.0506%" y="1679.50"></text></g><g><title>indicatif::progress::draw_state (4 samples, 0.02%)</title><rect x="0.8006%" y="1653" width="0.0246%" height="15" fill="rgb(231,145,46)" fg:x="130" fg:w="4"/><text x="1.0506%" y="1663.50"></text></g><g><title>get_unmapped_area (2 samples, 0.01%)</title><rect x="0.8438%" y="1733" width="0.0123%" height="15" fill="rgb(251,118,11)" fg:x="137" fg:w="2"/><text x="1.0938%" y="1743.50"></text></g><g><title>arch_get_unmapped_area_topdown (2 samples, 0.01%)</title><rect x="0.8438%" y="1717" width="0.0123%" height="15" fill="rgb(217,147,25)" fg:x="137" fg:w="2"/><text x="1.0938%" y="1727.50"></text></g><g><title>vm_unmapped_area (2 samples, 0.01%)</title><rect x="0.8438%" y="1701" width="0.0123%" height="15" fill="rgb(247,81,37)" fg:x="137" fg:w="2"/><text x="1.0938%" y="1711.50"></text></g><g><title>do_mmap (5 samples, 0.03%)</title><rect x="0.8438%" y="1749" width="0.0308%" height="15" fill="rgb(209,12,38)" fg:x="137" fg:w="5"/><text x="1.0938%" y="1759.50"></text></g><g><title>mmap_region (3 samples, 0.02%)</title><rect x="0.8561%" y="1733" width="0.0185%" height="15" fill="rgb(227,1,9)" fg:x="139" fg:w="3"/><text x="1.1061%" y="1743.50"></text></g><g><title>__GI___mmap64 (8 samples, 0.05%)</title><rect x="0.8376%" y="1813" width="0.0493%" height="15" fill="rgb(248,47,43)" fg:x="136" fg:w="8"/><text x="1.0876%" y="1823.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="0.8376%" y="1797" width="0.0493%" height="15" fill="rgb(221,10,30)" fg:x="136" fg:w="8"/><text x="1.0876%" y="1807.50"></text></g><g><title>do_syscall_64 (8 samples, 0.05%)</title><rect x="0.8376%" y="1781" width="0.0493%" height="15" fill="rgb(210,229,1)" fg:x="136" fg:w="8"/><text x="1.0876%" y="1791.50"></text></g><g><title>vm_mmap_pgoff (8 samples, 0.05%)</title><rect x="0.8376%" y="1765" width="0.0493%" height="15" fill="rgb(222,148,37)" fg:x="136" fg:w="8"/><text x="1.0876%" y="1775.50"></text></g><g><title>security_mmap_file (2 samples, 0.01%)</title><rect x="0.8745%" y="1749" width="0.0123%" height="15" fill="rgb(234,67,33)" fg:x="142" fg:w="2"/><text x="1.1245%" y="1759.50"></text></g><g><title>__GI___clone (145 samples, 0.89%)</title><rect x="0.0000%" y="1925" width="0.8930%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="145"/><text x="0.2500%" y="1935.50"></text></g><g><title>start_thread (18 samples, 0.11%)</title><rect x="0.7822%" y="1909" width="0.1109%" height="15" fill="rgb(247,138,52)" fg:x="127" fg:w="18"/><text x="1.0322%" y="1919.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.10%)</title><rect x="0.7945%" y="1893" width="0.0985%" height="15" fill="rgb(213,79,30)" fg:x="129" fg:w="16"/><text x="1.0445%" y="1903.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (10 samples, 0.06%)</title><rect x="0.8314%" y="1877" width="0.0616%" height="15" fill="rgb(246,177,23)" fg:x="135" fg:w="10"/><text x="1.0814%" y="1887.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (10 samples, 0.06%)</title><rect x="0.8314%" y="1861" width="0.0616%" height="15" fill="rgb(230,62,27)" fg:x="135" fg:w="10"/><text x="1.0814%" y="1871.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (9 samples, 0.06%)</title><rect x="0.8376%" y="1845" width="0.0554%" height="15" fill="rgb(216,154,8)" fg:x="136" fg:w="9"/><text x="1.0876%" y="1855.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (9 samples, 0.06%)</title><rect x="0.8376%" y="1829" width="0.0554%" height="15" fill="rgb(244,35,45)" fg:x="136" fg:w="9"/><text x="1.0876%" y="1839.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="0.8930%" y="1925" width="0.0246%" height="15" fill="rgb(251,115,12)" fg:x="145" fg:w="4"/><text x="1.1430%" y="1935.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="0.8930%" y="1909" width="0.0246%" height="15" fill="rgb(240,54,50)" fg:x="145" fg:w="4"/><text x="1.1430%" y="1919.50"></text></g><g><title>__x64_sys_exit_group (3 samples, 0.02%)</title><rect x="0.8992%" y="1893" width="0.0185%" height="15" fill="rgb(233,84,52)" fg:x="146" fg:w="3"/><text x="1.1492%" y="1903.50"></text></g><g><title>do_group_exit (3 samples, 0.02%)</title><rect x="0.8992%" y="1877" width="0.0185%" height="15" fill="rgb(207,117,47)" fg:x="146" fg:w="3"/><text x="1.1492%" y="1887.50"></text></g><g><title>do_exit (3 samples, 0.02%)</title><rect x="0.8992%" y="1861" width="0.0185%" height="15" fill="rgb(249,43,39)" fg:x="146" fg:w="3"/><text x="1.1492%" y="1871.50"></text></g><g><title>mmput (3 samples, 0.02%)</title><rect x="0.8992%" y="1845" width="0.0185%" height="15" fill="rgb(209,38,44)" fg:x="146" fg:w="3"/><text x="1.1492%" y="1855.50"></text></g><g><title>exit_mmap (3 samples, 0.02%)</title><rect x="0.8992%" y="1829" width="0.0185%" height="15" fill="rgb(236,212,23)" fg:x="146" fg:w="3"/><text x="1.1492%" y="1839.50"></text></g><g><title>unmap_vmas (2 samples, 0.01%)</title><rect x="0.9053%" y="1813" width="0.0123%" height="15" fill="rgb(242,79,21)" fg:x="147" fg:w="2"/><text x="1.1553%" y="1823.50"></text></g><g><title>unmap_page_range (2 samples, 0.01%)</title><rect x="0.9053%" y="1797" width="0.0123%" height="15" fill="rgb(211,96,35)" fg:x="147" fg:w="2"/><text x="1.1553%" y="1807.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::value_at_percentile (4 samples, 0.02%)</title><rect x="0.9300%" y="1829" width="0.0246%" height="15" fill="rgb(253,215,40)" fg:x="151" fg:w="4"/><text x="1.1800%" y="1839.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::value_at_quantile (4 samples, 0.02%)</title><rect x="0.9300%" y="1813" width="0.0246%" height="15" fill="rgb(211,81,21)" fg:x="151" fg:w="4"/><text x="1.1800%" y="1823.50"></text></g><g><title>latte::stats::Recorder::finish (5 samples, 0.03%)</title><rect x="0.9300%" y="1877" width="0.0308%" height="15" fill="rgb(208,190,38)" fg:x="151" fg:w="5"/><text x="1.1800%" y="1887.50"></text></g><g><title>latte::stats::Recorder::stats (5 samples, 0.03%)</title><rect x="0.9300%" y="1861" width="0.0308%" height="15" fill="rgb(235,213,38)" fg:x="151" fg:w="5"/><text x="1.1800%" y="1871.50"></text></g><g><title>latte::stats::Log::throughput_percentiles (5 samples, 0.03%)</title><rect x="0.9300%" y="1845" width="0.0308%" height="15" fill="rgb(237,122,38)" fg:x="151" fg:w="5"/><text x="1.1800%" y="1855.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::add (2 samples, 0.01%)</title><rect x="0.9608%" y="1861" width="0.0123%" height="15" fill="rgb(244,218,35)" fg:x="156" fg:w="2"/><text x="1.2108%" y="1871.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.06%)</title><rect x="0.9238%" y="1909" width="0.0616%" height="15" fill="rgb(240,68,47)" fg:x="150" fg:w="10"/><text x="1.1738%" y="1919.50"></text></g><g><title>latte::par_execute::{{closure}} (10 samples, 0.06%)</title><rect x="0.9238%" y="1893" width="0.0616%" height="15" fill="rgb(210,16,53)" fg:x="150" fg:w="10"/><text x="1.1738%" y="1903.50"></text></g><g><title>latte::stats::Recorder::record (4 samples, 0.02%)</title><rect x="0.9608%" y="1877" width="0.0246%" height="15" fill="rgb(235,124,12)" fg:x="156" fg:w="4"/><text x="1.2108%" y="1887.50"></text></g><g><title>latte::stats::SampleStats::aggregate (2 samples, 0.01%)</title><rect x="0.9731%" y="1861" width="0.0123%" height="15" fill="rgb(224,169,11)" fg:x="158" fg:w="2"/><text x="1.2231%" y="1871.50"></text></g><g><title>latte::stats::_::&lt;impl serde::ser::Serialize for latte::stats::RespTimeCount&gt;::serialize (2 samples, 0.01%)</title><rect x="0.9916%" y="1669" width="0.0123%" height="15" fill="rgb(250,166,2)" fg:x="161" fg:w="2"/><text x="1.2416%" y="1679.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_key (2 samples, 0.01%)</title><rect x="1.0039%" y="1621" width="0.0123%" height="15" fill="rgb(242,216,29)" fg:x="163" fg:w="2"/><text x="1.2539%" y="1631.50"></text></g><g><title>serde_json::ser::to_writer_pretty (6 samples, 0.04%)</title><rect x="0.9854%" y="1893" width="0.0370%" height="15" fill="rgb(230,116,27)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1903.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.04%)</title><rect x="0.9854%" y="1877" width="0.0370%" height="15" fill="rgb(228,99,48)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1887.50"></text></g><g><title>latte::report::_::&lt;impl serde::ser::Serialize for latte::report::Report&gt;::serialize (6 samples, 0.04%)</title><rect x="0.9854%" y="1861" width="0.0370%" height="15" fill="rgb(253,11,6)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1871.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.04%)</title><rect x="0.9854%" y="1845" width="0.0370%" height="15" fill="rgb(247,143,39)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1855.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.04%)</title><rect x="0.9854%" y="1829" width="0.0370%" height="15" fill="rgb(236,97,10)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1839.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.04%)</title><rect x="0.9854%" y="1813" width="0.0370%" height="15" fill="rgb(233,208,19)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1823.50"></text></g><g><title>latte::stats::_::&lt;impl serde::ser::Serialize for latte::stats::BenchmarkStats&gt;::serialize (6 samples, 0.04%)</title><rect x="0.9854%" y="1797" width="0.0370%" height="15" fill="rgb(216,164,2)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1807.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.04%)</title><rect x="0.9854%" y="1781" width="0.0370%" height="15" fill="rgb(220,129,5)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1791.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.04%)</title><rect x="0.9854%" y="1765" width="0.0370%" height="15" fill="rgb(242,17,10)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1775.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.04%)</title><rect x="0.9854%" y="1749" width="0.0370%" height="15" fill="rgb(242,107,0)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1759.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.04%)</title><rect x="0.9854%" y="1733" width="0.0370%" height="15" fill="rgb(251,28,31)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1743.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.04%)</title><rect x="0.9854%" y="1717" width="0.0370%" height="15" fill="rgb(233,223,10)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1727.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.04%)</title><rect x="0.9854%" y="1701" width="0.0370%" height="15" fill="rgb(215,21,27)" fg:x="160" fg:w="6"/><text x="1.2354%" y="1711.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.03%)</title><rect x="0.9916%" y="1685" width="0.0308%" height="15" fill="rgb(232,23,21)" fg:x="161" fg:w="5"/><text x="1.2416%" y="1695.50"></text></g><g><title>latte::stats::_::&lt;impl serde::ser::Serialize for latte::stats::SampleStats&gt;::serialize (3 samples, 0.02%)</title><rect x="1.0039%" y="1669" width="0.0185%" height="15" fill="rgb(244,5,23)" fg:x="163" fg:w="3"/><text x="1.2539%" y="1679.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.02%)</title><rect x="1.0039%" y="1653" width="0.0185%" height="15" fill="rgb(226,81,46)" fg:x="163" fg:w="3"/><text x="1.2539%" y="1663.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.02%)</title><rect x="1.0039%" y="1637" width="0.0185%" height="15" fill="rgb(247,70,30)" fg:x="163" fg:w="3"/><text x="1.2539%" y="1647.50"></text></g><g><title>latte::run::{{closure}} (17 samples, 0.10%)</title><rect x="0.9238%" y="1925" width="0.1047%" height="15" fill="rgb(212,68,19)" fg:x="150" fg:w="17"/><text x="1.1738%" y="1935.50"></text></g><g><title>latte::report::Report::save (7 samples, 0.04%)</title><rect x="0.9854%" y="1909" width="0.0431%" height="15" fill="rgb(240,187,13)" fg:x="160" fg:w="7"/><text x="1.2354%" y="1919.50"></text></g><g><title>latte (181 samples, 1.11%)</title><rect x="0.0000%" y="1941" width="1.1147%" height="15" fill="rgb(223,113,26)" fg:x="0" fg:w="181"/><text x="0.2500%" y="1951.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (14 samples, 0.09%)</title><rect x="1.0285%" y="1925" width="0.0862%" height="15" fill="rgb(206,192,2)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1935.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (14 samples, 0.09%)</title><rect x="1.0285%" y="1909" width="0.0862%" height="15" fill="rgb(241,108,4)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1919.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (14 samples, 0.09%)</title><rect x="1.0285%" y="1893" width="0.0862%" height="15" fill="rgb(247,173,49)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1903.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (14 samples, 0.09%)</title><rect x="1.0285%" y="1877" width="0.0862%" height="15" fill="rgb(224,114,35)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1887.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current (14 samples, 0.09%)</title><rect x="1.0285%" y="1861" width="0.0862%" height="15" fill="rgb(245,159,27)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.09%)</title><rect x="1.0285%" y="1845" width="0.0862%" height="15" fill="rgb(245,172,44)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1855.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (14 samples, 0.09%)</title><rect x="1.0285%" y="1829" width="0.0862%" height="15" fill="rgb(236,23,11)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1839.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (14 samples, 0.09%)</title><rect x="1.0285%" y="1813" width="0.0862%" height="15" fill="rgb(205,117,38)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1823.50"></text></g><g><title>tokio::park::thread::Inner::park (14 samples, 0.09%)</title><rect x="1.0285%" y="1797" width="0.0862%" height="15" fill="rgb(237,72,25)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1807.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (14 samples, 0.09%)</title><rect x="1.0285%" y="1781" width="0.0862%" height="15" fill="rgb(244,70,9)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1791.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (14 samples, 0.09%)</title><rect x="1.0285%" y="1765" width="0.0862%" height="15" fill="rgb(217,125,39)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1775.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (14 samples, 0.09%)</title><rect x="1.0285%" y="1749" width="0.0862%" height="15" fill="rgb(235,36,10)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1759.50"></text></g><g><title>parking_lot_core::parking_lot::park (14 samples, 0.09%)</title><rect x="1.0285%" y="1733" width="0.0862%" height="15" fill="rgb(251,123,47)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1743.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (14 samples, 0.09%)</title><rect x="1.0285%" y="1717" width="0.0862%" height="15" fill="rgb(221,13,13)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1727.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (14 samples, 0.09%)</title><rect x="1.0285%" y="1701" width="0.0862%" height="15" fill="rgb(238,131,9)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1711.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (14 samples, 0.09%)</title><rect x="1.0285%" y="1685" width="0.0862%" height="15" fill="rgb(211,50,8)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1695.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (14 samples, 0.09%)</title><rect x="1.0285%" y="1669" width="0.0862%" height="15" fill="rgb(245,182,24)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1679.50"></text></g><g><title>syscall (14 samples, 0.09%)</title><rect x="1.0285%" y="1653" width="0.0862%" height="15" fill="rgb(242,14,37)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1663.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.09%)</title><rect x="1.0285%" y="1637" width="0.0862%" height="15" fill="rgb(246,228,12)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1647.50"></text></g><g><title>do_syscall_64 (14 samples, 0.09%)</title><rect x="1.0285%" y="1621" width="0.0862%" height="15" fill="rgb(213,55,15)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1631.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.09%)</title><rect x="1.0285%" y="1605" width="0.0862%" height="15" fill="rgb(209,9,3)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1615.50"></text></g><g><title>do_futex (14 samples, 0.09%)</title><rect x="1.0285%" y="1589" width="0.0862%" height="15" fill="rgb(230,59,30)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1599.50"></text></g><g><title>futex_wait (14 samples, 0.09%)</title><rect x="1.0285%" y="1573" width="0.0862%" height="15" fill="rgb(209,121,21)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1583.50"></text></g><g><title>futex_wait_queue_me (14 samples, 0.09%)</title><rect x="1.0285%" y="1557" width="0.0862%" height="15" fill="rgb(220,109,13)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1567.50"></text></g><g><title>schedule (14 samples, 0.09%)</title><rect x="1.0285%" y="1541" width="0.0862%" height="15" fill="rgb(232,18,1)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1551.50"></text></g><g><title>__schedule (14 samples, 0.09%)</title><rect x="1.0285%" y="1525" width="0.0862%" height="15" fill="rgb(215,41,42)" fg:x="167" fg:w="14"/><text x="1.2785%" y="1535.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="1.0716%" y="1509" width="0.0431%" height="15" fill="rgb(224,123,36)" fg:x="174" fg:w="7"/><text x="1.3216%" y="1519.50"></text></g><g><title>perf-exec (6 samples, 0.04%)</title><rect x="1.1147%" y="1941" width="0.0370%" height="15" fill="rgb(240,125,3)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1951.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="1.1147%" y="1925" width="0.0370%" height="15" fill="rgb(205,98,50)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1935.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="1.1147%" y="1909" width="0.0370%" height="15" fill="rgb(205,185,37)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1919.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.04%)</title><rect x="1.1147%" y="1893" width="0.0370%" height="15" fill="rgb(238,207,15)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1903.50"></text></g><g><title>do_execveat_common.isra.0 (6 samples, 0.04%)</title><rect x="1.1147%" y="1877" width="0.0370%" height="15" fill="rgb(213,199,42)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1887.50"></text></g><g><title>bprm_execve (6 samples, 0.04%)</title><rect x="1.1147%" y="1861" width="0.0370%" height="15" fill="rgb(235,201,11)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1871.50"></text></g><g><title>load_elf_binary (6 samples, 0.04%)</title><rect x="1.1147%" y="1845" width="0.0370%" height="15" fill="rgb(207,46,11)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1855.50"></text></g><g><title>begin_new_exec (6 samples, 0.04%)</title><rect x="1.1147%" y="1829" width="0.0370%" height="15" fill="rgb(241,35,35)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1839.50"></text></g><g><title>perf_event_exec (6 samples, 0.04%)</title><rect x="1.1147%" y="1813" width="0.0370%" height="15" fill="rgb(243,32,47)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1823.50"></text></g><g><title>perf_lock_task_context (6 samples, 0.04%)</title><rect x="1.1147%" y="1797" width="0.0370%" height="15" fill="rgb(247,202,23)" fg:x="181" fg:w="6"/><text x="1.3647%" y="1807.50"></text></g><g><title>tokio::coop::CURRENT::__getit (3 samples, 0.02%)</title><rect x="1.1702%" y="1509" width="0.0185%" height="15" fill="rgb(219,102,11)" fg:x="190" fg:w="3"/><text x="1.4202%" y="1519.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="1.1702%" y="1493" width="0.0185%" height="15" fill="rgb(243,110,44)" fg:x="190" fg:w="3"/><text x="1.4202%" y="1503.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="1.1763%" y="1477" width="0.0123%" height="15" fill="rgb(222,74,54)" fg:x="191" fg:w="2"/><text x="1.4263%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="1.1763%" y="1461" width="0.0123%" height="15" fill="rgb(216,99,12)" fg:x="191" fg:w="2"/><text x="1.4263%" y="1471.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (42 samples, 0.26%)</title><rect x="1.2379%" y="1445" width="0.2587%" height="15" fill="rgb(226,22,26)" fg:x="201" fg:w="42"/><text x="1.4879%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (11 samples, 0.07%)</title><rect x="1.4966%" y="1445" width="0.0677%" height="15" fill="rgb(217,163,10)" fg:x="243" fg:w="11"/><text x="1.7466%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.07%)</title><rect x="1.4966%" y="1429" width="0.0677%" height="15" fill="rgb(213,25,53)" fg:x="243" fg:w="11"/><text x="1.7466%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (11 samples, 0.07%)</title><rect x="1.5643%" y="1445" width="0.0677%" height="15" fill="rgb(252,105,26)" fg:x="254" fg:w="11"/><text x="1.8143%" y="1455.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (43 samples, 0.26%)</title><rect x="1.6321%" y="1445" width="0.2648%" height="15" fill="rgb(220,39,43)" fg:x="265" fg:w="43"/><text x="1.8821%" y="1455.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (32 samples, 0.20%)</title><rect x="1.6998%" y="1429" width="0.1971%" height="15" fill="rgb(229,68,48)" fg:x="276" fg:w="32"/><text x="1.9498%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 0.19%)</title><rect x="1.7060%" y="1413" width="0.1909%" height="15" fill="rgb(252,8,32)" fg:x="277" fg:w="31"/><text x="1.9560%" y="1423.50"></text></g><g><title>core::sync::atomic::atomic_or (31 samples, 0.19%)</title><rect x="1.7060%" y="1397" width="0.1909%" height="15" fill="rgb(223,20,43)" fg:x="277" fg:w="31"/><text x="1.9560%" y="1407.50"></text></g><g><title>tokio::coop::poll_proceed (143 samples, 0.88%)</title><rect x="1.1702%" y="1557" width="0.8807%" height="15" fill="rgb(229,81,49)" fg:x="190" fg:w="143"/><text x="1.4202%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (143 samples, 0.88%)</title><rect x="1.1702%" y="1541" width="0.8807%" height="15" fill="rgb(236,28,36)" fg:x="190" fg:w="143"/><text x="1.4202%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (143 samples, 0.88%)</title><rect x="1.1702%" y="1525" width="0.8807%" height="15" fill="rgb(249,185,26)" fg:x="190" fg:w="143"/><text x="1.4202%" y="1535.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (140 samples, 0.86%)</title><rect x="1.1886%" y="1509" width="0.8622%" height="15" fill="rgb(249,174,33)" fg:x="193" fg:w="140"/><text x="1.4386%" y="1519.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (140 samples, 0.86%)</title><rect x="1.1886%" y="1493" width="0.8622%" height="15" fill="rgb(233,201,37)" fg:x="193" fg:w="140"/><text x="1.4386%" y="1503.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (139 samples, 0.86%)</title><rect x="1.1948%" y="1477" width="0.8561%" height="15" fill="rgb(221,78,26)" fg:x="194" fg:w="139"/><text x="1.4448%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (138 samples, 0.85%)</title><rect x="1.2010%" y="1461" width="0.8499%" height="15" fill="rgb(250,127,30)" fg:x="195" fg:w="138"/><text x="1.4510%" y="1471.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (25 samples, 0.15%)</title><rect x="1.8969%" y="1445" width="0.1540%" height="15" fill="rgb(230,49,44)" fg:x="308" fg:w="25"/><text x="2.1469%" y="1455.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (25 samples, 0.15%)</title><rect x="1.8969%" y="1429" width="0.1540%" height="15" fill="rgb(229,67,23)" fg:x="308" fg:w="25"/><text x="2.1469%" y="1439.50"></text></g><g><title>core::sync::atomic::atomic_store (25 samples, 0.15%)</title><rect x="1.8969%" y="1413" width="0.1540%" height="15" fill="rgb(249,83,47)" fg:x="308" fg:w="25"/><text x="2.1469%" y="1423.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::project (22 samples, 0.14%)</title><rect x="2.0509%" y="1557" width="0.1355%" height="15" fill="rgb(215,43,3)" fg:x="333" fg:w="22"/><text x="2.3009%" y="1567.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 1.27%)</title><rect x="1.1517%" y="1637" width="1.2687%" height="15" fill="rgb(238,154,13)" fg:x="187" fg:w="206"/><text x="1.4017%" y="1647.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (206 samples, 1.27%)</title><rect x="1.1517%" y="1621" width="1.2687%" height="15" fill="rgb(219,56,2)" fg:x="187" fg:w="206"/><text x="1.4017%" y="1631.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 1.27%)</title><rect x="1.1517%" y="1605" width="1.2687%" height="15" fill="rgb(233,0,4)" fg:x="187" fg:w="206"/><text x="1.4017%" y="1615.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (206 samples, 1.27%)</title><rect x="1.1517%" y="1589" width="1.2687%" height="15" fill="rgb(235,30,7)" fg:x="187" fg:w="206"/><text x="1.4017%" y="1599.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (206 samples, 1.27%)</title><rect x="1.1517%" y="1573" width="1.2687%" height="15" fill="rgb(250,79,13)" fg:x="187" fg:w="206"/><text x="1.4017%" y="1583.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (38 samples, 0.23%)</title><rect x="2.1864%" y="1557" width="0.2340%" height="15" fill="rgb(211,146,34)" fg:x="355" fg:w="38"/><text x="2.4364%" y="1567.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.15%)</title><rect x="2.2726%" y="1541" width="0.1478%" height="15" fill="rgb(228,22,38)" fg:x="369" fg:w="24"/><text x="2.5226%" y="1551.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (24 samples, 0.15%)</title><rect x="2.2726%" y="1525" width="0.1478%" height="15" fill="rgb(235,168,5)" fg:x="369" fg:w="24"/><text x="2.5226%" y="1535.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.14%)</title><rect x="2.5251%" y="1509" width="0.1355%" height="15" fill="rgb(221,155,16)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1519.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.14%)</title><rect x="2.5251%" y="1493" width="0.1355%" height="15" fill="rgb(215,215,53)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.14%)</title><rect x="2.5251%" y="1477" width="0.1355%" height="15" fill="rgb(223,4,10)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.14%)</title><rect x="2.5251%" y="1461" width="0.1355%" height="15" fill="rgb(234,103,6)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.14%)</title><rect x="2.5251%" y="1445" width="0.1355%" height="15" fill="rgb(227,97,0)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1455.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.14%)</title><rect x="2.5251%" y="1429" width="0.1355%" height="15" fill="rgb(234,150,53)" fg:x="410" fg:w="22"/><text x="2.7751%" y="1439.50"></text></g><g><title>_int_malloc (21 samples, 0.13%)</title><rect x="2.5313%" y="1413" width="0.1293%" height="15" fill="rgb(228,201,54)" fg:x="411" fg:w="21"/><text x="2.7813%" y="1423.50"></text></g><g><title>malloc_consolidate (15 samples, 0.09%)</title><rect x="2.5682%" y="1397" width="0.0924%" height="15" fill="rgb(222,22,37)" fg:x="417" fg:w="15"/><text x="2.8182%" y="1407.50"></text></g><g><title>unlink_chunk.constprop.0 (4 samples, 0.02%)</title><rect x="2.6360%" y="1381" width="0.0246%" height="15" fill="rgb(237,53,32)" fg:x="428" fg:w="4"/><text x="2.8860%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (24 samples, 0.15%)</title><rect x="2.5251%" y="1557" width="0.1478%" height="15" fill="rgb(233,25,53)" fg:x="410" fg:w="24"/><text x="2.7751%" y="1567.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block::{{closure}} (24 samples, 0.15%)</title><rect x="2.5251%" y="1541" width="0.1478%" height="15" fill="rgb(210,40,34)" fg:x="410" fg:w="24"/><text x="2.7751%" y="1551.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::grow (24 samples, 0.15%)</title><rect x="2.5251%" y="1525" width="0.1478%" height="15" fill="rgb(241,220,44)" fg:x="410" fg:w="24"/><text x="2.7751%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="2.6729%" y="1557" width="0.0185%" height="15" fill="rgb(235,28,35)" fg:x="434" fg:w="3"/><text x="2.9229%" y="1567.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="2.6729%" y="1541" width="0.0185%" height="15" fill="rgb(210,56,17)" fg:x="434" fg:w="3"/><text x="2.9229%" y="1551.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (251 samples, 1.55%)</title><rect x="1.1517%" y="1669" width="1.5459%" height="15" fill="rgb(224,130,29)" fg:x="187" fg:w="251"/><text x="1.4017%" y="1679.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (251 samples, 1.55%)</title><rect x="1.1517%" y="1653" width="1.5459%" height="15" fill="rgb(235,212,8)" fg:x="187" fg:w="251"/><text x="1.4017%" y="1663.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (45 samples, 0.28%)</title><rect x="2.4204%" y="1637" width="0.2771%" height="15" fill="rgb(223,33,50)" fg:x="393" fg:w="45"/><text x="2.6704%" y="1647.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (45 samples, 0.28%)</title><rect x="2.4204%" y="1621" width="0.2771%" height="15" fill="rgb(219,149,13)" fg:x="393" fg:w="45"/><text x="2.6704%" y="1631.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (45 samples, 0.28%)</title><rect x="2.4204%" y="1605" width="0.2771%" height="15" fill="rgb(250,156,29)" fg:x="393" fg:w="45"/><text x="2.6704%" y="1615.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (45 samples, 0.28%)</title><rect x="2.4204%" y="1589" width="0.2771%" height="15" fill="rgb(216,193,19)" fg:x="393" fg:w="45"/><text x="2.6704%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (45 samples, 0.28%)</title><rect x="2.4204%" y="1573" width="0.2771%" height="15" fill="rgb(216,135,14)" fg:x="393" fg:w="45"/><text x="2.6704%" y="1583.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.33%)</title><rect x="2.9193%" y="1653" width="0.3264%" height="15" fill="rgb(241,47,5)" fg:x="474" fg:w="53"/><text x="3.1693%" y="1663.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="3.1964%" y="1637" width="0.0493%" height="15" fill="rgb(233,42,35)" fg:x="519" fg:w="8"/><text x="3.4464%" y="1647.50"></text></g><g><title>__entry_text_start (2 samples, 0.01%)</title><rect x="4.0463%" y="1557" width="0.0123%" height="15" fill="rgb(231,13,6)" fg:x="657" fg:w="2"/><text x="4.2963%" y="1567.50"></text></g><g><title>native_read_msr (2 samples, 0.01%)</title><rect x="4.1264%" y="1381" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="670" fg:w="2"/><text x="4.3764%" y="1391.50"></text></g><g><title>__perf_event_task_sched_out (7 samples, 0.04%)</title><rect x="4.1202%" y="1429" width="0.0431%" height="15" fill="rgb(254,173,49)" fg:x="669" fg:w="7"/><text x="4.3702%" y="1439.50"></text></g><g><title>amd_pmu_disable_all (7 samples, 0.04%)</title><rect x="4.1202%" y="1413" width="0.0431%" height="15" fill="rgb(221,1,38)" fg:x="669" fg:w="7"/><text x="4.3702%" y="1423.50"></text></g><g><title>x86_pmu_disable_all (7 samples, 0.04%)</title><rect x="4.1202%" y="1397" width="0.0431%" height="15" fill="rgb(206,124,46)" fg:x="669" fg:w="7"/><text x="4.3702%" y="1407.50"></text></g><g><title>native_write_msr (4 samples, 0.02%)</title><rect x="4.1387%" y="1381" width="0.0246%" height="15" fill="rgb(249,21,11)" fg:x="672" fg:w="4"/><text x="4.3887%" y="1391.50"></text></g><g><title>update_curr (2 samples, 0.01%)</title><rect x="4.1756%" y="1397" width="0.0123%" height="15" fill="rgb(222,201,40)" fg:x="678" fg:w="2"/><text x="4.4256%" y="1407.50"></text></g><g><title>dequeue_entity (6 samples, 0.04%)</title><rect x="4.1695%" y="1413" width="0.0370%" height="15" fill="rgb(235,61,29)" fg:x="677" fg:w="6"/><text x="4.4195%" y="1423.50"></text></g><g><title>update_load_avg (3 samples, 0.02%)</title><rect x="4.1880%" y="1397" width="0.0185%" height="15" fill="rgb(219,207,3)" fg:x="680" fg:w="3"/><text x="4.4380%" y="1407.50"></text></g><g><title>dequeue_task_fair (8 samples, 0.05%)</title><rect x="4.1633%" y="1429" width="0.0493%" height="15" fill="rgb(222,56,46)" fg:x="676" fg:w="8"/><text x="4.4133%" y="1439.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.04%)</title><rect x="4.2557%" y="1413" width="0.0431%" height="15" fill="rgb(239,76,54)" fg:x="691" fg:w="7"/><text x="4.5057%" y="1423.50"></text></g><g><title>finish_task_switch.isra.0 (21 samples, 0.13%)</title><rect x="4.2126%" y="1429" width="0.1293%" height="15" fill="rgb(231,124,27)" fg:x="684" fg:w="21"/><text x="4.4626%" y="1439.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.04%)</title><rect x="4.2988%" y="1413" width="0.0431%" height="15" fill="rgb(249,195,6)" fg:x="698" fg:w="7"/><text x="4.5488%" y="1423.50"></text></g><g><title>pick_next_task_fair (3 samples, 0.02%)</title><rect x="4.3419%" y="1429" width="0.0185%" height="15" fill="rgb(237,174,47)" fg:x="705" fg:w="3"/><text x="4.5919%" y="1439.50"></text></g><g><title>newidle_balance (3 samples, 0.02%)</title><rect x="4.3419%" y="1413" width="0.0185%" height="15" fill="rgb(206,201,31)" fg:x="705" fg:w="3"/><text x="4.5919%" y="1423.50"></text></g><g><title>load_balance (3 samples, 0.02%)</title><rect x="4.3419%" y="1397" width="0.0185%" height="15" fill="rgb(231,57,52)" fg:x="705" fg:w="3"/><text x="4.5919%" y="1407.50"></text></g><g><title>find_busiest_group (2 samples, 0.01%)</title><rect x="4.3481%" y="1381" width="0.0123%" height="15" fill="rgb(248,177,22)" fg:x="706" fg:w="2"/><text x="4.5981%" y="1391.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="4.3481%" y="1365" width="0.0123%" height="15" fill="rgb(215,211,37)" fg:x="706" fg:w="2"/><text x="4.5981%" y="1375.50"></text></g><g><title>psi_task_switch (3 samples, 0.02%)</title><rect x="4.3666%" y="1429" width="0.0185%" height="15" fill="rgb(241,128,51)" fg:x="709" fg:w="3"/><text x="4.6166%" y="1439.50"></text></g><g><title>psi_group_change (2 samples, 0.01%)</title><rect x="4.3727%" y="1413" width="0.0123%" height="15" fill="rgb(227,165,31)" fg:x="710" fg:w="2"/><text x="4.6227%" y="1423.50"></text></g><g><title>futex_wait_queue_me (53 samples, 0.33%)</title><rect x="4.0771%" y="1477" width="0.3264%" height="15" fill="rgb(228,167,24)" fg:x="662" fg:w="53"/><text x="4.3271%" y="1487.50"></text></g><g><title>schedule (46 samples, 0.28%)</title><rect x="4.1202%" y="1461" width="0.2833%" height="15" fill="rgb(228,143,12)" fg:x="669" fg:w="46"/><text x="4.3702%" y="1471.50"></text></g><g><title>__schedule (46 samples, 0.28%)</title><rect x="4.1202%" y="1445" width="0.2833%" height="15" fill="rgb(249,149,8)" fg:x="669" fg:w="46"/><text x="4.3702%" y="1455.50"></text></g><g><title>update_rq_clock (2 samples, 0.01%)</title><rect x="4.3912%" y="1429" width="0.0123%" height="15" fill="rgb(243,35,44)" fg:x="713" fg:w="2"/><text x="4.6412%" y="1439.50"></text></g><g><title>__x64_sys_futex (62 samples, 0.38%)</title><rect x="4.0586%" y="1525" width="0.3818%" height="15" fill="rgb(246,89,9)" fg:x="659" fg:w="62"/><text x="4.3086%" y="1535.50"></text></g><g><title>do_futex (62 samples, 0.38%)</title><rect x="4.0586%" y="1509" width="0.3818%" height="15" fill="rgb(233,213,13)" fg:x="659" fg:w="62"/><text x="4.3086%" y="1519.50"></text></g><g><title>futex_wait (62 samples, 0.38%)</title><rect x="4.0586%" y="1493" width="0.3818%" height="15" fill="rgb(233,141,41)" fg:x="659" fg:w="62"/><text x="4.3086%" y="1503.50"></text></g><g><title>futex_wait_setup (6 samples, 0.04%)</title><rect x="4.4035%" y="1477" width="0.0370%" height="15" fill="rgb(239,167,4)" fg:x="715" fg:w="6"/><text x="4.6535%" y="1487.50"></text></g><g><title>get_futex_key (2 samples, 0.01%)</title><rect x="4.4282%" y="1461" width="0.0123%" height="15" fill="rgb(209,217,16)" fg:x="719" fg:w="2"/><text x="4.6782%" y="1471.50"></text></g><g><title>__lll_lock_wait_private (70 samples, 0.43%)</title><rect x="4.0340%" y="1573" width="0.4311%" height="15" fill="rgb(219,88,35)" fg:x="655" fg:w="70"/><text x="4.2840%" y="1583.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (66 samples, 0.41%)</title><rect x="4.0586%" y="1557" width="0.4065%" height="15" fill="rgb(220,193,23)" fg:x="659" fg:w="66"/><text x="4.3086%" y="1567.50"></text></g><g><title>do_syscall_64 (66 samples, 0.41%)</title><rect x="4.0586%" y="1541" width="0.4065%" height="15" fill="rgb(230,90,52)" fg:x="659" fg:w="66"/><text x="4.3086%" y="1551.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="4.4466%" y="1525" width="0.0185%" height="15" fill="rgb(252,106,19)" fg:x="722" fg:w="3"/><text x="4.6966%" y="1535.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="4.4466%" y="1509" width="0.0185%" height="15" fill="rgb(206,74,20)" fg:x="722" fg:w="3"/><text x="4.6966%" y="1519.50"></text></g><g><title>switch_fpu_return (2 samples, 0.01%)</title><rect x="4.4528%" y="1493" width="0.0123%" height="15" fill="rgb(230,138,44)" fg:x="723" fg:w="2"/><text x="4.7028%" y="1503.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="4.4713%" y="1573" width="0.0123%" height="15" fill="rgb(235,182,43)" fg:x="726" fg:w="2"/><text x="4.7213%" y="1583.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="4.4713%" y="1557" width="0.0123%" height="15" fill="rgb(242,16,51)" fg:x="726" fg:w="2"/><text x="4.7213%" y="1567.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="4.4836%" y="1573" width="0.0185%" height="15" fill="rgb(248,9,4)" fg:x="728" fg:w="3"/><text x="4.7336%" y="1583.50"></text></g><g><title>__GI___libc_free (223 samples, 1.37%)</title><rect x="3.2641%" y="1605" width="1.3734%" height="15" fill="rgb(210,31,22)" fg:x="530" fg:w="223"/><text x="3.5141%" y="1615.50"></text></g><g><title>_int_free (207 samples, 1.27%)</title><rect x="3.3627%" y="1589" width="1.2749%" height="15" fill="rgb(239,54,39)" fg:x="546" fg:w="207"/><text x="3.6127%" y="1599.50"></text></g><g><title>unlink_chunk.constprop.0 (22 samples, 0.14%)</title><rect x="4.5021%" y="1573" width="0.1355%" height="15" fill="rgb(230,99,41)" fg:x="731" fg:w="22"/><text x="4.7521%" y="1583.50"></text></g><g><title>core::mem::drop (5 samples, 0.03%)</title><rect x="4.6560%" y="1589" width="0.0308%" height="15" fill="rgb(253,106,12)" fg:x="756" fg:w="5"/><text x="4.9060%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="4.6560%" y="1573" width="0.0308%" height="15" fill="rgb(213,46,41)" fg:x="756" fg:w="5"/><text x="4.9060%" y="1583.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="4.6560%" y="1557" width="0.0308%" height="15" fill="rgb(215,133,35)" fg:x="756" fg:w="5"/><text x="4.9060%" y="1567.50"></text></g><g><title>futures_task::waker::drop_arc_raw (73 samples, 0.45%)</title><rect x="4.6930%" y="1557" width="0.4496%" height="15" fill="rgb(213,28,5)" fg:x="762" fg:w="73"/><text x="4.9430%" y="1567.50"></text></g><g><title>core::mem::drop (66 samples, 0.41%)</title><rect x="4.7361%" y="1541" width="0.4065%" height="15" fill="rgb(215,77,49)" fg:x="769" fg:w="66"/><text x="4.9861%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (66 samples, 0.41%)</title><rect x="4.7361%" y="1525" width="0.4065%" height="15" fill="rgb(248,100,22)" fg:x="769" fg:w="66"/><text x="4.9861%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.41%)</title><rect x="4.7361%" y="1509" width="0.4065%" height="15" fill="rgb(208,67,9)" fg:x="769" fg:w="66"/><text x="4.9861%" y="1519.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="5.1303%" y="1493" width="0.0123%" height="15" fill="rgb(219,133,21)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1503.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="5.1303%" y="1477" width="0.0123%" height="15" fill="rgb(246,46,29)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1487.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="5.1303%" y="1461" width="0.0123%" height="15" fill="rgb(246,185,52)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1471.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="5.1303%" y="1445" width="0.0123%" height="15" fill="rgb(252,136,11)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1455.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="5.1303%" y="1429" width="0.0123%" height="15" fill="rgb(219,138,53)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1439.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="5.1303%" y="1413" width="0.0123%" height="15" fill="rgb(211,51,23)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1423.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="5.1303%" y="1397" width="0.0123%" height="15" fill="rgb(247,221,28)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1407.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="5.1303%" y="1381" width="0.0123%" height="15" fill="rgb(251,222,45)" fg:x="833" fg:w="2"/><text x="5.3803%" y="1391.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (6 samples, 0.04%)</title><rect x="5.1426%" y="1557" width="0.0370%" height="15" fill="rgb(217,162,53)" fg:x="835" fg:w="6"/><text x="5.3926%" y="1567.50"></text></g><g><title>tokio::sync::oneshot::State::is_tx_task_set (2 samples, 0.01%)</title><rect x="5.1795%" y="1557" width="0.0123%" height="15" fill="rgb(229,93,14)" fg:x="841" fg:w="2"/><text x="5.4295%" y="1567.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (15 samples, 0.09%)</title><rect x="5.1918%" y="1557" width="0.0924%" height="15" fill="rgb(209,67,49)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1567.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15 samples, 0.09%)</title><rect x="5.1918%" y="1541" width="0.0924%" height="15" fill="rgb(213,87,29)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1551.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task::{{closure}} (15 samples, 0.09%)</title><rect x="5.1918%" y="1525" width="0.0924%" height="15" fill="rgb(205,151,52)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1535.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (15 samples, 0.09%)</title><rect x="5.1918%" y="1509" width="0.0924%" height="15" fill="rgb(253,215,39)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (15 samples, 0.09%)</title><rect x="5.1918%" y="1493" width="0.0924%" height="15" fill="rgb(221,220,41)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1503.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (15 samples, 0.09%)</title><rect x="5.1918%" y="1477" width="0.0924%" height="15" fill="rgb(218,133,21)" fg:x="843" fg:w="15"/><text x="5.4418%" y="1487.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="5.2719%" y="1461" width="0.0123%" height="15" fill="rgb(221,193,43)" fg:x="856" fg:w="2"/><text x="5.5219%" y="1471.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="5.2719%" y="1445" width="0.0123%" height="15" fill="rgb(240,128,52)" fg:x="856" fg:w="2"/><text x="5.5219%" y="1455.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (107 samples, 0.66%)</title><rect x="4.6868%" y="1573" width="0.6590%" height="15" fill="rgb(253,114,12)" fg:x="761" fg:w="107"/><text x="4.9368%" y="1583.50"></text></g><g><title>tokio::sync::oneshot::mut_load (10 samples, 0.06%)</title><rect x="5.2842%" y="1557" width="0.0616%" height="15" fill="rgb(215,223,47)" fg:x="858" fg:w="10"/><text x="5.5342%" y="1567.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::with_mut (9 samples, 0.06%)</title><rect x="5.2904%" y="1541" width="0.0554%" height="15" fill="rgb(248,225,23)" fg:x="859" fg:w="9"/><text x="5.5404%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt;&gt; (343 samples, 2.11%)</title><rect x="3.2518%" y="1653" width="2.1125%" height="15" fill="rgb(250,108,0)" fg:x="528" fg:w="343"/><text x="3.5018%" y="1663.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (343 samples, 2.11%)</title><rect x="3.2518%" y="1637" width="2.1125%" height="15" fill="rgb(228,208,7)" fg:x="528" fg:w="343"/><text x="3.5018%" y="1647.50">c..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (343 samples, 2.11%)</title><rect x="3.2518%" y="1621" width="2.1125%" height="15" fill="rgb(244,45,10)" fg:x="528" fg:w="343"/><text x="3.5018%" y="1631.50">&lt;..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (117 samples, 0.72%)</title><rect x="4.6437%" y="1605" width="0.7206%" height="15" fill="rgb(207,125,25)" fg:x="754" fg:w="117"/><text x="4.8937%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt; (110 samples, 0.68%)</title><rect x="4.6868%" y="1589" width="0.6775%" height="15" fill="rgb(210,195,18)" fg:x="761" fg:w="110"/><text x="4.9368%" y="1599.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="5.3458%" y="1573" width="0.0185%" height="15" fill="rgb(249,80,12)" fg:x="868" fg:w="3"/><text x="5.5958%" y="1583.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (3 samples, 0.02%)</title><rect x="5.3889%" y="1637" width="0.0185%" height="15" fill="rgb(221,65,9)" fg:x="875" fg:w="3"/><text x="5.6389%" y="1647.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="5.3951%" y="1621" width="0.0123%" height="15" fill="rgb(235,49,36)" fg:x="876" fg:w="2"/><text x="5.6451%" y="1631.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="5.3951%" y="1605" width="0.0123%" height="15" fill="rgb(225,32,20)" fg:x="876" fg:w="2"/><text x="5.6451%" y="1615.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="5.3951%" y="1589" width="0.0123%" height="15" fill="rgb(215,141,46)" fg:x="876" fg:w="2"/><text x="5.6451%" y="1599.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="5.3951%" y="1573" width="0.0123%" height="15" fill="rgb(250,160,47)" fg:x="876" fg:w="2"/><text x="5.6451%" y="1583.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.01%)</title><rect x="5.4074%" y="1589" width="0.0123%" height="15" fill="rgb(216,222,40)" fg:x="878" fg:w="2"/><text x="5.6574%" y="1599.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="5.4074%" y="1573" width="0.0123%" height="15" fill="rgb(234,217,39)" fg:x="878" fg:w="2"/><text x="5.6574%" y="1583.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="5.5121%" y="1573" width="0.0123%" height="15" fill="rgb(207,178,40)" fg:x="895" fg:w="2"/><text x="5.7621%" y="1583.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="5.5121%" y="1557" width="0.0123%" height="15" fill="rgb(221,136,13)" fg:x="895" fg:w="2"/><text x="5.7621%" y="1567.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="5.5121%" y="1541" width="0.0123%" height="15" fill="rgb(249,199,10)" fg:x="895" fg:w="2"/><text x="5.7621%" y="1551.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="5.5121%" y="1525" width="0.0123%" height="15" fill="rgb(249,222,13)" fg:x="895" fg:w="2"/><text x="5.7621%" y="1535.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (26 samples, 0.16%)</title><rect x="5.5614%" y="1525" width="0.1601%" height="15" fill="rgb(244,185,38)" fg:x="903" fg:w="26"/><text x="5.8114%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (11 samples, 0.07%)</title><rect x="5.7215%" y="1525" width="0.0677%" height="15" fill="rgb(236,202,9)" fg:x="929" fg:w="11"/><text x="5.9715%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.07%)</title><rect x="5.7215%" y="1509" width="0.0677%" height="15" fill="rgb(250,229,37)" fg:x="929" fg:w="11"/><text x="5.9715%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (16 samples, 0.10%)</title><rect x="5.7892%" y="1525" width="0.0985%" height="15" fill="rgb(206,174,23)" fg:x="940" fg:w="16"/><text x="6.0392%" y="1535.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (39 samples, 0.24%)</title><rect x="5.8878%" y="1525" width="0.2402%" height="15" fill="rgb(211,33,43)" fg:x="956" fg:w="39"/><text x="6.1378%" y="1535.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (26 samples, 0.16%)</title><rect x="5.9679%" y="1509" width="0.1601%" height="15" fill="rgb(245,58,50)" fg:x="969" fg:w="26"/><text x="6.2179%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (24 samples, 0.15%)</title><rect x="5.9802%" y="1493" width="0.1478%" height="15" fill="rgb(244,68,36)" fg:x="971" fg:w="24"/><text x="6.2302%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_or (24 samples, 0.15%)</title><rect x="5.9802%" y="1477" width="0.1478%" height="15" fill="rgb(232,229,15)" fg:x="971" fg:w="24"/><text x="6.2302%" y="1487.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="6.1157%" y="1461" width="0.0123%" height="15" fill="rgb(254,30,23)" fg:x="993" fg:w="2"/><text x="6.3657%" y="1471.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="6.1157%" y="1445" width="0.0123%" height="15" fill="rgb(235,160,14)" fg:x="993" fg:w="2"/><text x="6.3657%" y="1455.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="6.1157%" y="1429" width="0.0123%" height="15" fill="rgb(212,155,44)" fg:x="993" fg:w="2"/><text x="6.3657%" y="1439.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="6.1157%" y="1413" width="0.0123%" height="15" fill="rgb(226,2,50)" fg:x="993" fg:w="2"/><text x="6.3657%" y="1423.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="6.1157%" y="1397" width="0.0123%" height="15" fill="rgb(234,177,6)" fg:x="993" fg:w="2"/><text x="6.3657%" y="1407.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (131 samples, 0.81%)</title><rect x="5.5244%" y="1573" width="0.8068%" height="15" fill="rgb(217,24,9)" fg:x="897" fg:w="131"/><text x="5.7744%" y="1583.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (129 samples, 0.79%)</title><rect x="5.5367%" y="1557" width="0.7945%" height="15" fill="rgb(220,13,46)" fg:x="899" fg:w="129"/><text x="5.7867%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (128 samples, 0.79%)</title><rect x="5.5429%" y="1541" width="0.7883%" height="15" fill="rgb(239,221,27)" fg:x="900" fg:w="128"/><text x="5.7929%" y="1551.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (33 samples, 0.20%)</title><rect x="6.1280%" y="1525" width="0.2032%" height="15" fill="rgb(222,198,25)" fg:x="995" fg:w="33"/><text x="6.3780%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (33 samples, 0.20%)</title><rect x="6.1280%" y="1509" width="0.2032%" height="15" fill="rgb(211,99,13)" fg:x="995" fg:w="33"/><text x="6.3780%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_store (33 samples, 0.20%)</title><rect x="6.1280%" y="1493" width="0.2032%" height="15" fill="rgb(232,111,31)" fg:x="995" fg:w="33"/><text x="6.3780%" y="1503.50"></text></g><g><title>tokio::coop::poll_proceed (166 samples, 1.02%)</title><rect x="5.4074%" y="1637" width="1.0224%" height="15" fill="rgb(245,82,37)" fg:x="878" fg:w="166"/><text x="5.6574%" y="1647.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (166 samples, 1.02%)</title><rect x="5.4074%" y="1621" width="1.0224%" height="15" fill="rgb(227,149,46)" fg:x="878" fg:w="166"/><text x="5.6574%" y="1631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (166 samples, 1.02%)</title><rect x="5.4074%" y="1605" width="1.0224%" height="15" fill="rgb(218,36,50)" fg:x="878" fg:w="166"/><text x="5.6574%" y="1615.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (164 samples, 1.01%)</title><rect x="5.4197%" y="1589" width="1.0100%" height="15" fill="rgb(226,80,48)" fg:x="880" fg:w="164"/><text x="5.6697%" y="1599.50"></text></g><g><title>tokio::coop::Budget::decrement (16 samples, 0.10%)</title><rect x="6.3312%" y="1573" width="0.0985%" height="15" fill="rgb(238,224,15)" fg:x="1028" fg:w="16"/><text x="6.5812%" y="1583.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (5 samples, 0.03%)</title><rect x="6.4298%" y="1637" width="0.0308%" height="15" fill="rgb(241,136,10)" fg:x="1044" fg:w="5"/><text x="6.6798%" y="1647.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (6 samples, 0.04%)</title><rect x="6.4606%" y="1637" width="0.0370%" height="15" fill="rgb(208,32,45)" fg:x="1049" fg:w="6"/><text x="6.7106%" y="1647.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (7 samples, 0.04%)</title><rect x="6.4975%" y="1637" width="0.0431%" height="15" fill="rgb(207,135,9)" fg:x="1055" fg:w="7"/><text x="6.7475%" y="1647.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="7.2181%" y="1621" width="0.0123%" height="15" fill="rgb(206,86,44)" fg:x="1172" fg:w="2"/><text x="7.4681%" y="1631.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="7.2181%" y="1605" width="0.0123%" height="15" fill="rgb(245,177,15)" fg:x="1172" fg:w="2"/><text x="7.4681%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.11%)</title><rect x="7.2304%" y="1605" width="0.1109%" height="15" fill="rgb(206,64,50)" fg:x="1174" fg:w="18"/><text x="7.4804%" y="1615.50"></text></g><g><title>tokio::sync::oneshot::State::load (131 samples, 0.81%)</title><rect x="6.5406%" y="1637" width="0.8068%" height="15" fill="rgb(234,36,40)" fg:x="1062" fg:w="131"/><text x="6.7906%" y="1647.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.12%)</title><rect x="7.2304%" y="1621" width="0.1170%" height="15" fill="rgb(213,64,8)" fg:x="1174" fg:w="19"/><text x="7.4804%" y="1631.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (15 samples, 0.09%)</title><rect x="7.3474%" y="1637" width="0.0924%" height="15" fill="rgb(210,75,36)" fg:x="1193" fg:w="15"/><text x="7.5974%" y="1647.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (15 samples, 0.09%)</title><rect x="7.3474%" y="1621" width="0.0924%" height="15" fill="rgb(229,88,21)" fg:x="1193" fg:w="15"/><text x="7.5974%" y="1631.50"></text></g><g><title>core::sync::atomic::atomic_or (15 samples, 0.09%)</title><rect x="7.3474%" y="1605" width="0.0924%" height="15" fill="rgb(252,204,47)" fg:x="1193" fg:w="15"/><text x="7.5974%" y="1615.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="7.4460%" y="1589" width="0.1109%" height="15" fill="rgb(208,77,27)" fg:x="1209" fg:w="18"/><text x="7.6960%" y="1599.50"></text></g><g><title>futures_task::waker::clone_arc_raw (16 samples, 0.10%)</title><rect x="7.4583%" y="1573" width="0.0985%" height="15" fill="rgb(221,76,26)" fg:x="1211" fg:w="16"/><text x="7.7083%" y="1583.50"></text></g><g><title>futures_task::waker::increase_refcount (16 samples, 0.10%)</title><rect x="7.4583%" y="1557" width="0.0985%" height="15" fill="rgb(225,139,18)" fg:x="1211" fg:w="16"/><text x="7.7083%" y="1567.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.10%)</title><rect x="7.4583%" y="1541" width="0.0985%" height="15" fill="rgb(230,137,11)" fg:x="1211" fg:w="16"/><text x="7.7083%" y="1551.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.10%)</title><rect x="7.4583%" y="1525" width="0.0985%" height="15" fill="rgb(212,28,1)" fg:x="1211" fg:w="16"/><text x="7.7083%" y="1535.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (791 samples, 4.87%)</title><rect x="2.6975%" y="1669" width="4.8716%" height="15" fill="rgb(248,164,17)" fg:x="438" fg:w="791"/><text x="2.9475%" y="1679.50">&lt;tokio..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (358 samples, 2.20%)</title><rect x="5.3643%" y="1653" width="2.2048%" height="15" fill="rgb(222,171,42)" fg:x="871" fg:w="358"/><text x="5.6143%" y="1663.50">t..</text></g><g><title>tokio::sync::oneshot::Task::set_task (21 samples, 0.13%)</title><rect x="7.4398%" y="1637" width="0.1293%" height="15" fill="rgb(243,84,45)" fg:x="1208" fg:w="21"/><text x="7.6898%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.12%)</title><rect x="7.4460%" y="1621" width="0.1232%" height="15" fill="rgb(252,49,23)" fg:x="1209" fg:w="20"/><text x="7.6960%" y="1631.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (20 samples, 0.12%)</title><rect x="7.4460%" y="1605" width="0.1232%" height="15" fill="rgb(215,19,7)" fg:x="1209" fg:w="20"/><text x="7.6960%" y="1615.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="7.5568%" y="1589" width="0.0123%" height="15" fill="rgb(238,81,41)" fg:x="1227" fg:w="2"/><text x="7.8068%" y="1599.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="7.5568%" y="1573" width="0.0123%" height="15" fill="rgb(210,199,37)" fg:x="1227" fg:w="2"/><text x="7.8068%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.02%)</title><rect x="7.6615%" y="1621" width="0.0185%" height="15" fill="rgb(244,192,49)" fg:x="1244" fg:w="3"/><text x="7.9115%" y="1631.50"></text></g><g><title>scylla::frame::types::write_serial_consistency (2 samples, 0.01%)</title><rect x="7.6861%" y="1621" width="0.0123%" height="15" fill="rgb(226,211,11)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1631.50"></text></g><g><title>scylla::frame::types::write_short (2 samples, 0.01%)</title><rect x="7.6861%" y="1605" width="0.0123%" height="15" fill="rgb(236,162,54)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1615.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i16 (2 samples, 0.01%)</title><rect x="7.6861%" y="1589" width="0.0123%" height="15" fill="rgb(220,229,9)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.01%)</title><rect x="7.6861%" y="1573" width="0.0123%" height="15" fill="rgb(250,87,22)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="7.6861%" y="1557" width="0.0123%" height="15" fill="rgb(239,43,17)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="7.6861%" y="1541" width="0.0123%" height="15" fill="rgb(231,177,25)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="7.6861%" y="1525" width="0.0123%" height="15" fill="rgb(219,179,1)" fg:x="1248" fg:w="2"/><text x="7.9361%" y="1535.50"></text></g><g><title>scylla::frame::value::SerializedValues::is_empty (7 samples, 0.04%)</title><rect x="7.6985%" y="1621" width="0.0431%" height="15" fill="rgb(238,219,53)" fg:x="1250" fg:w="7"/><text x="7.9485%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.03%)</title><rect x="7.7601%" y="1541" width="0.0308%" height="15" fill="rgb(232,167,36)" fg:x="1260" fg:w="5"/><text x="8.0101%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="7.7785%" y="1525" width="0.0123%" height="15" fill="rgb(244,19,51)" fg:x="1263" fg:w="2"/><text x="8.0285%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.07%)</title><rect x="7.7416%" y="1589" width="0.0677%" height="15" fill="rgb(224,6,22)" fg:x="1257" fg:w="11"/><text x="7.9916%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.07%)</title><rect x="7.7416%" y="1573" width="0.0677%" height="15" fill="rgb(224,145,5)" fg:x="1257" fg:w="11"/><text x="7.9916%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.07%)</title><rect x="7.7416%" y="1557" width="0.0677%" height="15" fill="rgb(234,130,49)" fg:x="1257" fg:w="11"/><text x="7.9916%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="7.7908%" y="1541" width="0.0185%" height="15" fill="rgb(254,6,2)" fg:x="1265" fg:w="3"/><text x="8.0408%" y="1551.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="7.7908%" y="1525" width="0.0185%" height="15" fill="rgb(208,96,46)" fg:x="1265" fg:w="3"/><text x="8.0408%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (7 samples, 0.04%)</title><rect x="7.8340%" y="1525" width="0.0431%" height="15" fill="rgb(239,3,39)" fg:x="1272" fg:w="7"/><text x="8.0840%" y="1535.50"></text></g><g><title>__lll_lock_wait_private (2 samples, 0.01%)</title><rect x="8.0618%" y="1445" width="0.0123%" height="15" fill="rgb(233,210,1)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1455.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="8.0618%" y="1429" width="0.0123%" height="15" fill="rgb(244,137,37)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1439.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="8.0618%" y="1413" width="0.0123%" height="15" fill="rgb(240,136,2)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1423.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="8.0618%" y="1397" width="0.0123%" height="15" fill="rgb(239,18,37)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1407.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="8.0618%" y="1381" width="0.0123%" height="15" fill="rgb(218,185,22)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1391.50"></text></g><g><title>futex_wait (2 samples, 0.01%)</title><rect x="8.0618%" y="1365" width="0.0123%" height="15" fill="rgb(225,218,4)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1375.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.01%)</title><rect x="8.0618%" y="1349" width="0.0123%" height="15" fill="rgb(230,182,32)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1359.50"></text></g><g><title>schedule (2 samples, 0.01%)</title><rect x="8.0618%" y="1333" width="0.0123%" height="15" fill="rgb(242,56,43)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1343.50"></text></g><g><title>__schedule (2 samples, 0.01%)</title><rect x="8.0618%" y="1317" width="0.0123%" height="15" fill="rgb(233,99,24)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1327.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="8.0618%" y="1301" width="0.0123%" height="15" fill="rgb(234,209,42)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1311.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="8.0618%" y="1285" width="0.0123%" height="15" fill="rgb(227,7,12)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1295.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.01%)</title><rect x="8.0618%" y="1269" width="0.0123%" height="15" fill="rgb(245,203,43)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1279.50"></text></g><g><title>native_write_msr (2 samples, 0.01%)</title><rect x="8.0618%" y="1253" width="0.0123%" height="15" fill="rgb(238,205,33)" fg:x="1309" fg:w="2"/><text x="8.3118%" y="1263.50"></text></g><g><title>__memcpy_avx_unaligned (6 samples, 0.04%)</title><rect x="8.1973%" y="1429" width="0.0370%" height="15" fill="rgb(231,56,7)" fg:x="1331" fg:w="6"/><text x="8.4473%" y="1439.50"></text></g><g><title>_int_free (29 samples, 0.18%)</title><rect x="8.2343%" y="1429" width="0.1786%" height="15" fill="rgb(244,186,29)" fg:x="1337" fg:w="29"/><text x="8.4843%" y="1439.50"></text></g><g><title>_int_malloc (50 samples, 0.31%)</title><rect x="8.4129%" y="1429" width="0.3079%" height="15" fill="rgb(234,111,31)" fg:x="1366" fg:w="50"/><text x="8.6629%" y="1439.50"></text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.06%)</title><rect x="8.6592%" y="1413" width="0.0616%" height="15" fill="rgb(241,149,10)" fg:x="1406" fg:w="10"/><text x="8.9092%" y="1423.50"></text></g><g><title>_int_realloc (106 samples, 0.65%)</title><rect x="8.0742%" y="1445" width="0.6528%" height="15" fill="rgb(249,206,44)" fg:x="1311" fg:w="106"/><text x="8.3242%" y="1455.50"></text></g><g><title>__GI___libc_realloc (138 samples, 0.85%)</title><rect x="7.8832%" y="1461" width="0.8499%" height="15" fill="rgb(251,153,30)" fg:x="1280" fg:w="138"/><text x="8.1332%" y="1471.50"></text></g><g><title>__rdl_realloc (6 samples, 0.04%)</title><rect x="8.7331%" y="1461" width="0.0370%" height="15" fill="rgb(239,152,38)" fg:x="1418" fg:w="6"/><text x="8.9831%" y="1471.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.02%)</title><rect x="8.7516%" y="1445" width="0.0185%" height="15" fill="rgb(249,139,47)" fg:x="1421" fg:w="3"/><text x="9.0016%" y="1455.50"></text></g><g><title>alloc::raw_vec::finish_grow (146 samples, 0.90%)</title><rect x="7.8771%" y="1525" width="0.8992%" height="15" fill="rgb(244,64,35)" fg:x="1279" fg:w="146"/><text x="8.1271%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (145 samples, 0.89%)</title><rect x="7.8832%" y="1509" width="0.8930%" height="15" fill="rgb(216,46,15)" fg:x="1280" fg:w="145"/><text x="8.1332%" y="1519.50"></text></g><g><title>alloc::alloc::Global::grow_impl (145 samples, 0.89%)</title><rect x="7.8832%" y="1493" width="0.8930%" height="15" fill="rgb(250,74,19)" fg:x="1280" fg:w="145"/><text x="8.1332%" y="1503.50"></text></g><g><title>alloc::alloc::realloc (145 samples, 0.89%)</title><rect x="7.8832%" y="1477" width="0.8930%" height="15" fill="rgb(249,42,33)" fg:x="1280" fg:w="145"/><text x="8.1332%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (170 samples, 1.05%)</title><rect x="7.7416%" y="1605" width="1.0470%" height="15" fill="rgb(242,149,17)" fg:x="1257" fg:w="170"/><text x="7.9916%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (159 samples, 0.98%)</title><rect x="7.8093%" y="1589" width="0.9792%" height="15" fill="rgb(244,29,21)" fg:x="1268" fg:w="159"/><text x="8.0593%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (159 samples, 0.98%)</title><rect x="7.8093%" y="1573" width="0.9792%" height="15" fill="rgb(220,130,37)" fg:x="1268" fg:w="159"/><text x="8.0593%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (158 samples, 0.97%)</title><rect x="7.8155%" y="1557" width="0.9731%" height="15" fill="rgb(211,67,2)" fg:x="1269" fg:w="158"/><text x="8.0655%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (157 samples, 0.97%)</title><rect x="7.8216%" y="1541" width="0.9669%" height="15" fill="rgb(235,68,52)" fg:x="1270" fg:w="157"/><text x="8.0716%" y="1551.50"></text></g><g><title>core::cmp::max (2 samples, 0.01%)</title><rect x="8.7763%" y="1525" width="0.0123%" height="15" fill="rgb(246,142,3)" fg:x="1425" fg:w="2"/><text x="9.0263%" y="1535.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.01%)</title><rect x="8.7763%" y="1509" width="0.0123%" height="15" fill="rgb(241,25,7)" fg:x="1425" fg:w="2"/><text x="9.0263%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="8.7763%" y="1493" width="0.0123%" height="15" fill="rgb(242,119,39)" fg:x="1425" fg:w="2"/><text x="9.0263%" y="1503.50"></text></g><g><title>scylla::frame::request::query::QueryParameters::serialize (196 samples, 1.21%)</title><rect x="7.5876%" y="1637" width="1.2071%" height="15" fill="rgb(241,98,45)" fg:x="1232" fg:w="196"/><text x="7.8376%" y="1647.50"></text></g><g><title>scylla::frame::value::SerializedValues::write_to_request (171 samples, 1.05%)</title><rect x="7.7416%" y="1621" width="1.0532%" height="15" fill="rgb(254,28,30)" fg:x="1257" fg:w="171"/><text x="7.9916%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (3 samples, 0.02%)</title><rect x="8.8255%" y="1493" width="0.0185%" height="15" fill="rgb(241,142,54)" fg:x="1433" fg:w="3"/><text x="9.0755%" y="1503.50"></text></g><g><title>_int_free (22 samples, 0.14%)</title><rect x="9.2135%" y="1397" width="0.1355%" height="15" fill="rgb(222,85,15)" fg:x="1496" fg:w="22"/><text x="9.4635%" y="1407.50"></text></g><g><title>_int_malloc (35 samples, 0.22%)</title><rect x="9.3490%" y="1397" width="0.2156%" height="15" fill="rgb(210,85,47)" fg:x="1518" fg:w="35"/><text x="9.5990%" y="1407.50"></text></g><g><title>unlink_chunk.constprop.0 (5 samples, 0.03%)</title><rect x="9.5338%" y="1381" width="0.0308%" height="15" fill="rgb(224,206,25)" fg:x="1548" fg:w="5"/><text x="9.7838%" y="1391.50"></text></g><g><title>_int_realloc (88 samples, 0.54%)</title><rect x="9.0288%" y="1413" width="0.5420%" height="15" fill="rgb(243,201,19)" fg:x="1466" fg:w="88"/><text x="9.2788%" y="1423.50"></text></g><g><title>__GI___libc_realloc (114 samples, 0.70%)</title><rect x="8.8810%" y="1429" width="0.7021%" height="15" fill="rgb(236,59,4)" fg:x="1442" fg:w="114"/><text x="9.1310%" y="1439.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="9.5707%" y="1413" width="0.0123%" height="15" fill="rgb(254,179,45)" fg:x="1554" fg:w="2"/><text x="9.8207%" y="1423.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="9.5707%" y="1397" width="0.0123%" height="15" fill="rgb(226,14,10)" fg:x="1554" fg:w="2"/><text x="9.8207%" y="1407.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="9.5707%" y="1381" width="0.0123%" height="15" fill="rgb(244,27,41)" fg:x="1554" fg:w="2"/><text x="9.8207%" y="1391.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="9.5707%" y="1365" width="0.0123%" height="15" fill="rgb(235,35,32)" fg:x="1554" fg:w="2"/><text x="9.8207%" y="1375.50"></text></g><g><title>futex_wake (2 samples, 0.01%)</title><rect x="9.5707%" y="1349" width="0.0123%" height="15" fill="rgb(218,68,31)" fg:x="1554" fg:w="2"/><text x="9.8207%" y="1359.50"></text></g><g><title>__rdl_realloc (7 samples, 0.04%)</title><rect x="9.5831%" y="1429" width="0.0431%" height="15" fill="rgb(207,120,37)" fg:x="1556" fg:w="7"/><text x="9.8331%" y="1439.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="9.6015%" y="1413" width="0.0246%" height="15" fill="rgb(227,98,0)" fg:x="1559" fg:w="4"/><text x="9.8515%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (125 samples, 0.77%)</title><rect x="8.8686%" y="1477" width="0.7698%" height="15" fill="rgb(207,7,3)" fg:x="1440" fg:w="125"/><text x="9.1186%" y="1487.50"></text></g><g><title>alloc::alloc::Global::grow_impl (125 samples, 0.77%)</title><rect x="8.8686%" y="1461" width="0.7698%" height="15" fill="rgb(206,98,19)" fg:x="1440" fg:w="125"/><text x="9.1186%" y="1471.50"></text></g><g><title>alloc::alloc::realloc (123 samples, 0.76%)</title><rect x="8.8810%" y="1445" width="0.7575%" height="15" fill="rgb(217,5,26)" fg:x="1442" fg:w="123"/><text x="9.1310%" y="1455.50"></text></g><g><title>__rust_realloc (2 samples, 0.01%)</title><rect x="9.6262%" y="1429" width="0.0123%" height="15" fill="rgb(235,190,38)" fg:x="1563" fg:w="2"/><text x="9.8762%" y="1439.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 samples, 0.80%)</title><rect x="8.8440%" y="1493" width="0.8006%" height="15" fill="rgb(247,86,24)" fg:x="1436" fg:w="130"/><text x="9.0940%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (139 samples, 0.86%)</title><rect x="8.7947%" y="1557" width="0.8561%" height="15" fill="rgb(205,101,16)" fg:x="1428" fg:w="139"/><text x="9.0447%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (139 samples, 0.86%)</title><rect x="8.7947%" y="1541" width="0.8561%" height="15" fill="rgb(246,168,33)" fg:x="1428" fg:w="139"/><text x="9.0447%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (138 samples, 0.85%)</title><rect x="8.8009%" y="1525" width="0.8499%" height="15" fill="rgb(231,114,1)" fg:x="1429" fg:w="138"/><text x="9.0509%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (138 samples, 0.85%)</title><rect x="8.8009%" y="1509" width="0.8499%" height="15" fill="rgb(207,184,53)" fg:x="1429" fg:w="138"/><text x="9.0509%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (145 samples, 0.89%)</title><rect x="8.7947%" y="1621" width="0.8930%" height="15" fill="rgb(224,95,51)" fg:x="1428" fg:w="145"/><text x="9.0447%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (145 samples, 0.89%)</title><rect x="8.7947%" y="1605" width="0.8930%" height="15" fill="rgb(212,188,45)" fg:x="1428" fg:w="145"/><text x="9.0447%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (145 samples, 0.89%)</title><rect x="8.7947%" y="1589" width="0.8930%" height="15" fill="rgb(223,154,38)" fg:x="1428" fg:w="145"/><text x="9.0447%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (145 samples, 0.89%)</title><rect x="8.7947%" y="1573" width="0.8930%" height="15" fill="rgb(251,22,52)" fg:x="1428" fg:w="145"/><text x="9.0447%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="9.6508%" y="1557" width="0.0370%" height="15" fill="rgb(229,209,22)" fg:x="1567" fg:w="6"/><text x="9.9008%" y="1567.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="9.6693%" y="1541" width="0.0185%" height="15" fill="rgb(234,138,34)" fg:x="1570" fg:w="3"/><text x="9.9193%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.02%)</title><rect x="9.7555%" y="1445" width="0.0185%" height="15" fill="rgb(212,95,11)" fg:x="1584" fg:w="3"/><text x="10.0055%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.01%)</title><rect x="9.7740%" y="1445" width="0.0123%" height="15" fill="rgb(240,179,47)" fg:x="1587" fg:w="2"/><text x="10.0240%" y="1455.50"></text></g><g><title>_int_realloc (7 samples, 0.04%)</title><rect x="9.9587%" y="1365" width="0.0431%" height="15" fill="rgb(240,163,11)" fg:x="1617" fg:w="7"/><text x="10.2087%" y="1375.50"></text></g><g><title>__GI___libc_realloc (33 samples, 0.20%)</title><rect x="9.8048%" y="1381" width="0.2032%" height="15" fill="rgb(236,37,12)" fg:x="1592" fg:w="33"/><text x="10.0548%" y="1391.50"></text></g><g><title>__rdl_realloc (2 samples, 0.01%)</title><rect x="10.0080%" y="1381" width="0.0123%" height="15" fill="rgb(232,164,16)" fg:x="1625" fg:w="2"/><text x="10.2580%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.23%)</title><rect x="9.8048%" y="1429" width="0.2279%" height="15" fill="rgb(244,205,15)" fg:x="1592" fg:w="37"/><text x="10.0548%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.23%)</title><rect x="9.8048%" y="1413" width="0.2279%" height="15" fill="rgb(223,117,47)" fg:x="1592" fg:w="37"/><text x="10.0548%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.23%)</title><rect x="9.8048%" y="1397" width="0.2279%" height="15" fill="rgb(244,107,35)" fg:x="1592" fg:w="37"/><text x="10.0548%" y="1407.50"></text></g><g><title>__rust_realloc (2 samples, 0.01%)</title><rect x="10.0203%" y="1381" width="0.0123%" height="15" fill="rgb(205,140,8)" fg:x="1627" fg:w="2"/><text x="10.2703%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.30%)</title><rect x="9.7370%" y="1461" width="0.3018%" height="15" fill="rgb(228,84,46)" fg:x="1581" fg:w="49"/><text x="9.9870%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.25%)</title><rect x="9.7863%" y="1445" width="0.2525%" height="15" fill="rgb(254,188,9)" fg:x="1589" fg:w="41"/><text x="10.0363%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (58 samples, 0.36%)</title><rect x="9.6878%" y="1509" width="0.3572%" height="15" fill="rgb(206,112,54)" fg:x="1573" fg:w="58"/><text x="9.9378%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (55 samples, 0.34%)</title><rect x="9.7062%" y="1493" width="0.3387%" height="15" fill="rgb(216,84,49)" fg:x="1576" fg:w="55"/><text x="9.9562%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (55 samples, 0.34%)</title><rect x="9.7062%" y="1477" width="0.3387%" height="15" fill="rgb(214,194,35)" fg:x="1576" fg:w="55"/><text x="9.9562%" y="1487.50"></text></g><g><title>&lt;scylla::frame::request::execute::Execute as scylla::frame::request::Request&gt;::serialize (405 samples, 2.49%)</title><rect x="7.5691%" y="1653" width="2.4943%" height="15" fill="rgb(249,28,3)" fg:x="1229" fg:w="405"/><text x="7.8191%" y="1663.50">&lt;s..</text></g><g><title>scylla::frame::types::write_short_bytes (206 samples, 1.27%)</title><rect x="8.7947%" y="1637" width="1.2687%" height="15" fill="rgb(222,56,52)" fg:x="1428" fg:w="206"/><text x="9.0447%" y="1647.50"></text></g><g><title>scylla::frame::types::write_short_length (61 samples, 0.38%)</title><rect x="9.6878%" y="1621" width="0.3757%" height="15" fill="rgb(245,217,50)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1631.50"></text></g><g><title>scylla::frame::types::write_short (61 samples, 0.38%)</title><rect x="9.6878%" y="1605" width="0.3757%" height="15" fill="rgb(213,201,24)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1615.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i16 (61 samples, 0.38%)</title><rect x="9.6878%" y="1589" width="0.3757%" height="15" fill="rgb(248,116,28)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (61 samples, 0.38%)</title><rect x="9.6878%" y="1573" width="0.3757%" height="15" fill="rgb(219,72,43)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (61 samples, 0.38%)</title><rect x="9.6878%" y="1557" width="0.3757%" height="15" fill="rgb(209,138,14)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (61 samples, 0.38%)</title><rect x="9.6878%" y="1541" width="0.3757%" height="15" fill="rgb(222,18,33)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (61 samples, 0.38%)</title><rect x="9.6878%" y="1525" width="0.3757%" height="15" fill="rgb(213,199,7)" fg:x="1573" fg:w="61"/><text x="9.9378%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="10.0450%" y="1509" width="0.0185%" height="15" fill="rgb(250,110,10)" fg:x="1631" fg:w="3"/><text x="10.2950%" y="1519.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="10.3098%" y="1477" width="0.0185%" height="15" fill="rgb(248,123,6)" fg:x="1674" fg:w="3"/><text x="10.5598%" y="1487.50"></text></g><g><title>do_futex (3 samples, 0.02%)</title><rect x="10.3098%" y="1461" width="0.0185%" height="15" fill="rgb(206,91,31)" fg:x="1674" fg:w="3"/><text x="10.5598%" y="1471.50"></text></g><g><title>futex_wait (3 samples, 0.02%)</title><rect x="10.3098%" y="1445" width="0.0185%" height="15" fill="rgb(211,154,13)" fg:x="1674" fg:w="3"/><text x="10.5598%" y="1455.50"></text></g><g><title>__lll_lock_wait_private (4 samples, 0.02%)</title><rect x="10.3098%" y="1525" width="0.0246%" height="15" fill="rgb(225,148,7)" fg:x="1674" fg:w="4"/><text x="10.5598%" y="1535.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="10.3098%" y="1509" width="0.0246%" height="15" fill="rgb(220,160,43)" fg:x="1674" fg:w="4"/><text x="10.5598%" y="1519.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="10.3098%" y="1493" width="0.0246%" height="15" fill="rgb(213,52,39)" fg:x="1674" fg:w="4"/><text x="10.5598%" y="1503.50"></text></g><g><title>_int_malloc (54 samples, 0.33%)</title><rect x="10.3344%" y="1525" width="0.3326%" height="15" fill="rgb(243,137,7)" fg:x="1678" fg:w="54"/><text x="10.5844%" y="1535.50"></text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.06%)</title><rect x="10.6054%" y="1509" width="0.0616%" height="15" fill="rgb(230,79,13)" fg:x="1722" fg:w="10"/><text x="10.8554%" y="1519.50"></text></g><g><title>scylla::frame::SerializedRequest::make (508 samples, 3.13%)</title><rect x="7.5691%" y="1669" width="3.1287%" height="15" fill="rgb(247,105,23)" fg:x="1229" fg:w="508"/><text x="7.8191%" y="1679.50">scy..</text></g><g><title>alloc::vec::from_elem (103 samples, 0.63%)</title><rect x="10.0634%" y="1653" width="0.6344%" height="15" fill="rgb(223,179,41)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1663.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (103 samples, 0.63%)</title><rect x="10.0634%" y="1637" width="0.6344%" height="15" fill="rgb(218,9,34)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (103 samples, 0.63%)</title><rect x="10.0634%" y="1621" width="0.6344%" height="15" fill="rgb(222,106,8)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (103 samples, 0.63%)</title><rect x="10.0634%" y="1605" width="0.6344%" height="15" fill="rgb(211,220,0)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (103 samples, 0.63%)</title><rect x="10.0634%" y="1589" width="0.6344%" height="15" fill="rgb(229,52,16)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (103 samples, 0.63%)</title><rect x="10.0634%" y="1573" width="0.6344%" height="15" fill="rgb(212,155,18)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1583.50"></text></g><g><title>alloc::alloc::alloc_zeroed (103 samples, 0.63%)</title><rect x="10.0634%" y="1557" width="0.6344%" height="15" fill="rgb(242,21,14)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1567.50"></text></g><g><title>__calloc (103 samples, 0.63%)</title><rect x="10.0634%" y="1541" width="0.6344%" height="15" fill="rgb(222,19,48)" fg:x="1634" fg:w="103"/><text x="10.3134%" y="1551.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="10.6732%" y="1525" width="0.0246%" height="15" fill="rgb(232,45,27)" fg:x="1733" fg:w="4"/><text x="10.9232%" y="1535.50"></text></g><g><title>do_syscall_64 (4 samples, 0.02%)</title><rect x="10.6732%" y="1509" width="0.0246%" height="15" fill="rgb(249,103,42)" fg:x="1733" fg:w="4"/><text x="10.9232%" y="1519.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="10.6732%" y="1493" width="0.0246%" height="15" fill="rgb(246,81,33)" fg:x="1733" fg:w="4"/><text x="10.9232%" y="1503.50"></text></g><g><title>do_futex (3 samples, 0.02%)</title><rect x="10.6793%" y="1477" width="0.0185%" height="15" fill="rgb(252,33,42)" fg:x="1734" fg:w="3"/><text x="10.9293%" y="1487.50"></text></g><g><title>futex_wake (3 samples, 0.02%)</title><rect x="10.6793%" y="1461" width="0.0185%" height="15" fill="rgb(209,212,41)" fg:x="1734" fg:w="3"/><text x="10.9293%" y="1471.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.05%)</title><rect x="10.8456%" y="1637" width="0.0493%" height="15" fill="rgb(207,154,6)" fg:x="1761" fg:w="8"/><text x="11.0956%" y="1647.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.13%)</title><rect x="10.7717%" y="1653" width="0.1293%" height="15" fill="rgb(223,64,47)" fg:x="1749" fg:w="21"/><text x="11.0217%" y="1663.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="10.9010%" y="1653" width="0.0123%" height="15" fill="rgb(211,161,38)" fg:x="1770" fg:w="2"/><text x="11.1510%" y="1663.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="10.9133%" y="1653" width="0.0123%" height="15" fill="rgb(219,138,40)" fg:x="1772" fg:w="2"/><text x="11.1633%" y="1663.50"></text></g><g><title>__memmove_avx_unaligned_erms (39 samples, 0.24%)</title><rect x="10.9257%" y="1653" width="0.2402%" height="15" fill="rgb(241,228,46)" fg:x="1774" fg:w="39"/><text x="11.1757%" y="1663.50"></text></g><g><title>__GI___libc_free (101 samples, 0.62%)</title><rect x="11.1659%" y="1621" width="0.6220%" height="15" fill="rgb(223,209,38)" fg:x="1813" fg:w="101"/><text x="11.4159%" y="1631.50"></text></g><g><title>_int_free (44 samples, 0.27%)</title><rect x="11.5169%" y="1605" width="0.2710%" height="15" fill="rgb(236,164,45)" fg:x="1870" fg:w="44"/><text x="11.7669%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (111 samples, 0.68%)</title><rect x="11.1659%" y="1653" width="0.6836%" height="15" fill="rgb(231,15,5)" fg:x="1813" fg:w="111"/><text x="11.4159%" y="1663.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (111 samples, 0.68%)</title><rect x="11.1659%" y="1637" width="0.6836%" height="15" fill="rgb(252,35,15)" fg:x="1813" fg:w="111"/><text x="11.4159%" y="1647.50"></text></g><g><title>bytes::bytes::promotable_even_drop (10 samples, 0.06%)</title><rect x="11.7879%" y="1621" width="0.0616%" height="15" fill="rgb(248,181,18)" fg:x="1914" fg:w="10"/><text x="12.0379%" y="1631.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (10 samples, 0.06%)</title><rect x="11.7879%" y="1605" width="0.0616%" height="15" fill="rgb(233,39,42)" fg:x="1914" fg:w="10"/><text x="12.0379%" y="1615.50"></text></g><g><title>scylla::frame::parse_response_body_extensions (17 samples, 0.10%)</title><rect x="11.8495%" y="1653" width="0.1047%" height="15" fill="rgb(238,110,33)" fg:x="1924" fg:w="17"/><text x="12.0995%" y="1663.50"></text></g><g><title>scylla::frame::response::Response::deserialize (8 samples, 0.05%)</title><rect x="11.9542%" y="1653" width="0.0493%" height="15" fill="rgb(233,195,10)" fg:x="1941" fg:w="8"/><text x="12.2042%" y="1663.50"></text></g><g><title>scylla::transport::connection::Connection::parse_response (213 samples, 1.31%)</title><rect x="10.6978%" y="1669" width="1.3118%" height="15" fill="rgb(254,105,3)" fg:x="1737" fg:w="213"/><text x="10.9478%" y="1679.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1909" width="10.9010%" height="15" fill="rgb(221,225,9)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1919.50">&lt;latte::workload..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1893" width="10.9010%" height="15" fill="rgb(224,227,45)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1903.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1877" width="10.9010%" height="15" fill="rgb(229,198,43)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1887.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1861" width="10.9010%" height="15" fill="rgb(206,209,35)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1871.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1845" width="10.9010%" height="15" fill="rgb(245,195,53)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1855.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1829" width="10.9010%" height="15" fill="rgb(240,92,26)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1839.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1813" width="10.9010%" height="15" fill="rgb(207,40,23)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1823.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1797" width="10.9010%" height="15" fill="rgb(223,111,35)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1807.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1781" width="10.9010%" height="15" fill="rgb(229,147,28)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1791.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1765" width="10.9010%" height="15" fill="rgb(211,29,28)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1775.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1749" width="10.9010%" height="15" fill="rgb(228,72,33)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1759.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1733" width="10.9010%" height="15" fill="rgb(205,214,31)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1743.50">&lt;core::future::f..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1717" width="10.9010%" height="15" fill="rgb(224,111,15)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1727.50">scylla::transpor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1701" width="10.9010%" height="15" fill="rgb(253,21,26)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1711.50">&lt;core::future::f..</text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (1,770 samples, 10.90%)</title><rect x="1.1517%" y="1685" width="10.9010%" height="15" fill="rgb(245,139,43)" fg:x="187" fg:w="1770"/><text x="1.4017%" y="1695.50">scylla::transpor..</text></g><g><title>tokio::sync::oneshot::channel (7 samples, 0.04%)</title><rect x="12.0096%" y="1669" width="0.0431%" height="15" fill="rgb(252,170,7)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1679.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="12.0096%" y="1653" width="0.0431%" height="15" fill="rgb(231,118,14)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1663.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.04%)</title><rect x="12.0096%" y="1637" width="0.0431%" height="15" fill="rgb(238,83,0)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="12.0096%" y="1621" width="0.0431%" height="15" fill="rgb(221,39,39)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1631.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="12.0096%" y="1605" width="0.0431%" height="15" fill="rgb(222,119,46)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1615.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="12.0096%" y="1589" width="0.0431%" height="15" fill="rgb(222,165,49)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1599.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="12.0096%" y="1573" width="0.0431%" height="15" fill="rgb(219,113,52)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1583.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="12.0096%" y="1557" width="0.0431%" height="15" fill="rgb(214,7,15)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1567.50"></text></g><g><title>sysmalloc (7 samples, 0.04%)</title><rect x="12.0096%" y="1541" width="0.0431%" height="15" fill="rgb(235,32,4)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1551.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.04%)</title><rect x="12.0096%" y="1525" width="0.0431%" height="15" fill="rgb(238,90,54)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1535.50"></text></g><g><title>exc_page_fault (7 samples, 0.04%)</title><rect x="12.0096%" y="1509" width="0.0431%" height="15" fill="rgb(213,208,19)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1519.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.04%)</title><rect x="12.0096%" y="1493" width="0.0431%" height="15" fill="rgb(233,156,4)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1503.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.04%)</title><rect x="12.0096%" y="1477" width="0.0431%" height="15" fill="rgb(207,194,5)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1487.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="12.0096%" y="1461" width="0.0431%" height="15" fill="rgb(206,111,30)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1471.50"></text></g><g><title>__schedule (7 samples, 0.04%)</title><rect x="12.0096%" y="1445" width="0.0431%" height="15" fill="rgb(243,70,54)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1455.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="12.0096%" y="1429" width="0.0431%" height="15" fill="rgb(242,28,8)" fg:x="1950" fg:w="7"/><text x="12.2596%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.04%)</title><rect x="12.1205%" y="1637" width="0.0431%" height="15" fill="rgb(219,106,18)" fg:x="1968" fg:w="7"/><text x="12.3705%" y="1647.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.07%)</title><rect x="12.1636%" y="1637" width="0.0739%" height="15" fill="rgb(244,222,10)" fg:x="1975" fg:w="12"/><text x="12.4136%" y="1647.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="13.1675%" y="1605" width="0.0246%" height="15" fill="rgb(236,179,52)" fg:x="2138" fg:w="4"/><text x="13.4175%" y="1615.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (12 samples, 0.07%)</title><rect x="14.2452%" y="1525" width="0.0739%" height="15" fill="rgb(213,23,39)" fg:x="2313" fg:w="12"/><text x="14.4952%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (5 samples, 0.03%)</title><rect x="14.3253%" y="1525" width="0.0308%" height="15" fill="rgb(238,48,10)" fg:x="2326" fg:w="5"/><text x="14.5753%" y="1535.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="14.3253%" y="1509" width="0.0308%" height="15" fill="rgb(251,196,23)" fg:x="2326" fg:w="5"/><text x="14.5753%" y="1519.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (12 samples, 0.07%)</title><rect x="14.3561%" y="1525" width="0.0739%" height="15" fill="rgb(250,152,24)" fg:x="2331" fg:w="12"/><text x="14.6061%" y="1535.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::new (5 samples, 0.03%)</title><rect x="14.3992%" y="1509" width="0.0308%" height="15" fill="rgb(209,150,17)" fg:x="2338" fg:w="5"/><text x="14.6492%" y="1519.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::new (2 samples, 0.01%)</title><rect x="14.4177%" y="1493" width="0.0123%" height="15" fill="rgb(234,202,34)" fg:x="2341" fg:w="2"/><text x="14.6677%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 0.68%)</title><rect x="14.0482%" y="1589" width="0.6775%" height="15" fill="rgb(253,148,53)" fg:x="2281" fg:w="110"/><text x="14.2982%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (110 samples, 0.68%)</title><rect x="14.0482%" y="1573" width="0.6775%" height="15" fill="rgb(218,129,16)" fg:x="2281" fg:w="110"/><text x="14.2982%" y="1583.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (89 samples, 0.55%)</title><rect x="14.1775%" y="1557" width="0.5481%" height="15" fill="rgb(216,85,19)" fg:x="2302" fg:w="89"/><text x="14.4275%" y="1567.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (89 samples, 0.55%)</title><rect x="14.1775%" y="1541" width="0.5481%" height="15" fill="rgb(235,228,7)" fg:x="2302" fg:w="89"/><text x="14.4275%" y="1551.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::semaphore (48 samples, 0.30%)</title><rect x="14.4300%" y="1525" width="0.2956%" height="15" fill="rgb(245,175,0)" fg:x="2343" fg:w="48"/><text x="14.6800%" y="1535.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="14.7256%" y="1589" width="0.0185%" height="15" fill="rgb(208,168,36)" fg:x="2391" fg:w="3"/><text x="14.9756%" y="1599.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="14.7256%" y="1573" width="0.0185%" height="15" fill="rgb(246,171,24)" fg:x="2391" fg:w="3"/><text x="14.9756%" y="1583.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="14.7256%" y="1557" width="0.0185%" height="15" fill="rgb(215,142,24)" fg:x="2391" fg:w="3"/><text x="14.9756%" y="1567.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="14.7256%" y="1541" width="0.0185%" height="15" fill="rgb(250,187,7)" fg:x="2391" fg:w="3"/><text x="14.9756%" y="1551.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="14.7256%" y="1525" width="0.0185%" height="15" fill="rgb(228,66,33)" fg:x="2391" fg:w="3"/><text x="14.9756%" y="1535.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="14.7318%" y="1509" width="0.0123%" height="15" fill="rgb(234,215,21)" fg:x="2392" fg:w="2"/><text x="14.9818%" y="1519.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="14.7318%" y="1493" width="0.0123%" height="15" fill="rgb(222,191,20)" fg:x="2392" fg:w="2"/><text x="14.9818%" y="1503.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="14.7318%" y="1477" width="0.0123%" height="15" fill="rgb(245,79,54)" fg:x="2392" fg:w="2"/><text x="14.9818%" y="1487.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="14.7318%" y="1461" width="0.0123%" height="15" fill="rgb(240,10,37)" fg:x="2392" fg:w="2"/><text x="14.9818%" y="1471.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (6 samples, 0.04%)</title><rect x="15.1383%" y="1525" width="0.0370%" height="15" fill="rgb(214,192,32)" fg:x="2458" fg:w="6"/><text x="15.3883%" y="1535.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.02%)</title><rect x="15.1752%" y="1509" width="0.0246%" height="15" fill="rgb(209,36,54)" fg:x="2464" fg:w="4"/><text x="15.4252%" y="1519.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (4 samples, 0.02%)</title><rect x="15.1999%" y="1509" width="0.0246%" height="15" fill="rgb(220,10,11)" fg:x="2468" fg:w="4"/><text x="15.4499%" y="1519.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="15.2122%" y="1493" width="0.0123%" height="15" fill="rgb(221,106,17)" fg:x="2470" fg:w="2"/><text x="15.4622%" y="1503.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (9 samples, 0.06%)</title><rect x="15.1752%" y="1525" width="0.0554%" height="15" fill="rgb(251,142,44)" fg:x="2464" fg:w="9"/><text x="15.4252%" y="1535.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (63 samples, 0.39%)</title><rect x="14.8550%" y="1541" width="0.3880%" height="15" fill="rgb(238,13,15)" fg:x="2412" fg:w="63"/><text x="15.1050%" y="1551.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (2 samples, 0.01%)</title><rect x="15.2306%" y="1525" width="0.0123%" height="15" fill="rgb(208,107,27)" fg:x="2473" fg:w="2"/><text x="15.4806%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (415 samples, 2.56%)</title><rect x="13.0689%" y="1621" width="2.5559%" height="15" fill="rgb(205,136,37)" fg:x="2122" fg:w="415"/><text x="13.3189%" y="1631.50">&lt;c..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (395 samples, 2.43%)</title><rect x="13.1921%" y="1605" width="2.4327%" height="15" fill="rgb(250,205,27)" fg:x="2142" fg:w="395"/><text x="13.4421%" y="1615.50">to..</text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (143 samples, 0.88%)</title><rect x="14.7441%" y="1589" width="0.8807%" height="15" fill="rgb(210,80,43)" fg:x="2394" fg:w="143"/><text x="14.9941%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (143 samples, 0.88%)</title><rect x="14.7441%" y="1573" width="0.8807%" height="15" fill="rgb(247,160,36)" fg:x="2394" fg:w="143"/><text x="14.9941%" y="1583.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (143 samples, 0.88%)</title><rect x="14.7441%" y="1557" width="0.8807%" height="15" fill="rgb(234,13,49)" fg:x="2394" fg:w="143"/><text x="14.9941%" y="1567.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (62 samples, 0.38%)</title><rect x="15.2430%" y="1541" width="0.3818%" height="15" fill="rgb(234,122,0)" fg:x="2475" fg:w="62"/><text x="15.4930%" y="1551.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (57 samples, 0.35%)</title><rect x="15.2738%" y="1525" width="0.3511%" height="15" fill="rgb(207,146,38)" fg:x="2480" fg:w="57"/><text x="15.5238%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (56 samples, 0.34%)</title><rect x="15.2799%" y="1509" width="0.3449%" height="15" fill="rgb(207,177,25)" fg:x="2481" fg:w="56"/><text x="15.5299%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_or (56 samples, 0.34%)</title><rect x="15.2799%" y="1493" width="0.3449%" height="15" fill="rgb(211,178,42)" fg:x="2481" fg:w="56"/><text x="15.5299%" y="1503.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.02%)</title><rect x="15.6248%" y="1621" width="0.0185%" height="15" fill="rgb(230,69,54)" fg:x="2537" fg:w="3"/><text x="15.8748%" y="1631.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.07%)</title><rect x="15.6433%" y="1621" width="0.0739%" height="15" fill="rgb(214,135,41)" fg:x="2540" fg:w="12"/><text x="15.8933%" y="1631.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (10 samples, 0.06%)</title><rect x="15.6556%" y="1605" width="0.0616%" height="15" fill="rgb(237,67,25)" fg:x="2542" fg:w="10"/><text x="15.9056%" y="1615.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="15.7172%" y="1621" width="0.0123%" height="15" fill="rgb(222,189,50)" fg:x="2552" fg:w="2"/><text x="15.9672%" y="1631.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.08%)</title><rect x="15.7295%" y="1621" width="0.0801%" height="15" fill="rgb(245,148,34)" fg:x="2554" fg:w="13"/><text x="15.9795%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Receiver&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="15.8157%" y="1621" width="0.0246%" height="15" fill="rgb(222,29,6)" fg:x="2568" fg:w="4"/><text x="16.0657%" y="1631.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="15.8157%" y="1605" width="0.0246%" height="15" fill="rgb(221,189,43)" fg:x="2568" fg:w="4"/><text x="16.0657%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="15.8157%" y="1589" width="0.0246%" height="15" fill="rgb(207,36,27)" fg:x="2568" fg:w="4"/><text x="16.0657%" y="1599.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.02%)</title><rect x="15.8404%" y="1621" width="0.0185%" height="15" fill="rgb(217,90,24)" fg:x="2572" fg:w="3"/><text x="16.0904%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (6 samples, 0.04%)</title><rect x="16.1421%" y="1605" width="0.0370%" height="15" fill="rgb(224,66,35)" fg:x="2621" fg:w="6"/><text x="16.3921%" y="1615.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.04%)</title><rect x="16.1421%" y="1589" width="0.0370%" height="15" fill="rgb(221,13,50)" fg:x="2621" fg:w="6"/><text x="16.3921%" y="1599.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.04%)</title><rect x="16.1421%" y="1573" width="0.0370%" height="15" fill="rgb(236,68,49)" fg:x="2621" fg:w="6"/><text x="16.3921%" y="1583.50"></text></g><g><title>&lt;scylla::frame::request::execute::Execute as scylla::frame::request::Request&gt;::serialize (3 samples, 0.02%)</title><rect x="16.1853%" y="1605" width="0.0185%" height="15" fill="rgb(229,146,28)" fg:x="2628" fg:w="3"/><text x="16.4353%" y="1615.50"></text></g><g><title>__calloc (2 samples, 0.01%)</title><rect x="16.2592%" y="1493" width="0.0123%" height="15" fill="rgb(225,31,38)" fg:x="2640" fg:w="2"/><text x="16.5092%" y="1503.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.03%)</title><rect x="16.2715%" y="1493" width="0.0308%" height="15" fill="rgb(250,208,3)" fg:x="2642" fg:w="5"/><text x="16.5215%" y="1503.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (5 samples, 0.03%)</title><rect x="16.2715%" y="1477" width="0.0308%" height="15" fill="rgb(246,54,23)" fg:x="2642" fg:w="5"/><text x="16.5215%" y="1487.50"></text></g><g><title>scylla::frame::SerializedRequest::make (76 samples, 0.47%)</title><rect x="15.8588%" y="1621" width="0.4681%" height="15" fill="rgb(243,76,11)" fg:x="2575" fg:w="76"/><text x="16.1088%" y="1631.50"></text></g><g><title>alloc::vec::from_elem (20 samples, 0.12%)</title><rect x="16.2037%" y="1605" width="0.1232%" height="15" fill="rgb(245,21,50)" fg:x="2631" fg:w="20"/><text x="16.4537%" y="1615.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (20 samples, 0.12%)</title><rect x="16.2037%" y="1589" width="0.1232%" height="15" fill="rgb(228,9,43)" fg:x="2631" fg:w="20"/><text x="16.4537%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (14 samples, 0.09%)</title><rect x="16.2407%" y="1573" width="0.0862%" height="15" fill="rgb(208,100,47)" fg:x="2637" fg:w="14"/><text x="16.4907%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.09%)</title><rect x="16.2407%" y="1557" width="0.0862%" height="15" fill="rgb(232,26,8)" fg:x="2637" fg:w="14"/><text x="16.4907%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (14 samples, 0.09%)</title><rect x="16.2407%" y="1541" width="0.0862%" height="15" fill="rgb(216,166,38)" fg:x="2637" fg:w="14"/><text x="16.4907%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.09%)</title><rect x="16.2407%" y="1525" width="0.0862%" height="15" fill="rgb(251,202,51)" fg:x="2637" fg:w="14"/><text x="16.4907%" y="1535.50"></text></g><g><title>alloc::alloc::alloc_zeroed (11 samples, 0.07%)</title><rect x="16.2592%" y="1509" width="0.0677%" height="15" fill="rgb(254,216,34)" fg:x="2640" fg:w="11"/><text x="16.5092%" y="1519.50"></text></g><g><title>__rust_alloc_zeroed (4 samples, 0.02%)</title><rect x="16.3023%" y="1493" width="0.0246%" height="15" fill="rgb(251,32,27)" fg:x="2647" fg:w="4"/><text x="16.5523%" y="1503.50"></text></g><g><title>scylla::transport::connection::Connection::parse_response (8 samples, 0.05%)</title><rect x="16.3269%" y="1621" width="0.0493%" height="15" fill="rgb(208,127,28)" fg:x="2651" fg:w="8"/><text x="16.5769%" y="1631.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="16.3762%" y="1605" width="0.0185%" height="15" fill="rgb(224,137,22)" fg:x="2659" fg:w="3"/><text x="16.6262%" y="1615.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="17.0783%" y="1493" width="0.0123%" height="15" fill="rgb(254,70,32)" fg:x="2773" fg:w="2"/><text x="17.3283%" y="1503.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="17.0783%" y="1477" width="0.0123%" height="15" fill="rgb(229,75,37)" fg:x="2773" fg:w="2"/><text x="17.3283%" y="1487.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="17.0783%" y="1461" width="0.0123%" height="15" fill="rgb(252,64,23)" fg:x="2773" fg:w="2"/><text x="17.3283%" y="1471.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="17.0783%" y="1445" width="0.0123%" height="15" fill="rgb(232,162,48)" fg:x="2773" fg:w="2"/><text x="17.3283%" y="1455.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="17.0783%" y="1429" width="0.0123%" height="15" fill="rgb(246,160,12)" fg:x="2773" fg:w="2"/><text x="17.3283%" y="1439.50"></text></g><g><title>__GI___libc_malloc (108 samples, 0.67%)</title><rect x="16.5178%" y="1525" width="0.6651%" height="15" fill="rgb(247,166,0)" fg:x="2682" fg:w="108"/><text x="16.7678%" y="1535.50"></text></g><g><title>_int_malloc (85 samples, 0.52%)</title><rect x="16.6595%" y="1509" width="0.5235%" height="15" fill="rgb(249,219,21)" fg:x="2705" fg:w="85"/><text x="16.9095%" y="1519.50"></text></g><g><title>unlink_chunk.constprop.0 (15 samples, 0.09%)</title><rect x="17.0906%" y="1493" width="0.0924%" height="15" fill="rgb(205,209,3)" fg:x="2775" fg:w="15"/><text x="17.3406%" y="1503.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (131 samples, 0.81%)</title><rect x="16.3947%" y="1605" width="0.8068%" height="15" fill="rgb(243,44,1)" fg:x="2662" fg:w="131"/><text x="16.6447%" y="1615.50"></text></g><g><title>alloc::alloc::exchange_malloc (112 samples, 0.69%)</title><rect x="16.5117%" y="1589" width="0.6898%" height="15" fill="rgb(206,159,16)" fg:x="2681" fg:w="112"/><text x="16.7617%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (112 samples, 0.69%)</title><rect x="16.5117%" y="1573" width="0.6898%" height="15" fill="rgb(244,77,30)" fg:x="2681" fg:w="112"/><text x="16.7617%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (112 samples, 0.69%)</title><rect x="16.5117%" y="1557" width="0.6898%" height="15" fill="rgb(218,69,12)" fg:x="2681" fg:w="112"/><text x="16.7617%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.68%)</title><rect x="16.5178%" y="1541" width="0.6836%" height="15" fill="rgb(212,87,7)" fg:x="2682" fg:w="111"/><text x="16.7678%" y="1551.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="17.1891%" y="1525" width="0.0123%" height="15" fill="rgb(245,114,25)" fg:x="2791" fg:w="2"/><text x="17.4391%" y="1535.50"></text></g><g><title>tokio::io::driver::ready::Ready::as_usize (4 samples, 0.02%)</title><rect x="17.2015%" y="1605" width="0.0246%" height="15" fill="rgb(210,61,42)" fg:x="2793" fg:w="4"/><text x="17.4515%" y="1615.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1909" width="5.1980%" height="15" fill="rgb(211,52,33)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1919.50">latte:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1893" width="5.1980%" height="15" fill="rgb(234,58,33)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1903.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1877" width="5.1980%" height="15" fill="rgb(220,115,36)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1887.50">&lt;core:..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1861" width="5.1980%" height="15" fill="rgb(243,153,54)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1871.50">&lt;latte..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1845" width="5.1980%" height="15" fill="rgb(251,47,18)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1855.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1829" width="5.1980%" height="15" fill="rgb(242,102,42)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1839.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1813" width="5.1980%" height="15" fill="rgb(234,31,38)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1823.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1797" width="5.1980%" height="15" fill="rgb(221,117,51)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1807.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1781" width="5.1980%" height="15" fill="rgb(212,20,18)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1791.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1765" width="5.1980%" height="15" fill="rgb(245,133,36)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1775.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1749" width="5.1980%" height="15" fill="rgb(212,6,19)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1759.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1733" width="5.1980%" height="15" fill="rgb(218,1,36)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1743.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1717" width="5.1980%" height="15" fill="rgb(246,84,54)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1727.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1701" width="5.1980%" height="15" fill="rgb(242,110,6)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1711.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1685" width="5.1980%" height="15" fill="rgb(214,47,5)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1695.50">&lt;core:..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (844 samples, 5.20%)</title><rect x="12.0589%" y="1669" width="5.1980%" height="15" fill="rgb(218,159,25)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1679.50">scylla..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (844 samples, 5.20%)</title><rect x="12.0589%" y="1653" width="5.1980%" height="15" fill="rgb(215,211,28)" fg:x="1958" fg:w="844"/><text x="12.3089%" y="1663.50">&lt;core:..</text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (815 samples, 5.02%)</title><rect x="12.2375%" y="1637" width="5.0194%" height="15" fill="rgb(238,59,32)" fg:x="1987" fg:w="815"/><text x="12.4875%" y="1647.50">scylla..</text></g><g><title>tokio::sync::oneshot::channel (143 samples, 0.88%)</title><rect x="16.3762%" y="1621" width="0.8807%" height="15" fill="rgb(226,82,3)" fg:x="2659" fg:w="143"/><text x="16.6262%" y="1631.50"></text></g><g><title>tokio::sync::oneshot::State::new (4 samples, 0.02%)</title><rect x="17.2322%" y="1605" width="0.0246%" height="15" fill="rgb(240,164,32)" fg:x="2798" fg:w="4"/><text x="17.4822%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.11%)</title><rect x="17.3431%" y="1557" width="0.1109%" height="15" fill="rgb(232,46,7)" fg:x="2816" fg:w="18"/><text x="17.5931%" y="1567.50"></text></g><g><title>&lt;&amp;T as scylla::frame::value::ValueList&gt;::serialized (4 samples, 0.02%)</title><rect x="20.0838%" y="1541" width="0.0246%" height="15" fill="rgb(229,129,53)" fg:x="3261" fg:w="4"/><text x="20.3338%" y="1551.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt; as scylla::frame::value::ValueList&gt;::serialized (4 samples, 0.02%)</title><rect x="20.0838%" y="1525" width="0.0246%" height="15" fill="rgb(234,188,29)" fg:x="3261" fg:w="4"/><text x="20.3338%" y="1535.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;T&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (2 samples, 0.01%)</title><rect x="20.0961%" y="1509" width="0.0123%" height="15" fill="rgb(246,141,4)" fg:x="3263" fg:w="2"/><text x="20.3461%" y="1519.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="20.0961%" y="1493" width="0.0123%" height="15" fill="rgb(229,23,39)" fg:x="3263" fg:w="2"/><text x="20.3461%" y="1503.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (90 samples, 0.55%)</title><rect x="20.1084%" y="1541" width="0.5543%" height="15" fill="rgb(206,12,3)" fg:x="3265" fg:w="90"/><text x="20.3584%" y="1551.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (90 samples, 0.55%)</title><rect x="20.1084%" y="1525" width="0.5543%" height="15" fill="rgb(252,226,20)" fg:x="3265" fg:w="90"/><text x="20.3584%" y="1535.50"></text></g><g><title>bytes::bytes::promotable_even_clone (89 samples, 0.55%)</title><rect x="20.1146%" y="1509" width="0.5481%" height="15" fill="rgb(216,123,35)" fg:x="3266" fg:w="89"/><text x="20.3646%" y="1519.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (89 samples, 0.55%)</title><rect x="20.1146%" y="1493" width="0.5481%" height="15" fill="rgb(212,68,40)" fg:x="3266" fg:w="89"/><text x="20.3646%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.30%)</title><rect x="20.6627%" y="1541" width="0.3018%" height="15" fill="rgb(254,125,32)" fg:x="3355" fg:w="49"/><text x="20.9127%" y="1551.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.18%)</title><rect x="20.9645%" y="1541" width="0.1848%" height="15" fill="rgb(253,97,22)" fg:x="3404" fg:w="30"/><text x="21.2145%" y="1551.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="21.1492%" y="1541" width="0.0123%" height="15" fill="rgb(241,101,14)" fg:x="3434" fg:w="2"/><text x="21.3992%" y="1551.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="21.1492%" y="1525" width="0.0123%" height="15" fill="rgb(238,103,29)" fg:x="3434" fg:w="2"/><text x="21.3992%" y="1535.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="21.1492%" y="1509" width="0.0123%" height="15" fill="rgb(233,195,47)" fg:x="3434" fg:w="2"/><text x="21.3992%" y="1519.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="21.1492%" y="1493" width="0.0123%" height="15" fill="rgb(246,218,30)" fg:x="3434" fg:w="2"/><text x="21.3992%" y="1503.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="21.1492%" y="1477" width="0.0123%" height="15" fill="rgb(219,145,47)" fg:x="3434" fg:w="2"/><text x="21.3992%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt; (6 samples, 0.04%)</title><rect x="21.1615%" y="1541" width="0.0370%" height="15" fill="rgb(243,12,26)" fg:x="3436" fg:w="6"/><text x="21.4115%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::send_request&lt;scylla::frame::request::query::Query&gt;::{{closure}}&gt;&gt; (8 samples, 0.05%)</title><rect x="21.1985%" y="1541" width="0.0493%" height="15" fill="rgb(214,87,16)" fg:x="3442" fg:w="8"/><text x="21.4485%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::connection::Connection::send_request&lt;scylla::frame::request::query::Query&gt;::{{closure}}&gt; (4 samples, 0.02%)</title><rect x="21.2231%" y="1525" width="0.0246%" height="15" fill="rgb(208,99,42)" fg:x="3446" fg:w="4"/><text x="21.4731%" y="1535.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="22.4857%" y="1365" width="0.0123%" height="15" fill="rgb(253,99,2)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1375.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="22.4857%" y="1349" width="0.0123%" height="15" fill="rgb(220,168,23)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1359.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="22.4857%" y="1333" width="0.0123%" height="15" fill="rgb(242,38,24)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1343.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="22.4857%" y="1317" width="0.0123%" height="15" fill="rgb(225,182,9)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1327.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="22.4857%" y="1301" width="0.0123%" height="15" fill="rgb(243,178,37)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1311.50"></text></g><g><title>task_tick_fair (2 samples, 0.01%)</title><rect x="22.4857%" y="1285" width="0.0123%" height="15" fill="rgb(232,139,19)" fg:x="3651" fg:w="2"/><text x="22.7357%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (204 samples, 1.26%)</title><rect x="21.2478%" y="1525" width="1.2564%" height="15" fill="rgb(225,201,24)" fg:x="3450" fg:w="204"/><text x="21.4978%" y="1535.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (204 samples, 1.26%)</title><rect x="21.2478%" y="1509" width="1.2564%" height="15" fill="rgb(221,47,46)" fg:x="3450" fg:w="204"/><text x="21.4978%" y="1519.50"></text></g><g><title>bytes::bytes::shared_drop (78 samples, 0.48%)</title><rect x="22.0238%" y="1493" width="0.4804%" height="15" fill="rgb(249,23,13)" fg:x="3576" fg:w="78"/><text x="22.2738%" y="1503.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (78 samples, 0.48%)</title><rect x="22.0238%" y="1477" width="0.4804%" height="15" fill="rgb(219,9,5)" fg:x="3576" fg:w="78"/><text x="22.2738%" y="1487.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (78 samples, 0.48%)</title><rect x="22.0238%" y="1461" width="0.4804%" height="15" fill="rgb(254,171,16)" fg:x="3576" fg:w="78"/><text x="22.2738%" y="1471.50"></text></g><g><title>bytes::bytes::release_shared (72 samples, 0.44%)</title><rect x="22.0607%" y="1445" width="0.4434%" height="15" fill="rgb(230,171,20)" fg:x="3582" fg:w="72"/><text x="22.3107%" y="1455.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="22.4857%" y="1429" width="0.0185%" height="15" fill="rgb(210,71,41)" fg:x="3651" fg:w="3"/><text x="22.7357%" y="1439.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="22.4857%" y="1413" width="0.0185%" height="15" fill="rgb(206,173,20)" fg:x="3651" fg:w="3"/><text x="22.7357%" y="1423.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="22.4857%" y="1397" width="0.0185%" height="15" fill="rgb(233,88,34)" fg:x="3651" fg:w="3"/><text x="22.7357%" y="1407.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="22.4857%" y="1381" width="0.0185%" height="15" fill="rgb(223,209,46)" fg:x="3651" fg:w="3"/><text x="22.7357%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::request::execute::Execute&gt; (216 samples, 1.33%)</title><rect x="21.2478%" y="1541" width="1.3303%" height="15" fill="rgb(250,43,18)" fg:x="3450" fg:w="216"/><text x="21.4978%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::request::query::QueryParameters&gt; (12 samples, 0.07%)</title><rect x="22.5042%" y="1525" width="0.0739%" height="15" fill="rgb(208,13,10)" fg:x="3654" fg:w="12"/><text x="22.7542%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (12 samples, 0.07%)</title><rect x="22.5042%" y="1509" width="0.0739%" height="15" fill="rgb(212,200,36)" fg:x="3654" fg:w="12"/><text x="22.7542%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.01%)</title><rect x="22.5781%" y="1525" width="0.0123%" height="15" fill="rgb(225,90,30)" fg:x="3666" fg:w="2"/><text x="22.8281%" y="1535.50"></text></g><g><title>scylla::statement::StatementConfig::determine_consistency (4 samples, 0.02%)</title><rect x="22.5781%" y="1541" width="0.0246%" height="15" fill="rgb(236,182,39)" fg:x="3666" fg:w="4"/><text x="22.8281%" y="1551.50"></text></g><g><title>scylla::statement::StatementConfig::determine_consistency (2 samples, 0.01%)</title><rect x="22.5904%" y="1525" width="0.0123%" height="15" fill="rgb(212,144,35)" fg:x="3668" fg:w="2"/><text x="22.8404%" y="1535.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_id (6 samples, 0.04%)</title><rect x="22.6027%" y="1541" width="0.0370%" height="15" fill="rgb(228,63,44)" fg:x="3670" fg:w="6"/><text x="22.8527%" y="1551.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_page_size (12 samples, 0.07%)</title><rect x="22.6397%" y="1541" width="0.0739%" height="15" fill="rgb(228,109,6)" fg:x="3676" fg:w="12"/><text x="22.8897%" y="1551.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (889 samples, 5.48%)</title><rect x="17.2569%" y="1637" width="5.4751%" height="15" fill="rgb(238,117,24)" fg:x="2802" fg:w="889"/><text x="17.5069%" y="1647.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (889 samples, 5.48%)</title><rect x="17.2569%" y="1621" width="5.4751%" height="15" fill="rgb(242,26,26)" fg:x="2802" fg:w="889"/><text x="17.5069%" y="1631.50">scylla:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (889 samples, 5.48%)</title><rect x="17.2569%" y="1605" width="5.4751%" height="15" fill="rgb(221,92,48)" fg:x="2802" fg:w="889"/><text x="17.5069%" y="1615.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (889 samples, 5.48%)</title><rect x="17.2569%" y="1589" width="5.4751%" height="15" fill="rgb(209,209,32)" fg:x="2802" fg:w="889"/><text x="17.5069%" y="1599.50">scylla:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (889 samples, 5.48%)</title><rect x="17.2569%" y="1573" width="5.4751%" height="15" fill="rgb(221,70,22)" fg:x="2802" fg:w="889"/><text x="17.5069%" y="1583.50">&lt;core::..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (857 samples, 5.28%)</title><rect x="17.4540%" y="1557" width="5.2781%" height="15" fill="rgb(248,145,5)" fg:x="2834" fg:w="857"/><text x="17.7040%" y="1567.50">scylla..</text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_serial_consistency (3 samples, 0.02%)</title><rect x="22.7136%" y="1541" width="0.0185%" height="15" fill="rgb(226,116,26)" fg:x="3688" fg:w="3"/><text x="22.9636%" y="1551.50"></text></g><g><title>core::mem::swap (5 samples, 0.03%)</title><rect x="22.7936%" y="1461" width="0.0308%" height="15" fill="rgb(244,5,17)" fg:x="3701" fg:w="5"/><text x="23.0436%" y="1471.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.03%)</title><rect x="22.7936%" y="1445" width="0.0308%" height="15" fill="rgb(252,159,33)" fg:x="3701" fg:w="5"/><text x="23.0436%" y="1455.50"></text></g><g><title>core::ptr::swap_nonoverlapping (5 samples, 0.03%)</title><rect x="22.7936%" y="1429" width="0.0308%" height="15" fill="rgb(206,71,0)" fg:x="3701" fg:w="5"/><text x="23.0436%" y="1439.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (5 samples, 0.03%)</title><rect x="22.7936%" y="1413" width="0.0308%" height="15" fill="rgb(233,118,54)" fg:x="3701" fg:w="5"/><text x="23.0436%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="22.7936%" y="1397" width="0.0308%" height="15" fill="rgb(234,83,48)" fg:x="3701" fg:w="5"/><text x="23.0436%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.02%)</title><rect x="22.8244%" y="1413" width="0.0185%" height="15" fill="rgb(228,3,54)" fg:x="3706" fg:w="3"/><text x="23.0744%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.03%)</title><rect x="22.8244%" y="1461" width="0.0308%" height="15" fill="rgb(226,155,13)" fg:x="3706" fg:w="5"/><text x="23.0744%" y="1471.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5 samples, 0.03%)</title><rect x="22.8244%" y="1445" width="0.0308%" height="15" fill="rgb(241,28,37)" fg:x="3706" fg:w="5"/><text x="23.0744%" y="1455.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (5 samples, 0.03%)</title><rect x="22.8244%" y="1429" width="0.0308%" height="15" fill="rgb(233,93,10)" fg:x="3706" fg:w="5"/><text x="23.0744%" y="1439.50"></text></g><g><title>__memset_avx2_unaligned (4 samples, 0.02%)</title><rect x="22.8675%" y="1397" width="0.0246%" height="15" fill="rgb(225,113,19)" fg:x="3713" fg:w="4"/><text x="23.1175%" y="1407.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (10 samples, 0.06%)</title><rect x="22.8614%" y="1429" width="0.0616%" height="15" fill="rgb(241,2,18)" fg:x="3712" fg:w="10"/><text x="23.1114%" y="1439.50"></text></g><g><title>core::intrinsics::write_bytes (10 samples, 0.06%)</title><rect x="22.8614%" y="1413" width="0.0616%" height="15" fill="rgb(228,207,21)" fg:x="3712" fg:w="10"/><text x="23.1114%" y="1423.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.03%)</title><rect x="22.8922%" y="1397" width="0.0308%" height="15" fill="rgb(213,211,35)" fg:x="3717" fg:w="5"/><text x="23.1422%" y="1407.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.01%)</title><rect x="22.9353%" y="1413" width="0.0123%" height="15" fill="rgb(209,83,10)" fg:x="3724" fg:w="2"/><text x="23.1853%" y="1423.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.15%)</title><rect x="22.9537%" y="1349" width="0.1540%" height="15" fill="rgb(209,164,1)" fg:x="3727" fg:w="25"/><text x="23.2037%" y="1359.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="23.1077%" y="1349" width="0.0123%" height="15" fill="rgb(213,184,43)" fg:x="3752" fg:w="2"/><text x="23.3577%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (62 samples, 0.38%)</title><rect x="22.7505%" y="1477" width="0.3818%" height="15" fill="rgb(231,61,34)" fg:x="3694" fg:w="62"/><text x="23.0005%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (45 samples, 0.28%)</title><rect x="22.8552%" y="1461" width="0.2771%" height="15" fill="rgb(235,75,3)" fg:x="3711" fg:w="45"/><text x="23.1052%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (44 samples, 0.27%)</title><rect x="22.8614%" y="1445" width="0.2710%" height="15" fill="rgb(220,106,47)" fg:x="3712" fg:w="44"/><text x="23.1114%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (33 samples, 0.20%)</title><rect x="22.9291%" y="1429" width="0.2032%" height="15" fill="rgb(210,196,33)" fg:x="3723" fg:w="33"/><text x="23.1791%" y="1439.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (30 samples, 0.18%)</title><rect x="22.9476%" y="1413" width="0.1848%" height="15" fill="rgb(229,154,42)" fg:x="3726" fg:w="30"/><text x="23.1976%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.18%)</title><rect x="22.9476%" y="1397" width="0.1848%" height="15" fill="rgb(228,114,26)" fg:x="3726" fg:w="30"/><text x="23.1976%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.18%)</title><rect x="22.9476%" y="1381" width="0.1848%" height="15" fill="rgb(208,144,1)" fg:x="3726" fg:w="30"/><text x="23.1976%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.18%)</title><rect x="22.9476%" y="1365" width="0.1848%" height="15" fill="rgb(239,112,37)" fg:x="3726" fg:w="30"/><text x="23.1976%" y="1375.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="23.1200%" y="1349" width="0.0123%" height="15" fill="rgb(210,96,50)" fg:x="3754" fg:w="2"/><text x="23.3700%" y="1359.50"></text></g><g><title>latte::req_stream::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1909" width="5.8878%" height="15" fill="rgb(222,178,2)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1919.50">latte::..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1893" width="5.8878%" height="15" fill="rgb(226,74,18)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1903.50">&lt;future..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (956 samples, 5.89%)</title><rect x="17.2569%" y="1877" width="5.8878%" height="15" fill="rgb(225,67,54)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1887.50">futures..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (956 samples, 5.89%)</title><rect x="17.2569%" y="1861" width="5.8878%" height="15" fill="rgb(251,92,32)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1871.50">&lt;future..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (956 samples, 5.89%)</title><rect x="17.2569%" y="1845" width="5.8878%" height="15" fill="rgb(228,149,22)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1855.50">futures..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (956 samples, 5.89%)</title><rect x="17.2569%" y="1829" width="5.8878%" height="15" fill="rgb(243,54,13)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1839.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1813" width="5.8878%" height="15" fill="rgb(243,180,28)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1823.50">&lt;core::..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1797" width="5.8878%" height="15" fill="rgb(208,167,24)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1807.50">latte::..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1781" width="5.8878%" height="15" fill="rgb(245,73,45)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1791.50">&lt;core::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1765" width="5.8878%" height="15" fill="rgb(237,203,48)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1775.50">&lt;core::..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1749" width="5.8878%" height="15" fill="rgb(211,197,16)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1759.50">&lt;latte:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1733" width="5.8878%" height="15" fill="rgb(243,99,51)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1743.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1717" width="5.8878%" height="15" fill="rgb(215,123,29)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1727.50">scylla:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1701" width="5.8878%" height="15" fill="rgb(239,186,37)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1711.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1685" width="5.8878%" height="15" fill="rgb(252,136,39)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1695.50">scylla:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (956 samples, 5.89%)</title><rect x="17.2569%" y="1669" width="5.8878%" height="15" fill="rgb(223,213,32)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1679.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (956 samples, 5.89%)</title><rect x="17.2569%" y="1653" width="5.8878%" height="15" fill="rgb(233,115,5)" fg:x="2802" fg:w="956"/><text x="17.5069%" y="1663.50">scylla:..</text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (67 samples, 0.41%)</title><rect x="22.7320%" y="1637" width="0.4126%" height="15" fill="rgb(207,226,44)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67 samples, 0.41%)</title><rect x="22.7320%" y="1621" width="0.4126%" height="15" fill="rgb(208,126,0)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (67 samples, 0.41%)</title><rect x="22.7320%" y="1605" width="0.4126%" height="15" fill="rgb(244,66,21)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.41%)</title><rect x="22.7320%" y="1589" width="0.4126%" height="15" fill="rgb(222,97,12)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1599.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.41%)</title><rect x="22.7320%" y="1573" width="0.4126%" height="15" fill="rgb(219,213,19)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1583.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (67 samples, 0.41%)</title><rect x="22.7320%" y="1557" width="0.4126%" height="15" fill="rgb(252,169,30)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1567.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (67 samples, 0.41%)</title><rect x="22.7320%" y="1541" width="0.4126%" height="15" fill="rgb(206,32,51)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1551.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (67 samples, 0.41%)</title><rect x="22.7320%" y="1525" width="0.4126%" height="15" fill="rgb(250,172,42)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (67 samples, 0.41%)</title><rect x="22.7320%" y="1509" width="0.4126%" height="15" fill="rgb(209,34,43)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (67 samples, 0.41%)</title><rect x="22.7320%" y="1493" width="0.4126%" height="15" fill="rgb(223,11,35)" fg:x="3691" fg:w="67"/><text x="22.9820%" y="1503.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (2 samples, 0.01%)</title><rect x="23.1324%" y="1477" width="0.0123%" height="15" fill="rgb(251,219,26)" fg:x="3756" fg:w="2"/><text x="23.3824%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.09%)</title><rect x="23.2986%" y="1669" width="0.0924%" height="15" fill="rgb(231,119,3)" fg:x="3783" fg:w="15"/><text x="23.5486%" y="1679.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="23.1693%" y="1797" width="0.8745%" height="15" fill="rgb(216,97,11)" fg:x="3762" fg:w="142"/><text x="23.4193%" y="1807.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (131 samples, 0.81%)</title><rect x="23.2371%" y="1781" width="0.8068%" height="15" fill="rgb(223,59,9)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1791.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (131 samples, 0.81%)</title><rect x="23.2371%" y="1765" width="0.8068%" height="15" fill="rgb(233,93,31)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1775.50"></text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (131 samples, 0.81%)</title><rect x="23.2371%" y="1749" width="0.8068%" height="15" fill="rgb(239,81,33)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1759.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (131 samples, 0.81%)</title><rect x="23.2371%" y="1733" width="0.8068%" height="15" fill="rgb(213,120,34)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1743.50"></text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (131 samples, 0.81%)</title><rect x="23.2371%" y="1717" width="0.8068%" height="15" fill="rgb(243,49,53)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1727.50"></text></g><g><title>scylla::transport::connection::Connection::parse_response (131 samples, 0.81%)</title><rect x="23.2371%" y="1701" width="0.8068%" height="15" fill="rgb(247,216,33)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1711.50"></text></g><g><title>scylla::frame::response::Response::deserialize (131 samples, 0.81%)</title><rect x="23.2371%" y="1685" width="0.8068%" height="15" fill="rgb(226,26,14)" fg:x="3773" fg:w="131"/><text x="23.4871%" y="1695.50"></text></g><g><title>scylla::frame::response::result::deserialize (106 samples, 0.65%)</title><rect x="23.3910%" y="1669" width="0.6528%" height="15" fill="rgb(215,49,53)" fg:x="3798" fg:w="106"/><text x="23.6410%" y="1679.50"></text></g><g><title>scylla::frame::types::read_int (88 samples, 0.54%)</title><rect x="23.5019%" y="1653" width="0.5420%" height="15" fill="rgb(245,162,40)" fg:x="3816" fg:w="88"/><text x="23.7519%" y="1663.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i32 (88 samples, 0.54%)</title><rect x="23.5019%" y="1637" width="0.5420%" height="15" fill="rgb(229,68,17)" fg:x="3816" fg:w="88"/><text x="23.7519%" y="1647.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (88 samples, 0.54%)</title><rect x="23.5019%" y="1621" width="0.5420%" height="15" fill="rgb(213,182,10)" fg:x="3816" fg:w="88"/><text x="23.7519%" y="1631.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 0.88%)</title><rect x="23.1693%" y="1829" width="0.8807%" height="15" fill="rgb(245,125,30)" fg:x="3762" fg:w="143"/><text x="23.4193%" y="1839.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (143 samples, 0.88%)</title><rect x="23.1693%" y="1813" width="0.8807%" height="15" fill="rgb(232,202,2)" fg:x="3762" fg:w="143"/><text x="23.4193%" y="1823.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.91%)</title><rect x="23.1508%" y="1861" width="0.9053%" height="15" fill="rgb(237,140,51)" fg:x="3759" fg:w="147"/><text x="23.4008%" y="1871.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (144 samples, 0.89%)</title><rect x="23.1693%" y="1845" width="0.8869%" height="15" fill="rgb(236,157,25)" fg:x="3762" fg:w="144"/><text x="23.4193%" y="1855.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,720 samples, 22.91%)</title><rect x="1.1517%" y="1925" width="22.9106%" height="15" fill="rgb(219,209,0)" fg:x="187" fg:w="3720"/><text x="1.4017%" y="1935.50">&lt;core::future::from_generator::GenFu..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (148 samples, 0.91%)</title><rect x="23.1508%" y="1909" width="0.9115%" height="15" fill="rgb(240,116,54)" fg:x="3759" fg:w="148"/><text x="23.4008%" y="1919.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (148 samples, 0.91%)</title><rect x="23.1508%" y="1893" width="0.9115%" height="15" fill="rgb(216,10,36)" fg:x="3759" fg:w="148"/><text x="23.4008%" y="1903.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (148 samples, 0.91%)</title><rect x="23.1508%" y="1877" width="0.9115%" height="15" fill="rgb(222,72,44)" fg:x="3759" fg:w="148"/><text x="23.4008%" y="1887.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="24.0623%" y="1925" width="0.0185%" height="15" fill="rgb(232,159,9)" fg:x="3907" fg:w="3"/><text x="24.3123%" y="1935.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="24.0685%" y="1909" width="0.0123%" height="15" fill="rgb(210,39,32)" fg:x="3908" fg:w="2"/><text x="24.3185%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="24.0685%" y="1893" width="0.0123%" height="15" fill="rgb(216,194,45)" fg:x="3908" fg:w="2"/><text x="24.3185%" y="1903.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="24.0685%" y="1877" width="0.0123%" height="15" fill="rgb(218,18,35)" fg:x="3908" fg:w="2"/><text x="24.3185%" y="1887.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="24.0685%" y="1861" width="0.0123%" height="15" fill="rgb(207,83,51)" fg:x="3908" fg:w="2"/><text x="24.3185%" y="1871.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="24.0685%" y="1845" width="0.0123%" height="15" fill="rgb(225,63,43)" fg:x="3908" fg:w="2"/><text x="24.3185%" y="1855.50"></text></g><g><title>__perf_event_task_sched_in (13 samples, 0.08%)</title><rect x="24.3025%" y="1381" width="0.0801%" height="15" fill="rgb(207,57,36)" fg:x="3946" fg:w="13"/><text x="24.5525%" y="1391.50"></text></g><g><title>x86_pmu_enable_all (7 samples, 0.04%)</title><rect x="24.3395%" y="1365" width="0.0431%" height="15" fill="rgb(216,99,33)" fg:x="3952" fg:w="7"/><text x="24.5895%" y="1375.50"></text></g><g><title>native_write_msr (7 samples, 0.04%)</title><rect x="24.3395%" y="1349" width="0.0431%" height="15" fill="rgb(225,42,16)" fg:x="3952" fg:w="7"/><text x="24.5895%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (49 samples, 0.30%)</title><rect x="24.0870%" y="1685" width="0.3018%" height="15" fill="rgb(220,201,45)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1695.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (49 samples, 0.30%)</title><rect x="24.0870%" y="1669" width="0.3018%" height="15" fill="rgb(225,33,4)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1679.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (49 samples, 0.30%)</title><rect x="24.0870%" y="1653" width="0.3018%" height="15" fill="rgb(224,33,50)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1663.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (49 samples, 0.30%)</title><rect x="24.0870%" y="1637" width="0.3018%" height="15" fill="rgb(246,198,51)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1647.50"></text></g><g><title>parking_lot_core::parking_lot::park (49 samples, 0.30%)</title><rect x="24.0870%" y="1621" width="0.3018%" height="15" fill="rgb(205,22,4)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1631.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (49 samples, 0.30%)</title><rect x="24.0870%" y="1605" width="0.3018%" height="15" fill="rgb(206,3,8)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1615.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (49 samples, 0.30%)</title><rect x="24.0870%" y="1589" width="0.3018%" height="15" fill="rgb(251,23,15)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1599.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (49 samples, 0.30%)</title><rect x="24.0870%" y="1573" width="0.3018%" height="15" fill="rgb(252,88,28)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1583.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (49 samples, 0.30%)</title><rect x="24.0870%" y="1557" width="0.3018%" height="15" fill="rgb(212,127,14)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1567.50"></text></g><g><title>syscall (49 samples, 0.30%)</title><rect x="24.0870%" y="1541" width="0.3018%" height="15" fill="rgb(247,145,37)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1551.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (49 samples, 0.30%)</title><rect x="24.0870%" y="1525" width="0.3018%" height="15" fill="rgb(209,117,53)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1535.50"></text></g><g><title>do_syscall_64 (49 samples, 0.30%)</title><rect x="24.0870%" y="1509" width="0.3018%" height="15" fill="rgb(212,90,42)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1519.50"></text></g><g><title>__x64_sys_futex (49 samples, 0.30%)</title><rect x="24.0870%" y="1493" width="0.3018%" height="15" fill="rgb(218,164,37)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1503.50"></text></g><g><title>do_futex (49 samples, 0.30%)</title><rect x="24.0870%" y="1477" width="0.3018%" height="15" fill="rgb(246,65,34)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1487.50"></text></g><g><title>futex_wait (49 samples, 0.30%)</title><rect x="24.0870%" y="1461" width="0.3018%" height="15" fill="rgb(231,100,33)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1471.50"></text></g><g><title>futex_wait_queue_me (49 samples, 0.30%)</title><rect x="24.0870%" y="1445" width="0.3018%" height="15" fill="rgb(228,126,14)" fg:x="3911" fg:w="49"/><text x="24.3370%" y="1455.50"></text></g><g><title>schedule (36 samples, 0.22%)</title><rect x="24.1670%" y="1429" width="0.2217%" height="15" fill="rgb(215,173,21)" fg:x="3924" fg:w="36"/><text x="24.4170%" y="1439.50"></text></g><g><title>__schedule (29 samples, 0.18%)</title><rect x="24.2101%" y="1413" width="0.1786%" height="15" fill="rgb(210,6,40)" fg:x="3931" fg:w="29"/><text x="24.4601%" y="1423.50"></text></g><g><title>finish_task_switch.isra.0 (21 samples, 0.13%)</title><rect x="24.2594%" y="1397" width="0.1293%" height="15" fill="rgb(212,48,18)" fg:x="3939" fg:w="21"/><text x="24.5094%" y="1407.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (2 samples, 0.01%)</title><rect x="24.4565%" y="1333" width="0.0123%" height="15" fill="rgb(230,214,11)" fg:x="3971" fg:w="2"/><text x="24.7065%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="24.4811%" y="1317" width="0.0123%" height="15" fill="rgb(254,105,39)" fg:x="3975" fg:w="2"/><text x="24.7311%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.02%)</title><rect x="24.4934%" y="1317" width="0.0246%" height="15" fill="rgb(245,158,5)" fg:x="3977" fg:w="4"/><text x="24.7434%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="24.4934%" y="1301" width="0.0246%" height="15" fill="rgb(249,208,11)" fg:x="3977" fg:w="4"/><text x="24.7434%" y="1311.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.01%)</title><rect x="24.5304%" y="1221" width="0.0123%" height="15" fill="rgb(210,39,28)" fg:x="3983" fg:w="2"/><text x="24.7804%" y="1231.50"></text></g><g><title>__cond_resched (7 samples, 0.04%)</title><rect x="24.9553%" y="1061" width="0.0431%" height="15" fill="rgb(211,56,53)" fg:x="4052" fg:w="7"/><text x="25.2053%" y="1071.50"></text></g><g><title>rcu_all_qs (7 samples, 0.04%)</title><rect x="24.9553%" y="1045" width="0.0431%" height="15" fill="rgb(226,201,30)" fg:x="4052" fg:w="7"/><text x="25.2053%" y="1055.50"></text></g><g><title>amd_pmu_addr_offset (2 samples, 0.01%)</title><rect x="25.0724%" y="981" width="0.0123%" height="15" fill="rgb(239,101,34)" fg:x="4071" fg:w="2"/><text x="25.3224%" y="991.50"></text></g><g><title>native_read_msr (6 samples, 0.04%)</title><rect x="25.0847%" y="981" width="0.0370%" height="15" fill="rgb(226,209,5)" fg:x="4073" fg:w="6"/><text x="25.3347%" y="991.50"></text></g><g><title>__perf_event_task_sched_out (20 samples, 0.12%)</title><rect x="25.0354%" y="1029" width="0.1232%" height="15" fill="rgb(250,105,47)" fg:x="4065" fg:w="20"/><text x="25.2854%" y="1039.50"></text></g><g><title>amd_pmu_disable_all (17 samples, 0.10%)</title><rect x="25.0539%" y="1013" width="0.1047%" height="15" fill="rgb(230,72,3)" fg:x="4068" fg:w="17"/><text x="25.3039%" y="1023.50"></text></g><g><title>x86_pmu_disable_all (17 samples, 0.10%)</title><rect x="25.0539%" y="997" width="0.1047%" height="15" fill="rgb(232,218,39)" fg:x="4068" fg:w="17"/><text x="25.3039%" y="1007.50"></text></g><g><title>native_write_msr (6 samples, 0.04%)</title><rect x="25.1216%" y="981" width="0.0370%" height="15" fill="rgb(248,166,6)" fg:x="4079" fg:w="6"/><text x="25.3716%" y="991.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="25.1586%" y="1029" width="0.0123%" height="15" fill="rgb(247,89,20)" fg:x="4085" fg:w="2"/><text x="25.4086%" y="1039.50"></text></g><g><title>reweight_entity (3 samples, 0.02%)</title><rect x="25.1832%" y="997" width="0.0185%" height="15" fill="rgb(248,130,54)" fg:x="4089" fg:w="3"/><text x="25.4332%" y="1007.50"></text></g><g><title>update_cfs_group (4 samples, 0.02%)</title><rect x="25.2017%" y="997" width="0.0246%" height="15" fill="rgb(234,196,4)" fg:x="4092" fg:w="4"/><text x="25.4517%" y="1007.50"></text></g><g><title>__calc_delta (2 samples, 0.01%)</title><rect x="25.2325%" y="981" width="0.0123%" height="15" fill="rgb(250,143,31)" fg:x="4097" fg:w="2"/><text x="25.4825%" y="991.50"></text></g><g><title>update_curr (6 samples, 0.04%)</title><rect x="25.2263%" y="997" width="0.0370%" height="15" fill="rgb(211,110,34)" fg:x="4096" fg:w="6"/><text x="25.4763%" y="1007.50"></text></g><g><title>cpuacct_charge (3 samples, 0.02%)</title><rect x="25.2448%" y="981" width="0.0185%" height="15" fill="rgb(215,124,48)" fg:x="4099" fg:w="3"/><text x="25.4948%" y="991.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.02%)</title><rect x="25.2694%" y="981" width="0.0185%" height="15" fill="rgb(216,46,13)" fg:x="4103" fg:w="3"/><text x="25.5194%" y="991.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.01%)</title><rect x="25.2879%" y="981" width="0.0123%" height="15" fill="rgb(205,184,25)" fg:x="4106" fg:w="2"/><text x="25.5379%" y="991.50"></text></g><g><title>dequeue_entity (21 samples, 0.13%)</title><rect x="25.1771%" y="1013" width="0.1293%" height="15" fill="rgb(228,1,10)" fg:x="4088" fg:w="21"/><text x="25.4271%" y="1023.50"></text></g><g><title>update_load_avg (7 samples, 0.04%)</title><rect x="25.2633%" y="997" width="0.0431%" height="15" fill="rgb(213,116,27)" fg:x="4102" fg:w="7"/><text x="25.5133%" y="1007.50"></text></g><g><title>dequeue_task_fair (24 samples, 0.15%)</title><rect x="25.1709%" y="1029" width="0.1478%" height="15" fill="rgb(241,95,50)" fg:x="4087" fg:w="24"/><text x="25.4209%" y="1039.50"></text></g><g><title>update_cfs_group (2 samples, 0.01%)</title><rect x="25.3064%" y="1013" width="0.0123%" height="15" fill="rgb(238,48,32)" fg:x="4109" fg:w="2"/><text x="25.5564%" y="1023.50"></text></g><g><title>__perf_event_task_sched_in (116 samples, 0.71%)</title><rect x="25.9654%" y="1013" width="0.7144%" height="15" fill="rgb(235,113,49)" fg:x="4216" fg:w="116"/><text x="26.2154%" y="1023.50"></text></g><g><title>x86_pmu_enable_all (87 samples, 0.54%)</title><rect x="26.1440%" y="997" width="0.5358%" height="15" fill="rgb(205,127,43)" fg:x="4245" fg:w="87"/><text x="26.3940%" y="1007.50"></text></g><g><title>native_write_msr (22 samples, 0.14%)</title><rect x="26.5443%" y="981" width="0.1355%" height="15" fill="rgb(250,162,2)" fg:x="4310" fg:w="22"/><text x="26.7943%" y="991.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="26.6798%" y="1013" width="0.0123%" height="15" fill="rgb(220,13,41)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="1023.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="26.6798%" y="997" width="0.0123%" height="15" fill="rgb(249,221,25)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="1007.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="26.6798%" y="981" width="0.0123%" height="15" fill="rgb(215,208,19)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="991.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="26.6798%" y="965" width="0.0123%" height="15" fill="rgb(236,175,2)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="975.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="26.6798%" y="949" width="0.0123%" height="15" fill="rgb(241,52,2)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="959.50"></text></g><g><title>hrtimer_wakeup (2 samples, 0.01%)</title><rect x="26.6798%" y="933" width="0.0123%" height="15" fill="rgb(248,140,14)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="943.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="26.6798%" y="917" width="0.0123%" height="15" fill="rgb(253,22,42)" fg:x="4332" fg:w="2"/><text x="26.9298%" y="927.50"></text></g><g><title>finish_task_switch.isra.0 (224 samples, 1.38%)</title><rect x="25.3187%" y="1029" width="1.3796%" height="15" fill="rgb(234,61,47)" fg:x="4111" fg:w="224"/><text x="25.5687%" y="1039.50"></text></g><g><title>newidle_balance (3 samples, 0.02%)</title><rect x="26.6983%" y="1013" width="0.0185%" height="15" fill="rgb(208,226,15)" fg:x="4335" fg:w="3"/><text x="26.9483%" y="1023.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.02%)</title><rect x="26.6983%" y="1029" width="0.0246%" height="15" fill="rgb(217,221,4)" fg:x="4335" fg:w="4"/><text x="26.9483%" y="1039.50"></text></g><g><title>pick_next_task_idle (2 samples, 0.01%)</title><rect x="26.7229%" y="1029" width="0.0123%" height="15" fill="rgb(212,174,34)" fg:x="4339" fg:w="2"/><text x="26.9729%" y="1039.50"></text></g><g><title>__update_idle_core (2 samples, 0.01%)</title><rect x="26.7229%" y="1013" width="0.0123%" height="15" fill="rgb(253,83,4)" fg:x="4339" fg:w="2"/><text x="26.9729%" y="1023.50"></text></g><g><title>psi_group_change (8 samples, 0.05%)</title><rect x="26.7537%" y="1013" width="0.0493%" height="15" fill="rgb(250,195,49)" fg:x="4344" fg:w="8"/><text x="27.0037%" y="1023.50"></text></g><g><title>psi_task_switch (12 samples, 0.07%)</title><rect x="26.7352%" y="1029" width="0.0739%" height="15" fill="rgb(241,192,25)" fg:x="4341" fg:w="12"/><text x="26.9852%" y="1039.50"></text></g><g><title>futex_wait_queue_me (353 samples, 2.17%)</title><rect x="24.6413%" y="1077" width="2.1740%" height="15" fill="rgb(208,124,10)" fg:x="4001" fg:w="353"/><text x="24.8913%" y="1087.50">f..</text></g><g><title>schedule (294 samples, 1.81%)</title><rect x="25.0046%" y="1061" width="1.8107%" height="15" fill="rgb(222,33,0)" fg:x="4060" fg:w="294"/><text x="25.2546%" y="1071.50">s..</text></g><g><title>__schedule (291 samples, 1.79%)</title><rect x="25.0231%" y="1045" width="1.7922%" height="15" fill="rgb(234,209,28)" fg:x="4063" fg:w="291"/><text x="25.2731%" y="1055.50">_..</text></g><g><title>__x64_sys_futex (372 samples, 2.29%)</title><rect x="24.5797%" y="1125" width="2.2911%" height="15" fill="rgb(224,11,23)" fg:x="3991" fg:w="372"/><text x="24.8297%" y="1135.50">_..</text></g><g><title>do_futex (371 samples, 2.28%)</title><rect x="24.5858%" y="1109" width="2.2849%" height="15" fill="rgb(232,99,1)" fg:x="3992" fg:w="371"/><text x="24.8358%" y="1119.50">d..</text></g><g><title>futex_wait (367 samples, 2.26%)</title><rect x="24.6105%" y="1093" width="2.2603%" height="15" fill="rgb(237,95,45)" fg:x="3996" fg:w="367"/><text x="24.8605%" y="1103.50">f..</text></g><g><title>futex_wait_setup (9 samples, 0.06%)</title><rect x="26.8153%" y="1077" width="0.0554%" height="15" fill="rgb(208,109,11)" fg:x="4354" fg:w="9"/><text x="27.0653%" y="1087.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.02%)</title><rect x="26.8461%" y="1061" width="0.0246%" height="15" fill="rgb(216,190,48)" fg:x="4359" fg:w="4"/><text x="27.0961%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (380 samples, 2.34%)</title><rect x="24.5427%" y="1205" width="2.3403%" height="15" fill="rgb(251,171,36)" fg:x="3985" fg:w="380"/><text x="24.7927%" y="1215.50">&lt;..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (376 samples, 2.32%)</title><rect x="24.5673%" y="1189" width="2.3157%" height="15" fill="rgb(230,62,22)" fg:x="3989" fg:w="376"/><text x="24.8173%" y="1199.50">p..</text></g><g><title>syscall (376 samples, 2.32%)</title><rect x="24.5673%" y="1173" width="2.3157%" height="15" fill="rgb(225,114,35)" fg:x="3989" fg:w="376"/><text x="24.8173%" y="1183.50">s..</text></g><g><title>entry_SYSCALL_64_after_hwframe (376 samples, 2.32%)</title><rect x="24.5673%" y="1157" width="2.3157%" height="15" fill="rgb(215,118,42)" fg:x="3989" fg:w="376"/><text x="24.8173%" y="1167.50">e..</text></g><g><title>do_syscall_64 (375 samples, 2.31%)</title><rect x="24.5735%" y="1141" width="2.3095%" height="15" fill="rgb(243,119,21)" fg:x="3990" fg:w="375"/><text x="24.8235%" y="1151.50">d..</text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="26.8707%" y="1125" width="0.0123%" height="15" fill="rgb(252,177,53)" fg:x="4363" fg:w="2"/><text x="27.1207%" y="1135.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="26.8707%" y="1109" width="0.0123%" height="15" fill="rgb(237,209,29)" fg:x="4363" fg:w="2"/><text x="27.1207%" y="1119.50"></text></g><g><title>switch_fpu_return (2 samples, 0.01%)</title><rect x="26.8707%" y="1093" width="0.0123%" height="15" fill="rgb(212,65,23)" fg:x="4363" fg:w="2"/><text x="27.1207%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (382 samples, 2.35%)</title><rect x="24.5427%" y="1221" width="2.3527%" height="15" fill="rgb(230,222,46)" fg:x="3985" fg:w="382"/><text x="24.7927%" y="1231.50">p..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket (2 samples, 0.01%)</title><rect x="26.8830%" y="1205" width="0.0123%" height="15" fill="rgb(215,135,32)" fg:x="4365" fg:w="2"/><text x="27.1330%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (385 samples, 2.37%)</title><rect x="24.5304%" y="1301" width="2.3711%" height="15" fill="rgb(246,101,22)" fg:x="3983" fg:w="385"/><text x="24.7804%" y="1311.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait (385 samples, 2.37%)</title><rect x="24.5304%" y="1285" width="2.3711%" height="15" fill="rgb(206,107,13)" fg:x="3983" fg:w="385"/><text x="24.7804%" y="1295.50">pa..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (385 samples, 2.37%)</title><rect x="24.5304%" y="1269" width="2.3711%" height="15" fill="rgb(250,100,44)" fg:x="3983" fg:w="385"/><text x="24.7804%" y="1279.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park (385 samples, 2.37%)</title><rect x="24.5304%" y="1253" width="2.3711%" height="15" fill="rgb(231,147,38)" fg:x="3983" fg:w="385"/><text x="24.7804%" y="1263.50">pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (385 samples, 2.37%)</title><rect x="24.5304%" y="1237" width="2.3711%" height="15" fill="rgb(229,8,40)" fg:x="3983" fg:w="385"/><text x="24.7804%" y="1247.50">pa..</text></g><g><title>tokio::runtime::park::Inner::park_condvar (387 samples, 2.38%)</title><rect x="24.5242%" y="1317" width="2.3834%" height="15" fill="rgb(221,135,30)" fg:x="3982" fg:w="387"/><text x="24.7742%" y="1327.50">to..</text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="27.0801%" y="1221" width="0.0123%" height="15" fill="rgb(249,193,18)" fg:x="4397" fg:w="2"/><text x="27.3301%" y="1231.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="27.0924%" y="1221" width="0.0185%" height="15" fill="rgb(209,133,39)" fg:x="4399" fg:w="3"/><text x="27.3424%" y="1231.50"></text></g><g><title>mio::event::event::Event::token (2 samples, 0.01%)</title><rect x="27.1109%" y="1221" width="0.0123%" height="15" fill="rgb(232,100,14)" fg:x="4402" fg:w="2"/><text x="27.3609%" y="1231.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::token (2 samples, 0.01%)</title><rect x="27.1109%" y="1205" width="0.0123%" height="15" fill="rgb(224,185,1)" fg:x="4402" fg:w="2"/><text x="27.3609%" y="1215.50"></text></g><g><title>__entry_text_start (5 samples, 0.03%)</title><rect x="27.1848%" y="1173" width="0.0308%" height="15" fill="rgb(223,139,8)" fg:x="4414" fg:w="5"/><text x="27.4348%" y="1183.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="27.4312%" y="1109" width="0.0185%" height="15" fill="rgb(232,213,38)" fg:x="4454" fg:w="3"/><text x="27.6812%" y="1119.50"></text></g><g><title>__put_user_nocheck_4 (8 samples, 0.05%)</title><rect x="27.4497%" y="1109" width="0.0493%" height="15" fill="rgb(207,94,22)" fg:x="4457" fg:w="8"/><text x="27.6997%" y="1119.50"></text></g><g><title>ep_done_scan (3 samples, 0.02%)</title><rect x="27.5051%" y="1109" width="0.0185%" height="15" fill="rgb(219,183,54)" fg:x="4466" fg:w="3"/><text x="27.7551%" y="1119.50"></text></g><g><title>eventfd_poll (5 samples, 0.03%)</title><rect x="27.5420%" y="1093" width="0.0308%" height="15" fill="rgb(216,185,54)" fg:x="4472" fg:w="5"/><text x="27.7920%" y="1103.50"></text></g><g><title>ep_item_poll.isra.0 (37 samples, 0.23%)</title><rect x="27.5236%" y="1109" width="0.2279%" height="15" fill="rgb(254,217,39)" fg:x="4469" fg:w="37"/><text x="27.7736%" y="1119.50"></text></g><g><title>sock_poll (29 samples, 0.18%)</title><rect x="27.5728%" y="1093" width="0.1786%" height="15" fill="rgb(240,178,23)" fg:x="4477" fg:w="29"/><text x="27.8228%" y="1103.50"></text></g><g><title>tcp_poll (12 samples, 0.07%)</title><rect x="27.6775%" y="1077" width="0.0739%" height="15" fill="rgb(218,11,47)" fg:x="4494" fg:w="12"/><text x="27.9275%" y="1087.50"></text></g><g><title>mutex_lock (6 samples, 0.04%)</title><rect x="27.7576%" y="1109" width="0.0370%" height="15" fill="rgb(218,51,51)" fg:x="4507" fg:w="6"/><text x="28.0076%" y="1119.50"></text></g><g><title>hrtimer_active (15 samples, 0.09%)</title><rect x="28.1579%" y="1093" width="0.0924%" height="15" fill="rgb(238,126,27)" fg:x="4572" fg:w="15"/><text x="28.4079%" y="1103.50"></text></g><g><title>hrtimer_init_sleeper (3 samples, 0.02%)</title><rect x="28.2503%" y="1093" width="0.0185%" height="15" fill="rgb(249,202,22)" fg:x="4587" fg:w="3"/><text x="28.5003%" y="1103.50"></text></g><g><title>__hrtimer_init (3 samples, 0.02%)</title><rect x="28.2503%" y="1077" width="0.0185%" height="15" fill="rgb(254,195,49)" fg:x="4587" fg:w="3"/><text x="28.5003%" y="1087.50"></text></g><g><title>enqueue_hrtimer (3 samples, 0.02%)</title><rect x="28.2749%" y="1077" width="0.0185%" height="15" fill="rgb(208,123,14)" fg:x="4591" fg:w="3"/><text x="28.5249%" y="1087.50"></text></g><g><title>timerqueue_add (3 samples, 0.02%)</title><rect x="28.2749%" y="1061" width="0.0185%" height="15" fill="rgb(224,200,8)" fg:x="4591" fg:w="3"/><text x="28.5249%" y="1071.50"></text></g><g><title>hrtimer_start_range_ns (7 samples, 0.04%)</title><rect x="28.2688%" y="1093" width="0.0431%" height="15" fill="rgb(217,61,36)" fg:x="4590" fg:w="7"/><text x="28.5188%" y="1103.50"></text></g><g><title>get_nohz_timer_target (3 samples, 0.02%)</title><rect x="28.2934%" y="1077" width="0.0185%" height="15" fill="rgb(206,35,45)" fg:x="4594" fg:w="3"/><text x="28.5434%" y="1087.50"></text></g><g><title>__remove_hrtimer (2 samples, 0.01%)</title><rect x="28.3119%" y="1077" width="0.0123%" height="15" fill="rgb(217,65,33)" fg:x="4597" fg:w="2"/><text x="28.5619%" y="1087.50"></text></g><g><title>timerqueue_del (2 samples, 0.01%)</title><rect x="28.3119%" y="1061" width="0.0123%" height="15" fill="rgb(222,158,48)" fg:x="4597" fg:w="2"/><text x="28.5619%" y="1071.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (4 samples, 0.02%)</title><rect x="28.3119%" y="1093" width="0.0246%" height="15" fill="rgb(254,2,54)" fg:x="4597" fg:w="4"/><text x="28.5619%" y="1103.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.01%)</title><rect x="28.3242%" y="1077" width="0.0123%" height="15" fill="rgb(250,143,38)" fg:x="4599" fg:w="2"/><text x="28.5742%" y="1087.50"></text></g><g><title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="28.7122%" y="1029" width="0.0123%" height="15" fill="rgb(248,25,0)" fg:x="4662" fg:w="2"/><text x="28.9622%" y="1039.50"></text></g><g><title>amd_pmu_addr_offset (2 samples, 0.01%)</title><rect x="28.7676%" y="1013" width="0.0123%" height="15" fill="rgb(206,152,27)" fg:x="4671" fg:w="2"/><text x="29.0176%" y="1023.50"></text></g><g><title>native_read_msr (16 samples, 0.10%)</title><rect x="28.7799%" y="1013" width="0.0985%" height="15" fill="rgb(240,77,30)" fg:x="4673" fg:w="16"/><text x="29.0299%" y="1023.50"></text></g><g><title>amd_pmu_disable_all (51 samples, 0.31%)</title><rect x="28.7060%" y="1045" width="0.3141%" height="15" fill="rgb(231,5,3)" fg:x="4661" fg:w="51"/><text x="28.9560%" y="1055.50"></text></g><g><title>x86_pmu_disable_all (48 samples, 0.30%)</title><rect x="28.7245%" y="1029" width="0.2956%" height="15" fill="rgb(207,226,32)" fg:x="4664" fg:w="48"/><text x="28.9745%" y="1039.50"></text></g><g><title>native_write_msr (23 samples, 0.14%)</title><rect x="28.8785%" y="1013" width="0.1417%" height="15" fill="rgb(222,207,47)" fg:x="4689" fg:w="23"/><text x="29.1285%" y="1023.50"></text></g><g><title>__perf_event_task_sched_out (56 samples, 0.34%)</title><rect x="28.6937%" y="1061" width="0.3449%" height="15" fill="rgb(229,115,45)" fg:x="4659" fg:w="56"/><text x="28.9437%" y="1071.50"></text></g><g><title>x86_pmu_disable (3 samples, 0.02%)</title><rect x="29.0201%" y="1045" width="0.0185%" height="15" fill="rgb(224,191,6)" fg:x="4712" fg:w="3"/><text x="29.2701%" y="1055.50"></text></g><g><title>update_cfs_group (4 samples, 0.02%)</title><rect x="29.1187%" y="1029" width="0.0246%" height="15" fill="rgb(230,227,24)" fg:x="4728" fg:w="4"/><text x="29.3687%" y="1039.50"></text></g><g><title>__calc_delta (5 samples, 0.03%)</title><rect x="29.1803%" y="1013" width="0.0308%" height="15" fill="rgb(228,80,19)" fg:x="4738" fg:w="5"/><text x="29.4303%" y="1023.50"></text></g><g><title>update_curr (24 samples, 0.15%)</title><rect x="29.1433%" y="1029" width="0.1478%" height="15" fill="rgb(247,229,0)" fg:x="4732" fg:w="24"/><text x="29.3933%" y="1039.50"></text></g><g><title>cpuacct_charge (13 samples, 0.08%)</title><rect x="29.2111%" y="1013" width="0.0801%" height="15" fill="rgb(237,194,15)" fg:x="4743" fg:w="13"/><text x="29.4611%" y="1023.50"></text></g><g><title>__update_load_avg_cfs_rq (3 samples, 0.02%)</title><rect x="29.2973%" y="1013" width="0.0185%" height="15" fill="rgb(219,203,20)" fg:x="4757" fg:w="3"/><text x="29.5473%" y="1023.50"></text></g><g><title>dequeue_entity (51 samples, 0.31%)</title><rect x="29.0817%" y="1045" width="0.3141%" height="15" fill="rgb(234,128,8)" fg:x="4722" fg:w="51"/><text x="29.3317%" y="1055.50"></text></g><g><title>update_load_avg (17 samples, 0.10%)</title><rect x="29.2911%" y="1029" width="0.1047%" height="15" fill="rgb(248,202,8)" fg:x="4756" fg:w="17"/><text x="29.5411%" y="1039.50"></text></g><g><title>__update_load_avg_se (13 samples, 0.08%)</title><rect x="29.3158%" y="1013" width="0.0801%" height="15" fill="rgb(206,104,37)" fg:x="4760" fg:w="13"/><text x="29.5658%" y="1023.50"></text></g><g><title>dequeue_task_fair (59 samples, 0.36%)</title><rect x="29.0448%" y="1061" width="0.3634%" height="15" fill="rgb(223,8,27)" fg:x="4716" fg:w="59"/><text x="29.2948%" y="1071.50"></text></g><g><title>__perf_event_task_sched_in (149 samples, 0.92%)</title><rect x="30.3566%" y="1045" width="0.9177%" height="15" fill="rgb(216,217,28)" fg:x="4929" fg:w="149"/><text x="30.6066%" y="1055.50"></text></g><g><title>x86_pmu_enable_all (114 samples, 0.70%)</title><rect x="30.5722%" y="1029" width="0.7021%" height="15" fill="rgb(249,199,1)" fg:x="4964" fg:w="114"/><text x="30.8222%" y="1039.50"></text></g><g><title>native_write_msr (65 samples, 0.40%)</title><rect x="30.8739%" y="1013" width="0.4003%" height="15" fill="rgb(240,85,17)" fg:x="5013" fg:w="65"/><text x="31.1239%" y="1023.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="31.2743%" y="1045" width="0.0185%" height="15" fill="rgb(206,108,45)" fg:x="5078" fg:w="3"/><text x="31.5243%" y="1055.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="31.2743%" y="1029" width="0.0185%" height="15" fill="rgb(245,210,41)" fg:x="5078" fg:w="3"/><text x="31.5243%" y="1039.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="31.2743%" y="1013" width="0.0185%" height="15" fill="rgb(206,13,37)" fg:x="5078" fg:w="3"/><text x="31.5243%" y="1023.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="31.2804%" y="997" width="0.0123%" height="15" fill="rgb(250,61,18)" fg:x="5079" fg:w="2"/><text x="31.5304%" y="1007.50"></text></g><g><title>finish_task_switch.isra.0 (309 samples, 1.90%)</title><rect x="29.4081%" y="1061" width="1.9031%" height="15" fill="rgb(235,172,48)" fg:x="4775" fg:w="309"/><text x="29.6581%" y="1071.50">f..</text></g><g><title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="31.2989%" y="1045" width="0.0123%" height="15" fill="rgb(249,201,17)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="1055.50"></text></g><g><title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="31.2989%" y="1029" width="0.0123%" height="15" fill="rgb(219,208,6)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="1039.50"></text></g><g><title>__sysvec_call_function_single (2 samples, 0.01%)</title><rect x="31.2989%" y="1013" width="0.0123%" height="15" fill="rgb(248,31,23)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="1023.50"></text></g><g><title>sched_ttwu_pending (2 samples, 0.01%)</title><rect x="31.2989%" y="997" width="0.0123%" height="15" fill="rgb(245,15,42)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="1007.50"></text></g><g><title>ttwu_do_activate (2 samples, 0.01%)</title><rect x="31.2989%" y="981" width="0.0123%" height="15" fill="rgb(222,217,39)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="991.50"></text></g><g><title>enqueue_task_fair (2 samples, 0.01%)</title><rect x="31.2989%" y="965" width="0.0123%" height="15" fill="rgb(210,219,27)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="975.50"></text></g><g><title>enqueue_entity (2 samples, 0.01%)</title><rect x="31.2989%" y="949" width="0.0123%" height="15" fill="rgb(252,166,36)" fg:x="5082" fg:w="2"/><text x="31.5489%" y="959.50"></text></g><g><title>find_busiest_group (2 samples, 0.01%)</title><rect x="31.3851%" y="1013" width="0.0123%" height="15" fill="rgb(245,132,34)" fg:x="5096" fg:w="2"/><text x="31.6351%" y="1023.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="31.3851%" y="997" width="0.0123%" height="15" fill="rgb(236,54,3)" fg:x="5096" fg:w="2"/><text x="31.6351%" y="1007.50"></text></g><g><title>pick_next_task_fair (15 samples, 0.09%)</title><rect x="31.3112%" y="1061" width="0.0924%" height="15" fill="rgb(241,173,43)" fg:x="5084" fg:w="15"/><text x="31.5612%" y="1071.50"></text></g><g><title>newidle_balance (13 samples, 0.08%)</title><rect x="31.3235%" y="1045" width="0.0801%" height="15" fill="rgb(215,190,9)" fg:x="5086" fg:w="13"/><text x="31.5735%" y="1055.50"></text></g><g><title>load_balance (8 samples, 0.05%)</title><rect x="31.3543%" y="1029" width="0.0493%" height="15" fill="rgb(242,101,16)" fg:x="5091" fg:w="8"/><text x="31.6043%" y="1039.50"></text></g><g><title>pick_next_task_idle (5 samples, 0.03%)</title><rect x="31.4036%" y="1061" width="0.0308%" height="15" fill="rgb(223,190,21)" fg:x="5099" fg:w="5"/><text x="31.6536%" y="1071.50"></text></g><g><title>__update_idle_core (4 samples, 0.02%)</title><rect x="31.4097%" y="1045" width="0.0246%" height="15" fill="rgb(215,228,25)" fg:x="5100" fg:w="4"/><text x="31.6597%" y="1055.50"></text></g><g><title>cpumask_next (2 samples, 0.01%)</title><rect x="31.4221%" y="1029" width="0.0123%" height="15" fill="rgb(225,36,22)" fg:x="5102" fg:w="2"/><text x="31.6721%" y="1039.50"></text></g><g><title>_find_next_bit (2 samples, 0.01%)</title><rect x="31.4221%" y="1013" width="0.0123%" height="15" fill="rgb(251,106,46)" fg:x="5102" fg:w="2"/><text x="31.6721%" y="1023.50"></text></g><g><title>psi_flags_change (2 samples, 0.01%)</title><rect x="31.4467%" y="1045" width="0.0123%" height="15" fill="rgb(208,90,1)" fg:x="5106" fg:w="2"/><text x="31.6967%" y="1055.50"></text></g><g><title>psi_task_switch (20 samples, 0.12%)</title><rect x="31.4344%" y="1061" width="0.1232%" height="15" fill="rgb(243,10,4)" fg:x="5104" fg:w="20"/><text x="31.6844%" y="1071.50"></text></g><g><title>psi_group_change (16 samples, 0.10%)</title><rect x="31.4590%" y="1045" width="0.0985%" height="15" fill="rgb(212,137,27)" fg:x="5108" fg:w="16"/><text x="31.7090%" y="1055.50"></text></g><g><title>schedule_hrtimeout_range_clock (614 samples, 3.78%)</title><rect x="27.8069%" y="1109" width="3.7815%" height="15" fill="rgb(231,220,49)" fg:x="4515" fg:w="614"/><text x="28.0569%" y="1119.50">sche..</text></g><g><title>schedule (528 samples, 3.25%)</title><rect x="28.3365%" y="1093" width="3.2518%" height="15" fill="rgb(237,96,20)" fg:x="4601" fg:w="528"/><text x="28.5865%" y="1103.50">sch..</text></g><g><title>__schedule (517 samples, 3.18%)</title><rect x="28.4043%" y="1077" width="3.1841%" height="15" fill="rgb(239,229,30)" fg:x="4612" fg:w="517"/><text x="28.6543%" y="1087.50">__s..</text></g><g><title>update_rq_clock (4 samples, 0.02%)</title><rect x="31.5637%" y="1061" width="0.0246%" height="15" fill="rgb(219,65,33)" fg:x="5125" fg:w="4"/><text x="31.8137%" y="1071.50"></text></g><g><title>do_epoll_wait (709 samples, 4.37%)</title><rect x="27.2895%" y="1125" width="4.3666%" height="15" fill="rgb(243,134,7)" fg:x="4431" fg:w="709"/><text x="27.5395%" y="1135.50">do_ep..</text></g><g><title>select_estimate_accuracy (11 samples, 0.07%)</title><rect x="31.5883%" y="1109" width="0.0677%" height="15" fill="rgb(216,177,54)" fg:x="5129" fg:w="11"/><text x="31.8383%" y="1119.50"></text></g><g><title>ktime_get_ts64 (4 samples, 0.02%)</title><rect x="31.6315%" y="1093" width="0.0246%" height="15" fill="rgb(211,160,20)" fg:x="5136" fg:w="4"/><text x="31.8815%" y="1103.50"></text></g><g><title>read_tsc (3 samples, 0.02%)</title><rect x="31.6376%" y="1077" width="0.0185%" height="15" fill="rgb(239,85,39)" fg:x="5137" fg:w="3"/><text x="31.8876%" y="1087.50"></text></g><g><title>ktime_get_ts64 (2 samples, 0.01%)</title><rect x="31.6561%" y="1125" width="0.0123%" height="15" fill="rgb(232,125,22)" fg:x="5140" fg:w="2"/><text x="31.9061%" y="1135.50"></text></g><g><title>__x64_sys_epoll_wait (719 samples, 4.43%)</title><rect x="27.2526%" y="1141" width="4.4282%" height="15" fill="rgb(244,57,34)" fg:x="4425" fg:w="719"/><text x="27.5026%" y="1151.50">__x64..</text></g><g><title>timespec64_add_safe (2 samples, 0.01%)</title><rect x="31.6684%" y="1125" width="0.0123%" height="15" fill="rgb(214,203,32)" fg:x="5142" fg:w="2"/><text x="31.9184%" y="1135.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (727 samples, 4.48%)</title><rect x="27.2218%" y="1173" width="4.4774%" height="15" fill="rgb(207,58,43)" fg:x="4420" fg:w="727"/><text x="27.4718%" y="1183.50">entry..</text></g><g><title>do_syscall_64 (726 samples, 4.47%)</title><rect x="27.2279%" y="1157" width="4.4713%" height="15" fill="rgb(215,193,15)" fg:x="4421" fg:w="726"/><text x="27.4779%" y="1167.50">do_sy..</text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="31.6807%" y="1141" width="0.0185%" height="15" fill="rgb(232,15,44)" fg:x="5144" fg:w="3"/><text x="31.9307%" y="1151.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.02%)</title><rect x="31.6807%" y="1125" width="0.0185%" height="15" fill="rgb(212,3,48)" fg:x="5144" fg:w="3"/><text x="31.9307%" y="1135.50"></text></g><g><title>switch_fpu_return (3 samples, 0.02%)</title><rect x="31.6807%" y="1109" width="0.0185%" height="15" fill="rgb(218,128,7)" fg:x="5144" fg:w="3"/><text x="31.9307%" y="1119.50"></text></g><g><title>copy_kernel_to_fpregs (2 samples, 0.01%)</title><rect x="31.6869%" y="1093" width="0.0123%" height="15" fill="rgb(226,216,39)" fg:x="5145" fg:w="2"/><text x="31.9369%" y="1103.50"></text></g><g><title>mio::poll::Poll::poll (743 samples, 4.58%)</title><rect x="27.1294%" y="1221" width="4.5760%" height="15" fill="rgb(243,47,51)" fg:x="4405" fg:w="743"/><text x="27.3794%" y="1231.50">mio::..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (741 samples, 4.56%)</title><rect x="27.1417%" y="1205" width="4.5637%" height="15" fill="rgb(241,183,40)" fg:x="4407" fg:w="741"/><text x="27.3917%" y="1215.50">mio::..</text></g><g><title>epoll_wait (739 samples, 4.55%)</title><rect x="27.1540%" y="1189" width="4.5513%" height="15" fill="rgb(231,217,32)" fg:x="4409" fg:w="739"/><text x="27.4040%" y="1199.50">epoll..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.01%)</title><rect x="31.7115%" y="1205" width="0.0123%" height="15" fill="rgb(229,61,38)" fg:x="5149" fg:w="2"/><text x="31.9615%" y="1215.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (5 samples, 0.03%)</title><rect x="31.7238%" y="1205" width="0.0308%" height="15" fill="rgb(225,210,5)" fg:x="5151" fg:w="5"/><text x="31.9738%" y="1215.50"></text></g><g><title>tokio::util::bit::Pack::unpack (4 samples, 0.02%)</title><rect x="31.7300%" y="1189" width="0.0246%" height="15" fill="rgb(231,79,45)" fg:x="5152" fg:w="4"/><text x="31.9800%" y="1199.50"></text></g><g><title>tokio::util::bit::unpack (4 samples, 0.02%)</title><rect x="31.7300%" y="1173" width="0.0246%" height="15" fill="rgb(224,100,7)" fg:x="5152" fg:w="4"/><text x="31.9800%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (3 samples, 0.02%)</title><rect x="31.7854%" y="1125" width="0.0185%" height="15" fill="rgb(241,198,18)" fg:x="5161" fg:w="3"/><text x="32.0354%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (3 samples, 0.02%)</title><rect x="31.7854%" y="1109" width="0.0185%" height="15" fill="rgb(252,97,53)" fg:x="5161" fg:w="3"/><text x="32.0354%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.02%)</title><rect x="31.7854%" y="1093" width="0.0185%" height="15" fill="rgb(220,88,7)" fg:x="5161" fg:w="3"/><text x="32.0354%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="31.7854%" y="1077" width="0.0185%" height="15" fill="rgb(213,176,14)" fg:x="5161" fg:w="3"/><text x="32.0354%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="31.7854%" y="1061" width="0.0185%" height="15" fill="rgb(246,73,7)" fg:x="5161" fg:w="3"/><text x="32.0354%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (12 samples, 0.07%)</title><rect x="31.7670%" y="1141" width="0.0739%" height="15" fill="rgb(245,64,36)" fg:x="5158" fg:w="12"/><text x="32.0170%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (6 samples, 0.04%)</title><rect x="31.8039%" y="1125" width="0.0370%" height="15" fill="rgb(245,80,10)" fg:x="5164" fg:w="6"/><text x="32.0539%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (5 samples, 0.03%)</title><rect x="31.8101%" y="1109" width="0.0308%" height="15" fill="rgb(232,107,50)" fg:x="5165" fg:w="5"/><text x="32.0601%" y="1119.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="31.8101%" y="1093" width="0.0308%" height="15" fill="rgb(253,3,0)" fg:x="5165" fg:w="5"/><text x="32.0601%" y="1103.50"></text></g><g><title>tokio::io::driver::Driver::dispatch (23 samples, 0.14%)</title><rect x="31.7054%" y="1221" width="0.1417%" height="15" fill="rgb(212,99,53)" fg:x="5148" fg:w="23"/><text x="31.9554%" y="1231.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake (15 samples, 0.09%)</title><rect x="31.7546%" y="1205" width="0.0924%" height="15" fill="rgb(249,111,54)" fg:x="5156" fg:w="15"/><text x="32.0046%" y="1215.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake0 (15 samples, 0.09%)</title><rect x="31.7546%" y="1189" width="0.0924%" height="15" fill="rgb(249,55,30)" fg:x="5156" fg:w="15"/><text x="32.0046%" y="1199.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (13 samples, 0.08%)</title><rect x="31.7670%" y="1173" width="0.0801%" height="15" fill="rgb(237,47,42)" fg:x="5158" fg:w="13"/><text x="32.0170%" y="1183.50"></text></g><g><title>core::task::wake::Waker::wake (13 samples, 0.08%)</title><rect x="31.7670%" y="1157" width="0.0801%" height="15" fill="rgb(211,20,18)" fg:x="5158" fg:w="13"/><text x="32.0170%" y="1167.50"></text></g><g><title>tokio::io::driver::Driver::turn (786 samples, 4.84%)</title><rect x="27.0124%" y="1237" width="4.8408%" height="15" fill="rgb(231,203,46)" fg:x="4386" fg:w="786"/><text x="27.2624%" y="1247.50">tokio:..</text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (2 samples, 0.01%)</title><rect x="31.8593%" y="1237" width="0.0123%" height="15" fill="rgb(237,142,3)" fg:x="5173" fg:w="2"/><text x="32.1093%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="31.8593%" y="1221" width="0.0123%" height="15" fill="rgb(241,107,1)" fg:x="5173" fg:w="2"/><text x="32.1093%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="31.8593%" y="1205" width="0.0123%" height="15" fill="rgb(229,83,13)" fg:x="5173" fg:w="2"/><text x="32.1093%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.01%)</title><rect x="31.8593%" y="1189" width="0.0123%" height="15" fill="rgb(241,91,40)" fg:x="5173" fg:w="2"/><text x="32.1093%" y="1199.50"></text></g><g><title>tokio::signal::unix::driver::Driver::process (10 samples, 0.06%)</title><rect x="31.8717%" y="1237" width="0.0616%" height="15" fill="rgb(225,3,45)" fg:x="5175" fg:w="10"/><text x="32.1217%" y="1247.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (9 samples, 0.06%)</title><rect x="31.8778%" y="1221" width="0.0554%" height="15" fill="rgb(244,223,14)" fg:x="5176" fg:w="9"/><text x="32.1278%" y="1231.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (9 samples, 0.06%)</title><rect x="31.8778%" y="1205" width="0.0554%" height="15" fill="rgb(224,124,37)" fg:x="5176" fg:w="9"/><text x="32.1278%" y="1215.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.01%)</title><rect x="31.9209%" y="1189" width="0.0123%" height="15" fill="rgb(251,171,30)" fg:x="5183" fg:w="2"/><text x="32.1709%" y="1199.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (2 samples, 0.01%)</title><rect x="31.9394%" y="1205" width="0.0123%" height="15" fill="rgb(236,46,54)" fg:x="5186" fg:w="2"/><text x="32.1894%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (6 samples, 0.04%)</title><rect x="31.9517%" y="1205" width="0.0370%" height="15" fill="rgb(245,213,5)" fg:x="5188" fg:w="6"/><text x="32.2017%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.03%)</title><rect x="31.9579%" y="1189" width="0.0308%" height="15" fill="rgb(230,144,27)" fg:x="5189" fg:w="5"/><text x="32.2079%" y="1199.50"></text></g><g><title>tokio::time::driver::Inner::lock (5 samples, 0.03%)</title><rect x="31.9887%" y="1205" width="0.0308%" height="15" fill="rgb(220,86,6)" fg:x="5194" fg:w="5"/><text x="32.2387%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.03%)</title><rect x="31.9887%" y="1189" width="0.0308%" height="15" fill="rgb(240,20,13)" fg:x="5194" fg:w="5"/><text x="32.2387%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.03%)</title><rect x="31.9887%" y="1173" width="0.0308%" height="15" fill="rgb(217,89,34)" fg:x="5194" fg:w="5"/><text x="32.2387%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.03%)</title><rect x="31.9887%" y="1157" width="0.0308%" height="15" fill="rgb(229,13,5)" fg:x="5194" fg:w="5"/><text x="32.2387%" y="1167.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (3 samples, 0.02%)</title><rect x="32.0379%" y="1157" width="0.0185%" height="15" fill="rgb(244,67,35)" fg:x="5202" fg:w="3"/><text x="32.2879%" y="1167.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll (8 samples, 0.05%)</title><rect x="32.0195%" y="1205" width="0.0493%" height="15" fill="rgb(221,40,2)" fg:x="5199" fg:w="8"/><text x="32.2695%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (8 samples, 0.05%)</title><rect x="32.0195%" y="1189" width="0.0493%" height="15" fill="rgb(237,157,21)" fg:x="5199" fg:w="8"/><text x="32.2695%" y="1199.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (6 samples, 0.04%)</title><rect x="32.0318%" y="1173" width="0.0370%" height="15" fill="rgb(222,94,11)" fg:x="5201" fg:w="6"/><text x="32.2818%" y="1183.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (2 samples, 0.01%)</title><rect x="32.0564%" y="1157" width="0.0123%" height="15" fill="rgb(249,113,6)" fg:x="5205" fg:w="2"/><text x="32.3064%" y="1167.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (29 samples, 0.18%)</title><rect x="31.9332%" y="1221" width="0.1786%" height="15" fill="rgb(238,137,36)" fg:x="5185" fg:w="29"/><text x="32.1832%" y="1231.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll_at (7 samples, 0.04%)</title><rect x="32.0687%" y="1205" width="0.0431%" height="15" fill="rgb(210,102,26)" fg:x="5207" fg:w="7"/><text x="32.3187%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (6 samples, 0.04%)</title><rect x="32.0749%" y="1189" width="0.0370%" height="15" fill="rgb(218,30,30)" fg:x="5208" fg:w="6"/><text x="32.3249%" y="1199.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (5 samples, 0.03%)</title><rect x="32.0810%" y="1173" width="0.0308%" height="15" fill="rgb(214,67,26)" fg:x="5209" fg:w="5"/><text x="32.3310%" y="1183.50"></text></g><g><title>tokio::time::clock::Clock::now (5 samples, 0.03%)</title><rect x="32.1118%" y="1205" width="0.0308%" height="15" fill="rgb(251,9,53)" fg:x="5214" fg:w="5"/><text x="32.3618%" y="1215.50"></text></g><g><title>tokio::time::clock::now (5 samples, 0.03%)</title><rect x="32.1118%" y="1189" width="0.0308%" height="15" fill="rgb(228,204,25)" fg:x="5214" fg:w="5"/><text x="32.3618%" y="1199.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.03%)</title><rect x="32.1118%" y="1173" width="0.0308%" height="15" fill="rgb(207,153,8)" fg:x="5214" fg:w="5"/><text x="32.3618%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.03%)</title><rect x="32.1118%" y="1157" width="0.0308%" height="15" fill="rgb(242,9,16)" fg:x="5214" fg:w="5"/><text x="32.3618%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.03%)</title><rect x="32.1118%" y="1141" width="0.0308%" height="15" fill="rgb(217,211,10)" fg:x="5214" fg:w="5"/><text x="32.3618%" y="1151.50"></text></g><g><title>__clock_gettime_2 (4 samples, 0.02%)</title><rect x="32.1180%" y="1125" width="0.0246%" height="15" fill="rgb(219,228,52)" fg:x="5215" fg:w="4"/><text x="32.3680%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="32.1242%" y="1109" width="0.0185%" height="15" fill="rgb(231,92,29)" fg:x="5216" fg:w="3"/><text x="32.3742%" y="1119.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (35 samples, 0.22%)</title><rect x="31.9332%" y="1237" width="0.2156%" height="15" fill="rgb(232,8,23)" fg:x="5185" fg:w="35"/><text x="32.1832%" y="1247.50"></text></g><g><title>tokio::time::driver::ClockTime::now (6 samples, 0.04%)</title><rect x="32.1118%" y="1221" width="0.0370%" height="15" fill="rgb(216,211,34)" fg:x="5214" fg:w="6"/><text x="32.3618%" y="1231.50"></text></g><g><title>tokio::time::driver::ClockTime::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1237" width="0.0308%" height="15" fill="rgb(236,151,0)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1247.50"></text></g><g><title>tokio::time::clock::Clock::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1221" width="0.0308%" height="15" fill="rgb(209,168,3)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1231.50"></text></g><g><title>tokio::time::clock::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1205" width="0.0308%" height="15" fill="rgb(208,129,28)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1215.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1189" width="0.0308%" height="15" fill="rgb(229,78,22)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1199.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1173" width="0.0308%" height="15" fill="rgb(228,187,13)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.03%)</title><rect x="32.1488%" y="1157" width="0.0308%" height="15" fill="rgb(240,119,24)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1167.50"></text></g><g><title>__clock_gettime_2 (5 samples, 0.03%)</title><rect x="32.1488%" y="1141" width="0.0308%" height="15" fill="rgb(209,194,42)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.03%)</title><rect x="32.1488%" y="1125" width="0.0308%" height="15" fill="rgb(247,200,46)" fg:x="5220" fg:w="5"/><text x="32.3988%" y="1135.50"></text></g><g><title>[[vdso]] (4 samples, 0.02%)</title><rect x="32.1550%" y="1109" width="0.0246%" height="15" fill="rgb(218,76,16)" fg:x="5221" fg:w="4"/><text x="32.4050%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (859 samples, 5.29%)</title><rect x="26.9323%" y="1301" width="5.2904%" height="15" fill="rgb(225,21,48)" fg:x="4373" fg:w="859"/><text x="27.1823%" y="1311.50">&lt;tokio..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (859 samples, 5.29%)</title><rect x="26.9323%" y="1285" width="5.2904%" height="15" fill="rgb(239,223,50)" fg:x="4373" fg:w="859"/><text x="27.1823%" y="1295.50">&lt;tokio..</text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (859 samples, 5.29%)</title><rect x="26.9323%" y="1269" width="5.2904%" height="15" fill="rgb(244,45,21)" fg:x="4373" fg:w="859"/><text x="27.1823%" y="1279.50">&lt;tokio..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (858 samples, 5.28%)</title><rect x="26.9385%" y="1253" width="5.2842%" height="15" fill="rgb(232,33,43)" fg:x="4374" fg:w="858"/><text x="27.1885%" y="1263.50">tokio:..</text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration_time (7 samples, 0.04%)</title><rect x="32.1796%" y="1237" width="0.0431%" height="15" fill="rgb(209,8,3)" fg:x="5225" fg:w="7"/><text x="32.4296%" y="1247.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (7 samples, 0.04%)</title><rect x="32.1796%" y="1221" width="0.0431%" height="15" fill="rgb(214,25,53)" fg:x="5225" fg:w="7"/><text x="32.4296%" y="1231.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (4 samples, 0.02%)</title><rect x="32.1981%" y="1205" width="0.0246%" height="15" fill="rgb(254,186,54)" fg:x="5228" fg:w="4"/><text x="32.4481%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (2 samples, 0.01%)</title><rect x="32.2104%" y="1189" width="0.0123%" height="15" fill="rgb(208,174,49)" fg:x="5230" fg:w="2"/><text x="32.4604%" y="1199.50"></text></g><g><title>tokio::time::driver::wheel::level::slot_range (2 samples, 0.01%)</title><rect x="32.2104%" y="1173" width="0.0123%" height="15" fill="rgb(233,191,51)" fg:x="5230" fg:w="2"/><text x="32.4604%" y="1183.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (2 samples, 0.01%)</title><rect x="32.2104%" y="1157" width="0.0123%" height="15" fill="rgb(222,134,10)" fg:x="5230" fg:w="2"/><text x="32.4604%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1,265 samples, 7.79%)</title><rect x="24.4380%" y="1349" width="7.7908%" height="15" fill="rgb(230,226,20)" fg:x="3968" fg:w="1265"/><text x="24.6880%" y="1359.50">&lt;tokio::run..</text></g><g><title>tokio::runtime::park::Inner::park (1,260 samples, 7.76%)</title><rect x="24.4688%" y="1333" width="7.7601%" height="15" fill="rgb(251,111,25)" fg:x="3973" fg:w="1260"/><text x="24.7188%" y="1343.50">tokio::runt..</text></g><g><title>tokio::runtime::park::Inner::park_driver (864 samples, 5.32%)</title><rect x="26.9077%" y="1317" width="5.3212%" height="15" fill="rgb(224,40,46)" fg:x="4369" fg:w="864"/><text x="27.1577%" y="1327.50">tokio::..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (2 samples, 0.01%)</title><rect x="32.2350%" y="1349" width="0.0123%" height="15" fill="rgb(236,108,47)" fg:x="5234" fg:w="2"/><text x="32.4850%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1,271 samples, 7.83%)</title><rect x="24.4257%" y="1365" width="7.8278%" height="15" fill="rgb(234,93,0)" fg:x="3966" fg:w="1271"/><text x="24.6757%" y="1375.50">tokio::runt..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::task::inject::Pointers&gt;&gt; (2 samples, 0.01%)</title><rect x="32.2597%" y="1333" width="0.0123%" height="15" fill="rgb(224,213,32)" fg:x="5238" fg:w="2"/><text x="32.5097%" y="1343.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="32.2597%" y="1317" width="0.0123%" height="15" fill="rgb(251,11,48)" fg:x="5238" fg:w="2"/><text x="32.5097%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.01%)</title><rect x="32.2597%" y="1301" width="0.0123%" height="15" fill="rgb(236,173,5)" fg:x="5238" fg:w="2"/><text x="32.5097%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (7 samples, 0.04%)</title><rect x="32.2535%" y="1365" width="0.0431%" height="15" fill="rgb(230,95,12)" fg:x="5237" fg:w="7"/><text x="32.5035%" y="1375.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (6 samples, 0.04%)</title><rect x="32.2597%" y="1349" width="0.0370%" height="15" fill="rgb(232,209,1)" fg:x="5238" fg:w="6"/><text x="32.5097%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="32.2720%" y="1333" width="0.0246%" height="15" fill="rgb(232,6,1)" fg:x="5240" fg:w="4"/><text x="32.5220%" y="1343.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.02%)</title><rect x="32.2720%" y="1317" width="0.0246%" height="15" fill="rgb(210,224,50)" fg:x="5240" fg:w="4"/><text x="32.5220%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.02%)</title><rect x="32.2720%" y="1301" width="0.0246%" height="15" fill="rgb(228,127,35)" fg:x="5240" fg:w="4"/><text x="32.5220%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.02%)</title><rect x="32.2966%" y="1333" width="0.0246%" height="15" fill="rgb(245,102,45)" fg:x="5244" fg:w="4"/><text x="32.5466%" y="1343.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.02%)</title><rect x="32.2966%" y="1317" width="0.0246%" height="15" fill="rgb(214,1,49)" fg:x="5244" fg:w="4"/><text x="32.5466%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (4 samples, 0.02%)</title><rect x="32.2966%" y="1301" width="0.0246%" height="15" fill="rgb(226,163,40)" fg:x="5244" fg:w="4"/><text x="32.5466%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (6 samples, 0.04%)</title><rect x="32.2966%" y="1349" width="0.0370%" height="15" fill="rgb(239,212,28)" fg:x="5244" fg:w="6"/><text x="32.5466%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="32.3212%" y="1333" width="0.0123%" height="15" fill="rgb(220,20,13)" fg:x="5248" fg:w="2"/><text x="32.5712%" y="1343.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="32.3212%" y="1317" width="0.0123%" height="15" fill="rgb(210,164,35)" fg:x="5248" fg:w="2"/><text x="32.5712%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="32.3212%" y="1301" width="0.0123%" height="15" fill="rgb(248,109,41)" fg:x="5248" fg:w="2"/><text x="32.5712%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (7 samples, 0.04%)</title><rect x="32.2966%" y="1365" width="0.0431%" height="15" fill="rgb(238,23,50)" fg:x="5244" fg:w="7"/><text x="32.5466%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="32.3459%" y="1333" width="0.0185%" height="15" fill="rgb(211,48,49)" fg:x="5252" fg:w="3"/><text x="32.5959%" y="1343.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="32.3459%" y="1317" width="0.0185%" height="15" fill="rgb(223,36,21)" fg:x="5252" fg:w="3"/><text x="32.5959%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.02%)</title><rect x="32.3459%" y="1301" width="0.0185%" height="15" fill="rgb(207,123,46)" fg:x="5252" fg:w="3"/><text x="32.5959%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (4 samples, 0.02%)</title><rect x="32.3459%" y="1349" width="0.0246%" height="15" fill="rgb(240,218,32)" fg:x="5252" fg:w="4"/><text x="32.5959%" y="1359.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="32.3705%" y="1333" width="0.0123%" height="15" fill="rgb(252,5,43)" fg:x="5256" fg:w="2"/><text x="32.6205%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1,297 samples, 7.99%)</title><rect x="24.4072%" y="1381" width="7.9879%" height="15" fill="rgb(252,84,19)" fg:x="3963" fg:w="1297"/><text x="24.6572%" y="1391.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (9 samples, 0.06%)</title><rect x="32.3397%" y="1365" width="0.0554%" height="15" fill="rgb(243,152,39)" fg:x="5251" fg:w="9"/><text x="32.5897%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (4 samples, 0.02%)</title><rect x="32.3705%" y="1349" width="0.0246%" height="15" fill="rgb(234,160,15)" fg:x="5256" fg:w="4"/><text x="32.6205%" y="1359.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (2 samples, 0.01%)</title><rect x="32.3828%" y="1333" width="0.0123%" height="15" fill="rgb(237,34,20)" fg:x="5258" fg:w="2"/><text x="32.6328%" y="1343.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (2 samples, 0.01%)</title><rect x="32.3828%" y="1317" width="0.0123%" height="15" fill="rgb(229,97,13)" fg:x="5258" fg:w="2"/><text x="32.6328%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.01%)</title><rect x="32.3828%" y="1301" width="0.0123%" height="15" fill="rgb(234,71,50)" fg:x="5258" fg:w="2"/><text x="32.6328%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="32.3828%" y="1285" width="0.0123%" height="15" fill="rgb(253,155,4)" fg:x="5258" fg:w="2"/><text x="32.6328%" y="1295.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (5 samples, 0.03%)</title><rect x="32.8263%" y="901" width="0.0308%" height="15" fill="rgb(222,185,37)" fg:x="5330" fg:w="5"/><text x="33.0763%" y="911.50"></text></g><g><title>tokio::coop::CURRENT::__getit (3 samples, 0.02%)</title><rect x="32.9433%" y="789" width="0.0185%" height="15" fill="rgb(251,177,13)" fg:x="5349" fg:w="3"/><text x="33.1933%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="32.9433%" y="773" width="0.0185%" height="15" fill="rgb(250,179,40)" fg:x="5349" fg:w="3"/><text x="33.1933%" y="783.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="32.9433%" y="757" width="0.0185%" height="15" fill="rgb(242,44,2)" fg:x="5349" fg:w="3"/><text x="33.1933%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="32.9433%" y="741" width="0.0185%" height="15" fill="rgb(216,177,13)" fg:x="5349" fg:w="3"/><text x="33.1933%" y="751.50"></text></g><g><title>tokio::coop::poll_proceed (5 samples, 0.03%)</title><rect x="32.9433%" y="837" width="0.0308%" height="15" fill="rgb(216,106,43)" fg:x="5349" fg:w="5"/><text x="33.1933%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="32.9433%" y="821" width="0.0308%" height="15" fill="rgb(216,183,2)" fg:x="5349" fg:w="5"/><text x="33.1933%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="32.9433%" y="805" width="0.0308%" height="15" fill="rgb(249,75,3)" fg:x="5349" fg:w="5"/><text x="33.1933%" y="815.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (2 samples, 0.01%)</title><rect x="32.9618%" y="789" width="0.0123%" height="15" fill="rgb(219,67,39)" fg:x="5352" fg:w="2"/><text x="33.2118%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.04%)</title><rect x="32.9987%" y="773" width="0.0370%" height="15" fill="rgb(253,228,2)" fg:x="5358" fg:w="6"/><text x="33.2487%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="32.9987%" y="757" width="0.0370%" height="15" fill="rgb(235,138,27)" fg:x="5358" fg:w="6"/><text x="33.2487%" y="767.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (27 samples, 0.17%)</title><rect x="32.9741%" y="821" width="0.1663%" height="15" fill="rgb(236,97,51)" fg:x="5354" fg:w="27"/><text x="33.2241%" y="831.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (27 samples, 0.17%)</title><rect x="32.9741%" y="805" width="0.1663%" height="15" fill="rgb(240,80,30)" fg:x="5354" fg:w="27"/><text x="33.2241%" y="815.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (26 samples, 0.16%)</title><rect x="32.9802%" y="789" width="0.1601%" height="15" fill="rgb(230,178,19)" fg:x="5355" fg:w="26"/><text x="33.2302%" y="799.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (17 samples, 0.10%)</title><rect x="33.0357%" y="773" width="0.1047%" height="15" fill="rgb(210,190,27)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="783.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.10%)</title><rect x="33.0357%" y="757" width="0.1047%" height="15" fill="rgb(222,107,31)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="767.50"></text></g><g><title>std::panicking::try (17 samples, 0.10%)</title><rect x="33.0357%" y="741" width="0.1047%" height="15" fill="rgb(216,127,34)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="751.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.10%)</title><rect x="33.0357%" y="725" width="0.1047%" height="15" fill="rgb(234,116,52)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.10%)</title><rect x="33.0357%" y="709" width="0.1047%" height="15" fill="rgb(222,124,15)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="719.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (17 samples, 0.10%)</title><rect x="33.0357%" y="693" width="0.1047%" height="15" fill="rgb(231,179,28)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="703.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (17 samples, 0.10%)</title><rect x="33.0357%" y="677" width="0.1047%" height="15" fill="rgb(226,93,45)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="687.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.10%)</title><rect x="33.0357%" y="661" width="0.1047%" height="15" fill="rgb(215,8,51)" fg:x="5364" fg:w="17"/><text x="33.2857%" y="671.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (16 samples, 0.10%)</title><rect x="33.0418%" y="645" width="0.0985%" height="15" fill="rgb(223,106,5)" fg:x="5365" fg:w="16"/><text x="33.2918%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (13 samples, 0.08%)</title><rect x="33.0603%" y="629" width="0.0801%" height="15" fill="rgb(250,191,5)" fg:x="5368" fg:w="13"/><text x="33.3103%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (46 samples, 0.28%)</title><rect x="32.9063%" y="885" width="0.2833%" height="15" fill="rgb(242,132,44)" fg:x="5343" fg:w="46"/><text x="33.1563%" y="895.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (46 samples, 0.28%)</title><rect x="32.9063%" y="869" width="0.2833%" height="15" fill="rgb(251,152,29)" fg:x="5343" fg:w="46"/><text x="33.1563%" y="879.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (41 samples, 0.25%)</title><rect x="32.9371%" y="853" width="0.2525%" height="15" fill="rgb(218,179,5)" fg:x="5348" fg:w="41"/><text x="33.1871%" y="863.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (35 samples, 0.22%)</title><rect x="32.9741%" y="837" width="0.2156%" height="15" fill="rgb(227,67,19)" fg:x="5354" fg:w="35"/><text x="33.2241%" y="847.50"></text></g><g><title>tokio::time::driver::handle::Handle::is_shutdown (8 samples, 0.05%)</title><rect x="33.1404%" y="821" width="0.0493%" height="15" fill="rgb(233,119,31)" fg:x="5381" fg:w="8"/><text x="33.3904%" y="831.50"></text></g><g><title>tokio::time::driver::Inner::is_shutdown (8 samples, 0.05%)</title><rect x="33.1404%" y="805" width="0.0493%" height="15" fill="rgb(241,120,22)" fg:x="5381" fg:w="8"/><text x="33.3904%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (8 samples, 0.05%)</title><rect x="33.1404%" y="789" width="0.0493%" height="15" fill="rgb(224,102,30)" fg:x="5381" fg:w="8"/><text x="33.3904%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="33.1712%" y="773" width="0.0185%" height="15" fill="rgb(210,164,37)" fg:x="5386" fg:w="3"/><text x="33.4212%" y="783.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (3 samples, 0.02%)</title><rect x="33.1896%" y="885" width="0.0185%" height="15" fill="rgb(226,191,16)" fg:x="5389" fg:w="3"/><text x="33.4396%" y="895.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (3 samples, 0.02%)</title><rect x="33.1896%" y="869" width="0.0185%" height="15" fill="rgb(214,40,45)" fg:x="5389" fg:w="3"/><text x="33.4396%" y="879.50"></text></g><g><title>std::time::Instant::checked_add (3 samples, 0.02%)</title><rect x="33.1896%" y="853" width="0.0185%" height="15" fill="rgb(244,29,26)" fg:x="5389" fg:w="3"/><text x="33.4396%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (3 samples, 0.02%)</title><rect x="33.1896%" y="837" width="0.0185%" height="15" fill="rgb(216,16,5)" fg:x="5389" fg:w="3"/><text x="33.4396%" y="847.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (3 samples, 0.02%)</title><rect x="33.1896%" y="821" width="0.0185%" height="15" fill="rgb(249,76,35)" fg:x="5389" fg:w="3"/><text x="33.4396%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::gt (2 samples, 0.01%)</title><rect x="33.2081%" y="885" width="0.0123%" height="15" fill="rgb(207,11,44)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="895.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="33.2081%" y="869" width="0.0123%" height="15" fill="rgb(228,190,49)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="879.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="33.2081%" y="853" width="0.0123%" height="15" fill="rgb(214,173,12)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="33.2081%" y="837" width="0.0123%" height="15" fill="rgb(218,26,35)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="847.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="33.2081%" y="821" width="0.0123%" height="15" fill="rgb(220,200,19)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="831.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (2 samples, 0.01%)</title><rect x="33.2081%" y="805" width="0.0123%" height="15" fill="rgb(239,95,49)" fg:x="5392" fg:w="2"/><text x="33.4581%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::time::driver::InnerState&gt;&gt; (8 samples, 0.05%)</title><rect x="33.2882%" y="821" width="0.0493%" height="15" fill="rgb(235,85,53)" fg:x="5405" fg:w="8"/><text x="33.5382%" y="831.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="33.2882%" y="805" width="0.0493%" height="15" fill="rgb(233,133,31)" fg:x="5405" fg:w="8"/><text x="33.5382%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.05%)</title><rect x="33.2882%" y="789" width="0.0493%" height="15" fill="rgb(218,25,20)" fg:x="5405" fg:w="8"/><text x="33.5382%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (9 samples, 0.06%)</title><rect x="33.3374%" y="821" width="0.0554%" height="15" fill="rgb(252,210,38)" fg:x="5413" fg:w="9"/><text x="33.5874%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (9 samples, 0.06%)</title><rect x="33.3374%" y="805" width="0.0554%" height="15" fill="rgb(242,134,21)" fg:x="5413" fg:w="9"/><text x="33.5874%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (7 samples, 0.04%)</title><rect x="33.3498%" y="789" width="0.0431%" height="15" fill="rgb(213,28,48)" fg:x="5415" fg:w="7"/><text x="33.5998%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (6 samples, 0.04%)</title><rect x="33.3559%" y="773" width="0.0370%" height="15" fill="rgb(250,196,2)" fg:x="5416" fg:w="6"/><text x="33.6059%" y="783.50"></text></g><g><title>tokio::time::driver::Inner::lock (36 samples, 0.22%)</title><rect x="33.3929%" y="821" width="0.2217%" height="15" fill="rgb(227,5,17)" fg:x="5422" fg:w="36"/><text x="33.6429%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (36 samples, 0.22%)</title><rect x="33.3929%" y="805" width="0.2217%" height="15" fill="rgb(221,226,24)" fg:x="5422" fg:w="36"/><text x="33.6429%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (36 samples, 0.22%)</title><rect x="33.3929%" y="789" width="0.2217%" height="15" fill="rgb(211,5,48)" fg:x="5422" fg:w="36"/><text x="33.6429%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (36 samples, 0.22%)</title><rect x="33.3929%" y="773" width="0.2217%" height="15" fill="rgb(219,150,6)" fg:x="5422" fg:w="36"/><text x="33.6429%" y="783.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.01%)</title><rect x="33.6023%" y="757" width="0.0123%" height="15" fill="rgb(251,46,16)" fg:x="5456" fg:w="2"/><text x="33.8523%" y="767.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (62 samples, 0.38%)</title><rect x="33.2882%" y="837" width="0.3818%" height="15" fill="rgb(220,204,40)" fg:x="5405" fg:w="62"/><text x="33.5382%" y="847.50"></text></g><g><title>tokio::time::driver::entry::TimerHandle::fire (9 samples, 0.06%)</title><rect x="33.6146%" y="821" width="0.0554%" height="15" fill="rgb(211,85,2)" fg:x="5458" fg:w="9"/><text x="33.8646%" y="831.50"></text></g><g><title>tokio::time::driver::entry::StateCell::fire (9 samples, 0.06%)</title><rect x="33.6146%" y="805" width="0.0554%" height="15" fill="rgb(229,17,7)" fg:x="5458" fg:w="9"/><text x="33.8646%" y="815.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (9 samples, 0.06%)</title><rect x="33.6146%" y="789" width="0.0554%" height="15" fill="rgb(239,72,28)" fg:x="5458" fg:w="9"/><text x="33.8646%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.06%)</title><rect x="33.6146%" y="773" width="0.0554%" height="15" fill="rgb(230,47,54)" fg:x="5458" fg:w="9"/><text x="33.8646%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.06%)</title><rect x="33.6146%" y="757" width="0.0554%" height="15" fill="rgb(214,50,8)" fg:x="5458" fg:w="9"/><text x="33.8646%" y="767.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (3 samples, 0.02%)</title><rect x="33.6700%" y="821" width="0.0185%" height="15" fill="rgb(216,198,43)" fg:x="5467" fg:w="3"/><text x="33.9200%" y="831.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (3 samples, 0.02%)</title><rect x="33.6700%" y="805" width="0.0185%" height="15" fill="rgb(234,20,35)" fg:x="5467" fg:w="3"/><text x="33.9200%" y="815.50"></text></g><g><title>std::time::Instant::checked_add (3 samples, 0.02%)</title><rect x="33.6700%" y="789" width="0.0185%" height="15" fill="rgb(254,45,19)" fg:x="5467" fg:w="3"/><text x="33.9200%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (3 samples, 0.02%)</title><rect x="33.6700%" y="773" width="0.0185%" height="15" fill="rgb(219,14,44)" fg:x="5467" fg:w="3"/><text x="33.9200%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (3 samples, 0.02%)</title><rect x="33.6700%" y="757" width="0.0185%" height="15" fill="rgb(217,220,26)" fg:x="5467" fg:w="3"/><text x="33.9200%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.01%)</title><rect x="33.6762%" y="741" width="0.0123%" height="15" fill="rgb(213,158,28)" fg:x="5468" fg:w="2"/><text x="33.9262%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.01%)</title><rect x="33.6885%" y="805" width="0.0123%" height="15" fill="rgb(252,51,52)" fg:x="5470" fg:w="2"/><text x="33.9385%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="33.7686%" y="741" width="0.0123%" height="15" fill="rgb(246,89,16)" fg:x="5483" fg:w="2"/><text x="34.0186%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.01%)</title><rect x="33.7686%" y="725" width="0.0123%" height="15" fill="rgb(216,158,49)" fg:x="5483" fg:w="2"/><text x="34.0186%" y="735.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="33.7686%" y="709" width="0.0123%" height="15" fill="rgb(236,107,19)" fg:x="5483" fg:w="2"/><text x="34.0186%" y="719.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (2 samples, 0.01%)</title><rect x="33.7686%" y="693" width="0.0123%" height="15" fill="rgb(228,185,30)" fg:x="5483" fg:w="2"/><text x="34.0186%" y="703.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (2 samples, 0.01%)</title><rect x="33.7686%" y="677" width="0.0123%" height="15" fill="rgb(246,134,8)" fg:x="5483" fg:w="2"/><text x="34.0186%" y="687.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (19 samples, 0.12%)</title><rect x="33.6885%" y="821" width="0.1170%" height="15" fill="rgb(214,143,50)" fg:x="5470" fg:w="19"/><text x="33.9385%" y="831.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (16 samples, 0.10%)</title><rect x="33.7070%" y="805" width="0.0985%" height="15" fill="rgb(228,75,8)" fg:x="5473" fg:w="16"/><text x="33.9570%" y="815.50"></text></g><g><title>std::time::Instant::checked_duration_since (16 samples, 0.10%)</title><rect x="33.7070%" y="789" width="0.0985%" height="15" fill="rgb(207,175,4)" fg:x="5473" fg:w="16"/><text x="33.9570%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (11 samples, 0.07%)</title><rect x="33.7378%" y="773" width="0.0677%" height="15" fill="rgb(205,108,24)" fg:x="5478" fg:w="11"/><text x="33.9878%" y="783.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (10 samples, 0.06%)</title><rect x="33.7439%" y="757" width="0.0616%" height="15" fill="rgb(244,120,49)" fg:x="5479" fg:w="10"/><text x="33.9939%" y="767.50"></text></g><g><title>core::time::Duration::new (4 samples, 0.02%)</title><rect x="33.7809%" y="741" width="0.0246%" height="15" fill="rgb(223,47,38)" fg:x="5485" fg:w="4"/><text x="34.0309%" y="751.50"></text></g><g><title>tokio::time::driver::ClockTime::deadline_to_tick (23 samples, 0.14%)</title><rect x="33.6700%" y="837" width="0.1417%" height="15" fill="rgb(229,179,11)" fg:x="5467" fg:w="23"/><text x="33.9200%" y="847.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (8 samples, 0.05%)</title><rect x="33.8117%" y="837" width="0.0493%" height="15" fill="rgb(231,122,1)" fg:x="5490" fg:w="8"/><text x="34.0617%" y="847.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::reset (104 samples, 0.64%)</title><rect x="33.2266%" y="885" width="0.6405%" height="15" fill="rgb(245,119,9)" fg:x="5395" fg:w="104"/><text x="33.4766%" y="895.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::reset_inner (104 samples, 0.64%)</title><rect x="33.2266%" y="869" width="0.6405%" height="15" fill="rgb(241,163,25)" fg:x="5395" fg:w="104"/><text x="33.4766%" y="879.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (104 samples, 0.64%)</title><rect x="33.2266%" y="853" width="0.6405%" height="15" fill="rgb(217,214,3)" fg:x="5395" fg:w="104"/><text x="33.4766%" y="863.50"></text></g><g><title>tokio::time::instant::Instant::now (41 samples, 0.25%)</title><rect x="33.8671%" y="885" width="0.2525%" height="15" fill="rgb(240,86,28)" fg:x="5499" fg:w="41"/><text x="34.1171%" y="895.50"></text></g><g><title>tokio::time::instant::variant::now (41 samples, 0.25%)</title><rect x="33.8671%" y="869" width="0.2525%" height="15" fill="rgb(215,47,9)" fg:x="5499" fg:w="41"/><text x="34.1171%" y="879.50"></text></g><g><title>std::time::Instant::now (41 samples, 0.25%)</title><rect x="33.8671%" y="853" width="0.2525%" height="15" fill="rgb(252,25,45)" fg:x="5499" fg:w="41"/><text x="34.1171%" y="863.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (39 samples, 0.24%)</title><rect x="33.8794%" y="837" width="0.2402%" height="15" fill="rgb(251,164,9)" fg:x="5501" fg:w="39"/><text x="34.1294%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::now (39 samples, 0.24%)</title><rect x="33.8794%" y="821" width="0.2402%" height="15" fill="rgb(233,194,0)" fg:x="5501" fg:w="39"/><text x="34.1294%" y="831.50"></text></g><g><title>__clock_gettime_2 (38 samples, 0.23%)</title><rect x="33.8856%" y="805" width="0.2340%" height="15" fill="rgb(249,111,24)" fg:x="5502" fg:w="38"/><text x="34.1356%" y="815.50"></text></g><g><title>__vdso_clock_gettime (38 samples, 0.23%)</title><rect x="33.8856%" y="789" width="0.2340%" height="15" fill="rgb(250,223,3)" fg:x="5502" fg:w="38"/><text x="34.1356%" y="799.50"></text></g><g><title>[[vdso]] (25 samples, 0.15%)</title><rect x="33.9656%" y="773" width="0.1540%" height="15" fill="rgb(236,178,37)" fg:x="5515" fg:w="25"/><text x="34.2156%" y="783.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (215 samples, 1.32%)</title><rect x="32.8016%" y="917" width="1.3241%" height="15" fill="rgb(241,158,50)" fg:x="5326" fg:w="215"/><text x="33.0516%" y="927.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (206 samples, 1.27%)</title><rect x="32.8571%" y="901" width="1.2687%" height="15" fill="rgb(213,121,41)" fg:x="5335" fg:w="206"/><text x="33.1071%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::enumerate::Enumerate&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (235 samples, 1.45%)</title><rect x="32.7154%" y="949" width="1.4473%" height="15" fill="rgb(240,92,3)" fg:x="5312" fg:w="235"/><text x="32.9654%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::take_while::TakeWhile&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (233 samples, 1.43%)</title><rect x="32.7277%" y="933" width="1.4350%" height="15" fill="rgb(205,123,3)" fg:x="5314" fg:w="233"/><text x="32.9777%" y="943.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}} (5 samples, 0.03%)</title><rect x="34.1319%" y="917" width="0.0308%" height="15" fill="rgb(205,97,47)" fg:x="5542" fg:w="5"/><text x="34.3819%" y="927.50"></text></g><g><title>latte::count_down::BatchedCountDown::dec (3 samples, 0.02%)</title><rect x="34.1442%" y="901" width="0.0185%" height="15" fill="rgb(247,152,14)" fg:x="5544" fg:w="3"/><text x="34.3942%" y="911.50"></text></g><g><title>latte::count_down::CountDown::dec (2 samples, 0.01%)</title><rect x="34.1504%" y="885" width="0.0123%" height="15" fill="rgb(248,195,53)" fg:x="5545" fg:w="2"/><text x="34.4004%" y="895.50"></text></g><g><title>core::cmp::min (2 samples, 0.01%)</title><rect x="34.1504%" y="869" width="0.0123%" height="15" fill="rgb(226,201,16)" fg:x="5545" fg:w="2"/><text x="34.4004%" y="879.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.01%)</title><rect x="34.1504%" y="853" width="0.0123%" height="15" fill="rgb(205,98,0)" fg:x="5545" fg:w="2"/><text x="34.4004%" y="863.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.01%)</title><rect x="34.1504%" y="837" width="0.0123%" height="15" fill="rgb(214,191,48)" fg:x="5545" fg:w="2"/><text x="34.4004%" y="847.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (264 samples, 1.63%)</title><rect x="32.6785%" y="981" width="1.6259%" height="15" fill="rgb(237,112,39)" fg:x="5306" fg:w="264"/><text x="32.9285%" y="991.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (258 samples, 1.59%)</title><rect x="32.7154%" y="965" width="1.5890%" height="15" fill="rgb(247,203,27)" fg:x="5312" fg:w="258"/><text x="32.9654%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.14%)</title><rect x="34.1627%" y="949" width="0.1417%" height="15" fill="rgb(235,124,28)" fg:x="5547" fg:w="23"/><text x="34.4127%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (23 samples, 0.14%)</title><rect x="34.1627%" y="933" width="0.1417%" height="15" fill="rgb(208,207,46)" fg:x="5547" fg:w="23"/><text x="34.4127%" y="943.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (23 samples, 0.14%)</title><rect x="34.1627%" y="917" width="0.1417%" height="15" fill="rgb(234,176,4)" fg:x="5547" fg:w="23"/><text x="34.4127%" y="927.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}} (23 samples, 0.14%)</title><rect x="34.1627%" y="901" width="0.1417%" height="15" fill="rgb(230,133,28)" fg:x="5547" fg:w="23"/><text x="34.4127%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.14%)</title><rect x="34.1627%" y="885" width="0.1417%" height="15" fill="rgb(211,137,40)" fg:x="5547" fg:w="23"/><text x="34.4127%" y="895.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (8 samples, 0.05%)</title><rect x="34.3105%" y="949" width="0.0493%" height="15" fill="rgb(254,35,13)" fg:x="5571" fg:w="8"/><text x="34.5605%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.04%)</title><rect x="34.3167%" y="933" width="0.0431%" height="15" fill="rgb(225,49,51)" fg:x="5572" fg:w="7"/><text x="34.5667%" y="943.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::atomic_load_head_and_len_all (14 samples, 0.09%)</title><rect x="34.3044%" y="965" width="0.0862%" height="15" fill="rgb(251,10,15)" fg:x="5570" fg:w="14"/><text x="34.5544%" y="975.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::spin_next_all (5 samples, 0.03%)</title><rect x="34.3598%" y="949" width="0.0308%" height="15" fill="rgb(228,207,15)" fg:x="5579" fg:w="5"/><text x="34.6098%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::len (16 samples, 0.10%)</title><rect x="34.3044%" y="981" width="0.0985%" height="15" fill="rgb(241,99,19)" fg:x="5570" fg:w="16"/><text x="34.5544%" y="991.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2 samples, 0.01%)</title><rect x="34.3906%" y="965" width="0.0123%" height="15" fill="rgb(207,104,49)" fg:x="5584" fg:w="2"/><text x="34.6406%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::downgrade (9 samples, 0.06%)</title><rect x="34.4522%" y="965" width="0.0554%" height="15" fill="rgb(234,99,18)" fg:x="5594" fg:w="9"/><text x="34.7022%" y="975.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.05%)</title><rect x="34.5630%" y="885" width="0.0493%" height="15" fill="rgb(213,191,49)" fg:x="5612" fg:w="8"/><text x="34.8130%" y="895.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="34.6123%" y="885" width="0.0123%" height="15" fill="rgb(210,226,19)" fg:x="5620" fg:w="2"/><text x="34.8623%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.14%)</title><rect x="34.5076%" y="965" width="0.1417%" height="15" fill="rgb(229,97,18)" fg:x="5603" fg:w="23"/><text x="34.7576%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.10%)</title><rect x="34.5507%" y="949" width="0.0985%" height="15" fill="rgb(211,167,15)" fg:x="5610" fg:w="16"/><text x="34.8007%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.10%)</title><rect x="34.5507%" y="933" width="0.0985%" height="15" fill="rgb(210,169,34)" fg:x="5610" fg:w="16"/><text x="34.8007%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.10%)</title><rect x="34.5507%" y="917" width="0.0985%" height="15" fill="rgb(241,121,31)" fg:x="5610" fg:w="16"/><text x="34.8007%" y="927.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.09%)</title><rect x="34.5630%" y="901" width="0.0862%" height="15" fill="rgb(232,40,11)" fg:x="5612" fg:w="14"/><text x="34.8130%" y="911.50"></text></g><g><title>__rust_alloc (4 samples, 0.02%)</title><rect x="34.6246%" y="885" width="0.0246%" height="15" fill="rgb(205,86,26)" fg:x="5622" fg:w="4"/><text x="34.8746%" y="895.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (2 samples, 0.01%)</title><rect x="34.6554%" y="949" width="0.0123%" height="15" fill="rgb(231,126,28)" fg:x="5627" fg:w="2"/><text x="34.9054%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (4 samples, 0.02%)</title><rect x="34.6493%" y="965" width="0.0246%" height="15" fill="rgb(219,221,18)" fg:x="5626" fg:w="4"/><text x="34.8993%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (13 samples, 0.08%)</title><rect x="34.6801%" y="949" width="0.0801%" height="15" fill="rgb(211,40,0)" fg:x="5631" fg:w="13"/><text x="34.9301%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.08%)</title><rect x="34.6801%" y="933" width="0.0801%" height="15" fill="rgb(239,85,43)" fg:x="5631" fg:w="13"/><text x="34.9301%" y="943.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (14 samples, 0.09%)</title><rect x="34.6801%" y="965" width="0.0862%" height="15" fill="rgb(231,55,21)" fg:x="5631" fg:w="14"/><text x="34.9301%" y="975.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (62 samples, 0.38%)</title><rect x="34.4029%" y="981" width="0.3818%" height="15" fill="rgb(225,184,43)" fg:x="5586" fg:w="62"/><text x="34.6529%" y="991.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3 samples, 0.02%)</title><rect x="34.7663%" y="965" width="0.0185%" height="15" fill="rgb(251,158,41)" fg:x="5645" fg:w="3"/><text x="35.0163%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="35.6285%" y="933" width="0.0123%" height="15" fill="rgb(234,159,37)" fg:x="5785" fg:w="2"/><text x="35.8785%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="36.0658%" y="917" width="0.0123%" height="15" fill="rgb(216,204,22)" fg:x="5856" fg:w="2"/><text x="36.3158%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.05%)</title><rect x="36.9218%" y="885" width="0.0493%" height="15" fill="rgb(214,17,3)" fg:x="5995" fg:w="8"/><text x="37.1718%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="39.0405%" y="869" width="0.3572%" height="15" fill="rgb(212,111,17)" fg:x="6339" fg:w="58"/><text x="39.2905%" y="879.50"></text></g><g><title>__rust_probestack (16 samples, 0.10%)</title><rect x="39.2991%" y="853" width="0.0985%" height="15" fill="rgb(221,157,24)" fg:x="6381" fg:w="16"/><text x="39.5491%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="39.3977%" y="869" width="0.0246%" height="15" fill="rgb(252,16,13)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="879.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="39.3977%" y="853" width="0.0246%" height="15" fill="rgb(221,62,2)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="863.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="39.3977%" y="837" width="0.0246%" height="15" fill="rgb(247,87,22)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="847.50"></text></g><g><title>hrtimer_interrupt (4 samples, 0.02%)</title><rect x="39.3977%" y="821" width="0.0246%" height="15" fill="rgb(215,73,9)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="831.50"></text></g><g><title>__hrtimer_run_queues (4 samples, 0.02%)</title><rect x="39.3977%" y="805" width="0.0246%" height="15" fill="rgb(207,175,33)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="815.50"></text></g><g><title>tick_sched_timer (4 samples, 0.02%)</title><rect x="39.3977%" y="789" width="0.0246%" height="15" fill="rgb(243,129,54)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="799.50"></text></g><g><title>tick_sched_handle (4 samples, 0.02%)</title><rect x="39.3977%" y="773" width="0.0246%" height="15" fill="rgb(227,119,45)" fg:x="6397" fg:w="4"/><text x="39.6477%" y="783.50"></text></g><g><title>update_process_times (3 samples, 0.02%)</title><rect x="39.4038%" y="757" width="0.0185%" height="15" fill="rgb(205,109,36)" fg:x="6398" fg:w="3"/><text x="39.6538%" y="767.50"></text></g><g><title>scheduler_tick (3 samples, 0.02%)</title><rect x="39.4038%" y="741" width="0.0185%" height="15" fill="rgb(205,6,39)" fg:x="6398" fg:w="3"/><text x="39.6538%" y="751.50"></text></g><g><title>task_tick_fair (3 samples, 0.02%)</title><rect x="39.4038%" y="725" width="0.0185%" height="15" fill="rgb(221,32,16)" fg:x="6398" fg:w="3"/><text x="39.6538%" y="735.50"></text></g><g><title>update_load_avg (3 samples, 0.02%)</title><rect x="39.4038%" y="709" width="0.0185%" height="15" fill="rgb(228,144,50)" fg:x="6398" fg:w="3"/><text x="39.6538%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="39.4223%" y="869" width="0.0246%" height="15" fill="rgb(229,201,53)" fg:x="6401" fg:w="4"/><text x="39.6723%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="39.4223%" y="853" width="0.0246%" height="15" fill="rgb(249,153,27)" fg:x="6401" fg:w="4"/><text x="39.6723%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.02%)</title><rect x="39.4223%" y="837" width="0.0246%" height="15" fill="rgb(227,106,25)" fg:x="6401" fg:w="4"/><text x="39.6723%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;latte::workload::write::Write&lt;alloc::boxed::Box&lt;scylla::transport::session::Session&gt;&gt;&gt;&gt; (67 samples, 0.41%)</title><rect x="39.4469%" y="869" width="0.4126%" height="15" fill="rgb(230,65,29)" fg:x="6405" fg:w="67"/><text x="39.6969%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.41%)</title><rect x="39.4469%" y="853" width="0.4126%" height="15" fill="rgb(221,57,46)" fg:x="6405" fg:w="67"/><text x="39.6969%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (67 samples, 0.41%)</title><rect x="39.4469%" y="837" width="0.4126%" height="15" fill="rgb(229,161,17)" fg:x="6405" fg:w="67"/><text x="39.6969%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (67 samples, 0.41%)</title><rect x="39.4469%" y="821" width="0.4126%" height="15" fill="rgb(222,213,11)" fg:x="6405" fg:w="67"/><text x="39.6969%" y="831.50"></text></g><g><title>__GI___libc_free (17 samples, 0.10%)</title><rect x="39.8842%" y="789" width="0.1047%" height="15" fill="rgb(235,35,13)" fg:x="6476" fg:w="17"/><text x="40.1342%" y="799.50"></text></g><g><title>_int_free (6 samples, 0.04%)</title><rect x="39.9520%" y="773" width="0.0370%" height="15" fill="rgb(233,158,34)" fg:x="6487" fg:w="6"/><text x="40.2020%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (23 samples, 0.14%)</title><rect x="39.8596%" y="869" width="0.1417%" height="15" fill="rgb(215,151,48)" fg:x="6472" fg:w="23"/><text x="40.1096%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (23 samples, 0.14%)</title><rect x="39.8596%" y="853" width="0.1417%" height="15" fill="rgb(229,84,14)" fg:x="6472" fg:w="23"/><text x="40.1096%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.14%)</title><rect x="39.8596%" y="837" width="0.1417%" height="15" fill="rgb(229,68,14)" fg:x="6472" fg:w="23"/><text x="40.1096%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.13%)</title><rect x="39.8719%" y="821" width="0.1293%" height="15" fill="rgb(243,106,26)" fg:x="6474" fg:w="21"/><text x="40.1219%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.12%)</title><rect x="39.8781%" y="805" width="0.1232%" height="15" fill="rgb(206,45,38)" fg:x="6475" fg:w="20"/><text x="40.1281%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.03%)</title><rect x="40.0813%" y="821" width="0.0308%" height="15" fill="rgb(226,6,15)" fg:x="6508" fg:w="5"/><text x="40.3313%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.09%)</title><rect x="40.0382%" y="837" width="0.0862%" height="15" fill="rgb(232,22,54)" fg:x="6501" fg:w="14"/><text x="40.2882%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[scylla::frame::response::result::ColumnSpec]&gt; (2 samples, 0.01%)</title><rect x="40.1121%" y="821" width="0.0123%" height="15" fill="rgb(229,222,32)" fg:x="6513" fg:w="2"/><text x="40.3621%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::connection::QueryResult&gt; (22 samples, 0.14%)</title><rect x="40.0012%" y="869" width="0.1355%" height="15" fill="rgb(228,62,29)" fg:x="6495" fg:w="22"/><text x="40.2512%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scylla::frame::response::result::ColumnSpec&gt;&gt; (16 samples, 0.10%)</title><rect x="40.0382%" y="853" width="0.0985%" height="15" fill="rgb(251,103,34)" fg:x="6501" fg:w="16"/><text x="40.2882%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scylla::frame::response::result::ColumnSpec&gt;&gt; (2 samples, 0.01%)</title><rect x="40.1244%" y="837" width="0.0123%" height="15" fill="rgb(233,12,30)" fg:x="6515" fg:w="2"/><text x="40.3744%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="40.1244%" y="821" width="0.0123%" height="15" fill="rgb(238,52,0)" fg:x="6515" fg:w="2"/><text x="40.3744%" y="831.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.02%)</title><rect x="40.4447%" y="677" width="0.0246%" height="15" fill="rgb(223,98,5)" fg:x="6567" fg:w="4"/><text x="40.6947%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.02%)</title><rect x="40.4447%" y="661" width="0.0246%" height="15" fill="rgb(228,75,37)" fg:x="6567" fg:w="4"/><text x="40.6947%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="40.4755%" y="677" width="0.0246%" height="15" fill="rgb(205,115,49)" fg:x="6572" fg:w="4"/><text x="40.7255%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.02%)</title><rect x="40.4755%" y="661" width="0.0246%" height="15" fill="rgb(250,154,43)" fg:x="6572" fg:w="4"/><text x="40.7255%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (4 samples, 0.02%)</title><rect x="40.4755%" y="645" width="0.0246%" height="15" fill="rgb(226,43,29)" fg:x="6572" fg:w="4"/><text x="40.7255%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (8 samples, 0.05%)</title><rect x="40.5124%" y="661" width="0.0493%" height="15" fill="rgb(249,228,39)" fg:x="6578" fg:w="8"/><text x="40.7624%" y="671.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (8 samples, 0.05%)</title><rect x="40.5124%" y="645" width="0.0493%" height="15" fill="rgb(216,79,43)" fg:x="6578" fg:w="8"/><text x="40.7624%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.05%)</title><rect x="40.5124%" y="629" width="0.0493%" height="15" fill="rgb(228,95,12)" fg:x="6578" fg:w="8"/><text x="40.7624%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (4 samples, 0.02%)</title><rect x="40.5617%" y="661" width="0.0246%" height="15" fill="rgb(249,221,15)" fg:x="6586" fg:w="4"/><text x="40.8117%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.02%)</title><rect x="40.5617%" y="645" width="0.0246%" height="15" fill="rgb(233,34,13)" fg:x="6586" fg:w="4"/><text x="40.8117%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (6 samples, 0.04%)</title><rect x="40.5863%" y="661" width="0.0370%" height="15" fill="rgb(214,103,39)" fg:x="6590" fg:w="6"/><text x="40.8363%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.04%)</title><rect x="40.5863%" y="645" width="0.0370%" height="15" fill="rgb(251,126,39)" fg:x="6590" fg:w="6"/><text x="40.8363%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (10 samples, 0.06%)</title><rect x="40.6233%" y="645" width="0.0616%" height="15" fill="rgb(214,216,36)" fg:x="6596" fg:w="10"/><text x="40.8733%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.07%)</title><rect x="40.6233%" y="661" width="0.0739%" height="15" fill="rgb(220,221,8)" fg:x="6596" fg:w="12"/><text x="40.8733%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.01%)</title><rect x="40.6849%" y="645" width="0.0123%" height="15" fill="rgb(240,216,3)" fg:x="6606" fg:w="2"/><text x="40.9349%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (3 samples, 0.02%)</title><rect x="40.6972%" y="661" width="0.0185%" height="15" fill="rgb(232,218,17)" fg:x="6608" fg:w="3"/><text x="40.9472%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.02%)</title><rect x="40.6972%" y="645" width="0.0185%" height="15" fill="rgb(229,163,45)" fg:x="6608" fg:w="3"/><text x="40.9472%" y="655.50"></text></g><g><title>rand_chacha::guts::round (52 samples, 0.32%)</title><rect x="40.5124%" y="677" width="0.3203%" height="15" fill="rgb(231,110,42)" fg:x="6578" fg:w="52"/><text x="40.7624%" y="687.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (19 samples, 0.12%)</title><rect x="40.7156%" y="661" width="0.1170%" height="15" fill="rgb(208,170,48)" fg:x="6611" fg:w="19"/><text x="40.9656%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (19 samples, 0.12%)</title><rect x="40.7156%" y="645" width="0.1170%" height="15" fill="rgb(239,116,25)" fg:x="6611" fg:w="19"/><text x="40.9656%" y="655.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (68 samples, 0.42%)</title><rect x="40.4262%" y="725" width="0.4188%" height="15" fill="rgb(219,200,50)" fg:x="6564" fg:w="68"/><text x="40.6762%" y="735.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (66 samples, 0.41%)</title><rect x="40.4385%" y="709" width="0.4065%" height="15" fill="rgb(245,200,0)" fg:x="6566" fg:w="66"/><text x="40.6885%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (65 samples, 0.40%)</title><rect x="40.4447%" y="693" width="0.4003%" height="15" fill="rgb(245,119,33)" fg:x="6567" fg:w="65"/><text x="40.6947%" y="703.50"></text></g><g><title>rand_chacha::guts::undiagonalize (2 samples, 0.01%)</title><rect x="40.8327%" y="677" width="0.0123%" height="15" fill="rgb(231,125,12)" fg:x="6630" fg:w="2"/><text x="41.0827%" y="687.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (2 samples, 0.01%)</title><rect x="40.8327%" y="661" width="0.0123%" height="15" fill="rgb(216,96,41)" fg:x="6630" fg:w="2"/><text x="41.0827%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.01%)</title><rect x="40.8327%" y="645" width="0.0123%" height="15" fill="rgb(248,43,45)" fg:x="6630" fg:w="2"/><text x="41.0827%" y="655.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (71 samples, 0.44%)</title><rect x="40.4139%" y="773" width="0.4373%" height="15" fill="rgb(217,222,7)" fg:x="6562" fg:w="71"/><text x="40.6639%" y="783.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (71 samples, 0.44%)</title><rect x="40.4139%" y="757" width="0.4373%" height="15" fill="rgb(233,28,6)" fg:x="6562" fg:w="71"/><text x="40.6639%" y="767.50"></text></g><g><title>rand_chacha::guts::refill_wide (71 samples, 0.44%)</title><rect x="40.4139%" y="741" width="0.4373%" height="15" fill="rgb(231,218,15)" fg:x="6562" fg:w="71"/><text x="40.6639%" y="751.50"></text></g><g><title>&lt;&amp;mut R as rand_core::RngCore&gt;::try_fill_bytes (2 samples, 0.01%)</title><rect x="40.8511%" y="725" width="0.0123%" height="15" fill="rgb(226,171,48)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="735.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (2 samples, 0.01%)</title><rect x="40.8511%" y="709" width="0.0123%" height="15" fill="rgb(235,201,9)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="719.50"></text></g><g><title>getrandom::imp::getrandom_inner (2 samples, 0.01%)</title><rect x="40.8511%" y="693" width="0.0123%" height="15" fill="rgb(217,80,15)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="703.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (2 samples, 0.01%)</title><rect x="40.8511%" y="677" width="0.0123%" height="15" fill="rgb(219,152,8)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="687.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (2 samples, 0.01%)</title><rect x="40.8511%" y="661" width="0.0123%" height="15" fill="rgb(243,107,38)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="671.50"></text></g><g><title>getrandom::imp::getrandom (2 samples, 0.01%)</title><rect x="40.8511%" y="645" width="0.0123%" height="15" fill="rgb(231,17,5)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="655.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="40.8511%" y="629" width="0.0123%" height="15" fill="rgb(209,25,54)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="40.8511%" y="613" width="0.0123%" height="15" fill="rgb(219,0,2)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="623.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="40.8511%" y="597" width="0.0123%" height="15" fill="rgb(246,9,5)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="607.50"></text></g><g><title>urandom_read_nowarn.constprop.0 (2 samples, 0.01%)</title><rect x="40.8511%" y="581" width="0.0123%" height="15" fill="rgb(226,159,4)" fg:x="6633" fg:w="2"/><text x="41.1011%" y="591.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (3 samples, 0.02%)</title><rect x="40.8511%" y="773" width="0.0185%" height="15" fill="rgb(219,175,34)" fg:x="6633" fg:w="3"/><text x="41.1011%" y="783.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (3 samples, 0.02%)</title><rect x="40.8511%" y="757" width="0.0185%" height="15" fill="rgb(236,10,46)" fg:x="6633" fg:w="3"/><text x="41.1011%" y="767.50"></text></g><g><title>rand_core::SeedableRng::from_rng (3 samples, 0.02%)</title><rect x="40.8511%" y="741" width="0.0185%" height="15" fill="rgb(240,211,16)" fg:x="6633" fg:w="3"/><text x="41.1011%" y="751.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (114 samples, 0.70%)</title><rect x="40.1983%" y="853" width="0.7021%" height="15" fill="rgb(205,3,43)" fg:x="6527" fg:w="114"/><text x="40.4483%" y="863.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (114 samples, 0.70%)</title><rect x="40.1983%" y="837" width="0.7021%" height="15" fill="rgb(245,7,22)" fg:x="6527" fg:w="114"/><text x="40.4483%" y="847.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (114 samples, 0.70%)</title><rect x="40.1983%" y="821" width="0.7021%" height="15" fill="rgb(239,132,32)" fg:x="6527" fg:w="114"/><text x="40.4483%" y="831.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (80 samples, 0.49%)</title><rect x="40.4077%" y="805" width="0.4927%" height="15" fill="rgb(228,202,34)" fg:x="6561" fg:w="80"/><text x="40.6577%" y="815.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (79 samples, 0.49%)</title><rect x="40.4139%" y="789" width="0.4865%" height="15" fill="rgb(254,200,22)" fg:x="6562" fg:w="79"/><text x="40.6639%" y="799.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (5 samples, 0.03%)</title><rect x="40.8696%" y="773" width="0.0308%" height="15" fill="rgb(219,10,39)" fg:x="6636" fg:w="5"/><text x="41.1196%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="40.8758%" y="757" width="0.0246%" height="15" fill="rgb(226,210,39)" fg:x="6637" fg:w="4"/><text x="41.1258%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="40.8758%" y="741" width="0.0246%" height="15" fill="rgb(208,219,16)" fg:x="6637" fg:w="4"/><text x="41.1258%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.08%)</title><rect x="40.9004%" y="853" width="0.0801%" height="15" fill="rgb(216,158,51)" fg:x="6641" fg:w="13"/><text x="41.1504%" y="863.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="40.9620%" y="837" width="0.0185%" height="15" fill="rgb(233,14,44)" fg:x="6651" fg:w="3"/><text x="41.2120%" y="847.50"></text></g><g><title>__GI___libc_malloc (63 samples, 0.39%)</title><rect x="40.9928%" y="741" width="0.3880%" height="15" fill="rgb(237,97,39)" fg:x="6656" fg:w="63"/><text x="41.2428%" y="751.50"></text></g><g><title>_int_malloc (34 samples, 0.21%)</title><rect x="41.1714%" y="725" width="0.2094%" height="15" fill="rgb(218,198,43)" fg:x="6685" fg:w="34"/><text x="41.4214%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.01%)</title><rect x="41.3685%" y="709" width="0.0123%" height="15" fill="rgb(231,104,20)" fg:x="6717" fg:w="2"/><text x="41.6185%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (67 samples, 0.41%)</title><rect x="40.9805%" y="853" width="0.4126%" height="15" fill="rgb(254,36,13)" fg:x="6654" fg:w="67"/><text x="41.2305%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.41%)</title><rect x="40.9805%" y="837" width="0.4126%" height="15" fill="rgb(248,14,50)" fg:x="6654" fg:w="67"/><text x="41.2305%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (65 samples, 0.40%)</title><rect x="40.9928%" y="821" width="0.4003%" height="15" fill="rgb(217,107,29)" fg:x="6656" fg:w="65"/><text x="41.2428%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (65 samples, 0.40%)</title><rect x="40.9928%" y="805" width="0.4003%" height="15" fill="rgb(251,169,33)" fg:x="6656" fg:w="65"/><text x="41.2428%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.40%)</title><rect x="40.9928%" y="789" width="0.4003%" height="15" fill="rgb(217,108,32)" fg:x="6656" fg:w="65"/><text x="41.2428%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.40%)</title><rect x="40.9928%" y="773" width="0.4003%" height="15" fill="rgb(219,66,42)" fg:x="6656" fg:w="65"/><text x="41.2428%" y="783.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.40%)</title><rect x="40.9928%" y="757" width="0.4003%" height="15" fill="rgb(206,180,7)" fg:x="6656" fg:w="65"/><text x="41.2428%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="41.3931%" y="853" width="0.0308%" height="15" fill="rgb(208,226,31)" fg:x="6721" fg:w="5"/><text x="41.6431%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="41.3931%" y="837" width="0.0308%" height="15" fill="rgb(218,26,49)" fg:x="6721" fg:w="5"/><text x="41.6431%" y="847.50"></text></g><g><title>latte::workload::gen_random_blob (217 samples, 1.34%)</title><rect x="40.1367%" y="869" width="1.3365%" height="15" fill="rgb(233,197,48)" fg:x="6517" fg:w="217"/><text x="40.3867%" y="879.50"></text></g><g><title>rand::rngs::thread::thread_rng (8 samples, 0.05%)</title><rect x="41.4239%" y="853" width="0.0493%" height="15" fill="rgb(252,181,51)" fg:x="6726" fg:w="8"/><text x="41.6739%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="41.4547%" y="837" width="0.0185%" height="15" fill="rgb(253,90,19)" fg:x="6731" fg:w="3"/><text x="41.7047%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.02%)</title><rect x="41.4547%" y="821" width="0.0185%" height="15" fill="rgb(215,171,30)" fg:x="6731" fg:w="3"/><text x="41.7047%" y="831.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (3 samples, 0.02%)</title><rect x="41.4547%" y="805" width="0.0185%" height="15" fill="rgb(214,222,9)" fg:x="6731" fg:w="3"/><text x="41.7047%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="41.4547%" y="789" width="0.0185%" height="15" fill="rgb(223,3,22)" fg:x="6731" fg:w="3"/><text x="41.7047%" y="799.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="41.4609%" y="773" width="0.0123%" height="15" fill="rgb(225,196,46)" fg:x="6732" fg:w="2"/><text x="41.7109%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="41.4609%" y="757" width="0.0123%" height="15" fill="rgb(209,110,37)" fg:x="6732" fg:w="2"/><text x="41.7109%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.02%)</title><rect x="41.5594%" y="725" width="0.0246%" height="15" fill="rgb(249,89,12)" fg:x="6748" fg:w="4"/><text x="41.8094%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.01%)</title><rect x="41.5840%" y="725" width="0.0123%" height="15" fill="rgb(226,27,33)" fg:x="6752" fg:w="2"/><text x="41.8340%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.01%)</title><rect x="41.5964%" y="725" width="0.0123%" height="15" fill="rgb(213,82,22)" fg:x="6754" fg:w="2"/><text x="41.8464%" y="735.50"></text></g><g><title>__lll_lock_wait_private (2 samples, 0.01%)</title><rect x="41.8181%" y="645" width="0.0123%" height="15" fill="rgb(248,140,0)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="41.8181%" y="629" width="0.0123%" height="15" fill="rgb(228,106,3)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="639.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="41.8181%" y="613" width="0.0123%" height="15" fill="rgb(209,23,37)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="623.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="41.8181%" y="597" width="0.0123%" height="15" fill="rgb(241,93,50)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="607.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="41.8181%" y="581" width="0.0123%" height="15" fill="rgb(253,46,43)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="591.50"></text></g><g><title>futex_wait (2 samples, 0.01%)</title><rect x="41.8181%" y="565" width="0.0123%" height="15" fill="rgb(226,206,43)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="575.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.01%)</title><rect x="41.8181%" y="549" width="0.0123%" height="15" fill="rgb(217,54,7)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="559.50"></text></g><g><title>schedule (2 samples, 0.01%)</title><rect x="41.8181%" y="533" width="0.0123%" height="15" fill="rgb(223,5,52)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="543.50"></text></g><g><title>__schedule (2 samples, 0.01%)</title><rect x="41.8181%" y="517" width="0.0123%" height="15" fill="rgb(206,52,46)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="527.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="41.8181%" y="501" width="0.0123%" height="15" fill="rgb(253,136,11)" fg:x="6790" fg:w="2"/><text x="42.0681%" y="511.50"></text></g><g><title>[libc-2.33.so] (2 samples, 0.01%)</title><rect x="42.0275%" y="629" width="0.0123%" height="15" fill="rgb(208,106,33)" fg:x="6824" fg:w="2"/><text x="42.2775%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="42.0459%" y="629" width="0.0308%" height="15" fill="rgb(206,54,4)" fg:x="6827" fg:w="5"/><text x="42.2959%" y="639.50"></text></g><g><title>_int_free (18 samples, 0.11%)</title><rect x="42.0767%" y="629" width="0.1109%" height="15" fill="rgb(213,3,15)" fg:x="6832" fg:w="18"/><text x="42.3267%" y="639.50"></text></g><g><title>_int_malloc (63 samples, 0.39%)</title><rect x="42.1876%" y="629" width="0.3880%" height="15" fill="rgb(252,211,39)" fg:x="6850" fg:w="63"/><text x="42.4376%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.06%)</title><rect x="42.5140%" y="613" width="0.0616%" height="15" fill="rgb(223,6,36)" fg:x="6903" fg:w="10"/><text x="42.7640%" y="623.50"></text></g><g><title>_int_realloc (125 samples, 0.77%)</title><rect x="41.8304%" y="645" width="0.7698%" height="15" fill="rgb(252,169,45)" fg:x="6792" fg:w="125"/><text x="42.0804%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (4 samples, 0.02%)</title><rect x="42.5756%" y="629" width="0.0246%" height="15" fill="rgb(212,48,26)" fg:x="6913" fg:w="4"/><text x="42.8256%" y="639.50"></text></g><g><title>__GI___libc_realloc (159 samples, 0.98%)</title><rect x="41.6333%" y="661" width="0.9792%" height="15" fill="rgb(251,102,48)" fg:x="6760" fg:w="159"/><text x="41.8833%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="42.6002%" y="645" width="0.0123%" height="15" fill="rgb(243,208,16)" fg:x="6917" fg:w="2"/><text x="42.8502%" y="655.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="42.6002%" y="629" width="0.0123%" height="15" fill="rgb(219,96,24)" fg:x="6917" fg:w="2"/><text x="42.8502%" y="639.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="42.6002%" y="613" width="0.0123%" height="15" fill="rgb(219,33,29)" fg:x="6917" fg:w="2"/><text x="42.8502%" y="623.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="42.6002%" y="597" width="0.0123%" height="15" fill="rgb(223,176,5)" fg:x="6917" fg:w="2"/><text x="42.8502%" y="607.50"></text></g><g><title>futex_wake (2 samples, 0.01%)</title><rect x="42.6002%" y="581" width="0.0123%" height="15" fill="rgb(228,140,14)" fg:x="6917" fg:w="2"/><text x="42.8502%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (165 samples, 1.02%)</title><rect x="41.6333%" y="709" width="1.0162%" height="15" fill="rgb(217,179,31)" fg:x="6760" fg:w="165"/><text x="41.8833%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (165 samples, 1.02%)</title><rect x="41.6333%" y="693" width="1.0162%" height="15" fill="rgb(230,9,30)" fg:x="6760" fg:w="165"/><text x="41.8833%" y="703.50"></text></g><g><title>alloc::alloc::realloc (165 samples, 1.02%)</title><rect x="41.6333%" y="677" width="1.0162%" height="15" fill="rgb(230,136,20)" fg:x="6760" fg:w="165"/><text x="41.8833%" y="687.50"></text></g><g><title>__rdl_realloc (6 samples, 0.04%)</title><rect x="42.6126%" y="661" width="0.0370%" height="15" fill="rgb(215,210,22)" fg:x="6919" fg:w="6"/><text x="42.8626%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.02%)</title><rect x="42.6249%" y="645" width="0.0246%" height="15" fill="rgb(218,43,5)" fg:x="6921" fg:w="4"/><text x="42.8749%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (170 samples, 1.05%)</title><rect x="41.6087%" y="725" width="1.0470%" height="15" fill="rgb(216,11,5)" fg:x="6756" fg:w="170"/><text x="41.8587%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (182 samples, 1.12%)</title><rect x="41.5409%" y="789" width="1.1209%" height="15" fill="rgb(209,82,29)" fg:x="6745" fg:w="182"/><text x="41.7909%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (182 samples, 1.12%)</title><rect x="41.5409%" y="773" width="1.1209%" height="15" fill="rgb(244,115,12)" fg:x="6745" fg:w="182"/><text x="41.7909%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (182 samples, 1.12%)</title><rect x="41.5409%" y="757" width="1.1209%" height="15" fill="rgb(222,82,18)" fg:x="6745" fg:w="182"/><text x="41.7909%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (180 samples, 1.11%)</title><rect x="41.5532%" y="741" width="1.1086%" height="15" fill="rgb(249,227,8)" fg:x="6747" fg:w="180"/><text x="41.8032%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (188 samples, 1.16%)</title><rect x="41.5224%" y="837" width="1.1578%" height="15" fill="rgb(253,141,45)" fg:x="6742" fg:w="188"/><text x="41.7724%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (188 samples, 1.16%)</title><rect x="41.5224%" y="821" width="1.1578%" height="15" fill="rgb(234,184,4)" fg:x="6742" fg:w="188"/><text x="41.7724%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (188 samples, 1.16%)</title><rect x="41.5224%" y="805" width="1.1578%" height="15" fill="rgb(218,194,23)" fg:x="6742" fg:w="188"/><text x="41.7724%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="42.6618%" y="789" width="0.0185%" height="15" fill="rgb(235,66,41)" fg:x="6927" fg:w="3"/><text x="42.9118%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="42.6680%" y="773" width="0.0123%" height="15" fill="rgb(245,217,1)" fg:x="6928" fg:w="2"/><text x="42.9180%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as scylla::frame::value::Value&gt;::serialize (194 samples, 1.19%)</title><rect x="41.4978%" y="853" width="1.1948%" height="15" fill="rgb(229,91,1)" fg:x="6738" fg:w="194"/><text x="41.7478%" y="863.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i32 (2 samples, 0.01%)</title><rect x="42.6803%" y="837" width="0.0123%" height="15" fill="rgb(207,101,30)" fg:x="6930" fg:w="2"/><text x="42.9303%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (2 samples, 0.01%)</title><rect x="42.6803%" y="821" width="0.0123%" height="15" fill="rgb(223,82,49)" fg:x="6930" fg:w="2"/><text x="42.9303%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="42.6803%" y="805" width="0.0123%" height="15" fill="rgb(218,167,17)" fg:x="6930" fg:w="2"/><text x="42.9303%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="42.6803%" y="789" width="0.0123%" height="15" fill="rgb(208,103,14)" fg:x="6930" fg:w="2"/><text x="42.9303%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="42.6803%" y="773" width="0.0123%" height="15" fill="rgb(238,20,8)" fg:x="6930" fg:w="2"/><text x="42.9303%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.02%)</title><rect x="42.7480%" y="693" width="0.0246%" height="15" fill="rgb(218,80,54)" fg:x="6941" fg:w="4"/><text x="42.9980%" y="703.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.21%)</title><rect x="42.7850%" y="677" width="0.2094%" height="15" fill="rgb(240,144,17)" fg:x="6947" fg:w="34"/><text x="43.0350%" y="687.50"></text></g><g><title>_int_malloc (16 samples, 0.10%)</title><rect x="42.8959%" y="661" width="0.0985%" height="15" fill="rgb(245,27,50)" fg:x="6965" fg:w="16"/><text x="43.1459%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.25%)</title><rect x="42.7727%" y="693" width="0.2464%" height="15" fill="rgb(251,51,7)" fg:x="6945" fg:w="40"/><text x="43.0227%" y="703.50"></text></g><g><title>__rdl_alloc (4 samples, 0.02%)</title><rect x="42.9944%" y="677" width="0.0246%" height="15" fill="rgb(245,217,29)" fg:x="6981" fg:w="4"/><text x="43.2444%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.02%)</title><rect x="43.0006%" y="661" width="0.0185%" height="15" fill="rgb(221,176,29)" fg:x="6982" fg:w="3"/><text x="43.2506%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (48 samples, 0.30%)</title><rect x="42.7296%" y="709" width="0.2956%" height="15" fill="rgb(212,180,24)" fg:x="6938" fg:w="48"/><text x="42.9796%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (51 samples, 0.31%)</title><rect x="42.7173%" y="757" width="0.3141%" height="15" fill="rgb(254,24,2)" fg:x="6936" fg:w="51"/><text x="42.9673%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (51 samples, 0.31%)</title><rect x="42.7173%" y="741" width="0.3141%" height="15" fill="rgb(230,100,2)" fg:x="6936" fg:w="51"/><text x="42.9673%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.31%)</title><rect x="42.7173%" y="725" width="0.3141%" height="15" fill="rgb(219,142,25)" fg:x="6936" fg:w="51"/><text x="42.9673%" y="735.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i32 (53 samples, 0.33%)</title><rect x="42.7111%" y="837" width="0.3264%" height="15" fill="rgb(240,73,43)" fg:x="6935" fg:w="53"/><text x="42.9611%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (53 samples, 0.33%)</title><rect x="42.7111%" y="821" width="0.3264%" height="15" fill="rgb(214,114,15)" fg:x="6935" fg:w="53"/><text x="42.9611%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (53 samples, 0.33%)</title><rect x="42.7111%" y="805" width="0.3264%" height="15" fill="rgb(207,130,4)" fg:x="6935" fg:w="53"/><text x="42.9611%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (53 samples, 0.33%)</title><rect x="42.7111%" y="789" width="0.3264%" height="15" fill="rgb(221,25,40)" fg:x="6935" fg:w="53"/><text x="42.9611%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (53 samples, 0.33%)</title><rect x="42.7111%" y="773" width="0.3264%" height="15" fill="rgb(241,184,7)" fg:x="6935" fg:w="53"/><text x="42.9611%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.01%)</title><rect x="43.0437%" y="725" width="0.0123%" height="15" fill="rgb(235,159,4)" fg:x="6989" fg:w="2"/><text x="43.2937%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="43.0683%" y="693" width="0.0123%" height="15" fill="rgb(214,87,48)" fg:x="6993" fg:w="2"/><text x="43.3183%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (2 samples, 0.01%)</title><rect x="43.0806%" y="693" width="0.0123%" height="15" fill="rgb(246,198,24)" fg:x="6995" fg:w="2"/><text x="43.3306%" y="703.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.01%)</title><rect x="43.2777%" y="469" width="0.0123%" height="15" fill="rgb(209,66,40)" fg:x="7027" fg:w="2"/><text x="43.5277%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="43.2900%" y="469" width="0.0431%" height="15" fill="rgb(233,147,39)" fg:x="7029" fg:w="7"/><text x="43.5400%" y="479.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.04%)</title><rect x="43.2900%" y="453" width="0.0431%" height="15" fill="rgb(231,145,52)" fg:x="7029" fg:w="7"/><text x="43.5400%" y="463.50"></text></g><g><title>x86_pmu_enable_all (7 samples, 0.04%)</title><rect x="43.2900%" y="437" width="0.0431%" height="15" fill="rgb(206,20,26)" fg:x="7029" fg:w="7"/><text x="43.5400%" y="447.50"></text></g><g><title>native_write_msr (7 samples, 0.04%)</title><rect x="43.2900%" y="421" width="0.0431%" height="15" fill="rgb(238,220,4)" fg:x="7029" fg:w="7"/><text x="43.5400%" y="431.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.08%)</title><rect x="43.2715%" y="565" width="0.0801%" height="15" fill="rgb(252,195,42)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="575.50"></text></g><g><title>do_futex (13 samples, 0.08%)</title><rect x="43.2715%" y="549" width="0.0801%" height="15" fill="rgb(209,10,6)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="559.50"></text></g><g><title>futex_wait (13 samples, 0.08%)</title><rect x="43.2715%" y="533" width="0.0801%" height="15" fill="rgb(229,3,52)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="543.50"></text></g><g><title>futex_wait_queue_me (13 samples, 0.08%)</title><rect x="43.2715%" y="517" width="0.0801%" height="15" fill="rgb(253,49,37)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="527.50"></text></g><g><title>schedule (13 samples, 0.08%)</title><rect x="43.2715%" y="501" width="0.0801%" height="15" fill="rgb(240,103,49)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="511.50"></text></g><g><title>__schedule (13 samples, 0.08%)</title><rect x="43.2715%" y="485" width="0.0801%" height="15" fill="rgb(250,182,30)" fg:x="7026" fg:w="13"/><text x="43.5215%" y="495.50"></text></g><g><title>psi_task_switch (3 samples, 0.02%)</title><rect x="43.3331%" y="469" width="0.0185%" height="15" fill="rgb(248,8,30)" fg:x="7036" fg:w="3"/><text x="43.5831%" y="479.50"></text></g><g><title>psi_group_change (2 samples, 0.01%)</title><rect x="43.3393%" y="453" width="0.0123%" height="15" fill="rgb(237,120,30)" fg:x="7037" fg:w="2"/><text x="43.5893%" y="463.50"></text></g><g><title>__lll_lock_wait_private (16 samples, 0.10%)</title><rect x="43.2715%" y="613" width="0.0985%" height="15" fill="rgb(221,146,34)" fg:x="7026" fg:w="16"/><text x="43.5215%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (16 samples, 0.10%)</title><rect x="43.2715%" y="597" width="0.0985%" height="15" fill="rgb(242,55,13)" fg:x="7026" fg:w="16"/><text x="43.5215%" y="607.50"></text></g><g><title>do_syscall_64 (16 samples, 0.10%)</title><rect x="43.2715%" y="581" width="0.0985%" height="15" fill="rgb(242,112,31)" fg:x="7026" fg:w="16"/><text x="43.5215%" y="591.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="43.3578%" y="565" width="0.0123%" height="15" fill="rgb(249,192,27)" fg:x="7040" fg:w="2"/><text x="43.6078%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="43.3578%" y="549" width="0.0123%" height="15" fill="rgb(208,204,44)" fg:x="7040" fg:w="2"/><text x="43.6078%" y="559.50"></text></g><g><title>__GI___libc_realloc (52 samples, 0.32%)</title><rect x="43.1114%" y="629" width="0.3203%" height="15" fill="rgb(208,93,54)" fg:x="7000" fg:w="52"/><text x="43.3614%" y="639.50"></text></g><g><title>_int_realloc (10 samples, 0.06%)</title><rect x="43.3701%" y="613" width="0.0616%" height="15" fill="rgb(242,1,31)" fg:x="7042" fg:w="10"/><text x="43.6201%" y="623.50"></text></g><g><title>__rdl_realloc (5 samples, 0.03%)</title><rect x="43.4317%" y="629" width="0.0308%" height="15" fill="rgb(241,83,25)" fg:x="7052" fg:w="5"/><text x="43.6817%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.01%)</title><rect x="43.4501%" y="613" width="0.0123%" height="15" fill="rgb(205,169,50)" fg:x="7055" fg:w="2"/><text x="43.7001%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (65 samples, 0.40%)</title><rect x="43.0929%" y="693" width="0.4003%" height="15" fill="rgb(239,186,37)" fg:x="6997" fg:w="65"/><text x="43.3429%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (62 samples, 0.38%)</title><rect x="43.1114%" y="677" width="0.3818%" height="15" fill="rgb(205,221,10)" fg:x="7000" fg:w="62"/><text x="43.3614%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (62 samples, 0.38%)</title><rect x="43.1114%" y="661" width="0.3818%" height="15" fill="rgb(218,196,15)" fg:x="7000" fg:w="62"/><text x="43.3614%" y="671.50"></text></g><g><title>alloc::alloc::realloc (62 samples, 0.38%)</title><rect x="43.1114%" y="645" width="0.3818%" height="15" fill="rgb(218,196,35)" fg:x="7000" fg:w="62"/><text x="43.3614%" y="655.50"></text></g><g><title>__rust_realloc (5 samples, 0.03%)</title><rect x="43.4625%" y="629" width="0.0308%" height="15" fill="rgb(233,63,24)" fg:x="7057" fg:w="5"/><text x="43.7125%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.43%)</title><rect x="43.0683%" y="709" width="0.4311%" height="15" fill="rgb(225,8,4)" fg:x="6993" fg:w="70"/><text x="43.3183%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (76 samples, 0.47%)</title><rect x="43.0437%" y="757" width="0.4681%" height="15" fill="rgb(234,105,35)" fg:x="6989" fg:w="76"/><text x="43.2937%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (76 samples, 0.47%)</title><rect x="43.0437%" y="741" width="0.4681%" height="15" fill="rgb(236,21,32)" fg:x="6989" fg:w="76"/><text x="43.2937%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 0.46%)</title><rect x="43.0560%" y="725" width="0.4557%" height="15" fill="rgb(228,109,6)" fg:x="6991" fg:w="74"/><text x="43.3060%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="43.4994%" y="709" width="0.0123%" height="15" fill="rgb(229,215,31)" fg:x="7063" fg:w="2"/><text x="43.7494%" y="719.50"></text></g><g><title>scylla::frame::value::SerializedValues::add_value (336 samples, 2.07%)</title><rect x="41.4732%" y="869" width="2.0693%" height="15" fill="rgb(221,52,54)" fg:x="6734" fg:w="336"/><text x="41.7232%" y="879.50">s..</text></g><g><title>&lt;i64 as scylla::frame::value::Value&gt;::serialize (138 samples, 0.85%)</title><rect x="42.6926%" y="853" width="0.8499%" height="15" fill="rgb(252,129,43)" fg:x="6932" fg:w="138"/><text x="42.9426%" y="863.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i64 (82 samples, 0.51%)</title><rect x="43.0375%" y="837" width="0.5050%" height="15" fill="rgb(248,183,27)" fg:x="6988" fg:w="82"/><text x="43.2875%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (82 samples, 0.51%)</title><rect x="43.0375%" y="821" width="0.5050%" height="15" fill="rgb(250,0,22)" fg:x="6988" fg:w="82"/><text x="43.2875%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (82 samples, 0.51%)</title><rect x="43.0375%" y="805" width="0.5050%" height="15" fill="rgb(213,166,10)" fg:x="6988" fg:w="82"/><text x="43.2875%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (82 samples, 0.51%)</title><rect x="43.0375%" y="789" width="0.5050%" height="15" fill="rgb(207,163,36)" fg:x="6988" fg:w="82"/><text x="43.2875%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (82 samples, 0.51%)</title><rect x="43.0375%" y="773" width="0.5050%" height="15" fill="rgb(208,122,22)" fg:x="6988" fg:w="82"/><text x="43.2875%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="43.5117%" y="757" width="0.0308%" height="15" fill="rgb(207,104,49)" fg:x="7065" fg:w="5"/><text x="43.7617%" y="767.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,068 samples, 6.58%)</title><rect x="36.9711%" y="885" width="6.5776%" height="15" fill="rgb(248,211,50)" fg:x="6003" fg:w="1068"/><text x="37.2211%" y="895.50">&lt;latte::w..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,214 samples, 7.48%)</title><rect x="36.0781%" y="901" width="7.4768%" height="15" fill="rgb(217,13,45)" fg:x="5858" fg:w="1214"/><text x="36.3281%" y="911.50">&lt;core::fut..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,248 samples, 7.69%)</title><rect x="36.0781%" y="917" width="7.6861%" height="15" fill="rgb(211,216,49)" fg:x="5858" fg:w="1248"/><text x="36.3281%" y="927.50">&lt;core::pin:..</text></g><g><title>core::pin::Pin&lt;&amp;mut core::pin::Pin&lt;P&gt;&gt;::as_deref_mut (34 samples, 0.21%)</title><rect x="43.5548%" y="901" width="0.2094%" height="15" fill="rgb(221,58,53)" fg:x="7072" fg:w="34"/><text x="43.8048%" y="911.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (34 samples, 0.21%)</title><rect x="43.5548%" y="885" width="0.2094%" height="15" fill="rgb(220,112,41)" fg:x="7072" fg:w="34"/><text x="43.8048%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (34 samples, 0.21%)</title><rect x="43.5548%" y="869" width="0.2094%" height="15" fill="rgb(236,38,28)" fg:x="7072" fg:w="34"/><text x="43.8048%" y="879.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (8 samples, 0.05%)</title><rect x="43.7642%" y="917" width="0.0493%" height="15" fill="rgb(227,195,22)" fg:x="7106" fg:w="8"/><text x="44.0142%" y="927.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.03%)</title><rect x="43.7827%" y="901" width="0.0308%" height="15" fill="rgb(214,55,33)" fg:x="7109" fg:w="5"/><text x="44.0327%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.03%)</title><rect x="43.7827%" y="885" width="0.0308%" height="15" fill="rgb(248,80,13)" fg:x="7109" fg:w="5"/><text x="44.0327%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.02%)</title><rect x="43.7889%" y="869" width="0.0246%" height="15" fill="rgb(238,52,6)" fg:x="7110" fg:w="4"/><text x="44.0389%" y="879.50"></text></g><g><title>core::time::Duration::new (2 samples, 0.01%)</title><rect x="43.8012%" y="853" width="0.0123%" height="15" fill="rgb(224,198,47)" fg:x="7112" fg:w="2"/><text x="44.0512%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="43.8135%" y="917" width="0.0123%" height="15" fill="rgb(233,171,20)" fg:x="7114" fg:w="2"/><text x="44.0635%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="43.8135%" y="901" width="0.0123%" height="15" fill="rgb(241,30,25)" fg:x="7114" fg:w="2"/><text x="44.0635%" y="911.50"></text></g><g><title>amd_pmu_disable_all (3 samples, 0.02%)</title><rect x="45.1253%" y="645" width="0.0185%" height="15" fill="rgb(207,171,38)" fg:x="7327" fg:w="3"/><text x="45.3753%" y="655.50"></text></g><g><title>x86_pmu_disable_all (3 samples, 0.02%)</title><rect x="45.1253%" y="629" width="0.0185%" height="15" fill="rgb(234,70,1)" fg:x="7327" fg:w="3"/><text x="45.3753%" y="639.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.02%)</title><rect x="45.1253%" y="661" width="0.0246%" height="15" fill="rgb(232,178,18)" fg:x="7327" fg:w="4"/><text x="45.3753%" y="671.50"></text></g><g><title>__update_load_avg_se (2 samples, 0.01%)</title><rect x="45.1684%" y="613" width="0.0123%" height="15" fill="rgb(241,78,40)" fg:x="7334" fg:w="2"/><text x="45.4184%" y="623.50"></text></g><g><title>dequeue_task_fair (7 samples, 0.04%)</title><rect x="45.1500%" y="661" width="0.0431%" height="15" fill="rgb(222,35,25)" fg:x="7331" fg:w="7"/><text x="45.4000%" y="671.50"></text></g><g><title>dequeue_entity (5 samples, 0.03%)</title><rect x="45.1623%" y="645" width="0.0308%" height="15" fill="rgb(207,92,16)" fg:x="7333" fg:w="5"/><text x="45.4123%" y="655.50"></text></g><g><title>update_load_avg (5 samples, 0.03%)</title><rect x="45.1623%" y="629" width="0.0308%" height="15" fill="rgb(216,59,51)" fg:x="7333" fg:w="5"/><text x="45.4123%" y="639.50"></text></g><g><title>sugov_update_single_freq (2 samples, 0.01%)</title><rect x="45.1808%" y="613" width="0.0123%" height="15" fill="rgb(213,80,28)" fg:x="7336" fg:w="2"/><text x="45.4308%" y="623.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.01%)</title><rect x="45.1931%" y="661" width="0.0123%" height="15" fill="rgb(220,93,7)" fg:x="7338" fg:w="2"/><text x="45.4431%" y="671.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="45.2054%" y="661" width="0.0123%" height="15" fill="rgb(225,24,44)" fg:x="7340" fg:w="2"/><text x="45.4554%" y="671.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.14%)</title><rect x="45.1069%" y="709" width="0.1355%" height="15" fill="rgb(243,74,40)" fg:x="7324" fg:w="22"/><text x="45.3569%" y="719.50"></text></g><g><title>schedule (22 samples, 0.14%)</title><rect x="45.1069%" y="693" width="0.1355%" height="15" fill="rgb(228,39,7)" fg:x="7324" fg:w="22"/><text x="45.3569%" y="703.50"></text></g><g><title>__schedule (21 samples, 0.13%)</title><rect x="45.1130%" y="677" width="0.1293%" height="15" fill="rgb(227,79,8)" fg:x="7325" fg:w="21"/><text x="45.3630%" y="687.50"></text></g><g><title>psi_task_switch (3 samples, 0.02%)</title><rect x="45.2239%" y="661" width="0.0185%" height="15" fill="rgb(236,58,11)" fg:x="7343" fg:w="3"/><text x="45.4739%" y="671.50"></text></g><g><title>psi_group_change (2 samples, 0.01%)</title><rect x="45.2300%" y="645" width="0.0123%" height="15" fill="rgb(249,63,35)" fg:x="7344" fg:w="2"/><text x="45.4800%" y="655.50"></text></g><g><title>__x64_sys_futex (41 samples, 0.25%)</title><rect x="45.0329%" y="757" width="0.2525%" height="15" fill="rgb(252,114,16)" fg:x="7312" fg:w="41"/><text x="45.2829%" y="767.50"></text></g><g><title>do_futex (41 samples, 0.25%)</title><rect x="45.0329%" y="741" width="0.2525%" height="15" fill="rgb(254,151,24)" fg:x="7312" fg:w="41"/><text x="45.2829%" y="751.50"></text></g><g><title>futex_wait (41 samples, 0.25%)</title><rect x="45.0329%" y="725" width="0.2525%" height="15" fill="rgb(253,54,39)" fg:x="7312" fg:w="41"/><text x="45.2829%" y="735.50"></text></g><g><title>futex_wait_setup (7 samples, 0.04%)</title><rect x="45.2423%" y="709" width="0.0431%" height="15" fill="rgb(243,25,45)" fg:x="7346" fg:w="7"/><text x="45.4923%" y="719.50"></text></g><g><title>__get_user_nocheck_4 (3 samples, 0.02%)</title><rect x="45.2670%" y="693" width="0.0185%" height="15" fill="rgb(234,134,9)" fg:x="7350" fg:w="3"/><text x="45.5170%" y="703.50"></text></g><g><title>__lll_lock_wait_private (45 samples, 0.28%)</title><rect x="45.0206%" y="805" width="0.2771%" height="15" fill="rgb(227,166,31)" fg:x="7310" fg:w="45"/><text x="45.2706%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (44 samples, 0.27%)</title><rect x="45.0268%" y="789" width="0.2710%" height="15" fill="rgb(245,143,41)" fg:x="7311" fg:w="44"/><text x="45.2768%" y="799.50"></text></g><g><title>do_syscall_64 (44 samples, 0.27%)</title><rect x="45.0268%" y="773" width="0.2710%" height="15" fill="rgb(238,181,32)" fg:x="7311" fg:w="44"/><text x="45.2768%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="45.2855%" y="757" width="0.0123%" height="15" fill="rgb(224,113,18)" fg:x="7353" fg:w="2"/><text x="45.5355%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="45.2855%" y="741" width="0.0123%" height="15" fill="rgb(240,229,28)" fg:x="7353" fg:w="2"/><text x="45.5355%" y="751.50"></text></g><g><title>switch_fpu_return (2 samples, 0.01%)</title><rect x="45.2855%" y="725" width="0.0123%" height="15" fill="rgb(250,185,3)" fg:x="7353" fg:w="2"/><text x="45.5355%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="45.2978%" y="805" width="0.0185%" height="15" fill="rgb(212,59,25)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="45.2978%" y="789" width="0.0185%" height="15" fill="rgb(221,87,20)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="799.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="45.2978%" y="773" width="0.0185%" height="15" fill="rgb(213,74,28)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="783.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="45.2978%" y="757" width="0.0185%" height="15" fill="rgb(224,132,34)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="767.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="45.2978%" y="741" width="0.0185%" height="15" fill="rgb(222,101,24)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="751.50"></text></g><g><title>tick_sched_timer (3 samples, 0.02%)</title><rect x="45.2978%" y="725" width="0.0185%" height="15" fill="rgb(254,142,4)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="735.50"></text></g><g><title>tick_sched_handle (3 samples, 0.02%)</title><rect x="45.2978%" y="709" width="0.0185%" height="15" fill="rgb(230,229,49)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="719.50"></text></g><g><title>update_process_times (3 samples, 0.02%)</title><rect x="45.2978%" y="693" width="0.0185%" height="15" fill="rgb(238,70,47)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="703.50"></text></g><g><title>scheduler_tick (3 samples, 0.02%)</title><rect x="45.2978%" y="677" width="0.0185%" height="15" fill="rgb(231,160,17)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="687.50"></text></g><g><title>task_tick_fair (3 samples, 0.02%)</title><rect x="45.2978%" y="661" width="0.0185%" height="15" fill="rgb(218,68,53)" fg:x="7355" fg:w="3"/><text x="45.5478%" y="671.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="45.3039%" y="645" width="0.0123%" height="15" fill="rgb(236,111,10)" fg:x="7356" fg:w="2"/><text x="45.5539%" y="655.50"></text></g><g><title>get_futex_key (2 samples, 0.01%)</title><rect x="45.3286%" y="725" width="0.0123%" height="15" fill="rgb(224,34,41)" fg:x="7360" fg:w="2"/><text x="45.5786%" y="735.50"></text></g><g><title>__task_rq_lock (2 samples, 0.01%)</title><rect x="45.3409%" y="693" width="0.0123%" height="15" fill="rgb(241,118,19)" fg:x="7362" fg:w="2"/><text x="45.5909%" y="703.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="45.3409%" y="677" width="0.0123%" height="15" fill="rgb(238,129,25)" fg:x="7362" fg:w="2"/><text x="45.5909%" y="687.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="45.3409%" y="661" width="0.0123%" height="15" fill="rgb(238,22,31)" fg:x="7362" fg:w="2"/><text x="45.5909%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="45.3224%" y="805" width="0.0370%" height="15" fill="rgb(222,174,48)" fg:x="7359" fg:w="6"/><text x="45.5724%" y="815.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="45.3224%" y="789" width="0.0370%" height="15" fill="rgb(206,152,40)" fg:x="7359" fg:w="6"/><text x="45.5724%" y="799.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="45.3224%" y="773" width="0.0370%" height="15" fill="rgb(218,99,54)" fg:x="7359" fg:w="6"/><text x="45.5724%" y="783.50"></text></g><g><title>do_futex (6 samples, 0.04%)</title><rect x="45.3224%" y="757" width="0.0370%" height="15" fill="rgb(220,174,26)" fg:x="7359" fg:w="6"/><text x="45.5724%" y="767.50"></text></g><g><title>futex_wake (6 samples, 0.04%)</title><rect x="45.3224%" y="741" width="0.0370%" height="15" fill="rgb(245,116,9)" fg:x="7359" fg:w="6"/><text x="45.5724%" y="751.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="45.3409%" y="725" width="0.0185%" height="15" fill="rgb(209,72,35)" fg:x="7362" fg:w="3"/><text x="45.5909%" y="735.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="45.3409%" y="709" width="0.0185%" height="15" fill="rgb(226,126,21)" fg:x="7362" fg:w="3"/><text x="45.5909%" y="719.50"></text></g><g><title>malloc_consolidate (26 samples, 0.16%)</title><rect x="45.3594%" y="805" width="0.1601%" height="15" fill="rgb(227,192,1)" fg:x="7365" fg:w="26"/><text x="45.6094%" y="815.50"></text></g><g><title>unlink_chunk.constprop.0 (7 samples, 0.04%)</title><rect x="45.4764%" y="789" width="0.0431%" height="15" fill="rgb(237,180,29)" fg:x="7384" fg:w="7"/><text x="45.7264%" y="799.50"></text></g><g><title>__GI___libc_free (300 samples, 1.85%)</title><rect x="43.8320%" y="837" width="1.8476%" height="15" fill="rgb(230,197,35)" fg:x="7117" fg:w="300"/><text x="44.0820%" y="847.50">_..</text></g><g><title>_int_free (237 samples, 1.46%)</title><rect x="44.2200%" y="821" width="1.4596%" height="15" fill="rgb(246,193,31)" fg:x="7180" fg:w="237"/><text x="44.4700%" y="831.50"></text></g><g><title>unlink_chunk.constprop.0 (26 samples, 0.16%)</title><rect x="45.5195%" y="805" width="0.1601%" height="15" fill="rgb(241,36,4)" fg:x="7391" fg:w="26"/><text x="45.7695%" y="815.50"></text></g><g><title>alloc::alloc::box_free (304 samples, 1.87%)</title><rect x="43.8258%" y="885" width="1.8723%" height="15" fill="rgb(241,130,17)" fg:x="7116" fg:w="304"/><text x="44.0758%" y="895.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (304 samples, 1.87%)</title><rect x="43.8258%" y="869" width="1.8723%" height="15" fill="rgb(206,137,32)" fg:x="7116" fg:w="304"/><text x="44.0758%" y="879.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (303 samples, 1.87%)</title><rect x="43.8320%" y="853" width="1.8661%" height="15" fill="rgb(237,228,51)" fg:x="7117" fg:w="303"/><text x="44.0820%" y="863.50">a..</text></g><g><title>__rust_dealloc (3 samples, 0.02%)</title><rect x="45.6796%" y="837" width="0.0185%" height="15" fill="rgb(243,6,42)" fg:x="7417" fg:w="3"/><text x="45.9296%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;&gt; (309 samples, 1.90%)</title><rect x="43.8258%" y="917" width="1.9031%" height="15" fill="rgb(251,74,28)" fg:x="7116" fg:w="309"/><text x="44.0758%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt; (309 samples, 1.90%)</title><rect x="43.8258%" y="901" width="1.9031%" height="15" fill="rgb(218,20,49)" fg:x="7116" fg:w="309"/><text x="44.0758%" y="911.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;latte::workload::write::Write&lt;alloc::boxed::Box&lt;scylla::transport::session::Session&gt;&gt; as latte::workload::Workload&gt;::run::{{closure}}&gt;&gt; (5 samples, 0.03%)</title><rect x="45.6981%" y="885" width="0.0308%" height="15" fill="rgb(238,28,14)" fg:x="7420" fg:w="5"/><text x="45.9481%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;latte::workload::write::Write&lt;alloc::boxed::Box&lt;scylla::transport::session::Session&gt;&gt; as latte::workload::Workload&gt;::run::{{closure}}&gt; (2 samples, 0.01%)</title><rect x="45.7166%" y="869" width="0.0123%" height="15" fill="rgb(229,40,46)" fg:x="7423" fg:w="2"/><text x="45.9666%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.10%)</title><rect x="45.7289%" y="917" width="0.1047%" height="15" fill="rgb(244,195,20)" fg:x="7425" fg:w="17"/><text x="45.9789%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.10%)</title><rect x="45.7289%" y="901" width="0.1047%" height="15" fill="rgb(253,56,35)" fg:x="7425" fg:w="17"/><text x="45.9789%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.02%)</title><rect x="45.8336%" y="885" width="0.0246%" height="15" fill="rgb(210,149,44)" fg:x="7442" fg:w="4"/><text x="46.0836%" y="895.50"></text></g><g><title>latte::progress::FastProgressBar::tick (60 samples, 0.37%)</title><rect x="45.8336%" y="901" width="0.3695%" height="15" fill="rgb(240,135,12)" fg:x="7442" fg:w="60"/><text x="46.0836%" y="911.50"></text></g><g><title>&lt;atomic_counter::RelaxedCounter as atomic_counter::AtomicCounter&gt;::inc (56 samples, 0.34%)</title><rect x="45.8582%" y="885" width="0.3449%" height="15" fill="rgb(251,24,50)" fg:x="7446" fg:w="56"/><text x="46.1082%" y="895.50"></text></g><g><title>_int_free (104 samples, 0.64%)</title><rect x="46.9360%" y="693" width="0.6405%" height="15" fill="rgb(243,200,47)" fg:x="7621" fg:w="104"/><text x="47.1860%" y="703.50"></text></g><g><title>unlink_chunk.constprop.0 (4 samples, 0.02%)</title><rect x="47.5519%" y="677" width="0.0246%" height="15" fill="rgb(224,166,26)" fg:x="7721" fg:w="4"/><text x="47.8019%" y="687.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.04%)</title><rect x="48.7221%" y="677" width="0.0431%" height="15" fill="rgb(233,0,47)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="687.50"></text></g><g><title>exc_page_fault (7 samples, 0.04%)</title><rect x="48.7221%" y="661" width="0.0431%" height="15" fill="rgb(253,80,5)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="671.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.04%)</title><rect x="48.7221%" y="645" width="0.0431%" height="15" fill="rgb(214,133,25)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="655.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.04%)</title><rect x="48.7221%" y="629" width="0.0431%" height="15" fill="rgb(209,27,14)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="639.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="48.7221%" y="613" width="0.0431%" height="15" fill="rgb(219,102,51)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="623.50"></text></g><g><title>__schedule (7 samples, 0.04%)</title><rect x="48.7221%" y="597" width="0.0431%" height="15" fill="rgb(237,18,16)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="607.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="48.7221%" y="581" width="0.0431%" height="15" fill="rgb(241,85,17)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="591.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.04%)</title><rect x="48.7221%" y="565" width="0.0431%" height="15" fill="rgb(236,90,42)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="575.50"></text></g><g><title>x86_pmu_enable_all (7 samples, 0.04%)</title><rect x="48.7221%" y="549" width="0.0431%" height="15" fill="rgb(249,57,21)" fg:x="7911" fg:w="7"/><text x="48.9721%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.04%)</title><rect x="51.5612%" y="661" width="0.0431%" height="15" fill="rgb(243,12,36)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.04%)</title><rect x="51.5612%" y="645" width="0.0431%" height="15" fill="rgb(253,128,47)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (7 samples, 0.04%)</title><rect x="51.5612%" y="629" width="0.0431%" height="15" fill="rgb(207,33,20)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="639.50"></text></g><g><title>hrtimer_interrupt (7 samples, 0.04%)</title><rect x="51.5612%" y="613" width="0.0431%" height="15" fill="rgb(233,215,35)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="623.50"></text></g><g><title>__hrtimer_run_queues (7 samples, 0.04%)</title><rect x="51.5612%" y="597" width="0.0431%" height="15" fill="rgb(249,188,52)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="607.50"></text></g><g><title>tick_sched_timer (7 samples, 0.04%)</title><rect x="51.5612%" y="581" width="0.0431%" height="15" fill="rgb(225,12,32)" fg:x="8372" fg:w="7"/><text x="51.8112%" y="591.50"></text></g><g><title>tick_sched_handle (6 samples, 0.04%)</title><rect x="51.5674%" y="565" width="0.0370%" height="15" fill="rgb(247,98,14)" fg:x="8373" fg:w="6"/><text x="51.8174%" y="575.50"></text></g><g><title>update_process_times (6 samples, 0.04%)</title><rect x="51.5674%" y="549" width="0.0370%" height="15" fill="rgb(247,219,48)" fg:x="8373" fg:w="6"/><text x="51.8174%" y="559.50"></text></g><g><title>scheduler_tick (4 samples, 0.02%)</title><rect x="51.5797%" y="533" width="0.0246%" height="15" fill="rgb(253,60,48)" fg:x="8375" fg:w="4"/><text x="51.8297%" y="543.50"></text></g><g><title>task_tick_fair (3 samples, 0.02%)</title><rect x="51.5859%" y="517" width="0.0185%" height="15" fill="rgb(245,15,52)" fg:x="8376" fg:w="3"/><text x="51.8359%" y="527.50"></text></g><g><title>malloc_consolidate (549 samples, 3.38%)</title><rect x="48.7713%" y="677" width="3.3812%" height="15" fill="rgb(220,133,28)" fg:x="7919" fg:w="549"/><text x="49.0213%" y="687.50">mal..</text></g><g><title>unlink_chunk.constprop.0 (89 samples, 0.55%)</title><rect x="51.6044%" y="661" width="0.5481%" height="15" fill="rgb(217,180,4)" fg:x="8379" fg:w="89"/><text x="51.8544%" y="671.50"></text></g><g><title>down_write_killable (7 samples, 0.04%)</title><rect x="52.1648%" y="581" width="0.0431%" height="15" fill="rgb(251,24,1)" fg:x="8470" fg:w="7"/><text x="52.4148%" y="591.50"></text></g><g><title>rwsem_down_write_slowpath (7 samples, 0.04%)</title><rect x="52.1648%" y="565" width="0.0431%" height="15" fill="rgb(212,185,49)" fg:x="8470" fg:w="7"/><text x="52.4148%" y="575.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="52.1648%" y="549" width="0.0431%" height="15" fill="rgb(215,175,22)" fg:x="8470" fg:w="7"/><text x="52.4148%" y="559.50"></text></g><g><title>perf_event_mmap (3 samples, 0.02%)</title><rect x="52.2079%" y="565" width="0.0185%" height="15" fill="rgb(250,205,14)" fg:x="8477" fg:w="3"/><text x="52.4579%" y="575.50"></text></g><g><title>perf_iterate_sb (2 samples, 0.01%)</title><rect x="52.2141%" y="549" width="0.0123%" height="15" fill="rgb(225,211,22)" fg:x="8478" fg:w="2"/><text x="52.4641%" y="559.50"></text></g><g><title>perf_iterate_ctx (2 samples, 0.01%)</title><rect x="52.2141%" y="533" width="0.0123%" height="15" fill="rgb(251,179,42)" fg:x="8478" fg:w="2"/><text x="52.4641%" y="543.50"></text></g><g><title>__GI___mprotect (14 samples, 0.09%)</title><rect x="52.1525%" y="661" width="0.0862%" height="15" fill="rgb(208,216,51)" fg:x="8468" fg:w="14"/><text x="52.4025%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="52.1586%" y="645" width="0.0801%" height="15" fill="rgb(235,36,11)" fg:x="8469" fg:w="13"/><text x="52.4086%" y="655.50"></text></g><g><title>do_syscall_64 (12 samples, 0.07%)</title><rect x="52.1648%" y="629" width="0.0739%" height="15" fill="rgb(213,189,28)" fg:x="8470" fg:w="12"/><text x="52.4148%" y="639.50"></text></g><g><title>__x64_sys_mprotect (12 samples, 0.07%)</title><rect x="52.1648%" y="613" width="0.0739%" height="15" fill="rgb(227,203,42)" fg:x="8470" fg:w="12"/><text x="52.4148%" y="623.50"></text></g><g><title>do_mprotect_pkey (12 samples, 0.07%)</title><rect x="52.1648%" y="597" width="0.0739%" height="15" fill="rgb(244,72,36)" fg:x="8470" fg:w="12"/><text x="52.4148%" y="607.50"></text></g><g><title>mprotect_fixup (5 samples, 0.03%)</title><rect x="52.2079%" y="581" width="0.0308%" height="15" fill="rgb(213,53,17)" fg:x="8477" fg:w="5"/><text x="52.4579%" y="591.50"></text></g><g><title>vma_merge (2 samples, 0.01%)</title><rect x="52.2264%" y="565" width="0.0123%" height="15" fill="rgb(207,167,3)" fg:x="8480" fg:w="2"/><text x="52.4764%" y="575.50"></text></g><g><title>__vma_adjust (2 samples, 0.01%)</title><rect x="52.2264%" y="549" width="0.0123%" height="15" fill="rgb(216,98,30)" fg:x="8480" fg:w="2"/><text x="52.4764%" y="559.50"></text></g><g><title>post_alloc_hook (2 samples, 0.01%)</title><rect x="52.2449%" y="533" width="0.0123%" height="15" fill="rgb(236,123,15)" fg:x="8483" fg:w="2"/><text x="52.4949%" y="543.50"></text></g><g><title>kernel_init_free_pages (2 samples, 0.01%)</title><rect x="52.2449%" y="517" width="0.0123%" height="15" fill="rgb(248,81,50)" fg:x="8483" fg:w="2"/><text x="52.4949%" y="527.50"></text></g><g><title>clear_page_rep (2 samples, 0.01%)</title><rect x="52.2449%" y="501" width="0.0123%" height="15" fill="rgb(214,120,4)" fg:x="8483" fg:w="2"/><text x="52.4949%" y="511.50"></text></g><g><title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="52.2449%" y="549" width="0.0185%" height="15" fill="rgb(208,179,34)" fg:x="8483" fg:w="3"/><text x="52.4949%" y="559.50"></text></g><g><title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="52.2449%" y="581" width="0.0246%" height="15" fill="rgb(227,140,7)" fg:x="8483" fg:w="4"/><text x="52.4949%" y="591.50"></text></g><g><title>__alloc_pages (4 samples, 0.02%)</title><rect x="52.2449%" y="565" width="0.0246%" height="15" fill="rgb(214,22,6)" fg:x="8483" fg:w="4"/><text x="52.4949%" y="575.50"></text></g><g><title>handle_mm_fault (7 samples, 0.04%)</title><rect x="52.2387%" y="613" width="0.0431%" height="15" fill="rgb(207,137,27)" fg:x="8482" fg:w="7"/><text x="52.4887%" y="623.50"></text></g><g><title>__handle_mm_fault (7 samples, 0.04%)</title><rect x="52.2387%" y="597" width="0.0431%" height="15" fill="rgb(210,8,46)" fg:x="8482" fg:w="7"/><text x="52.4887%" y="607.50"></text></g><g><title>lru_cache_add (2 samples, 0.01%)</title><rect x="52.2695%" y="581" width="0.0123%" height="15" fill="rgb(240,16,54)" fg:x="8487" fg:w="2"/><text x="52.5195%" y="591.50"></text></g><g><title>__pagevec_lru_add (2 samples, 0.01%)</title><rect x="52.2695%" y="565" width="0.0123%" height="15" fill="rgb(211,209,29)" fg:x="8487" fg:w="2"/><text x="52.5195%" y="575.50"></text></g><g><title>sysmalloc (28 samples, 0.17%)</title><rect x="52.1525%" y="677" width="0.1724%" height="15" fill="rgb(226,228,24)" fg:x="8468" fg:w="28"/><text x="52.4025%" y="687.50"></text></g><g><title>asm_exc_page_fault (14 samples, 0.09%)</title><rect x="52.2387%" y="661" width="0.0862%" height="15" fill="rgb(222,84,9)" fg:x="8482" fg:w="14"/><text x="52.4887%" y="671.50"></text></g><g><title>exc_page_fault (14 samples, 0.09%)</title><rect x="52.2387%" y="645" width="0.0862%" height="15" fill="rgb(234,203,30)" fg:x="8482" fg:w="14"/><text x="52.4887%" y="655.50"></text></g><g><title>do_user_addr_fault (14 samples, 0.09%)</title><rect x="52.2387%" y="629" width="0.0862%" height="15" fill="rgb(238,109,14)" fg:x="8482" fg:w="14"/><text x="52.4887%" y="639.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.04%)</title><rect x="52.2818%" y="613" width="0.0431%" height="15" fill="rgb(233,206,34)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="623.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="52.2818%" y="597" width="0.0431%" height="15" fill="rgb(220,167,47)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="607.50"></text></g><g><title>__schedule (7 samples, 0.04%)</title><rect x="52.2818%" y="581" width="0.0431%" height="15" fill="rgb(238,105,10)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="52.2818%" y="565" width="0.0431%" height="15" fill="rgb(213,227,17)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="575.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.04%)</title><rect x="52.2818%" y="549" width="0.0431%" height="15" fill="rgb(217,132,38)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="559.50"></text></g><g><title>x86_pmu_enable_all (7 samples, 0.04%)</title><rect x="52.2818%" y="533" width="0.0431%" height="15" fill="rgb(242,146,4)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="543.50"></text></g><g><title>native_write_msr (7 samples, 0.04%)</title><rect x="52.2818%" y="517" width="0.0431%" height="15" fill="rgb(212,61,9)" fg:x="8489" fg:w="7"/><text x="52.5318%" y="527.50"></text></g><g><title>_int_memalign (963 samples, 5.93%)</title><rect x="46.5357%" y="709" width="5.9309%" height="15" fill="rgb(247,126,22)" fg:x="7556" fg:w="963"/><text x="46.7857%" y="719.50">_int_mem..</text></g><g><title>_int_malloc (794 samples, 4.89%)</title><rect x="47.5765%" y="693" width="4.8901%" height="15" fill="rgb(220,196,2)" fg:x="7725" fg:w="794"/><text x="47.8265%" y="703.50">_int_m..</text></g><g><title>unlink_chunk.constprop.0 (23 samples, 0.14%)</title><rect x="52.3249%" y="677" width="0.1417%" height="15" fill="rgb(208,46,4)" fg:x="8496" fg:w="23"/><text x="52.5749%" y="687.50"></text></g><g><title>__task_rq_lock (2 samples, 0.01%)</title><rect x="52.5097%" y="597" width="0.0123%" height="15" fill="rgb(252,104,46)" fg:x="8526" fg:w="2"/><text x="52.7597%" y="607.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="52.5097%" y="581" width="0.0123%" height="15" fill="rgb(237,152,48)" fg:x="8526" fg:w="2"/><text x="52.7597%" y="591.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="52.5097%" y="565" width="0.0123%" height="15" fill="rgb(221,59,37)" fg:x="8526" fg:w="2"/><text x="52.7597%" y="575.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.09%)</title><rect x="52.4666%" y="677" width="0.0862%" height="15" fill="rgb(209,202,51)" fg:x="8519" fg:w="14"/><text x="52.7166%" y="687.50"></text></g><g><title>do_futex (14 samples, 0.09%)</title><rect x="52.4666%" y="661" width="0.0862%" height="15" fill="rgb(228,81,30)" fg:x="8519" fg:w="14"/><text x="52.7166%" y="671.50"></text></g><g><title>futex_wake (14 samples, 0.09%)</title><rect x="52.4666%" y="645" width="0.0862%" height="15" fill="rgb(227,42,39)" fg:x="8519" fg:w="14"/><text x="52.7166%" y="655.50"></text></g><g><title>wake_up_q (8 samples, 0.05%)</title><rect x="52.5035%" y="629" width="0.0493%" height="15" fill="rgb(221,26,2)" fg:x="8525" fg:w="8"/><text x="52.7535%" y="639.50"></text></g><g><title>try_to_wake_up (8 samples, 0.05%)</title><rect x="52.5035%" y="613" width="0.0493%" height="15" fill="rgb(254,61,31)" fg:x="8525" fg:w="8"/><text x="52.7535%" y="623.50"></text></g><g><title>ttwu_queue_wakelist (3 samples, 0.02%)</title><rect x="52.5343%" y="597" width="0.0185%" height="15" fill="rgb(222,173,38)" fg:x="8530" fg:w="3"/><text x="52.7843%" y="607.50"></text></g><g><title>default_send_IPI_single_phys (2 samples, 0.01%)</title><rect x="52.5405%" y="581" width="0.0123%" height="15" fill="rgb(218,50,12)" fg:x="8531" fg:w="2"/><text x="52.7905%" y="591.50"></text></g><g><title>__default_send_IPI_dest_field (2 samples, 0.01%)</title><rect x="52.5405%" y="565" width="0.0123%" height="15" fill="rgb(223,88,40)" fg:x="8531" fg:w="2"/><text x="52.7905%" y="575.50"></text></g><g><title>latte::par_execute::{{closure}}::{{closure}} (1,092 samples, 6.73%)</title><rect x="45.8336%" y="917" width="6.7254%" height="15" fill="rgb(237,54,19)" fg:x="7442" fg:w="1092"/><text x="46.0836%" y="927.50">latte::pa..</text></g><g><title>latte::run::{{closure}}::{{closure}} (1,032 samples, 6.36%)</title><rect x="46.2031%" y="901" width="6.3559%" height="15" fill="rgb(251,129,25)" fg:x="7502" fg:w="1032"/><text x="46.4531%" y="911.50">latte::r..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run (1,031 samples, 6.35%)</title><rect x="46.2093%" y="885" width="6.3497%" height="15" fill="rgb(238,97,19)" fg:x="7503" fg:w="1031"/><text x="46.4593%" y="895.50">&lt;latte::..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,021 samples, 6.29%)</title><rect x="46.2709%" y="869" width="6.2881%" height="15" fill="rgb(240,169,18)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="879.50">alloc::b..</text></g><g><title>alloc::alloc::exchange_malloc (1,021 samples, 6.29%)</title><rect x="46.2709%" y="853" width="6.2881%" height="15" fill="rgb(230,187,49)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="863.50">alloc::a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,021 samples, 6.29%)</title><rect x="46.2709%" y="837" width="6.2881%" height="15" fill="rgb(209,44,26)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="847.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,021 samples, 6.29%)</title><rect x="46.2709%" y="821" width="6.2881%" height="15" fill="rgb(244,0,6)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="831.50">alloc::a..</text></g><g><title>alloc::alloc::alloc (1,021 samples, 6.29%)</title><rect x="46.2709%" y="805" width="6.2881%" height="15" fill="rgb(248,18,21)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="815.50">alloc::a..</text></g><g><title>__rdl_alloc (1,021 samples, 6.29%)</title><rect x="46.2709%" y="789" width="6.2881%" height="15" fill="rgb(245,180,19)" fg:x="7513" fg:w="1021"/><text x="46.5209%" y="799.50">__rdl_al..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,020 samples, 6.28%)</title><rect x="46.2770%" y="773" width="6.2819%" height="15" fill="rgb(252,118,36)" fg:x="7514" fg:w="1020"/><text x="46.5270%" y="783.50">std::sys..</text></g><g><title>std::sys::unix::alloc::aligned_malloc (1,020 samples, 6.28%)</title><rect x="46.2770%" y="757" width="6.2819%" height="15" fill="rgb(210,224,19)" fg:x="7514" fg:w="1020"/><text x="46.5270%" y="767.50">std::sys..</text></g><g><title>__posix_memalign (1,018 samples, 6.27%)</title><rect x="46.2893%" y="741" width="6.2696%" height="15" fill="rgb(218,30,24)" fg:x="7516" fg:w="1018"/><text x="46.5393%" y="751.50">__posix_..</text></g><g><title>_mid_memalign (1,008 samples, 6.21%)</title><rect x="46.3509%" y="725" width="6.2080%" height="15" fill="rgb(219,75,50)" fg:x="7526" fg:w="1008"/><text x="46.6009%" y="735.50">_mid_mem..</text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="52.4666%" y="709" width="0.0924%" height="15" fill="rgb(234,72,50)" fg:x="8519" fg:w="15"/><text x="52.7166%" y="719.50"></text></g><g><title>do_syscall_64 (15 samples, 0.09%)</title><rect x="52.4666%" y="693" width="0.0924%" height="15" fill="rgb(219,100,48)" fg:x="8519" fg:w="15"/><text x="52.7166%" y="703.50"></text></g><g><title>[[vdso]] (59 samples, 0.36%)</title><rect x="52.8977%" y="837" width="0.3634%" height="15" fill="rgb(253,5,41)" fg:x="8589" fg:w="59"/><text x="53.1477%" y="847.50"></text></g><g><title>__clock_gettime_2 (82 samples, 0.51%)</title><rect x="52.7622%" y="869" width="0.5050%" height="15" fill="rgb(247,181,11)" fg:x="8567" fg:w="82"/><text x="53.0122%" y="879.50"></text></g><g><title>__vdso_clock_gettime (76 samples, 0.47%)</title><rect x="52.7992%" y="853" width="0.4681%" height="15" fill="rgb(222,223,25)" fg:x="8573" fg:w="76"/><text x="53.0492%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,924 samples, 18.01%)</title><rect x="35.2713%" y="949" width="18.0083%" height="15" fill="rgb(214,198,28)" fg:x="5727" fg:w="2924"/><text x="35.5213%" y="959.50">&lt;core::future::from_generato..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (2,863 samples, 17.63%)</title><rect x="35.6470%" y="933" width="17.6326%" height="15" fill="rgb(230,46,43)" fg:x="5788" fg:w="2863"/><text x="35.8970%" y="943.50">latte::req_stream::{{closur..</text></g><g><title>std::time::Instant::now (117 samples, 0.72%)</title><rect x="52.5590%" y="917" width="0.7206%" height="15" fill="rgb(233,65,53)" fg:x="8534" fg:w="117"/><text x="52.8090%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (113 samples, 0.70%)</title><rect x="52.5836%" y="901" width="0.6959%" height="15" fill="rgb(221,121,27)" fg:x="8538" fg:w="113"/><text x="52.8336%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::now (113 samples, 0.70%)</title><rect x="52.5836%" y="885" width="0.6959%" height="15" fill="rgb(247,70,47)" fg:x="8538" fg:w="113"/><text x="52.8336%" y="895.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.01%)</title><rect x="53.2672%" y="869" width="0.0123%" height="15" fill="rgb(228,85,35)" fg:x="8649" fg:w="2"/><text x="53.5172%" y="879.50"></text></g><g><title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (2 samples, 0.01%)</title><rect x="53.2672%" y="853" width="0.0123%" height="15" fill="rgb(209,50,18)" fg:x="8649" fg:w="2"/><text x="53.5172%" y="863.50"></text></g><g><title>&lt;futures_task::waker_ref::WakerRef as core::ops::deref::Deref&gt;::deref (17 samples, 0.10%)</title><rect x="53.2795%" y="949" width="0.1047%" height="15" fill="rgb(250,19,35)" fg:x="8651" fg:w="17"/><text x="53.5295%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.01%)</title><rect x="53.3842%" y="949" width="0.0123%" height="15" fill="rgb(253,107,29)" fg:x="8668" fg:w="2"/><text x="53.6342%" y="959.50"></text></g><g><title>core::mem::take (2 samples, 0.01%)</title><rect x="53.3842%" y="933" width="0.0123%" height="15" fill="rgb(252,179,29)" fg:x="8668" fg:w="2"/><text x="53.6342%" y="943.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="53.3842%" y="917" width="0.0123%" height="15" fill="rgb(238,194,6)" fg:x="8668" fg:w="2"/><text x="53.6342%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (5 samples, 0.03%)</title><rect x="53.3966%" y="949" width="0.0308%" height="15" fill="rgb(238,164,29)" fg:x="8670" fg:w="5"/><text x="53.6466%" y="959.50"></text></g><g><title>core::ptr::read (12 samples, 0.07%)</title><rect x="53.5382%" y="869" width="0.0739%" height="15" fill="rgb(224,25,9)" fg:x="8693" fg:w="12"/><text x="53.7882%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.09%)</title><rect x="53.5382%" y="917" width="0.0924%" height="15" fill="rgb(244,153,23)" fg:x="8693" fg:w="15"/><text x="53.7882%" y="927.50"></text></g><g><title>core::mem::take (15 samples, 0.09%)</title><rect x="53.5382%" y="901" width="0.0924%" height="15" fill="rgb(212,203,14)" fg:x="8693" fg:w="15"/><text x="53.7882%" y="911.50"></text></g><g><title>core::mem::replace (15 samples, 0.09%)</title><rect x="53.5382%" y="885" width="0.0924%" height="15" fill="rgb(220,164,20)" fg:x="8693" fg:w="15"/><text x="53.7882%" y="895.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="53.6121%" y="869" width="0.0185%" height="15" fill="rgb(222,203,48)" fg:x="8705" fg:w="3"/><text x="53.8621%" y="879.50"></text></g><g><title>__GI___libc_free (48 samples, 0.30%)</title><rect x="53.6860%" y="869" width="0.2956%" height="15" fill="rgb(215,159,22)" fg:x="8717" fg:w="48"/><text x="53.9360%" y="879.50"></text></g><g><title>_int_free (8 samples, 0.05%)</title><rect x="53.9324%" y="853" width="0.0493%" height="15" fill="rgb(216,183,47)" fg:x="8757" fg:w="8"/><text x="54.1824%" y="863.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="53.9816%" y="853" width="0.0246%" height="15" fill="rgb(229,195,25)" fg:x="8765" fg:w="4"/><text x="54.2316%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="53.9816%" y="837" width="0.0246%" height="15" fill="rgb(224,132,51)" fg:x="8765" fg:w="4"/><text x="54.2316%" y="847.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="53.9816%" y="821" width="0.0246%" height="15" fill="rgb(240,63,7)" fg:x="8765" fg:w="4"/><text x="54.2316%" y="831.50"></text></g><g><title>&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.57%)</title><rect x="53.5074%" y="933" width="0.5728%" height="15" fill="rgb(249,182,41)" fg:x="8688" fg:w="93"/><text x="53.7574%" y="943.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (73 samples, 0.45%)</title><rect x="53.6306%" y="917" width="0.4496%" height="15" fill="rgb(243,47,26)" fg:x="8708" fg:w="73"/><text x="53.8806%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (72 samples, 0.44%)</title><rect x="53.6368%" y="901" width="0.4434%" height="15" fill="rgb(233,48,2)" fg:x="8709" fg:w="72"/><text x="53.8868%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.44%)</title><rect x="53.6368%" y="885" width="0.4434%" height="15" fill="rgb(244,165,34)" fg:x="8709" fg:w="72"/><text x="53.8868%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (16 samples, 0.10%)</title><rect x="53.9816%" y="869" width="0.0985%" height="15" fill="rgb(207,89,7)" fg:x="8765" fg:w="16"/><text x="54.2316%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="54.0063%" y="853" width="0.0739%" height="15" fill="rgb(244,117,36)" fg:x="8769" fg:w="12"/><text x="54.2563%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (11 samples, 0.07%)</title><rect x="54.0124%" y="837" width="0.0677%" height="15" fill="rgb(226,144,34)" fg:x="8770" fg:w="11"/><text x="54.2624%" y="847.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.07%)</title><rect x="54.0124%" y="821" width="0.0677%" height="15" fill="rgb(213,23,19)" fg:x="8770" fg:w="11"/><text x="54.2624%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (9 samples, 0.06%)</title><rect x="54.0802%" y="933" width="0.0554%" height="15" fill="rgb(217,75,12)" fg:x="8781" fg:w="9"/><text x="54.3302%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (119 samples, 0.73%)</title><rect x="53.4274%" y="949" width="0.7329%" height="15" fill="rgb(224,159,17)" fg:x="8675" fg:w="119"/><text x="53.6774%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="54.1356%" y="933" width="0.0246%" height="15" fill="rgb(217,118,1)" fg:x="8790" fg:w="4"/><text x="54.3856%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (43 samples, 0.26%)</title><rect x="54.1603%" y="949" width="0.2648%" height="15" fill="rgb(232,180,48)" fg:x="8794" fg:w="43"/><text x="54.4103%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.02%)</title><rect x="54.4066%" y="933" width="0.0185%" height="15" fill="rgb(230,27,33)" fg:x="8834" fg:w="3"/><text x="54.6566%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="54.5483%" y="933" width="0.1109%" height="15" fill="rgb(205,31,21)" fg:x="8857" fg:w="18"/><text x="54.7983%" y="943.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (17 samples, 0.10%)</title><rect x="54.5544%" y="917" width="0.1047%" height="15" fill="rgb(253,59,4)" fg:x="8858" fg:w="17"/><text x="54.8044%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (14 samples, 0.09%)</title><rect x="54.5729%" y="901" width="0.0862%" height="15" fill="rgb(224,201,9)" fg:x="8861" fg:w="14"/><text x="54.8229%" y="911.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (52 samples, 0.32%)</title><rect x="54.4251%" y="949" width="0.3203%" height="15" fill="rgb(229,206,30)" fg:x="8837" fg:w="52"/><text x="54.6751%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (14 samples, 0.09%)</title><rect x="54.6591%" y="933" width="0.0862%" height="15" fill="rgb(212,67,47)" fg:x="8875" fg:w="14"/><text x="54.9091%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (13 samples, 0.08%)</title><rect x="54.6653%" y="917" width="0.0801%" height="15" fill="rgb(211,96,50)" fg:x="8876" fg:w="13"/><text x="54.9153%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (13 samples, 0.08%)</title><rect x="54.6653%" y="901" width="0.0801%" height="15" fill="rgb(252,114,18)" fg:x="8876" fg:w="13"/><text x="54.9153%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (13 samples, 0.08%)</title><rect x="54.6653%" y="885" width="0.0801%" height="15" fill="rgb(223,58,37)" fg:x="8876" fg:w="13"/><text x="54.9153%" y="895.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (5 samples, 0.03%)</title><rect x="54.7145%" y="869" width="0.0308%" height="15" fill="rgb(237,70,4)" fg:x="8884" fg:w="5"/><text x="54.9645%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::into_raw (4 samples, 0.02%)</title><rect x="54.7823%" y="933" width="0.0246%" height="15" fill="rgb(244,85,46)" fg:x="8895" fg:w="4"/><text x="55.0323%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::as_ptr (4 samples, 0.02%)</title><rect x="54.7823%" y="917" width="0.0246%" height="15" fill="rgb(223,39,52)" fg:x="8895" fg:w="4"/><text x="55.0323%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (12 samples, 0.07%)</title><rect x="54.8069%" y="933" width="0.0739%" height="15" fill="rgb(218,200,14)" fg:x="8899" fg:w="12"/><text x="55.0569%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.07%)</title><rect x="54.8069%" y="917" width="0.0739%" height="15" fill="rgb(208,171,16)" fg:x="8899" fg:w="12"/><text x="55.0569%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (2 samples, 0.01%)</title><rect x="54.8808%" y="933" width="0.0123%" height="15" fill="rgb(234,200,18)" fg:x="8911" fg:w="2"/><text x="55.1308%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_store (2 samples, 0.01%)</title><rect x="54.8808%" y="917" width="0.0123%" height="15" fill="rgb(228,45,11)" fg:x="8911" fg:w="2"/><text x="55.1308%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (14 samples, 0.09%)</title><rect x="54.8993%" y="933" width="0.0862%" height="15" fill="rgb(237,182,11)" fg:x="8914" fg:w="14"/><text x="55.1493%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.08%)</title><rect x="54.9055%" y="917" width="0.0801%" height="15" fill="rgb(241,175,49)" fg:x="8915" fg:w="13"/><text x="55.1555%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (43 samples, 0.26%)</title><rect x="54.7515%" y="949" width="0.2648%" height="15" fill="rgb(247,38,35)" fg:x="8890" fg:w="43"/><text x="55.0015%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::spin_next_all (5 samples, 0.03%)</title><rect x="54.9855%" y="933" width="0.0308%" height="15" fill="rgb(228,39,49)" fg:x="8928" fg:w="5"/><text x="55.2355%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.01%)</title><rect x="55.0040%" y="917" width="0.0123%" height="15" fill="rgb(226,101,26)" fg:x="8931" fg:w="2"/><text x="55.2540%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="55.0040%" y="901" width="0.0123%" height="15" fill="rgb(206,141,19)" fg:x="8931" fg:w="2"/><text x="55.2540%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (3 samples, 0.02%)</title><rect x="55.0964%" y="933" width="0.0185%" height="15" fill="rgb(211,200,13)" fg:x="8946" fg:w="3"/><text x="55.3464%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.02%)</title><rect x="55.0964%" y="917" width="0.0185%" height="15" fill="rgb(241,121,6)" fg:x="8946" fg:w="3"/><text x="55.3464%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (9 samples, 0.06%)</title><rect x="55.1149%" y="933" width="0.0554%" height="15" fill="rgb(234,221,29)" fg:x="8949" fg:w="9"/><text x="55.3649%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (9 samples, 0.06%)</title><rect x="55.1149%" y="917" width="0.0554%" height="15" fill="rgb(229,136,5)" fg:x="8949" fg:w="9"/><text x="55.3649%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::unlink (31 samples, 0.19%)</title><rect x="55.0163%" y="949" width="0.1909%" height="15" fill="rgb(238,36,11)" fg:x="8933" fg:w="31"/><text x="55.2663%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (5 samples, 0.03%)</title><rect x="55.1764%" y="933" width="0.0308%" height="15" fill="rgb(251,55,41)" fg:x="8959" fg:w="5"/><text x="55.4264%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="55.1764%" y="917" width="0.0308%" height="15" fill="rgb(242,34,40)" fg:x="8959" fg:w="5"/><text x="55.4264%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (4 samples, 0.02%)</title><rect x="55.9586%" y="933" width="0.0246%" height="15" fill="rgb(215,42,17)" fg:x="9086" fg:w="4"/><text x="56.2086%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="55.9586%" y="917" width="0.0246%" height="15" fill="rgb(207,44,46)" fg:x="9086" fg:w="4"/><text x="56.2086%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (127 samples, 0.78%)</title><rect x="55.2072%" y="949" width="0.7822%" height="15" fill="rgb(211,206,28)" fg:x="8964" fg:w="127"/><text x="55.4572%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::waker_ref (27 samples, 0.17%)</title><rect x="55.9894%" y="949" width="0.1663%" height="15" fill="rgb(237,167,16)" fg:x="9091" fg:w="27"/><text x="56.2394%" y="959.50"></text></g><g><title>futures_task::waker_ref::waker_ref (27 samples, 0.17%)</title><rect x="55.9894%" y="933" width="0.1663%" height="15" fill="rgb(233,66,6)" fg:x="9091" fg:w="27"/><text x="56.2394%" y="943.50"></text></g><g><title>futures_task::waker_ref::WakerRef::new_unowned (23 samples, 0.14%)</title><rect x="56.0140%" y="917" width="0.1417%" height="15" fill="rgb(246,123,29)" fg:x="9095" fg:w="23"/><text x="56.2640%" y="927.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (3,507 samples, 21.60%)</title><rect x="34.8217%" y="965" width="21.5988%" height="15" fill="rgb(209,62,40)" fg:x="5654" fg:w="3507"/><text x="35.0717%" y="975.50">&lt;futures_util::stream::futures_uno..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (43 samples, 0.26%)</title><rect x="56.1557%" y="949" width="0.2648%" height="15" fill="rgb(218,4,25)" fg:x="9118" fg:w="43"/><text x="56.4057%" y="959.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (3,867 samples, 23.82%)</title><rect x="32.6107%" y="997" width="23.8160%" height="15" fill="rgb(253,91,49)" fg:x="5295" fg:w="3867"/><text x="32.8607%" y="1007.50">&lt;futures_util::stream::stream::buffer_..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,514 samples, 21.64%)</title><rect x="34.7848%" y="981" width="21.6419%" height="15" fill="rgb(228,155,29)" fg:x="5648" fg:w="3514"/><text x="35.0348%" y="991.50">futures_util::stream::stream::Stre..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (3,876 samples, 23.87%)</title><rect x="32.5799%" y="1029" width="23.8714%" height="15" fill="rgb(243,57,37)" fg:x="5290" fg:w="3876"/><text x="32.8299%" y="1039.50">&lt;futures_util::stream::stream::next::N..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (3,876 samples, 23.87%)</title><rect x="32.5799%" y="1013" width="23.8714%" height="15" fill="rgb(244,167,17)" fg:x="5290" fg:w="3876"/><text x="32.8299%" y="1023.50">futures_util::stream::stream::StreamEx..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (4 samples, 0.02%)</title><rect x="56.4267%" y="997" width="0.0246%" height="15" fill="rgb(207,181,38)" fg:x="9162" fg:w="4"/><text x="56.6767%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (2 samples, 0.01%)</title><rect x="56.4821%" y="981" width="0.0123%" height="15" fill="rgb(211,8,23)" fg:x="9171" fg:w="2"/><text x="56.7321%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (12 samples, 0.07%)</title><rect x="56.4513%" y="1029" width="0.0739%" height="15" fill="rgb(235,11,44)" fg:x="9166" fg:w="12"/><text x="56.7013%" y="1039.50"></text></g><g><title>std::time::Instant::duration_since (7 samples, 0.04%)</title><rect x="56.4821%" y="1013" width="0.0431%" height="15" fill="rgb(248,18,52)" fg:x="9171" fg:w="7"/><text x="56.7321%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (7 samples, 0.04%)</title><rect x="56.4821%" y="997" width="0.0431%" height="15" fill="rgb(208,4,7)" fg:x="9171" fg:w="7"/><text x="56.7321%" y="1007.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.03%)</title><rect x="56.4944%" y="981" width="0.0308%" height="15" fill="rgb(240,17,39)" fg:x="9173" fg:w="5"/><text x="56.7444%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.01%)</title><rect x="56.5129%" y="965" width="0.0123%" height="15" fill="rgb(207,170,3)" fg:x="9176" fg:w="2"/><text x="56.7629%" y="975.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.01%)</title><rect x="56.5129%" y="949" width="0.0123%" height="15" fill="rgb(236,100,52)" fg:x="9176" fg:w="2"/><text x="56.7629%" y="959.50"></text></g><g><title>core::cmp::PartialOrd::gt (4 samples, 0.02%)</title><rect x="56.5252%" y="1029" width="0.0246%" height="15" fill="rgb(246,78,51)" fg:x="9178" fg:w="4"/><text x="56.7752%" y="1039.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.02%)</title><rect x="56.5252%" y="1013" width="0.0246%" height="15" fill="rgb(211,17,15)" fg:x="9178" fg:w="4"/><text x="56.7752%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (2 samples, 0.01%)</title><rect x="56.5375%" y="997" width="0.0123%" height="15" fill="rgb(209,59,46)" fg:x="9180" fg:w="2"/><text x="56.7875%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (2 samples, 0.01%)</title><rect x="56.5375%" y="981" width="0.0123%" height="15" fill="rgb(210,92,25)" fg:x="9180" fg:w="2"/><text x="56.7875%" y="991.50"></text></g><g><title>latte::stats::Sample::new (7 samples, 0.04%)</title><rect x="56.5499%" y="1029" width="0.0431%" height="15" fill="rgb(238,174,52)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="1039.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="56.5499%" y="1013" width="0.0431%" height="15" fill="rgb(230,73,7)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="1023.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::new_with_bounds (7 samples, 0.04%)</title><rect x="56.5499%" y="997" width="0.0431%" height="15" fill="rgb(243,124,40)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="1007.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::resize (7 samples, 0.04%)</title><rect x="56.5499%" y="981" width="0.0431%" height="15" fill="rgb(244,170,11)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 0.04%)</title><rect x="56.5499%" y="965" width="0.0431%" height="15" fill="rgb(207,114,54)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 0.04%)</title><rect x="56.5499%" y="949" width="0.0431%" height="15" fill="rgb(205,42,20)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="56.5499%" y="933" width="0.0431%" height="15" fill="rgb(230,30,28)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="56.5499%" y="917" width="0.0431%" height="15" fill="rgb(205,73,54)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="56.5499%" y="901" width="0.0431%" height="15" fill="rgb(254,227,23)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="56.5499%" y="885" width="0.0431%" height="15" fill="rgb(228,202,34)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="56.5499%" y="869" width="0.0431%" height="15" fill="rgb(222,225,37)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="879.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="56.5499%" y="853" width="0.0431%" height="15" fill="rgb(221,14,54)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="863.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="56.5499%" y="837" width="0.0431%" height="15" fill="rgb(254,102,2)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="847.50"></text></g><g><title>asm_exc_page_fault (7 samples, 0.04%)</title><rect x="56.5499%" y="821" width="0.0431%" height="15" fill="rgb(232,104,17)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="831.50"></text></g><g><title>exc_page_fault (7 samples, 0.04%)</title><rect x="56.5499%" y="805" width="0.0431%" height="15" fill="rgb(250,220,14)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="815.50"></text></g><g><title>do_user_addr_fault (7 samples, 0.04%)</title><rect x="56.5499%" y="789" width="0.0431%" height="15" fill="rgb(241,158,9)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="799.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.04%)</title><rect x="56.5499%" y="773" width="0.0431%" height="15" fill="rgb(246,9,43)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="783.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="56.5499%" y="757" width="0.0431%" height="15" fill="rgb(206,73,33)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="767.50"></text></g><g><title>__schedule (7 samples, 0.04%)</title><rect x="56.5499%" y="741" width="0.0431%" height="15" fill="rgb(222,79,8)" fg:x="9182" fg:w="7"/><text x="56.7999%" y="751.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (49 samples, 0.30%)</title><rect x="56.6669%" y="965" width="0.3018%" height="15" fill="rgb(234,8,54)" fg:x="9201" fg:w="49"/><text x="56.9169%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (49 samples, 0.30%)</title><rect x="56.6669%" y="949" width="0.3018%" height="15" fill="rgb(209,134,38)" fg:x="9201" fg:w="49"/><text x="56.9169%" y="959.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::bucket_for (3 samples, 0.02%)</title><rect x="56.9748%" y="933" width="0.0185%" height="15" fill="rgb(230,127,29)" fg:x="9251" fg:w="3"/><text x="57.2248%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::leading_zeros (3 samples, 0.02%)</title><rect x="56.9748%" y="917" width="0.0185%" height="15" fill="rgb(242,44,41)" fg:x="9251" fg:w="3"/><text x="57.2248%" y="927.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (5 samples, 0.03%)</title><rect x="56.9687%" y="949" width="0.0308%" height="15" fill="rgb(222,56,43)" fg:x="9250" fg:w="5"/><text x="57.2187%" y="959.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (6 samples, 0.04%)</title><rect x="56.9687%" y="965" width="0.0370%" height="15" fill="rgb(238,39,47)" fg:x="9250" fg:w="6"/><text x="57.2187%" y="975.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::resize (2 samples, 0.01%)</title><rect x="57.0056%" y="965" width="0.0123%" height="15" fill="rgb(226,79,43)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="57.0056%" y="949" width="0.0123%" height="15" fill="rgb(242,105,53)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="57.0056%" y="933" width="0.0123%" height="15" fill="rgb(251,132,46)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="57.0056%" y="917" width="0.0123%" height="15" fill="rgb(231,77,14)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="57.0056%" y="901" width="0.0123%" height="15" fill="rgb(240,135,9)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="57.0056%" y="885" width="0.0123%" height="15" fill="rgb(248,109,14)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="57.0056%" y="869" width="0.0123%" height="15" fill="rgb(227,146,52)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="57.0056%" y="853" width="0.0123%" height="15" fill="rgb(232,54,3)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="57.0056%" y="837" width="0.0123%" height="15" fill="rgb(229,201,43)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="57.0056%" y="821" width="0.0123%" height="15" fill="rgb(252,161,33)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="831.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="57.0056%" y="805" width="0.0123%" height="15" fill="rgb(226,146,40)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="815.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="57.0056%" y="789" width="0.0123%" height="15" fill="rgb(219,47,25)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="799.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="57.0056%" y="773" width="0.0123%" height="15" fill="rgb(250,135,13)" fg:x="9256" fg:w="2"/><text x="57.2556%" y="783.50"></text></g><g><title>latte::stats::Sample::record (70 samples, 0.43%)</title><rect x="56.5930%" y="1029" width="0.4311%" height="15" fill="rgb(219,229,18)" fg:x="9189" fg:w="70"/><text x="56.8430%" y="1039.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (59 samples, 0.36%)</title><rect x="56.6607%" y="1013" width="0.3634%" height="15" fill="rgb(217,152,27)" fg:x="9200" fg:w="59"/><text x="56.9107%" y="1023.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (58 samples, 0.36%)</title><rect x="56.6669%" y="997" width="0.3572%" height="15" fill="rgb(225,71,47)" fg:x="9201" fg:w="58"/><text x="56.9169%" y="1007.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (58 samples, 0.36%)</title><rect x="56.6669%" y="981" width="0.3572%" height="15" fill="rgb(220,139,14)" fg:x="9201" fg:w="58"/><text x="56.9169%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,036 samples, 24.86%)</title><rect x="32.4752%" y="1061" width="24.8568%" height="15" fill="rgb(247,54,32)" fg:x="5273" fg:w="4036"/><text x="32.7252%" y="1071.50">&lt;core::future::from_generator::GenFuture..</text></g><g><title>latte::req_stream::{{closure}} (4,036 samples, 24.86%)</title><rect x="32.4752%" y="1045" width="24.8568%" height="15" fill="rgb(252,131,39)" fg:x="5273" fg:w="4036"/><text x="32.7252%" y="1055.50">latte::req_stream::{{closure}}</text></g><g><title>std::time::Instant::now (50 samples, 0.31%)</title><rect x="57.0241%" y="1029" width="0.3079%" height="15" fill="rgb(210,108,39)" fg:x="9259" fg:w="50"/><text x="57.2741%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (48 samples, 0.30%)</title><rect x="57.0364%" y="1013" width="0.2956%" height="15" fill="rgb(205,23,29)" fg:x="9261" fg:w="48"/><text x="57.2864%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::now (48 samples, 0.30%)</title><rect x="57.0364%" y="997" width="0.2956%" height="15" fill="rgb(246,139,46)" fg:x="9261" fg:w="48"/><text x="57.2864%" y="1007.50"></text></g><g><title>__clock_gettime_2 (43 samples, 0.26%)</title><rect x="57.0672%" y="981" width="0.2648%" height="15" fill="rgb(250,81,26)" fg:x="9266" fg:w="43"/><text x="57.3172%" y="991.50"></text></g><g><title>__vdso_clock_gettime (39 samples, 0.24%)</title><rect x="57.0918%" y="965" width="0.2402%" height="15" fill="rgb(214,104,7)" fg:x="9270" fg:w="39"/><text x="57.3418%" y="975.50"></text></g><g><title>[[vdso]] (30 samples, 0.18%)</title><rect x="57.1473%" y="949" width="0.1848%" height="15" fill="rgb(233,189,8)" fg:x="9279" fg:w="30"/><text x="57.3973%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="57.3936%" y="837" width="0.0185%" height="15" fill="rgb(228,141,17)" fg:x="9319" fg:w="3"/><text x="57.6436%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.05%)</title><rect x="57.6646%" y="789" width="0.0493%" height="15" fill="rgb(247,157,1)" fg:x="9363" fg:w="8"/><text x="57.9146%" y="799.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (6 samples, 0.04%)</title><rect x="57.6769%" y="773" width="0.0370%" height="15" fill="rgb(249,225,5)" fg:x="9365" fg:w="6"/><text x="57.9269%" y="783.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (4 samples, 0.02%)</title><rect x="57.7939%" y="773" width="0.0246%" height="15" fill="rgb(242,55,13)" fg:x="9384" fg:w="4"/><text x="58.0439%" y="783.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::advance_mut (4 samples, 0.02%)</title><rect x="57.7939%" y="757" width="0.0246%" height="15" fill="rgb(230,49,50)" fg:x="9384" fg:w="4"/><text x="58.0439%" y="767.50"></text></g><g><title>&lt;bytes::buf::uninit_slice::UninitSlice as core::ops::index::IndexMut&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="57.8863%" y="725" width="0.0123%" height="15" fill="rgb(241,111,38)" fg:x="9399" fg:w="2"/><text x="58.1363%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (7 samples, 0.04%)</title><rect x="57.8617%" y="741" width="0.0431%" height="15" fill="rgb(252,155,4)" fg:x="9395" fg:w="7"/><text x="58.1117%" y="751.50"></text></g><g><title>&lt;bytes::buf::uninit_slice::UninitSlice as core::ops::index::IndexMut&lt;core::ops::range::RangeTo&lt;usize&gt;&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="57.9048%" y="741" width="0.0123%" height="15" fill="rgb(212,69,32)" fg:x="9402" fg:w="2"/><text x="58.1548%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.01%)</title><rect x="57.9048%" y="725" width="0.0123%" height="15" fill="rgb(243,107,47)" fg:x="9402" fg:w="2"/><text x="58.1548%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="57.9048%" y="709" width="0.0123%" height="15" fill="rgb(247,130,12)" fg:x="9402" fg:w="2"/><text x="58.1548%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="57.9048%" y="693" width="0.0123%" height="15" fill="rgb(233,74,16)" fg:x="9402" fg:w="2"/><text x="58.1548%" y="703.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (20 samples, 0.12%)</title><rect x="57.8186%" y="773" width="0.1232%" height="15" fill="rgb(208,58,18)" fg:x="9388" fg:w="20"/><text x="58.0686%" y="783.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (20 samples, 0.12%)</title><rect x="57.8186%" y="757" width="0.1232%" height="15" fill="rgb(242,225,1)" fg:x="9388" fg:w="20"/><text x="58.0686%" y="767.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::len (4 samples, 0.02%)</title><rect x="57.9171%" y="741" width="0.0246%" height="15" fill="rgb(249,39,40)" fg:x="9404" fg:w="4"/><text x="58.1671%" y="751.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (3 samples, 0.02%)</title><rect x="57.9725%" y="741" width="0.0185%" height="15" fill="rgb(207,72,44)" fg:x="9413" fg:w="3"/><text x="58.2225%" y="751.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (3 samples, 0.02%)</title><rect x="57.9910%" y="741" width="0.0185%" height="15" fill="rgb(215,193,12)" fg:x="9416" fg:w="3"/><text x="58.2410%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.02%)</title><rect x="57.9910%" y="725" width="0.0185%" height="15" fill="rgb(248,41,39)" fg:x="9416" fg:w="3"/><text x="58.2410%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.02%)</title><rect x="57.9910%" y="709" width="0.0185%" height="15" fill="rgb(253,85,4)" fg:x="9416" fg:w="3"/><text x="58.2410%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (6 samples, 0.04%)</title><rect x="58.0095%" y="725" width="0.0370%" height="15" fill="rgb(243,70,31)" fg:x="9419" fg:w="6"/><text x="58.2595%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="58.0095%" y="709" width="0.0370%" height="15" fill="rgb(253,195,26)" fg:x="9419" fg:w="6"/><text x="58.2595%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned (6 samples, 0.04%)</title><rect x="58.0095%" y="693" width="0.0370%" height="15" fill="rgb(243,42,11)" fg:x="9419" fg:w="6"/><text x="58.2595%" y="703.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (19 samples, 0.12%)</title><rect x="57.9417%" y="773" width="0.1170%" height="15" fill="rgb(239,66,17)" fg:x="9408" fg:w="19"/><text x="58.1917%" y="783.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (17 samples, 0.10%)</title><rect x="57.9541%" y="757" width="0.1047%" height="15" fill="rgb(217,132,21)" fg:x="9410" fg:w="17"/><text x="58.2041%" y="767.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (8 samples, 0.05%)</title><rect x="58.0095%" y="741" width="0.0493%" height="15" fill="rgb(252,202,21)" fg:x="9419" fg:w="8"/><text x="58.2595%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.01%)</title><rect x="58.0464%" y="725" width="0.0123%" height="15" fill="rgb(233,98,36)" fg:x="9425" fg:w="2"/><text x="58.2964%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.01%)</title><rect x="58.0464%" y="709" width="0.0123%" height="15" fill="rgb(216,153,54)" fg:x="9425" fg:w="2"/><text x="58.2964%" y="719.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (59 samples, 0.36%)</title><rect x="57.7200%" y="789" width="0.3634%" height="15" fill="rgb(250,99,7)" fg:x="9372" fg:w="59"/><text x="57.9700%" y="799.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (3 samples, 0.02%)</title><rect x="58.0649%" y="773" width="0.0185%" height="15" fill="rgb(207,56,50)" fg:x="9428" fg:w="3"/><text x="58.3149%" y="783.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (5 samples, 0.03%)</title><rect x="58.2066%" y="629" width="0.0308%" height="15" fill="rgb(244,61,34)" fg:x="9451" fg:w="5"/><text x="58.4566%" y="639.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.02%)</title><rect x="58.2127%" y="613" width="0.0246%" height="15" fill="rgb(241,50,38)" fg:x="9452" fg:w="4"/><text x="58.4627%" y="623.50"></text></g><g><title>tokio::io::driver::Direction::mask (3 samples, 0.02%)</title><rect x="58.2189%" y="597" width="0.0185%" height="15" fill="rgb(212,166,30)" fg:x="9453" fg:w="3"/><text x="58.4689%" y="607.50"></text></g><g><title>__local_bh_enable_ip (3 samples, 0.02%)</title><rect x="58.3359%" y="373" width="0.0185%" height="15" fill="rgb(249,127,32)" fg:x="9472" fg:w="3"/><text x="58.5859%" y="383.50"></text></g><g><title>lock_sock_nested (6 samples, 0.04%)</title><rect x="58.3544%" y="373" width="0.0370%" height="15" fill="rgb(209,103,0)" fg:x="9475" fg:w="6"/><text x="58.6044%" y="383.50"></text></g><g><title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="58.3544%" y="357" width="0.0370%" height="15" fill="rgb(238,209,51)" fg:x="9475" fg:w="6"/><text x="58.6044%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (3 samples, 0.02%)</title><rect x="58.3729%" y="341" width="0.0185%" height="15" fill="rgb(237,56,23)" fg:x="9478" fg:w="3"/><text x="58.6229%" y="351.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="58.4160%" y="245" width="0.0246%" height="15" fill="rgb(215,153,46)" fg:x="9485" fg:w="4"/><text x="58.6660%" y="255.50"></text></g><g><title>__wake_up_common (4 samples, 0.02%)</title><rect x="58.4160%" y="229" width="0.0246%" height="15" fill="rgb(224,49,31)" fg:x="9485" fg:w="4"/><text x="58.6660%" y="239.50"></text></g><g><title>autoremove_wake_function (3 samples, 0.02%)</title><rect x="58.4221%" y="213" width="0.0185%" height="15" fill="rgb(250,18,42)" fg:x="9486" fg:w="3"/><text x="58.6721%" y="223.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="58.4283%" y="197" width="0.0123%" height="15" fill="rgb(215,176,39)" fg:x="9487" fg:w="2"/><text x="58.6783%" y="207.50"></text></g><g><title>__wake_up_common (6 samples, 0.04%)</title><rect x="58.4160%" y="277" width="0.0370%" height="15" fill="rgb(223,77,29)" fg:x="9485" fg:w="6"/><text x="58.6660%" y="287.50"></text></g><g><title>ep_poll_callback (6 samples, 0.04%)</title><rect x="58.4160%" y="261" width="0.0370%" height="15" fill="rgb(234,94,52)" fg:x="9485" fg:w="6"/><text x="58.6660%" y="271.50"></text></g><g><title>_raw_read_lock_irqsave (2 samples, 0.01%)</title><rect x="58.4406%" y="245" width="0.0123%" height="15" fill="rgb(220,154,50)" fg:x="9489" fg:w="2"/><text x="58.6906%" y="255.50"></text></g><g><title>sock_def_readable (8 samples, 0.05%)</title><rect x="58.4098%" y="309" width="0.0493%" height="15" fill="rgb(212,11,10)" fg:x="9484" fg:w="8"/><text x="58.6598%" y="319.50"></text></g><g><title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="58.4160%" y="293" width="0.0431%" height="15" fill="rgb(205,166,19)" fg:x="9485" fg:w="7"/><text x="58.6660%" y="303.50"></text></g><g><title>__release_sock (12 samples, 0.07%)</title><rect x="58.3975%" y="357" width="0.0739%" height="15" fill="rgb(244,198,16)" fg:x="9482" fg:w="12"/><text x="58.6475%" y="367.50"></text></g><g><title>tcp_v4_do_rcv (11 samples, 0.07%)</title><rect x="58.4036%" y="341" width="0.0677%" height="15" fill="rgb(219,69,12)" fg:x="9483" fg:w="11"/><text x="58.6536%" y="351.50"></text></g><g><title>tcp_rcv_established (10 samples, 0.06%)</title><rect x="58.4098%" y="325" width="0.0616%" height="15" fill="rgb(245,30,7)" fg:x="9484" fg:w="10"/><text x="58.6598%" y="335.50"></text></g><g><title>tcp_send_delayed_ack (2 samples, 0.01%)</title><rect x="58.4591%" y="309" width="0.0123%" height="15" fill="rgb(218,221,48)" fg:x="9492" fg:w="2"/><text x="58.7091%" y="319.50"></text></g><g><title>release_sock (16 samples, 0.10%)</title><rect x="58.3913%" y="373" width="0.0985%" height="15" fill="rgb(216,66,15)" fg:x="9481" fg:w="16"/><text x="58.6413%" y="383.50"></text></g><g><title>tcp_release_cb (2 samples, 0.01%)</title><rect x="58.4776%" y="357" width="0.0123%" height="15" fill="rgb(226,122,50)" fg:x="9495" fg:w="2"/><text x="58.7276%" y="367.50"></text></g><g><title>__slab_free (2 samples, 0.01%)</title><rect x="58.5761%" y="325" width="0.0123%" height="15" fill="rgb(239,156,16)" fg:x="9511" fg:w="2"/><text x="58.8261%" y="335.50"></text></g><g><title>kfree (7 samples, 0.04%)</title><rect x="58.5638%" y="341" width="0.0431%" height="15" fill="rgb(224,27,38)" fg:x="9509" fg:w="7"/><text x="58.8138%" y="351.50"></text></g><g><title>slab_free_freelist_hook (3 samples, 0.02%)</title><rect x="58.5884%" y="325" width="0.0185%" height="15" fill="rgb(224,39,27)" fg:x="9513" fg:w="3"/><text x="58.8384%" y="335.50"></text></g><g><title>skb_release_data (5 samples, 0.03%)</title><rect x="58.6069%" y="341" width="0.0308%" height="15" fill="rgb(215,92,29)" fg:x="9516" fg:w="5"/><text x="58.8569%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (4 samples, 0.02%)</title><rect x="58.6438%" y="325" width="0.0246%" height="15" fill="rgb(207,159,16)" fg:x="9522" fg:w="4"/><text x="58.8938%" y="335.50"></text></g><g><title>__kfree_skb (21 samples, 0.13%)</title><rect x="58.5576%" y="357" width="0.1293%" height="15" fill="rgb(238,163,47)" fg:x="9508" fg:w="21"/><text x="58.8076%" y="367.50"></text></g><g><title>skb_release_head_state (8 samples, 0.05%)</title><rect x="58.6377%" y="341" width="0.0493%" height="15" fill="rgb(219,91,49)" fg:x="9521" fg:w="8"/><text x="58.8877%" y="351.50"></text></g><g><title>dst_release (3 samples, 0.02%)</title><rect x="58.6685%" y="325" width="0.0185%" height="15" fill="rgb(227,167,31)" fg:x="9526" fg:w="3"/><text x="58.9185%" y="335.50"></text></g><g><title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="58.6993%" y="325" width="0.0431%" height="15" fill="rgb(234,80,54)" fg:x="9531" fg:w="7"/><text x="58.9493%" y="335.50"></text></g><g><title>__ksize (3 samples, 0.02%)</title><rect x="58.7424%" y="325" width="0.0185%" height="15" fill="rgb(212,114,2)" fg:x="9538" fg:w="3"/><text x="58.9924%" y="335.50"></text></g><g><title>__tcp_send_ack.part.0 (18 samples, 0.11%)</title><rect x="58.6869%" y="357" width="0.1109%" height="15" fill="rgb(234,50,24)" fg:x="9529" fg:w="18"/><text x="58.9369%" y="367.50"></text></g><g><title>__alloc_skb (17 samples, 0.10%)</title><rect x="58.6931%" y="341" width="0.1047%" height="15" fill="rgb(221,68,8)" fg:x="9530" fg:w="17"/><text x="58.9431%" y="351.50"></text></g><g><title>kmem_cache_alloc_node (6 samples, 0.04%)</title><rect x="58.7609%" y="325" width="0.0370%" height="15" fill="rgb(254,180,31)" fg:x="9541" fg:w="6"/><text x="59.0109%" y="335.50"></text></g><g><title>__ip_finish_output (3 samples, 0.02%)</title><rect x="58.8348%" y="325" width="0.0185%" height="15" fill="rgb(247,130,50)" fg:x="9553" fg:w="3"/><text x="59.0848%" y="335.50"></text></g><g><title>ipv4_mtu (2 samples, 0.01%)</title><rect x="58.8409%" y="309" width="0.0123%" height="15" fill="rgb(211,109,4)" fg:x="9554" fg:w="2"/><text x="59.0909%" y="319.50"></text></g><g><title>__sk_dst_check (2 samples, 0.01%)</title><rect x="58.8532%" y="325" width="0.0123%" height="15" fill="rgb(238,50,21)" fg:x="9556" fg:w="2"/><text x="59.1032%" y="335.50"></text></g><g><title>eth_type_trans (2 samples, 0.01%)</title><rect x="58.9148%" y="261" width="0.0123%" height="15" fill="rgb(225,57,45)" fg:x="9566" fg:w="2"/><text x="59.1648%" y="271.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.04%)</title><rect x="58.8963%" y="293" width="0.0370%" height="15" fill="rgb(209,196,50)" fg:x="9563" fg:w="6"/><text x="59.1463%" y="303.50"></text></g><g><title>loopback_xmit (5 samples, 0.03%)</title><rect x="58.9025%" y="277" width="0.0308%" height="15" fill="rgb(242,140,13)" fg:x="9564" fg:w="5"/><text x="59.1525%" y="287.50"></text></g><g><title>netdev_core_pick_tx (2 samples, 0.01%)</title><rect x="58.9333%" y="293" width="0.0123%" height="15" fill="rgb(217,111,7)" fg:x="9569" fg:w="2"/><text x="59.1833%" y="303.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.01%)</title><rect x="58.9456%" y="293" width="0.0123%" height="15" fill="rgb(253,193,51)" fg:x="9571" fg:w="2"/><text x="59.1956%" y="303.50"></text></g><g><title>__dev_queue_xmit (13 samples, 0.08%)</title><rect x="58.8902%" y="309" width="0.0801%" height="15" fill="rgb(252,70,29)" fg:x="9562" fg:w="13"/><text x="59.1402%" y="319.50"></text></g><g><title>validate_xmit_xfrm (2 samples, 0.01%)</title><rect x="58.9579%" y="293" width="0.0123%" height="15" fill="rgb(232,127,12)" fg:x="9573" fg:w="2"/><text x="59.2079%" y="303.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (4 samples, 0.02%)</title><rect x="59.0134%" y="197" width="0.0246%" height="15" fill="rgb(211,180,21)" fg:x="9582" fg:w="4"/><text x="59.2634%" y="207.50"></text></g><g><title>ip_local_deliver (12 samples, 0.07%)</title><rect x="59.0380%" y="197" width="0.0739%" height="15" fill="rgb(229,72,13)" fg:x="9586" fg:w="12"/><text x="59.2880%" y="207.50"></text></g><g><title>nf_hook_slow (12 samples, 0.07%)</title><rect x="59.0380%" y="181" width="0.0739%" height="15" fill="rgb(240,211,49)" fg:x="9586" fg:w="12"/><text x="59.2880%" y="191.50"></text></g><g><title>nft_do_chain_inet (8 samples, 0.05%)</title><rect x="59.0626%" y="165" width="0.0493%" height="15" fill="rgb(219,149,40)" fg:x="9590" fg:w="8"/><text x="59.3126%" y="175.50"></text></g><g><title>nft_do_chain (8 samples, 0.05%)</title><rect x="59.0626%" y="149" width="0.0493%" height="15" fill="rgb(210,127,46)" fg:x="9590" fg:w="8"/><text x="59.3126%" y="159.50"></text></g><g><title>nft_lookup_eval (5 samples, 0.03%)</title><rect x="59.0811%" y="133" width="0.0308%" height="15" fill="rgb(220,106,7)" fg:x="9593" fg:w="5"/><text x="59.3311%" y="143.50"></text></g><g><title>nft_rhash_lookup (3 samples, 0.02%)</title><rect x="59.0934%" y="117" width="0.0185%" height="15" fill="rgb(249,31,22)" fg:x="9595" fg:w="3"/><text x="59.3434%" y="127.50"></text></g><g><title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="59.1612%" y="149" width="0.0246%" height="15" fill="rgb(253,1,49)" fg:x="9606" fg:w="4"/><text x="59.4112%" y="159.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.01%)</title><rect x="59.1858%" y="133" width="0.0123%" height="15" fill="rgb(227,144,33)" fg:x="9610" fg:w="2"/><text x="59.4358%" y="143.50"></text></g><g><title>migrate_disable (2 samples, 0.01%)</title><rect x="59.1858%" y="117" width="0.0123%" height="15" fill="rgb(249,163,44)" fg:x="9610" fg:w="2"/><text x="59.4358%" y="127.50"></text></g><g><title>sk_filter_trim_cap (7 samples, 0.04%)</title><rect x="59.1858%" y="149" width="0.0431%" height="15" fill="rgb(234,15,39)" fg:x="9610" fg:w="7"/><text x="59.4358%" y="159.50"></text></g><g><title>security_sock_rcv_skb (5 samples, 0.03%)</title><rect x="59.1981%" y="133" width="0.0308%" height="15" fill="rgb(207,66,16)" fg:x="9612" fg:w="5"/><text x="59.4481%" y="143.50"></text></g><g><title>selinux_socket_sock_rcv_skb (2 samples, 0.01%)</title><rect x="59.2166%" y="117" width="0.0123%" height="15" fill="rgb(233,112,24)" fg:x="9615" fg:w="2"/><text x="59.4666%" y="127.50"></text></g><g><title>kfree (5 samples, 0.03%)</title><rect x="59.2474%" y="101" width="0.0308%" height="15" fill="rgb(230,90,22)" fg:x="9620" fg:w="5"/><text x="59.4974%" y="111.50"></text></g><g><title>__kfree_skb (6 samples, 0.04%)</title><rect x="59.2474%" y="117" width="0.0370%" height="15" fill="rgb(229,61,13)" fg:x="9620" fg:w="6"/><text x="59.4974%" y="127.50"></text></g><g><title>kmem_cache_free (2 samples, 0.01%)</title><rect x="59.2844%" y="117" width="0.0123%" height="15" fill="rgb(225,57,24)" fg:x="9626" fg:w="2"/><text x="59.5344%" y="127.50"></text></g><g><title>__slab_free (8 samples, 0.05%)</title><rect x="59.3644%" y="69" width="0.0493%" height="15" fill="rgb(208,169,48)" fg:x="9639" fg:w="8"/><text x="59.6144%" y="79.50"></text></g><g><title>__kfree_skb (16 samples, 0.10%)</title><rect x="59.3521%" y="101" width="0.0985%" height="15" fill="rgb(244,218,51)" fg:x="9637" fg:w="16"/><text x="59.6021%" y="111.50"></text></g><g><title>kfree (16 samples, 0.10%)</title><rect x="59.3521%" y="85" width="0.0985%" height="15" fill="rgb(214,148,10)" fg:x="9637" fg:w="16"/><text x="59.6021%" y="95.50"></text></g><g><title>slab_free_freelist_hook (6 samples, 0.04%)</title><rect x="59.4137%" y="69" width="0.0370%" height="15" fill="rgb(225,174,27)" fg:x="9647" fg:w="6"/><text x="59.6637%" y="79.50"></text></g><g><title>__list_del_entry_valid (9 samples, 0.06%)</title><rect x="59.4506%" y="101" width="0.0554%" height="15" fill="rgb(230,96,26)" fg:x="9653" fg:w="9"/><text x="59.7006%" y="111.50"></text></g><g><title>kmem_cache_free (3 samples, 0.02%)</title><rect x="59.5122%" y="101" width="0.0185%" height="15" fill="rgb(232,10,30)" fg:x="9663" fg:w="3"/><text x="59.7622%" y="111.50"></text></g><g><title>rb_erase (3 samples, 0.02%)</title><rect x="59.5307%" y="101" width="0.0185%" height="15" fill="rgb(222,8,50)" fg:x="9666" fg:w="3"/><text x="59.7807%" y="111.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (2 samples, 0.01%)</title><rect x="59.5738%" y="101" width="0.0123%" height="15" fill="rgb(213,81,27)" fg:x="9673" fg:w="2"/><text x="59.8238%" y="111.50"></text></g><g><title>sk_reset_timer (2 samples, 0.01%)</title><rect x="59.5738%" y="85" width="0.0123%" height="15" fill="rgb(245,50,10)" fg:x="9673" fg:w="2"/><text x="59.8238%" y="95.50"></text></g><g><title>__mod_timer (2 samples, 0.01%)</title><rect x="59.5738%" y="69" width="0.0123%" height="15" fill="rgb(216,100,18)" fg:x="9673" fg:w="2"/><text x="59.8238%" y="79.50"></text></g><g><title>tcp_ack (48 samples, 0.30%)</title><rect x="59.2967%" y="117" width="0.2956%" height="15" fill="rgb(236,147,54)" fg:x="9628" fg:w="48"/><text x="59.5467%" y="127.50"></text></g><g><title>tcp_data_queue (2 samples, 0.01%)</title><rect x="59.5984%" y="117" width="0.0123%" height="15" fill="rgb(205,143,26)" fg:x="9677" fg:w="2"/><text x="59.8484%" y="127.50"></text></g><g><title>tcp_mstamp_refresh (2 samples, 0.01%)</title><rect x="59.6108%" y="117" width="0.0123%" height="15" fill="rgb(236,26,9)" fg:x="9679" fg:w="2"/><text x="59.8608%" y="127.50"></text></g><g><title>ktime_get (2 samples, 0.01%)</title><rect x="59.6108%" y="101" width="0.0123%" height="15" fill="rgb(221,165,53)" fg:x="9679" fg:w="2"/><text x="59.8608%" y="111.50"></text></g><g><title>ip_local_deliver_finish (84 samples, 0.52%)</title><rect x="59.1119%" y="197" width="0.5173%" height="15" fill="rgb(214,110,17)" fg:x="9598" fg:w="84"/><text x="59.3619%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (84 samples, 0.52%)</title><rect x="59.1119%" y="181" width="0.5173%" height="15" fill="rgb(237,197,12)" fg:x="9598" fg:w="84"/><text x="59.3619%" y="191.50"></text></g><g><title>tcp_v4_rcv (83 samples, 0.51%)</title><rect x="59.1181%" y="165" width="0.5112%" height="15" fill="rgb(205,84,17)" fg:x="9599" fg:w="83"/><text x="59.3681%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (65 samples, 0.40%)</title><rect x="59.2289%" y="149" width="0.4003%" height="15" fill="rgb(237,18,45)" fg:x="9617" fg:w="65"/><text x="59.4789%" y="159.50"></text></g><g><title>tcp_rcv_established (64 samples, 0.39%)</title><rect x="59.2351%" y="133" width="0.3942%" height="15" fill="rgb(221,87,14)" fg:x="9618" fg:w="64"/><text x="59.4851%" y="143.50"></text></g><g><title>ip_rcv_core (4 samples, 0.02%)</title><rect x="59.6477%" y="181" width="0.0246%" height="15" fill="rgb(238,186,15)" fg:x="9685" fg:w="4"/><text x="59.8977%" y="191.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.01%)</title><rect x="59.6724%" y="181" width="0.0123%" height="15" fill="rgb(208,115,11)" fg:x="9689" fg:w="2"/><text x="59.9224%" y="191.50"></text></g><g><title>nft_cmp_eval (2 samples, 0.01%)</title><rect x="59.8510%" y="133" width="0.0123%" height="15" fill="rgb(254,175,0)" fg:x="9718" fg:w="2"/><text x="60.1010%" y="143.50"></text></g><g><title>__netif_receive_skb_one_core (139 samples, 0.86%)</title><rect x="59.0134%" y="213" width="0.8561%" height="15" fill="rgb(227,24,42)" fg:x="9582" fg:w="139"/><text x="59.2634%" y="223.50"></text></g><g><title>ip_rcv (39 samples, 0.24%)</title><rect x="59.6292%" y="197" width="0.2402%" height="15" fill="rgb(223,211,37)" fg:x="9682" fg:w="39"/><text x="59.8792%" y="207.50"></text></g><g><title>nf_hook_slow (30 samples, 0.18%)</title><rect x="59.6847%" y="181" width="0.1848%" height="15" fill="rgb(235,49,27)" fg:x="9691" fg:w="30"/><text x="59.9347%" y="191.50"></text></g><g><title>nft_do_chain_inet (29 samples, 0.18%)</title><rect x="59.6908%" y="165" width="0.1786%" height="15" fill="rgb(254,97,51)" fg:x="9692" fg:w="29"/><text x="59.9408%" y="175.50"></text></g><g><title>nft_do_chain (29 samples, 0.18%)</title><rect x="59.6908%" y="149" width="0.1786%" height="15" fill="rgb(249,51,40)" fg:x="9692" fg:w="29"/><text x="59.9408%" y="159.50"></text></g><g><title>ip_finish_output2 (164 samples, 1.01%)</title><rect x="58.8656%" y="325" width="1.0100%" height="15" fill="rgb(210,128,45)" fg:x="9558" fg:w="164"/><text x="59.1156%" y="335.50"></text></g><g><title>__local_bh_enable_ip (147 samples, 0.91%)</title><rect x="58.9703%" y="309" width="0.9053%" height="15" fill="rgb(224,137,50)" fg:x="9575" fg:w="147"/><text x="59.2203%" y="319.50"></text></g><g><title>do_softirq (146 samples, 0.90%)</title><rect x="58.9764%" y="293" width="0.8992%" height="15" fill="rgb(242,15,9)" fg:x="9576" fg:w="146"/><text x="59.2264%" y="303.50"></text></g><g><title>__softirqentry_text_start (146 samples, 0.90%)</title><rect x="58.9764%" y="277" width="0.8992%" height="15" fill="rgb(233,187,41)" fg:x="9576" fg:w="146"/><text x="59.2264%" y="287.50"></text></g><g><title>net_rx_action (145 samples, 0.89%)</title><rect x="58.9826%" y="261" width="0.8930%" height="15" fill="rgb(227,2,29)" fg:x="9577" fg:w="145"/><text x="59.2326%" y="271.50"></text></g><g><title>__napi_poll (143 samples, 0.88%)</title><rect x="58.9949%" y="245" width="0.8807%" height="15" fill="rgb(222,70,3)" fg:x="9579" fg:w="143"/><text x="59.2449%" y="255.50"></text></g><g><title>process_backlog (143 samples, 0.88%)</title><rect x="58.9949%" y="229" width="0.8807%" height="15" fill="rgb(213,11,42)" fg:x="9579" fg:w="143"/><text x="59.2449%" y="239.50"></text></g><g><title>ip_finish_output (2 samples, 0.01%)</title><rect x="59.8756%" y="325" width="0.0123%" height="15" fill="rgb(225,150,9)" fg:x="9722" fg:w="2"/><text x="60.1256%" y="335.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.01%)</title><rect x="59.8756%" y="309" width="0.0123%" height="15" fill="rgb(230,162,45)" fg:x="9722" fg:w="2"/><text x="60.1256%" y="319.50"></text></g><g><title>ip_send_check (4 samples, 0.02%)</title><rect x="59.8941%" y="293" width="0.0246%" height="15" fill="rgb(222,14,52)" fg:x="9725" fg:w="4"/><text x="60.1441%" y="303.50"></text></g><g><title>ipt_do_table (13 samples, 0.08%)</title><rect x="59.9372%" y="277" width="0.0801%" height="15" fill="rgb(254,198,14)" fg:x="9732" fg:w="13"/><text x="60.1872%" y="287.50"></text></g><g><title>iptable_mangle_hook (5 samples, 0.03%)</title><rect x="60.0234%" y="277" width="0.0308%" height="15" fill="rgb(220,217,30)" fg:x="9746" fg:w="5"/><text x="60.2734%" y="287.50"></text></g><g><title>ipt_do_table (4 samples, 0.02%)</title><rect x="60.0296%" y="261" width="0.0246%" height="15" fill="rgb(215,146,41)" fg:x="9747" fg:w="4"/><text x="60.2796%" y="271.50"></text></g><g><title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="60.0727%" y="261" width="0.0185%" height="15" fill="rgb(217,27,36)" fg:x="9754" fg:w="3"/><text x="60.3227%" y="271.50"></text></g><g><title>nf_conntrack_tcp_packet (10 samples, 0.06%)</title><rect x="60.0973%" y="261" width="0.0616%" height="15" fill="rgb(219,218,39)" fg:x="9758" fg:w="10"/><text x="60.3473%" y="271.50"></text></g><g><title>nf_ct_seq_offset (2 samples, 0.01%)</title><rect x="60.1466%" y="245" width="0.0123%" height="15" fill="rgb(219,4,42)" fg:x="9766" fg:w="2"/><text x="60.3966%" y="255.50"></text></g><g><title>nf_conntrack_in (17 samples, 0.10%)</title><rect x="60.0727%" y="277" width="0.1047%" height="15" fill="rgb(249,119,36)" fg:x="9754" fg:w="17"/><text x="60.3227%" y="287.50"></text></g><g><title>nf_ct_get_tuple (3 samples, 0.02%)</title><rect x="60.1589%" y="261" width="0.0185%" height="15" fill="rgb(209,23,33)" fg:x="9768" fg:w="3"/><text x="60.4089%" y="271.50"></text></g><g><title>nf_nat_ipv4_local_fn (4 samples, 0.02%)</title><rect x="60.1774%" y="277" width="0.0246%" height="15" fill="rgb(211,10,0)" fg:x="9771" fg:w="4"/><text x="60.4274%" y="287.50"></text></g><g><title>nf_nat_inet_fn (2 samples, 0.01%)</title><rect x="60.1897%" y="261" width="0.0123%" height="15" fill="rgb(208,99,37)" fg:x="9773" fg:w="2"/><text x="60.4397%" y="271.50"></text></g><g><title>nft_cmp_eval (2 samples, 0.01%)</title><rect x="60.2513%" y="245" width="0.0123%" height="15" fill="rgb(213,132,31)" fg:x="9783" fg:w="2"/><text x="60.5013%" y="255.50"></text></g><g><title>nft_immediate_eval (2 samples, 0.01%)</title><rect x="60.2636%" y="245" width="0.0123%" height="15" fill="rgb(243,129,40)" fg:x="9785" fg:w="2"/><text x="60.5136%" y="255.50"></text></g><g><title>nft_do_chain_inet (14 samples, 0.09%)</title><rect x="60.2020%" y="277" width="0.0862%" height="15" fill="rgb(210,66,33)" fg:x="9775" fg:w="14"/><text x="60.4520%" y="287.50"></text></g><g><title>nft_do_chain (14 samples, 0.09%)</title><rect x="60.2020%" y="261" width="0.0862%" height="15" fill="rgb(209,189,4)" fg:x="9775" fg:w="14"/><text x="60.4520%" y="271.50"></text></g><g><title>strncpy (2 samples, 0.01%)</title><rect x="60.2759%" y="245" width="0.0123%" height="15" fill="rgb(214,107,37)" fg:x="9787" fg:w="2"/><text x="60.5259%" y="255.50"></text></g><g><title>ip_local_out (66 samples, 0.41%)</title><rect x="59.8879%" y="325" width="0.4065%" height="15" fill="rgb(245,88,54)" fg:x="9724" fg:w="66"/><text x="60.1379%" y="335.50"></text></g><g><title>__ip_local_out (65 samples, 0.40%)</title><rect x="59.8941%" y="309" width="0.4003%" height="15" fill="rgb(205,146,20)" fg:x="9725" fg:w="65"/><text x="60.1441%" y="319.50"></text></g><g><title>nf_hook_slow (61 samples, 0.38%)</title><rect x="59.9187%" y="293" width="0.3757%" height="15" fill="rgb(220,161,25)" fg:x="9729" fg:w="61"/><text x="60.1687%" y="303.50"></text></g><g><title>__x86_indirect_thunk_rax (2 samples, 0.01%)</title><rect x="60.3067%" y="293" width="0.0123%" height="15" fill="rgb(215,152,15)" fg:x="9792" fg:w="2"/><text x="60.5567%" y="303.50"></text></g><g><title>nf_confirm (5 samples, 0.03%)</title><rect x="60.3190%" y="293" width="0.0308%" height="15" fill="rgb(233,192,44)" fg:x="9794" fg:w="5"/><text x="60.5690%" y="303.50"></text></g><g><title>nf_ct_deliver_cached_events (2 samples, 0.01%)</title><rect x="60.3375%" y="277" width="0.0123%" height="15" fill="rgb(240,170,46)" fg:x="9797" fg:w="2"/><text x="60.5875%" y="287.50"></text></g><g><title>__ip_queue_xmit (249 samples, 1.53%)</title><rect x="58.8348%" y="341" width="1.5335%" height="15" fill="rgb(207,104,33)" fg:x="9553" fg:w="249"/><text x="59.0848%" y="351.50"></text></g><g><title>ip_output (12 samples, 0.07%)</title><rect x="60.2944%" y="325" width="0.0739%" height="15" fill="rgb(219,21,39)" fg:x="9790" fg:w="12"/><text x="60.5444%" y="335.50"></text></g><g><title>nf_hook_slow (12 samples, 0.07%)</title><rect x="60.2944%" y="309" width="0.0739%" height="15" fill="rgb(214,133,29)" fg:x="9790" fg:w="12"/><text x="60.5444%" y="319.50"></text></g><g><title>selinux_ip_postroute (2 samples, 0.01%)</title><rect x="60.3560%" y="293" width="0.0123%" height="15" fill="rgb(226,93,6)" fg:x="9800" fg:w="2"/><text x="60.6060%" y="303.50"></text></g><g><title>__tcp_transmit_skb (257 samples, 1.58%)</title><rect x="58.7978%" y="357" width="1.5828%" height="15" fill="rgb(252,222,34)" fg:x="9547" fg:w="257"/><text x="59.0478%" y="367.50"></text></g><g><title>kfree_skbmem (2 samples, 0.01%)</title><rect x="60.3806%" y="357" width="0.0123%" height="15" fill="rgb(252,92,48)" fg:x="9804" fg:w="2"/><text x="60.6306%" y="367.50"></text></g><g><title>kmem_cache_free (3 samples, 0.02%)</title><rect x="60.3929%" y="357" width="0.0185%" height="15" fill="rgb(245,223,24)" fg:x="9806" fg:w="3"/><text x="60.6429%" y="367.50"></text></g><g><title>_copy_to_iter (18 samples, 0.11%)</title><rect x="60.4853%" y="325" width="0.1109%" height="15" fill="rgb(205,176,3)" fg:x="9821" fg:w="18"/><text x="60.7353%" y="335.50"></text></g><g><title>copy_user_generic_string (18 samples, 0.11%)</title><rect x="60.4853%" y="309" width="0.1109%" height="15" fill="rgb(235,151,15)" fg:x="9821" fg:w="18"/><text x="60.7353%" y="319.50"></text></g><g><title>__virt_addr_valid (2 samples, 0.01%)</title><rect x="60.6146%" y="293" width="0.0123%" height="15" fill="rgb(237,209,11)" fg:x="9842" fg:w="2"/><text x="60.8646%" y="303.50"></text></g><g><title>skb_copy_datagram_iter (37 samples, 0.23%)</title><rect x="60.4114%" y="357" width="0.2279%" height="15" fill="rgb(243,227,24)" fg:x="9809" fg:w="37"/><text x="60.6614%" y="367.50"></text></g><g><title>__skb_datagram_iter (36 samples, 0.22%)</title><rect x="60.4176%" y="341" width="0.2217%" height="15" fill="rgb(239,193,16)" fg:x="9810" fg:w="36"/><text x="60.6676%" y="351.50"></text></g><g><title>simple_copy_to_iter (7 samples, 0.04%)</title><rect x="60.5962%" y="325" width="0.0431%" height="15" fill="rgb(231,27,9)" fg:x="9839" fg:w="7"/><text x="60.8462%" y="335.50"></text></g><g><title>__check_object_size (7 samples, 0.04%)</title><rect x="60.5962%" y="309" width="0.0431%" height="15" fill="rgb(219,169,10)" fg:x="9839" fg:w="7"/><text x="60.8462%" y="319.50"></text></g><g><title>check_stack_object (2 samples, 0.01%)</title><rect x="60.6270%" y="293" width="0.0123%" height="15" fill="rgb(244,229,43)" fg:x="9844" fg:w="2"/><text x="60.8770%" y="303.50"></text></g><g><title>inet_recvmsg (388 samples, 2.39%)</title><rect x="58.3113%" y="405" width="2.3896%" height="15" fill="rgb(254,38,20)" fg:x="9468" fg:w="388"/><text x="58.5613%" y="415.50">in..</text></g><g><title>tcp_recvmsg (386 samples, 2.38%)</title><rect x="58.3236%" y="389" width="2.3773%" height="15" fill="rgb(250,47,30)" fg:x="9470" fg:w="386"/><text x="58.5736%" y="399.50">tc..</text></g><g><title>tcp_recvmsg_locked (359 samples, 2.21%)</title><rect x="58.4899%" y="373" width="2.2110%" height="15" fill="rgb(224,124,36)" fg:x="9497" fg:w="359"/><text x="58.7399%" y="383.50">t..</text></g><g><title>tcp_rcv_space_adjust (9 samples, 0.06%)</title><rect x="60.6454%" y="357" width="0.0554%" height="15" fill="rgb(246,68,51)" fg:x="9847" fg:w="9"/><text x="60.8954%" y="367.50"></text></g><g><title>tcp_mstamp_refresh (5 samples, 0.03%)</title><rect x="60.6701%" y="341" width="0.0308%" height="15" fill="rgb(253,43,49)" fg:x="9851" fg:w="5"/><text x="60.9201%" y="351.50"></text></g><g><title>ktime_get (5 samples, 0.03%)</title><rect x="60.6701%" y="325" width="0.0308%" height="15" fill="rgb(219,54,36)" fg:x="9851" fg:w="5"/><text x="60.9201%" y="335.50"></text></g><g><title>read_tsc (2 samples, 0.01%)</title><rect x="60.6886%" y="309" width="0.0123%" height="15" fill="rgb(227,133,34)" fg:x="9854" fg:w="2"/><text x="60.9386%" y="319.50"></text></g><g><title>sock_recvmsg (10 samples, 0.06%)</title><rect x="60.7009%" y="405" width="0.0616%" height="15" fill="rgb(247,227,15)" fg:x="9856" fg:w="10"/><text x="60.9509%" y="415.50"></text></g><g><title>security_socket_recvmsg (9 samples, 0.06%)</title><rect x="60.7070%" y="389" width="0.0554%" height="15" fill="rgb(229,96,14)" fg:x="9857" fg:w="9"/><text x="60.9570%" y="399.50"></text></g><g><title>selinux_socket_recvmsg (8 samples, 0.05%)</title><rect x="60.7132%" y="373" width="0.0493%" height="15" fill="rgb(220,79,17)" fg:x="9858" fg:w="8"/><text x="60.9632%" y="383.50"></text></g><g><title>avc_has_perm (2 samples, 0.01%)</title><rect x="60.7501%" y="357" width="0.0123%" height="15" fill="rgb(205,131,53)" fg:x="9864" fg:w="2"/><text x="61.0001%" y="367.50"></text></g><g><title>avc_lookup (2 samples, 0.01%)</title><rect x="60.7501%" y="341" width="0.0123%" height="15" fill="rgb(209,50,29)" fg:x="9864" fg:w="2"/><text x="61.0001%" y="351.50"></text></g><g><title>__x64_sys_recvfrom (403 samples, 2.48%)</title><rect x="58.2989%" y="437" width="2.4820%" height="15" fill="rgb(245,86,46)" fg:x="9466" fg:w="403"/><text x="58.5489%" y="447.50">__..</text></g><g><title>__sys_recvfrom (403 samples, 2.48%)</title><rect x="58.2989%" y="421" width="2.4820%" height="15" fill="rgb(235,66,46)" fg:x="9466" fg:w="403"/><text x="58.5489%" y="431.50">__..</text></g><g><title>sockfd_lookup_light (3 samples, 0.02%)</title><rect x="60.7625%" y="405" width="0.0185%" height="15" fill="rgb(232,148,31)" fg:x="9866" fg:w="3"/><text x="61.0125%" y="415.50"></text></g><g><title>__fget_light (3 samples, 0.02%)</title><rect x="60.7625%" y="389" width="0.0185%" height="15" fill="rgb(217,149,8)" fg:x="9866" fg:w="3"/><text x="61.0125%" y="399.50"></text></g><g><title>__fget_files (3 samples, 0.02%)</title><rect x="60.7625%" y="373" width="0.0185%" height="15" fill="rgb(209,183,11)" fg:x="9866" fg:w="3"/><text x="61.0125%" y="383.50"></text></g><g><title>__libc_recv (408 samples, 2.51%)</title><rect x="58.2866%" y="485" width="2.5128%" height="15" fill="rgb(208,55,20)" fg:x="9464" fg:w="408"/><text x="58.5366%" y="495.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (406 samples, 2.50%)</title><rect x="58.2989%" y="469" width="2.5005%" height="15" fill="rgb(218,39,14)" fg:x="9466" fg:w="406"/><text x="58.5489%" y="479.50">en..</text></g><g><title>do_syscall_64 (406 samples, 2.50%)</title><rect x="58.2989%" y="453" width="2.5005%" height="15" fill="rgb(216,169,33)" fg:x="9466" fg:w="406"/><text x="58.5489%" y="463.50">do..</text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (425 samples, 2.62%)</title><rect x="58.1881%" y="661" width="2.6175%" height="15" fill="rgb(233,80,24)" fg:x="9448" fg:w="425"/><text x="58.4381%" y="671.50">to..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (425 samples, 2.62%)</title><rect x="58.1881%" y="645" width="2.6175%" height="15" fill="rgb(213,179,31)" fg:x="9448" fg:w="425"/><text x="58.4381%" y="655.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (417 samples, 2.57%)</title><rect x="58.2374%" y="629" width="2.5682%" height="15" fill="rgb(209,19,5)" fg:x="9456" fg:w="417"/><text x="58.4874%" y="639.50">to..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (417 samples, 2.57%)</title><rect x="58.2374%" y="613" width="2.5682%" height="15" fill="rgb(219,18,35)" fg:x="9456" fg:w="417"/><text x="58.4874%" y="623.50">&lt;&amp;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (414 samples, 2.55%)</title><rect x="58.2558%" y="597" width="2.5497%" height="15" fill="rgb(209,169,16)" fg:x="9459" fg:w="414"/><text x="58.5058%" y="607.50">mi..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (414 samples, 2.55%)</title><rect x="58.2558%" y="581" width="2.5497%" height="15" fill="rgb(245,90,51)" fg:x="9459" fg:w="414"/><text x="58.5058%" y="591.50">mi..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (414 samples, 2.55%)</title><rect x="58.2558%" y="565" width="2.5497%" height="15" fill="rgb(220,99,45)" fg:x="9459" fg:w="414"/><text x="58.5058%" y="575.50">&lt;&amp;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (413 samples, 2.54%)</title><rect x="58.2620%" y="549" width="2.5436%" height="15" fill="rgb(249,89,25)" fg:x="9460" fg:w="413"/><text x="58.5120%" y="559.50">&lt;&amp;..</text></g><g><title>std::sys_common::net::TcpStream::read (410 samples, 2.53%)</title><rect x="58.2805%" y="533" width="2.5251%" height="15" fill="rgb(239,193,0)" fg:x="9463" fg:w="410"/><text x="58.5305%" y="543.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (410 samples, 2.53%)</title><rect x="58.2805%" y="517" width="2.5251%" height="15" fill="rgb(231,126,1)" fg:x="9463" fg:w="410"/><text x="58.5305%" y="527.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (410 samples, 2.53%)</title><rect x="58.2805%" y="501" width="2.5251%" height="15" fill="rgb(243,166,3)" fg:x="9463" fg:w="410"/><text x="58.5305%" y="511.50">st..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (428 samples, 2.64%)</title><rect x="58.1758%" y="709" width="2.6360%" height="15" fill="rgb(223,22,34)" fg:x="9446" fg:w="428"/><text x="58.4258%" y="719.50">&lt;t..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (428 samples, 2.64%)</title><rect x="58.1758%" y="693" width="2.6360%" height="15" fill="rgb(251,52,51)" fg:x="9446" fg:w="428"/><text x="58.4258%" y="703.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (428 samples, 2.64%)</title><rect x="58.1758%" y="677" width="2.6360%" height="15" fill="rgb(221,165,28)" fg:x="9446" fg:w="428"/><text x="58.4258%" y="687.50">to..</text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (429 samples, 2.64%)</title><rect x="58.1758%" y="725" width="2.6421%" height="15" fill="rgb(218,121,47)" fg:x="9446" fg:w="429"/><text x="58.4258%" y="735.50">&lt;t..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (430 samples, 2.65%)</title><rect x="58.1758%" y="741" width="2.6483%" height="15" fill="rgb(209,120,9)" fg:x="9446" fg:w="430"/><text x="58.4258%" y="751.50">&lt;t..</text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.01%)</title><rect x="60.8302%" y="693" width="0.0123%" height="15" fill="rgb(236,68,12)" fg:x="9877" fg:w="2"/><text x="61.0802%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (5 samples, 0.03%)</title><rect x="60.8302%" y="725" width="0.0308%" height="15" fill="rgb(225,194,26)" fg:x="9877" fg:w="5"/><text x="61.0802%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="60.8302%" y="709" width="0.0308%" height="15" fill="rgb(231,84,39)" fg:x="9877" fg:w="5"/><text x="61.0802%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="60.8425%" y="693" width="0.0185%" height="15" fill="rgb(210,11,45)" fg:x="9879" fg:w="3"/><text x="61.0925%" y="703.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::put_slice (7 samples, 0.04%)</title><rect x="60.8240%" y="741" width="0.0431%" height="15" fill="rgb(224,54,52)" fg:x="9876" fg:w="7"/><text x="61.0740%" y="751.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (446 samples, 2.75%)</title><rect x="58.1265%" y="773" width="2.7468%" height="15" fill="rgb(238,102,14)" fg:x="9438" fg:w="446"/><text x="58.3765%" y="783.50">&lt;&amp;..</text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (439 samples, 2.70%)</title><rect x="58.1696%" y="757" width="2.7037%" height="15" fill="rgb(243,160,52)" fg:x="9445" fg:w="439"/><text x="58.4196%" y="767.50">&lt;t..</text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (454 samples, 2.80%)</title><rect x="58.0834%" y="789" width="2.7961%" height="15" fill="rgb(216,114,19)" fg:x="9431" fg:w="454"/><text x="58.3334%" y="799.50">&lt;t..</text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="61.8772%" y="645" width="0.0123%" height="15" fill="rgb(244,166,37)" fg:x="10047" fg:w="2"/><text x="62.1272%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="61.8772%" y="629" width="0.0123%" height="15" fill="rgb(246,29,44)" fg:x="10047" fg:w="2"/><text x="62.1272%" y="639.50"></text></g><g><title>_int_malloc (137 samples, 0.84%)</title><rect x="61.0889%" y="661" width="0.8438%" height="15" fill="rgb(215,56,53)" fg:x="9919" fg:w="137"/><text x="61.3389%" y="671.50"></text></g><g><title>unlink_chunk.constprop.0 (7 samples, 0.04%)</title><rect x="61.8895%" y="645" width="0.0431%" height="15" fill="rgb(217,60,2)" fg:x="10049" fg:w="7"/><text x="62.1395%" y="655.50"></text></g><g><title>mark_wake_futex (2 samples, 0.01%)</title><rect x="61.9511%" y="581" width="0.0123%" height="15" fill="rgb(207,26,24)" fg:x="10059" fg:w="2"/><text x="62.2011%" y="591.50"></text></g><g><title>__task_rq_lock (2 samples, 0.01%)</title><rect x="61.9634%" y="549" width="0.0123%" height="15" fill="rgb(252,210,15)" fg:x="10061" fg:w="2"/><text x="62.2134%" y="559.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="61.9634%" y="533" width="0.0123%" height="15" fill="rgb(253,209,26)" fg:x="10061" fg:w="2"/><text x="62.2134%" y="543.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="61.9634%" y="517" width="0.0123%" height="15" fill="rgb(238,170,14)" fg:x="10061" fg:w="2"/><text x="62.2134%" y="527.50"></text></g><g><title>__GI___libc_malloc (179 samples, 1.10%)</title><rect x="60.8795%" y="677" width="1.1024%" height="15" fill="rgb(216,178,15)" fg:x="9885" fg:w="179"/><text x="61.1295%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="61.9388%" y="661" width="0.0431%" height="15" fill="rgb(250,197,2)" fg:x="10057" fg:w="7"/><text x="62.1888%" y="671.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="61.9388%" y="645" width="0.0431%" height="15" fill="rgb(212,70,42)" fg:x="10057" fg:w="7"/><text x="62.1888%" y="655.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="61.9388%" y="629" width="0.0431%" height="15" fill="rgb(227,213,9)" fg:x="10057" fg:w="7"/><text x="62.1888%" y="639.50"></text></g><g><title>do_futex (7 samples, 0.04%)</title><rect x="61.9388%" y="613" width="0.0431%" height="15" fill="rgb(245,99,25)" fg:x="10057" fg:w="7"/><text x="62.1888%" y="623.50"></text></g><g><title>futex_wake (7 samples, 0.04%)</title><rect x="61.9388%" y="597" width="0.0431%" height="15" fill="rgb(250,82,29)" fg:x="10057" fg:w="7"/><text x="62.1888%" y="607.50"></text></g><g><title>wake_up_q (3 samples, 0.02%)</title><rect x="61.9634%" y="581" width="0.0185%" height="15" fill="rgb(241,226,54)" fg:x="10061" fg:w="3"/><text x="62.2134%" y="591.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="61.9634%" y="565" width="0.0185%" height="15" fill="rgb(221,99,41)" fg:x="10061" fg:w="3"/><text x="62.2134%" y="575.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="61.9819%" y="677" width="0.0123%" height="15" fill="rgb(213,90,21)" fg:x="10064" fg:w="2"/><text x="62.2319%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="61.9819%" y="661" width="0.0123%" height="15" fill="rgb(205,208,24)" fg:x="10064" fg:w="2"/><text x="62.2319%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (184 samples, 1.13%)</title><rect x="60.8795%" y="789" width="1.1332%" height="15" fill="rgb(246,31,12)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (184 samples, 1.13%)</title><rect x="60.8795%" y="773" width="1.1332%" height="15" fill="rgb(213,154,6)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (184 samples, 1.13%)</title><rect x="60.8795%" y="757" width="1.1332%" height="15" fill="rgb(222,163,29)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (184 samples, 1.13%)</title><rect x="60.8795%" y="741" width="1.1332%" height="15" fill="rgb(227,201,8)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (184 samples, 1.13%)</title><rect x="60.8795%" y="725" width="1.1332%" height="15" fill="rgb(233,9,32)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (184 samples, 1.13%)</title><rect x="60.8795%" y="709" width="1.1332%" height="15" fill="rgb(217,54,24)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="719.50"></text></g><g><title>alloc::alloc::alloc (184 samples, 1.13%)</title><rect x="60.8795%" y="693" width="1.1332%" height="15" fill="rgb(235,192,0)" fg:x="9885" fg:w="184"/><text x="61.1295%" y="703.50"></text></g><g><title>__rust_alloc (3 samples, 0.02%)</title><rect x="61.9942%" y="677" width="0.0185%" height="15" fill="rgb(235,45,9)" fg:x="10066" fg:w="3"/><text x="62.2442%" y="687.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (2 samples, 0.01%)</title><rect x="62.0188%" y="789" width="0.0123%" height="15" fill="rgb(246,42,40)" fg:x="10070" fg:w="2"/><text x="62.2688%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (734 samples, 4.52%)</title><rect x="57.5229%" y="821" width="4.5205%" height="15" fill="rgb(248,111,24)" fg:x="9340" fg:w="734"/><text x="57.7729%" y="831.50">&lt;core..</text></g><g><title>scylla::frame::read_response_frame::{{closure}} (734 samples, 4.52%)</title><rect x="57.5229%" y="805" width="4.5205%" height="15" fill="rgb(249,65,22)" fg:x="9340" fg:w="734"/><text x="57.7729%" y="815.50">scyll..</text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (2 samples, 0.01%)</title><rect x="62.0312%" y="789" width="0.0123%" height="15" fill="rgb(238,111,51)" fg:x="10072" fg:w="2"/><text x="62.2812%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="62.0435%" y="821" width="0.0123%" height="15" fill="rgb(250,118,22)" fg:x="10074" fg:w="2"/><text x="62.2935%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="62.0681%" y="757" width="0.0123%" height="15" fill="rgb(234,84,26)" fg:x="10078" fg:w="2"/><text x="62.3181%" y="767.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="62.0804%" y="757" width="0.0185%" height="15" fill="rgb(243,172,12)" fg:x="10080" fg:w="3"/><text x="62.3304%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;scylla::transport::connection::ResponseHandlerMap&gt;&gt; (8 samples, 0.05%)</title><rect x="62.0620%" y="821" width="0.0493%" height="15" fill="rgb(236,150,49)" fg:x="10077" fg:w="8"/><text x="62.3120%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="62.0620%" y="805" width="0.0493%" height="15" fill="rgb(225,197,26)" fg:x="10077" fg:w="8"/><text x="62.3120%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (7 samples, 0.04%)</title><rect x="62.0681%" y="789" width="0.0431%" height="15" fill="rgb(214,17,42)" fg:x="10078" fg:w="7"/><text x="62.3181%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (7 samples, 0.04%)</title><rect x="62.0681%" y="773" width="0.0431%" height="15" fill="rgb(224,165,40)" fg:x="10078" fg:w="7"/><text x="62.3181%" y="783.50"></text></g><g><title>pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="62.0989%" y="757" width="0.0123%" height="15" fill="rgb(246,100,4)" fg:x="10083" fg:w="2"/><text x="62.3489%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.01%)</title><rect x="62.1605%" y="677" width="0.0123%" height="15" fill="rgb(222,103,0)" fg:x="10093" fg:w="2"/><text x="62.4105%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.03%)</title><rect x="62.1482%" y="693" width="0.0308%" height="15" fill="rgb(227,189,26)" fg:x="10091" fg:w="5"/><text x="62.3982%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.03%)</title><rect x="62.1790%" y="677" width="0.0308%" height="15" fill="rgb(214,202,17)" fg:x="10096" fg:w="5"/><text x="62.4290%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.09%)</title><rect x="62.1420%" y="741" width="0.0924%" height="15" fill="rgb(229,111,3)" fg:x="10090" fg:w="15"/><text x="62.3920%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.09%)</title><rect x="62.1420%" y="725" width="0.0924%" height="15" fill="rgb(229,172,15)" fg:x="10090" fg:w="15"/><text x="62.3920%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.09%)</title><rect x="62.1420%" y="709" width="0.0924%" height="15" fill="rgb(230,224,35)" fg:x="10090" fg:w="15"/><text x="62.3920%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.06%)</title><rect x="62.1790%" y="693" width="0.0554%" height="15" fill="rgb(251,141,6)" fg:x="10096" fg:w="9"/><text x="62.4290%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.02%)</title><rect x="62.2098%" y="677" width="0.0246%" height="15" fill="rgb(225,208,6)" fg:x="10101" fg:w="4"/><text x="62.4598%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (21 samples, 0.13%)</title><rect x="62.1235%" y="757" width="0.1293%" height="15" fill="rgb(246,181,16)" fg:x="10087" fg:w="21"/><text x="62.3735%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (2 samples, 0.01%)</title><rect x="62.2406%" y="741" width="0.0123%" height="15" fill="rgb(227,129,36)" fg:x="10106" fg:w="2"/><text x="62.4906%" y="751.50"></text></g><g><title>core::hash::Hasher::write_i16 (2 samples, 0.01%)</title><rect x="62.2406%" y="725" width="0.0123%" height="15" fill="rgb(248,117,24)" fg:x="10106" fg:w="2"/><text x="62.4906%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u16 (2 samples, 0.01%)</title><rect x="62.2406%" y="709" width="0.0123%" height="15" fill="rgb(214,185,35)" fg:x="10106" fg:w="2"/><text x="62.4906%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="62.6470%" y="725" width="0.0123%" height="15" fill="rgb(236,150,34)" fg:x="10172" fg:w="2"/><text x="62.8970%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="62.6470%" y="709" width="0.0123%" height="15" fill="rgb(243,228,27)" fg:x="10172" fg:w="2"/><text x="62.8970%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (67 samples, 0.41%)</title><rect x="62.2898%" y="741" width="0.4126%" height="15" fill="rgb(245,77,44)" fg:x="10114" fg:w="67"/><text x="62.5398%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.04%)</title><rect x="62.6594%" y="725" width="0.0431%" height="15" fill="rgb(235,214,42)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.04%)</title><rect x="62.6594%" y="709" width="0.0431%" height="15" fill="rgb(221,74,3)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.04%)</title><rect x="62.6594%" y="693" width="0.0431%" height="15" fill="rgb(206,121,29)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.04%)</title><rect x="62.6594%" y="677" width="0.0431%" height="15" fill="rgb(249,131,53)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.04%)</title><rect x="62.6594%" y="661" width="0.0431%" height="15" fill="rgb(236,170,29)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.04%)</title><rect x="62.6594%" y="645" width="0.0431%" height="15" fill="rgb(247,96,15)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.04%)</title><rect x="62.6594%" y="629" width="0.0431%" height="15" fill="rgb(211,210,7)" fg:x="10174" fg:w="7"/><text x="62.9094%" y="639.50"></text></g><g><title>scylla::transport::connection::ResponseHandlerMap::take (99 samples, 0.61%)</title><rect x="62.1112%" y="821" width="0.6097%" height="15" fill="rgb(240,88,50)" fg:x="10085" fg:w="99"/><text x="62.3612%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (99 samples, 0.61%)</title><rect x="62.1112%" y="805" width="0.6097%" height="15" fill="rgb(209,229,26)" fg:x="10085" fg:w="99"/><text x="62.3612%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (99 samples, 0.61%)</title><rect x="62.1112%" y="789" width="0.6097%" height="15" fill="rgb(210,68,23)" fg:x="10085" fg:w="99"/><text x="62.3612%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (99 samples, 0.61%)</title><rect x="62.1112%" y="773" width="0.6097%" height="15" fill="rgb(229,180,13)" fg:x="10085" fg:w="99"/><text x="62.3612%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (76 samples, 0.47%)</title><rect x="62.2529%" y="757" width="0.4681%" height="15" fill="rgb(236,53,44)" fg:x="10108" fg:w="76"/><text x="62.5029%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (3 samples, 0.02%)</title><rect x="62.7025%" y="741" width="0.0185%" height="15" fill="rgb(244,214,29)" fg:x="10181" fg:w="3"/><text x="62.9525%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (3 samples, 0.02%)</title><rect x="62.7025%" y="725" width="0.0185%" height="15" fill="rgb(220,75,29)" fg:x="10181" fg:w="3"/><text x="62.9525%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (3 samples, 0.02%)</title><rect x="62.7025%" y="709" width="0.0185%" height="15" fill="rgb(214,183,37)" fg:x="10181" fg:w="3"/><text x="62.9525%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::leading_zeros (2 samples, 0.01%)</title><rect x="62.7086%" y="693" width="0.0123%" height="15" fill="rgb(239,117,29)" fg:x="10182" fg:w="2"/><text x="62.9586%" y="703.50"></text></g><g><title>core::num::&lt;impl u16&gt;::leading_zeros (2 samples, 0.01%)</title><rect x="62.7086%" y="677" width="0.0123%" height="15" fill="rgb(237,171,35)" fg:x="10182" fg:w="2"/><text x="62.9586%" y="687.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (16 samples, 0.10%)</title><rect x="62.7209%" y="821" width="0.0985%" height="15" fill="rgb(229,178,53)" fg:x="10184" fg:w="16"/><text x="62.9709%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (15 samples, 0.09%)</title><rect x="62.7271%" y="805" width="0.0924%" height="15" fill="rgb(210,102,19)" fg:x="10185" fg:w="15"/><text x="62.9771%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (15 samples, 0.09%)</title><rect x="62.7271%" y="789" width="0.0924%" height="15" fill="rgb(235,127,22)" fg:x="10185" fg:w="15"/><text x="62.9771%" y="799.50"></text></g><g><title>__GI___pthread_mutex_trylock (15 samples, 0.09%)</title><rect x="62.7271%" y="773" width="0.0924%" height="15" fill="rgb(244,31,31)" fg:x="10185" fg:w="15"/><text x="62.9771%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="62.8934%" y="805" width="0.0246%" height="15" fill="rgb(231,43,21)" fg:x="10212" fg:w="4"/><text x="63.1434%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="62.8934%" y="789" width="0.0246%" height="15" fill="rgb(217,131,35)" fg:x="10212" fg:w="4"/><text x="63.1434%" y="799.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (129 samples, 0.79%)</title><rect x="62.9180%" y="805" width="0.7945%" height="15" fill="rgb(221,149,4)" fg:x="10216" fg:w="129"/><text x="63.1680%" y="815.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (129 samples, 0.79%)</title><rect x="62.9180%" y="789" width="0.7945%" height="15" fill="rgb(232,170,28)" fg:x="10216" fg:w="129"/><text x="63.1680%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt; (124 samples, 0.76%)</title><rect x="62.9488%" y="773" width="0.7637%" height="15" fill="rgb(238,56,10)" fg:x="10221" fg:w="124"/><text x="63.1988%" y="783.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (2 samples, 0.01%)</title><rect x="63.7125%" y="789" width="0.0123%" height="15" fill="rgb(235,196,14)" fg:x="10345" fg:w="2"/><text x="63.9625%" y="799.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (3 samples, 0.02%)</title><rect x="63.7248%" y="789" width="0.0185%" height="15" fill="rgb(216,45,48)" fg:x="10347" fg:w="3"/><text x="63.9748%" y="799.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (14 samples, 0.09%)</title><rect x="63.7433%" y="789" width="0.0862%" height="15" fill="rgb(238,213,17)" fg:x="10350" fg:w="14"/><text x="63.9933%" y="799.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (110 samples, 0.68%)</title><rect x="64.2791%" y="661" width="0.6775%" height="15" fill="rgb(212,13,2)" fg:x="10437" fg:w="110"/><text x="64.5291%" y="671.50"></text></g><g><title>alloc::rc::is_dangling (110 samples, 0.68%)</title><rect x="64.2791%" y="645" width="0.6775%" height="15" fill="rgb(240,114,20)" fg:x="10437" fg:w="110"/><text x="64.5291%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="64.9443%" y="629" width="0.0123%" height="15" fill="rgb(228,41,40)" fg:x="10545" fg:w="2"/><text x="65.1943%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="64.9443%" y="613" width="0.0123%" height="15" fill="rgb(244,132,35)" fg:x="10545" fg:w="2"/><text x="65.1943%" y="623.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="64.9443%" y="597" width="0.0123%" height="15" fill="rgb(253,189,4)" fg:x="10545" fg:w="2"/><text x="65.1943%" y="607.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="64.9443%" y="581" width="0.0123%" height="15" fill="rgb(224,37,19)" fg:x="10545" fg:w="2"/><text x="65.1943%" y="591.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="64.9443%" y="565" width="0.0123%" height="15" fill="rgb(235,223,18)" fg:x="10545" fg:w="2"/><text x="65.1943%" y="575.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (156 samples, 0.96%)</title><rect x="64.0020%" y="677" width="0.9608%" height="15" fill="rgb(235,163,25)" fg:x="10392" fg:w="156"/><text x="64.2520%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (7 samples, 0.04%)</title><rect x="64.9627%" y="677" width="0.0431%" height="15" fill="rgb(217,145,28)" fg:x="10548" fg:w="7"/><text x="65.2127%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="64.9627%" y="661" width="0.0431%" height="15" fill="rgb(223,223,32)" fg:x="10548" fg:w="7"/><text x="65.2127%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (18 samples, 0.11%)</title><rect x="65.0059%" y="677" width="0.1109%" height="15" fill="rgb(227,189,39)" fg:x="10555" fg:w="18"/><text x="65.2559%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.01%)</title><rect x="65.1537%" y="645" width="0.0123%" height="15" fill="rgb(248,10,22)" fg:x="10579" fg:w="2"/><text x="65.4037%" y="655.50"></text></g><g><title>core::mem::take (2 samples, 0.01%)</title><rect x="65.1537%" y="629" width="0.0123%" height="15" fill="rgb(248,46,39)" fg:x="10579" fg:w="2"/><text x="65.4037%" y="639.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="65.1537%" y="613" width="0.0123%" height="15" fill="rgb(248,113,48)" fg:x="10579" fg:w="2"/><text x="65.4037%" y="623.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="65.1537%" y="597" width="0.0123%" height="15" fill="rgb(245,16,25)" fg:x="10579" fg:w="2"/><text x="65.4037%" y="607.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (45 samples, 0.28%)</title><rect x="65.1167%" y="677" width="0.2771%" height="15" fill="rgb(249,152,16)" fg:x="10573" fg:w="45"/><text x="65.3667%" y="687.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (41 samples, 0.25%)</title><rect x="65.1413%" y="661" width="0.2525%" height="15" fill="rgb(250,16,1)" fg:x="10577" fg:w="41"/><text x="65.3913%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (37 samples, 0.23%)</title><rect x="65.1660%" y="645" width="0.2279%" height="15" fill="rgb(249,138,3)" fg:x="10581" fg:w="37"/><text x="65.4160%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_or (37 samples, 0.23%)</title><rect x="65.1660%" y="629" width="0.2279%" height="15" fill="rgb(227,71,41)" fg:x="10581" fg:w="37"/><text x="65.4160%" y="639.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (13 samples, 0.08%)</title><rect x="65.3939%" y="677" width="0.0801%" height="15" fill="rgb(209,184,23)" fg:x="10618" fg:w="13"/><text x="65.6439%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (13 samples, 0.08%)</title><rect x="65.3939%" y="661" width="0.0801%" height="15" fill="rgb(223,215,31)" fg:x="10618" fg:w="13"/><text x="65.6439%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_store (13 samples, 0.08%)</title><rect x="65.3939%" y="645" width="0.0801%" height="15" fill="rgb(210,146,28)" fg:x="10618" fg:w="13"/><text x="65.6439%" y="655.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (2 samples, 0.01%)</title><rect x="65.4862%" y="597" width="0.0123%" height="15" fill="rgb(209,183,41)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="607.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (2 samples, 0.01%)</title><rect x="65.4862%" y="581" width="0.0123%" height="15" fill="rgb(209,224,45)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="591.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (2 samples, 0.01%)</title><rect x="65.4862%" y="565" width="0.0123%" height="15" fill="rgb(224,209,51)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (2 samples, 0.01%)</title><rect x="65.4862%" y="549" width="0.0123%" height="15" fill="rgb(223,17,39)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::write (2 samples, 0.01%)</title><rect x="65.4862%" y="533" width="0.0123%" height="15" fill="rgb(234,204,37)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.01%)</title><rect x="65.4862%" y="517" width="0.0123%" height="15" fill="rgb(236,120,5)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="527.50"></text></g><g><title>__GI___libc_write (2 samples, 0.01%)</title><rect x="65.4862%" y="501" width="0.0123%" height="15" fill="rgb(248,97,27)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="65.4862%" y="485" width="0.0123%" height="15" fill="rgb(240,66,17)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="495.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="65.4862%" y="469" width="0.0123%" height="15" fill="rgb(210,79,3)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="479.50"></text></g><g><title>ksys_write (2 samples, 0.01%)</title><rect x="65.4862%" y="453" width="0.0123%" height="15" fill="rgb(214,176,27)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="463.50"></text></g><g><title>vfs_write (2 samples, 0.01%)</title><rect x="65.4862%" y="437" width="0.0123%" height="15" fill="rgb(235,185,3)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="447.50"></text></g><g><title>eventfd_write (2 samples, 0.01%)</title><rect x="65.4862%" y="421" width="0.0123%" height="15" fill="rgb(227,24,12)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="431.50"></text></g><g><title>__wake_up_common (2 samples, 0.01%)</title><rect x="65.4862%" y="405" width="0.0123%" height="15" fill="rgb(252,169,48)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="415.50"></text></g><g><title>ep_poll_callback (2 samples, 0.01%)</title><rect x="65.4862%" y="389" width="0.0123%" height="15" fill="rgb(212,65,1)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="399.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="65.4862%" y="373" width="0.0123%" height="15" fill="rgb(242,39,24)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="383.50"></text></g><g><title>__wake_up_common (2 samples, 0.01%)</title><rect x="65.4862%" y="357" width="0.0123%" height="15" fill="rgb(249,32,23)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="367.50"></text></g><g><title>autoremove_wake_function (2 samples, 0.01%)</title><rect x="65.4862%" y="341" width="0.0123%" height="15" fill="rgb(251,195,23)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="351.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="65.4862%" y="325" width="0.0123%" height="15" fill="rgb(236,174,8)" fg:x="10633" fg:w="2"/><text x="65.7362%" y="335.50"></text></g><g><title>scylla::transport::connection::Connection::reader::{{closure}} (1,316 samples, 8.10%)</title><rect x="57.4121%" y="837" width="8.1049%" height="15" fill="rgb(220,197,8)" fg:x="9322" fg:w="1316"/><text x="57.6621%" y="847.50">scylla::tra..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (438 samples, 2.70%)</title><rect x="62.8195%" y="821" width="2.6975%" height="15" fill="rgb(240,108,37)" fg:x="10200" fg:w="438"/><text x="63.0695%" y="831.50">to..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (293 samples, 1.80%)</title><rect x="63.7125%" y="805" width="1.8045%" height="15" fill="rgb(232,176,24)" fg:x="10345" fg:w="293"/><text x="63.9625%" y="815.50">t..</text></g><g><title>tokio::sync::oneshot::Task::with_task (274 samples, 1.69%)</title><rect x="63.8295%" y="789" width="1.6875%" height="15" fill="rgb(243,35,29)" fg:x="10364" fg:w="274"/><text x="64.0795%" y="799.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (274 samples, 1.69%)</title><rect x="63.8295%" y="773" width="1.6875%" height="15" fill="rgb(210,37,18)" fg:x="10364" fg:w="274"/><text x="64.0795%" y="783.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (274 samples, 1.69%)</title><rect x="63.8295%" y="757" width="1.6875%" height="15" fill="rgb(224,184,40)" fg:x="10364" fg:w="274"/><text x="64.0795%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (274 samples, 1.69%)</title><rect x="63.8295%" y="741" width="1.6875%" height="15" fill="rgb(236,39,29)" fg:x="10364" fg:w="274"/><text x="64.0795%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (274 samples, 1.69%)</title><rect x="63.8295%" y="725" width="1.6875%" height="15" fill="rgb(232,48,39)" fg:x="10364" fg:w="274"/><text x="64.0795%" y="735.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (252 samples, 1.55%)</title><rect x="63.9650%" y="709" width="1.5520%" height="15" fill="rgb(236,34,42)" fg:x="10386" fg:w="252"/><text x="64.2150%" y="719.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (252 samples, 1.55%)</title><rect x="63.9650%" y="693" width="1.5520%" height="15" fill="rgb(243,106,37)" fg:x="10386" fg:w="252"/><text x="64.2150%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (7 samples, 0.04%)</title><rect x="65.4739%" y="677" width="0.0431%" height="15" fill="rgb(218,96,6)" fg:x="10631" fg:w="7"/><text x="65.7239%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (5 samples, 0.03%)</title><rect x="65.4862%" y="661" width="0.0308%" height="15" fill="rgb(235,130,12)" fg:x="10633" fg:w="5"/><text x="65.7362%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (5 samples, 0.03%)</title><rect x="65.4862%" y="645" width="0.0308%" height="15" fill="rgb(231,95,0)" fg:x="10633" fg:w="5"/><text x="65.7362%" y="655.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="65.4862%" y="629" width="0.0308%" height="15" fill="rgb(228,12,23)" fg:x="10633" fg:w="5"/><text x="65.7362%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (5 samples, 0.03%)</title><rect x="65.4862%" y="613" width="0.0308%" height="15" fill="rgb(216,12,1)" fg:x="10633" fg:w="5"/><text x="65.7362%" y="623.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.02%)</title><rect x="65.4986%" y="597" width="0.0185%" height="15" fill="rgb(219,59,3)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.02%)</title><rect x="65.4986%" y="581" width="0.0185%" height="15" fill="rgb(215,208,46)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="591.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 0.02%)</title><rect x="65.4986%" y="565" width="0.0185%" height="15" fill="rgb(254,224,29)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="575.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="65.4986%" y="549" width="0.0185%" height="15" fill="rgb(232,14,29)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="65.4986%" y="533" width="0.0185%" height="15" fill="rgb(208,45,52)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="65.4986%" y="517" width="0.0185%" height="15" fill="rgb(234,191,28)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="527.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.02%)</title><rect x="65.4986%" y="501" width="0.0185%" height="15" fill="rgb(244,67,43)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="511.50"></text></g><g><title>do_futex (3 samples, 0.02%)</title><rect x="65.4986%" y="485" width="0.0185%" height="15" fill="rgb(236,189,24)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="495.50"></text></g><g><title>futex_wake (3 samples, 0.02%)</title><rect x="65.4986%" y="469" width="0.0185%" height="15" fill="rgb(239,214,33)" fg:x="10635" fg:w="3"/><text x="65.7486%" y="479.50"></text></g><g><title>tokio::coop::CURRENT::__getit (3 samples, 0.02%)</title><rect x="65.7634%" y="693" width="0.0185%" height="15" fill="rgb(226,176,41)" fg:x="10678" fg:w="3"/><text x="66.0134%" y="703.50"></text></g><g><title>tokio::coop::poll_proceed (5 samples, 0.03%)</title><rect x="65.7634%" y="741" width="0.0308%" height="15" fill="rgb(248,47,8)" fg:x="10678" fg:w="5"/><text x="66.0134%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="65.7634%" y="725" width="0.0308%" height="15" fill="rgb(218,81,44)" fg:x="10678" fg:w="5"/><text x="66.0134%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="65.7634%" y="709" width="0.0308%" height="15" fill="rgb(213,98,6)" fg:x="10678" fg:w="5"/><text x="66.0134%" y="719.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (2 samples, 0.01%)</title><rect x="65.7819%" y="693" width="0.0123%" height="15" fill="rgb(222,85,22)" fg:x="10681" fg:w="2"/><text x="66.0319%" y="703.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (3 samples, 0.02%)</title><rect x="65.8188%" y="709" width="0.0185%" height="15" fill="rgb(239,46,39)" fg:x="10687" fg:w="3"/><text x="66.0688%" y="719.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="65.8373%" y="693" width="0.0123%" height="15" fill="rgb(237,12,29)" fg:x="10690" fg:w="2"/><text x="66.0873%" y="703.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (10 samples, 0.06%)</title><rect x="65.8373%" y="709" width="0.0616%" height="15" fill="rgb(214,77,8)" fg:x="10690" fg:w="10"/><text x="66.0873%" y="719.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (8 samples, 0.05%)</title><rect x="65.8496%" y="693" width="0.0493%" height="15" fill="rgb(217,168,37)" fg:x="10692" fg:w="8"/><text x="66.0996%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.15%)</title><rect x="65.7511%" y="821" width="0.1540%" height="15" fill="rgb(221,217,23)" fg:x="10676" fg:w="25"/><text x="66.0011%" y="831.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (24 samples, 0.15%)</title><rect x="65.7572%" y="805" width="0.1478%" height="15" fill="rgb(243,229,36)" fg:x="10677" fg:w="24"/><text x="66.0072%" y="815.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.15%)</title><rect x="65.7572%" y="789" width="0.1478%" height="15" fill="rgb(251,163,40)" fg:x="10677" fg:w="24"/><text x="66.0072%" y="799.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (24 samples, 0.15%)</title><rect x="65.7572%" y="773" width="0.1478%" height="15" fill="rgb(237,222,12)" fg:x="10677" fg:w="24"/><text x="66.0072%" y="783.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (24 samples, 0.15%)</title><rect x="65.7572%" y="757" width="0.1478%" height="15" fill="rgb(248,132,6)" fg:x="10677" fg:w="24"/><text x="66.0072%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (18 samples, 0.11%)</title><rect x="65.7942%" y="741" width="0.1109%" height="15" fill="rgb(227,167,50)" fg:x="10683" fg:w="18"/><text x="66.0442%" y="751.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (17 samples, 0.10%)</title><rect x="65.8003%" y="725" width="0.1047%" height="15" fill="rgb(242,84,37)" fg:x="10684" fg:w="17"/><text x="66.0503%" y="735.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (4 samples, 0.02%)</title><rect x="65.9112%" y="661" width="0.0246%" height="15" fill="rgb(212,4,50)" fg:x="10702" fg:w="4"/><text x="66.1612%" y="671.50"></text></g><g><title>tokio::io::driver::Handle::inner (3 samples, 0.02%)</title><rect x="65.9173%" y="645" width="0.0185%" height="15" fill="rgb(230,228,32)" fg:x="10703" fg:w="3"/><text x="66.1673%" y="655.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.02%)</title><rect x="65.9173%" y="629" width="0.0185%" height="15" fill="rgb(248,217,23)" fg:x="10703" fg:w="3"/><text x="66.1673%" y="639.50"></text></g><g><title>security_socket_sendmsg (5 samples, 0.03%)</title><rect x="65.9913%" y="453" width="0.0308%" height="15" fill="rgb(238,197,32)" fg:x="10715" fg:w="5"/><text x="66.2413%" y="463.50"></text></g><g><title>selinux_socket_sendmsg (2 samples, 0.01%)</title><rect x="66.0097%" y="437" width="0.0123%" height="15" fill="rgb(236,106,1)" fg:x="10718" fg:w="2"/><text x="66.2597%" y="447.50"></text></g><g><title>lock_sock_nested (2 samples, 0.01%)</title><rect x="66.0220%" y="437" width="0.0123%" height="15" fill="rgb(219,228,13)" fg:x="10720" fg:w="2"/><text x="66.2720%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (2 samples, 0.01%)</title><rect x="66.0220%" y="421" width="0.0123%" height="15" fill="rgb(238,30,35)" fg:x="10720" fg:w="2"/><text x="66.2720%" y="431.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="66.0220%" y="405" width="0.0123%" height="15" fill="rgb(236,70,23)" fg:x="10720" fg:w="2"/><text x="66.2720%" y="415.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="66.0713%" y="373" width="0.0185%" height="15" fill="rgb(249,104,48)" fg:x="10728" fg:w="3"/><text x="66.3213%" y="383.50"></text></g><g><title>sock_def_readable (3 samples, 0.02%)</title><rect x="66.0898%" y="357" width="0.0185%" height="15" fill="rgb(254,117,50)" fg:x="10731" fg:w="3"/><text x="66.3398%" y="367.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.02%)</title><rect x="66.0898%" y="341" width="0.0185%" height="15" fill="rgb(223,152,4)" fg:x="10731" fg:w="3"/><text x="66.3398%" y="351.50"></text></g><g><title>__wake_up_common (3 samples, 0.02%)</title><rect x="66.0898%" y="325" width="0.0185%" height="15" fill="rgb(245,6,2)" fg:x="10731" fg:w="3"/><text x="66.3398%" y="335.50"></text></g><g><title>ep_poll_callback (3 samples, 0.02%)</title><rect x="66.0898%" y="309" width="0.0185%" height="15" fill="rgb(249,150,24)" fg:x="10731" fg:w="3"/><text x="66.3398%" y="319.50"></text></g><g><title>tcp_data_queue (4 samples, 0.02%)</title><rect x="66.0898%" y="373" width="0.0246%" height="15" fill="rgb(228,185,42)" fg:x="10731" fg:w="4"/><text x="66.3398%" y="383.50"></text></g><g><title>release_sock (15 samples, 0.09%)</title><rect x="66.0344%" y="437" width="0.0924%" height="15" fill="rgb(226,39,33)" fg:x="10722" fg:w="15"/><text x="66.2844%" y="447.50"></text></g><g><title>__release_sock (15 samples, 0.09%)</title><rect x="66.0344%" y="421" width="0.0924%" height="15" fill="rgb(221,166,19)" fg:x="10722" fg:w="15"/><text x="66.2844%" y="431.50"></text></g><g><title>tcp_v4_do_rcv (14 samples, 0.09%)</title><rect x="66.0405%" y="405" width="0.0862%" height="15" fill="rgb(209,109,2)" fg:x="10723" fg:w="14"/><text x="66.2905%" y="415.50"></text></g><g><title>tcp_rcv_established (13 samples, 0.08%)</title><rect x="66.0467%" y="389" width="0.0801%" height="15" fill="rgb(252,216,26)" fg:x="10724" fg:w="13"/><text x="66.2967%" y="399.50"></text></g><g><title>tcp_queue_rcv (2 samples, 0.01%)</title><rect x="66.1144%" y="373" width="0.0123%" height="15" fill="rgb(227,173,36)" fg:x="10735" fg:w="2"/><text x="66.3644%" y="383.50"></text></g><g><title>tcp_try_coalesce (2 samples, 0.01%)</title><rect x="66.1144%" y="357" width="0.0123%" height="15" fill="rgb(209,90,7)" fg:x="10735" fg:w="2"/><text x="66.3644%" y="367.50"></text></g><g><title>skb_try_coalesce (2 samples, 0.01%)</title><rect x="66.1144%" y="341" width="0.0123%" height="15" fill="rgb(250,194,11)" fg:x="10735" fg:w="2"/><text x="66.3644%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.01%)</title><rect x="66.2869%" y="325" width="0.0123%" height="15" fill="rgb(220,72,50)" fg:x="10763" fg:w="2"/><text x="66.5369%" y="335.50"></text></g><g><title>netdev_core_pick_tx (3 samples, 0.02%)</title><rect x="66.2992%" y="325" width="0.0185%" height="15" fill="rgb(222,106,48)" fg:x="10765" fg:w="3"/><text x="66.5492%" y="335.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.05%)</title><rect x="66.2746%" y="341" width="0.0493%" height="15" fill="rgb(216,220,45)" fg:x="10761" fg:w="8"/><text x="66.5246%" y="351.50"></text></g><g><title>irqtime_account_irq (5 samples, 0.03%)</title><rect x="66.3485%" y="293" width="0.0308%" height="15" fill="rgb(234,112,18)" fg:x="10773" fg:w="5"/><text x="66.5985%" y="303.50"></text></g><g><title>sched_clock_cpu (4 samples, 0.02%)</title><rect x="66.3546%" y="277" width="0.0246%" height="15" fill="rgb(206,179,9)" fg:x="10774" fg:w="4"/><text x="66.6046%" y="287.50"></text></g><g><title>native_sched_clock (4 samples, 0.02%)</title><rect x="66.3546%" y="261" width="0.0246%" height="15" fill="rgb(215,115,40)" fg:x="10774" fg:w="4"/><text x="66.6046%" y="271.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (3 samples, 0.02%)</title><rect x="66.4224%" y="229" width="0.0185%" height="15" fill="rgb(222,69,34)" fg:x="10785" fg:w="3"/><text x="66.6724%" y="239.50"></text></g><g><title>ipt_do_table (3 samples, 0.02%)</title><rect x="66.4470%" y="197" width="0.0185%" height="15" fill="rgb(209,161,10)" fg:x="10789" fg:w="3"/><text x="66.6970%" y="207.50"></text></g><g><title>nft_immediate_eval (2 samples, 0.01%)</title><rect x="66.4963%" y="165" width="0.0123%" height="15" fill="rgb(217,6,38)" fg:x="10797" fg:w="2"/><text x="66.7463%" y="175.50"></text></g><g><title>ip_local_deliver (17 samples, 0.10%)</title><rect x="66.4408%" y="229" width="0.1047%" height="15" fill="rgb(229,229,48)" fg:x="10788" fg:w="17"/><text x="66.6908%" y="239.50"></text></g><g><title>nf_hook_slow (17 samples, 0.10%)</title><rect x="66.4408%" y="213" width="0.1047%" height="15" fill="rgb(225,21,28)" fg:x="10788" fg:w="17"/><text x="66.6908%" y="223.50"></text></g><g><title>nft_do_chain_inet (11 samples, 0.07%)</title><rect x="66.4778%" y="197" width="0.0677%" height="15" fill="rgb(206,33,13)" fg:x="10794" fg:w="11"/><text x="66.7278%" y="207.50"></text></g><g><title>nft_do_chain (11 samples, 0.07%)</title><rect x="66.4778%" y="181" width="0.0677%" height="15" fill="rgb(242,178,17)" fg:x="10794" fg:w="11"/><text x="66.7278%" y="191.50"></text></g><g><title>nft_lookup_eval (6 samples, 0.04%)</title><rect x="66.5086%" y="165" width="0.0370%" height="15" fill="rgb(220,162,5)" fg:x="10799" fg:w="6"/><text x="66.7586%" y="175.50"></text></g><g><title>nft_rhash_lookup (4 samples, 0.02%)</title><rect x="66.5209%" y="149" width="0.0246%" height="15" fill="rgb(210,33,43)" fg:x="10801" fg:w="4"/><text x="66.7709%" y="159.50"></text></g><g><title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="66.5887%" y="181" width="0.0308%" height="15" fill="rgb(216,116,54)" fg:x="10812" fg:w="5"/><text x="66.8387%" y="191.50"></text></g><g><title>sk_filter_trim_cap (4 samples, 0.02%)</title><rect x="66.6194%" y="181" width="0.0246%" height="15" fill="rgb(249,92,24)" fg:x="10817" fg:w="4"/><text x="66.8694%" y="191.50"></text></g><g><title>security_sock_rcv_skb (3 samples, 0.02%)</title><rect x="66.6256%" y="165" width="0.0185%" height="15" fill="rgb(231,189,14)" fg:x="10818" fg:w="3"/><text x="66.8756%" y="175.50"></text></g><g><title>selinux_socket_sock_rcv_skb (2 samples, 0.01%)</title><rect x="66.6318%" y="149" width="0.0123%" height="15" fill="rgb(230,8,41)" fg:x="10819" fg:w="2"/><text x="66.8818%" y="159.50"></text></g><g><title>sock_put (2 samples, 0.01%)</title><rect x="66.6441%" y="181" width="0.0123%" height="15" fill="rgb(249,7,27)" fg:x="10821" fg:w="2"/><text x="66.8941%" y="191.50"></text></g><g><title>tcp_add_backlog (2 samples, 0.01%)</title><rect x="66.6564%" y="181" width="0.0123%" height="15" fill="rgb(232,86,5)" fg:x="10823" fg:w="2"/><text x="66.9064%" y="191.50"></text></g><g><title>__tcp_transmit_skb (2 samples, 0.01%)</title><rect x="66.7057%" y="149" width="0.0123%" height="15" fill="rgb(224,175,18)" fg:x="10831" fg:w="2"/><text x="66.9557%" y="159.50"></text></g><g><title>sk_reset_timer (4 samples, 0.02%)</title><rect x="66.7241%" y="149" width="0.0246%" height="15" fill="rgb(220,129,12)" fg:x="10834" fg:w="4"/><text x="66.9741%" y="159.50"></text></g><g><title>__mod_timer (4 samples, 0.02%)</title><rect x="66.7241%" y="133" width="0.0246%" height="15" fill="rgb(210,19,36)" fg:x="10834" fg:w="4"/><text x="66.9741%" y="143.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.02%)</title><rect x="66.7673%" y="85" width="0.0185%" height="15" fill="rgb(219,96,14)" fg:x="10841" fg:w="3"/><text x="67.0173%" y="95.50"></text></g><g><title>__wake_up_common (3 samples, 0.02%)</title><rect x="66.7673%" y="69" width="0.0185%" height="15" fill="rgb(249,106,1)" fg:x="10841" fg:w="3"/><text x="67.0173%" y="79.50"></text></g><g><title>autoremove_wake_function (3 samples, 0.02%)</title><rect x="66.7673%" y="53" width="0.0185%" height="15" fill="rgb(249,155,20)" fg:x="10841" fg:w="3"/><text x="67.0173%" y="63.50"></text></g><g><title>try_to_wake_up (3 samples, 0.02%)</title><rect x="66.7673%" y="37" width="0.0185%" height="15" fill="rgb(244,168,9)" fg:x="10841" fg:w="3"/><text x="67.0173%" y="47.50"></text></g><g><title>__wake_up_common (7 samples, 0.04%)</title><rect x="66.7549%" y="117" width="0.0431%" height="15" fill="rgb(216,23,50)" fg:x="10839" fg:w="7"/><text x="67.0049%" y="127.50"></text></g><g><title>ep_poll_callback (7 samples, 0.04%)</title><rect x="66.7549%" y="101" width="0.0431%" height="15" fill="rgb(224,219,20)" fg:x="10839" fg:w="7"/><text x="67.0049%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (2 samples, 0.01%)</title><rect x="66.7857%" y="85" width="0.0123%" height="15" fill="rgb(222,156,15)" fg:x="10844" fg:w="2"/><text x="67.0357%" y="95.50"></text></g><g><title>sock_def_readable (10 samples, 0.06%)</title><rect x="66.7488%" y="149" width="0.0616%" height="15" fill="rgb(231,97,17)" fg:x="10838" fg:w="10"/><text x="66.9988%" y="159.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.06%)</title><rect x="66.7549%" y="133" width="0.0554%" height="15" fill="rgb(218,70,48)" fg:x="10839" fg:w="9"/><text x="67.0049%" y="143.50"></text></g><g><title>__kfree_skb (3 samples, 0.02%)</title><rect x="66.8350%" y="133" width="0.0185%" height="15" fill="rgb(212,196,52)" fg:x="10852" fg:w="3"/><text x="67.0850%" y="143.50"></text></g><g><title>skb_release_data (2 samples, 0.01%)</title><rect x="66.8412%" y="117" width="0.0123%" height="15" fill="rgb(243,203,18)" fg:x="10853" fg:w="2"/><text x="67.0912%" y="127.50"></text></g><g><title>__list_del_entry_valid (2 samples, 0.01%)</title><rect x="66.8535%" y="133" width="0.0123%" height="15" fill="rgb(252,125,41)" fg:x="10855" fg:w="2"/><text x="67.1035%" y="143.50"></text></g><g><title>tcp_ack (14 samples, 0.09%)</title><rect x="66.8104%" y="149" width="0.0862%" height="15" fill="rgb(223,180,33)" fg:x="10848" fg:w="14"/><text x="67.0604%" y="159.50"></text></g><g><title>tcp_ack_update_rtt (2 samples, 0.01%)</title><rect x="66.8843%" y="133" width="0.0123%" height="15" fill="rgb(254,159,46)" fg:x="10860" fg:w="2"/><text x="67.1343%" y="143.50"></text></g><g><title>sock_def_readable (2 samples, 0.01%)</title><rect x="66.8966%" y="133" width="0.0123%" height="15" fill="rgb(254,38,10)" fg:x="10862" fg:w="2"/><text x="67.1466%" y="143.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="66.8966%" y="117" width="0.0123%" height="15" fill="rgb(208,217,32)" fg:x="10862" fg:w="2"/><text x="67.1466%" y="127.50"></text></g><g><title>__wake_up_common (2 samples, 0.01%)</title><rect x="66.8966%" y="101" width="0.0123%" height="15" fill="rgb(221,120,13)" fg:x="10862" fg:w="2"/><text x="67.1466%" y="111.50"></text></g><g><title>ep_poll_callback (2 samples, 0.01%)</title><rect x="66.8966%" y="85" width="0.0123%" height="15" fill="rgb(246,54,52)" fg:x="10862" fg:w="2"/><text x="67.1466%" y="95.50"></text></g><g><title>tcp_data_queue (3 samples, 0.02%)</title><rect x="66.8966%" y="149" width="0.0185%" height="15" fill="rgb(242,34,25)" fg:x="10862" fg:w="3"/><text x="67.1466%" y="159.50"></text></g><g><title>tcp_mstamp_refresh (3 samples, 0.02%)</title><rect x="66.9212%" y="149" width="0.0185%" height="15" fill="rgb(247,209,9)" fg:x="10866" fg:w="3"/><text x="67.1712%" y="159.50"></text></g><g><title>ktime_get (3 samples, 0.02%)</title><rect x="66.9212%" y="133" width="0.0185%" height="15" fill="rgb(228,71,26)" fg:x="10866" fg:w="3"/><text x="67.1712%" y="143.50"></text></g><g><title>read_tsc (2 samples, 0.01%)</title><rect x="66.9274%" y="117" width="0.0123%" height="15" fill="rgb(222,145,49)" fg:x="10867" fg:w="2"/><text x="67.1774%" y="127.50"></text></g><g><title>tcp_queue_rcv (4 samples, 0.02%)</title><rect x="66.9397%" y="149" width="0.0246%" height="15" fill="rgb(218,121,17)" fg:x="10869" fg:w="4"/><text x="67.1897%" y="159.50"></text></g><g><title>tcp_try_coalesce (3 samples, 0.02%)</title><rect x="66.9459%" y="133" width="0.0185%" height="15" fill="rgb(244,50,7)" fg:x="10870" fg:w="3"/><text x="67.1959%" y="143.50"></text></g><g><title>skb_try_coalesce (3 samples, 0.02%)</title><rect x="66.9459%" y="117" width="0.0185%" height="15" fill="rgb(246,229,37)" fg:x="10870" fg:w="3"/><text x="67.1959%" y="127.50"></text></g><g><title>tcp_send_delayed_ack (2 samples, 0.01%)</title><rect x="66.9643%" y="149" width="0.0123%" height="15" fill="rgb(225,18,5)" fg:x="10873" fg:w="2"/><text x="67.2143%" y="159.50"></text></g><g><title>ip_local_deliver_finish (71 samples, 0.44%)</title><rect x="66.5455%" y="229" width="0.4373%" height="15" fill="rgb(213,204,8)" fg:x="10805" fg:w="71"/><text x="66.7955%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (71 samples, 0.44%)</title><rect x="66.5455%" y="213" width="0.4373%" height="15" fill="rgb(238,103,6)" fg:x="10805" fg:w="71"/><text x="66.7955%" y="223.50"></text></g><g><title>tcp_v4_rcv (71 samples, 0.44%)</title><rect x="66.5455%" y="197" width="0.4373%" height="15" fill="rgb(222,25,35)" fg:x="10805" fg:w="71"/><text x="66.7955%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (51 samples, 0.31%)</title><rect x="66.6687%" y="181" width="0.3141%" height="15" fill="rgb(213,203,35)" fg:x="10825" fg:w="51"/><text x="66.9187%" y="191.50"></text></g><g><title>tcp_rcv_established (48 samples, 0.30%)</title><rect x="66.6872%" y="165" width="0.2956%" height="15" fill="rgb(221,79,53)" fg:x="10828" fg:w="48"/><text x="66.9372%" y="175.50"></text></g><g><title>ipt_do_table (4 samples, 0.02%)</title><rect x="67.0075%" y="197" width="0.0246%" height="15" fill="rgb(243,200,35)" fg:x="10880" fg:w="4"/><text x="67.2575%" y="207.50"></text></g><g><title>nft_cmp_eval (3 samples, 0.02%)</title><rect x="67.1553%" y="165" width="0.0185%" height="15" fill="rgb(248,60,25)" fg:x="10904" fg:w="3"/><text x="67.4053%" y="175.50"></text></g><g><title>nft_immediate_eval (3 samples, 0.02%)</title><rect x="67.1737%" y="165" width="0.0185%" height="15" fill="rgb(227,53,46)" fg:x="10907" fg:w="3"/><text x="67.4237%" y="175.50"></text></g><g><title>nft_meta_get_eval (7 samples, 0.04%)</title><rect x="67.1922%" y="165" width="0.0431%" height="15" fill="rgb(216,120,32)" fg:x="10910" fg:w="7"/><text x="67.4422%" y="175.50"></text></g><g><title>__netif_receive_skb_one_core (138 samples, 0.85%)</title><rect x="66.4162%" y="245" width="0.8499%" height="15" fill="rgb(220,134,1)" fg:x="10784" fg:w="138"/><text x="66.6662%" y="255.50"></text></g><g><title>ip_rcv (46 samples, 0.28%)</title><rect x="66.9828%" y="229" width="0.2833%" height="15" fill="rgb(237,168,5)" fg:x="10876" fg:w="46"/><text x="67.2328%" y="239.50"></text></g><g><title>nf_hook_slow (45 samples, 0.28%)</title><rect x="66.9890%" y="213" width="0.2771%" height="15" fill="rgb(231,100,33)" fg:x="10877" fg:w="45"/><text x="67.2390%" y="223.50"></text></g><g><title>nft_do_chain_inet (37 samples, 0.23%)</title><rect x="67.0382%" y="197" width="0.2279%" height="15" fill="rgb(236,177,47)" fg:x="10885" fg:w="37"/><text x="67.2882%" y="207.50"></text></g><g><title>nft_do_chain (36 samples, 0.22%)</title><rect x="67.0444%" y="181" width="0.2217%" height="15" fill="rgb(235,7,49)" fg:x="10886" fg:w="36"/><text x="67.2944%" y="191.50"></text></g><g><title>strncpy (5 samples, 0.03%)</title><rect x="67.2353%" y="165" width="0.0308%" height="15" fill="rgb(232,119,22)" fg:x="10917" fg:w="5"/><text x="67.4853%" y="175.50"></text></g><g><title>ip_finish_output2 (164 samples, 1.01%)</title><rect x="66.2622%" y="357" width="1.0100%" height="15" fill="rgb(254,73,53)" fg:x="10759" fg:w="164"/><text x="66.5122%" y="367.50"></text></g><g><title>__local_bh_enable_ip (154 samples, 0.95%)</title><rect x="66.3238%" y="341" width="0.9485%" height="15" fill="rgb(251,35,20)" fg:x="10769" fg:w="154"/><text x="66.5738%" y="351.50"></text></g><g><title>do_softirq (154 samples, 0.95%)</title><rect x="66.3238%" y="325" width="0.9485%" height="15" fill="rgb(241,119,20)" fg:x="10769" fg:w="154"/><text x="66.5738%" y="335.50"></text></g><g><title>__softirqentry_text_start (152 samples, 0.94%)</title><rect x="66.3361%" y="309" width="0.9361%" height="15" fill="rgb(207,102,14)" fg:x="10771" fg:w="152"/><text x="66.5861%" y="319.50"></text></g><g><title>net_rx_action (145 samples, 0.89%)</title><rect x="66.3793%" y="293" width="0.8930%" height="15" fill="rgb(248,201,50)" fg:x="10778" fg:w="145"/><text x="66.6293%" y="303.50"></text></g><g><title>__napi_poll (143 samples, 0.88%)</title><rect x="66.3916%" y="277" width="0.8807%" height="15" fill="rgb(222,185,44)" fg:x="10780" fg:w="143"/><text x="66.6416%" y="287.50"></text></g><g><title>process_backlog (142 samples, 0.87%)</title><rect x="66.3977%" y="261" width="0.8745%" height="15" fill="rgb(218,107,18)" fg:x="10781" fg:w="142"/><text x="66.6477%" y="271.50"></text></g><g><title>ip_finish_output (2 samples, 0.01%)</title><rect x="67.2723%" y="357" width="0.0123%" height="15" fill="rgb(237,177,39)" fg:x="10923" fg:w="2"/><text x="67.5223%" y="367.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (2 samples, 0.01%)</title><rect x="67.2723%" y="341" width="0.0123%" height="15" fill="rgb(246,69,6)" fg:x="10923" fg:w="2"/><text x="67.5223%" y="351.50"></text></g><g><title>ip_send_check (2 samples, 0.01%)</title><rect x="67.2908%" y="325" width="0.0123%" height="15" fill="rgb(234,208,37)" fg:x="10926" fg:w="2"/><text x="67.5408%" y="335.50"></text></g><g><title>ipt_do_table (13 samples, 0.08%)</title><rect x="67.3154%" y="309" width="0.0801%" height="15" fill="rgb(225,4,6)" fg:x="10930" fg:w="13"/><text x="67.5654%" y="319.50"></text></g><g><title>iptable_mangle_hook (4 samples, 0.02%)</title><rect x="67.3955%" y="309" width="0.0246%" height="15" fill="rgb(233,45,0)" fg:x="10943" fg:w="4"/><text x="67.6455%" y="319.50"></text></g><g><title>ipt_do_table (3 samples, 0.02%)</title><rect x="67.4016%" y="293" width="0.0185%" height="15" fill="rgb(226,136,5)" fg:x="10944" fg:w="3"/><text x="67.6516%" y="303.50"></text></g><g><title>__nf_conntrack_find_get (3 samples, 0.02%)</title><rect x="67.4447%" y="293" width="0.0185%" height="15" fill="rgb(211,91,47)" fg:x="10951" fg:w="3"/><text x="67.6947%" y="303.50"></text></g><g><title>nf_conntrack_in (19 samples, 0.12%)</title><rect x="67.4262%" y="309" width="0.1170%" height="15" fill="rgb(242,88,51)" fg:x="10948" fg:w="19"/><text x="67.6762%" y="319.50"></text></g><g><title>nf_conntrack_tcp_packet (12 samples, 0.07%)</title><rect x="67.4694%" y="293" width="0.0739%" height="15" fill="rgb(230,91,28)" fg:x="10955" fg:w="12"/><text x="67.7194%" y="303.50"></text></g><g><title>nf_ct_seq_offset (3 samples, 0.02%)</title><rect x="67.5248%" y="277" width="0.0185%" height="15" fill="rgb(254,186,29)" fg:x="10964" fg:w="3"/><text x="67.7748%" y="287.50"></text></g><g><title>nft_cmp_eval (2 samples, 0.01%)</title><rect x="67.5925%" y="277" width="0.0123%" height="15" fill="rgb(238,6,4)" fg:x="10975" fg:w="2"/><text x="67.8425%" y="287.50"></text></g><g><title>nft_immediate_eval (3 samples, 0.02%)</title><rect x="67.6049%" y="277" width="0.0185%" height="15" fill="rgb(221,151,16)" fg:x="10977" fg:w="3"/><text x="67.8549%" y="287.50"></text></g><g><title>ip_local_out (56 samples, 0.34%)</title><rect x="67.2846%" y="357" width="0.3449%" height="15" fill="rgb(251,143,52)" fg:x="10925" fg:w="56"/><text x="67.5346%" y="367.50"></text></g><g><title>__ip_local_out (55 samples, 0.34%)</title><rect x="67.2908%" y="341" width="0.3387%" height="15" fill="rgb(206,90,15)" fg:x="10926" fg:w="55"/><text x="67.5408%" y="351.50"></text></g><g><title>nf_hook_slow (53 samples, 0.33%)</title><rect x="67.3031%" y="325" width="0.3264%" height="15" fill="rgb(218,35,8)" fg:x="10928" fg:w="53"/><text x="67.5531%" y="335.50"></text></g><g><title>nft_do_chain_inet (13 samples, 0.08%)</title><rect x="67.5494%" y="309" width="0.0801%" height="15" fill="rgb(239,215,6)" fg:x="10968" fg:w="13"/><text x="67.7994%" y="319.50"></text></g><g><title>nft_do_chain (11 samples, 0.07%)</title><rect x="67.5617%" y="293" width="0.0677%" height="15" fill="rgb(245,116,39)" fg:x="10970" fg:w="11"/><text x="67.8117%" y="303.50"></text></g><g><title>__ip_queue_xmit (235 samples, 1.45%)</title><rect x="66.2253%" y="373" width="1.4473%" height="15" fill="rgb(242,65,28)" fg:x="10753" fg:w="235"/><text x="66.4753%" y="383.50"></text></g><g><title>ip_output (7 samples, 0.04%)</title><rect x="67.6295%" y="357" width="0.0431%" height="15" fill="rgb(252,132,53)" fg:x="10981" fg:w="7"/><text x="67.8795%" y="367.50"></text></g><g><title>nf_hook_slow (4 samples, 0.02%)</title><rect x="67.6480%" y="341" width="0.0246%" height="15" fill="rgb(224,159,50)" fg:x="10984" fg:w="4"/><text x="67.8980%" y="351.50"></text></g><g><title>skb_clone (4 samples, 0.02%)</title><rect x="67.6849%" y="373" width="0.0246%" height="15" fill="rgb(224,93,4)" fg:x="10990" fg:w="4"/><text x="67.9349%" y="383.50"></text></g><g><title>tcp_options_write (5 samples, 0.03%)</title><rect x="67.7096%" y="373" width="0.0308%" height="15" fill="rgb(208,81,34)" fg:x="10994" fg:w="5"/><text x="67.9596%" y="383.50"></text></g><g><title>tcp_rate_skb_sent (2 samples, 0.01%)</title><rect x="67.7403%" y="373" width="0.0123%" height="15" fill="rgb(233,92,54)" fg:x="10999" fg:w="2"/><text x="67.9903%" y="383.50"></text></g><g><title>__tcp_transmit_skb (254 samples, 1.56%)</title><rect x="66.1945%" y="389" width="1.5643%" height="15" fill="rgb(237,21,14)" fg:x="10748" fg:w="254"/><text x="66.4445%" y="399.50"></text></g><g><title>tcp_event_new_data_sent (5 samples, 0.03%)</title><rect x="67.7588%" y="389" width="0.0308%" height="15" fill="rgb(249,128,51)" fg:x="11002" fg:w="5"/><text x="68.0088%" y="399.50"></text></g><g><title>sk_reset_timer (3 samples, 0.02%)</title><rect x="67.7711%" y="373" width="0.0185%" height="15" fill="rgb(223,129,24)" fg:x="11004" fg:w="3"/><text x="68.0211%" y="383.50"></text></g><g><title>__mod_timer (3 samples, 0.02%)</title><rect x="67.7711%" y="357" width="0.0185%" height="15" fill="rgb(231,168,25)" fg:x="11004" fg:w="3"/><text x="68.0211%" y="367.50"></text></g><g><title>lock_timer_base (2 samples, 0.01%)</title><rect x="67.7773%" y="341" width="0.0123%" height="15" fill="rgb(224,39,20)" fg:x="11005" fg:w="2"/><text x="68.0273%" y="351.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (3 samples, 0.02%)</title><rect x="67.7896%" y="389" width="0.0185%" height="15" fill="rgb(225,152,53)" fg:x="11007" fg:w="3"/><text x="68.0396%" y="399.50"></text></g><g><title>sk_reset_timer (3 samples, 0.02%)</title><rect x="67.7896%" y="373" width="0.0185%" height="15" fill="rgb(252,17,24)" fg:x="11007" fg:w="3"/><text x="68.0396%" y="383.50"></text></g><g><title>__mod_timer (3 samples, 0.02%)</title><rect x="67.7896%" y="357" width="0.0185%" height="15" fill="rgb(250,114,30)" fg:x="11007" fg:w="3"/><text x="68.0396%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (271 samples, 1.67%)</title><rect x="66.1452%" y="421" width="1.6690%" height="15" fill="rgb(229,5,4)" fg:x="10740" fg:w="271"/><text x="66.3952%" y="431.50"></text></g><g><title>tcp_write_xmit (270 samples, 1.66%)</title><rect x="66.1514%" y="405" width="1.6629%" height="15" fill="rgb(225,176,49)" fg:x="10741" fg:w="270"/><text x="66.4014%" y="415.50"></text></g><g><title>___slab_alloc (2 samples, 0.01%)</title><rect x="67.8943%" y="373" width="0.0123%" height="15" fill="rgb(224,221,49)" fg:x="11024" fg:w="2"/><text x="68.1443%" y="383.50"></text></g><g><title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="67.8758%" y="389" width="0.0431%" height="15" fill="rgb(253,169,27)" fg:x="11021" fg:w="7"/><text x="68.1258%" y="399.50"></text></g><g><title>kmalloc_slab (2 samples, 0.01%)</title><rect x="67.9066%" y="373" width="0.0123%" height="15" fill="rgb(211,206,16)" fg:x="11026" fg:w="2"/><text x="68.1566%" y="383.50"></text></g><g><title>sk_stream_alloc_skb (23 samples, 0.14%)</title><rect x="67.8143%" y="421" width="0.1417%" height="15" fill="rgb(244,87,35)" fg:x="11011" fg:w="23"/><text x="68.0643%" y="431.50"></text></g><g><title>__alloc_skb (21 samples, 0.13%)</title><rect x="67.8266%" y="405" width="0.1293%" height="15" fill="rgb(246,28,10)" fg:x="11013" fg:w="21"/><text x="68.0766%" y="415.50"></text></g><g><title>kmem_cache_alloc_node (6 samples, 0.04%)</title><rect x="67.9190%" y="389" width="0.0370%" height="15" fill="rgb(229,12,44)" fg:x="11028" fg:w="6"/><text x="68.1690%" y="399.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (2 samples, 0.01%)</title><rect x="67.9436%" y="373" width="0.0123%" height="15" fill="rgb(210,145,37)" fg:x="11032" fg:w="2"/><text x="68.1936%" y="383.50"></text></g><g><title>__check_object_size (3 samples, 0.02%)</title><rect x="67.9621%" y="405" width="0.0185%" height="15" fill="rgb(227,112,52)" fg:x="11035" fg:w="3"/><text x="68.2121%" y="415.50"></text></g><g><title>copy_user_generic_string (18 samples, 0.11%)</title><rect x="67.9929%" y="389" width="0.1109%" height="15" fill="rgb(238,155,34)" fg:x="11040" fg:w="18"/><text x="68.2429%" y="399.50"></text></g><g><title>skb_do_copy_data_nocache (25 samples, 0.15%)</title><rect x="67.9559%" y="421" width="0.1540%" height="15" fill="rgb(239,226,36)" fg:x="11034" fg:w="25"/><text x="68.2059%" y="431.50"></text></g><g><title>_copy_from_iter_full (21 samples, 0.13%)</title><rect x="67.9805%" y="405" width="0.1293%" height="15" fill="rgb(230,16,23)" fg:x="11038" fg:w="21"/><text x="68.2305%" y="415.50"></text></g><g><title>skb_entail (4 samples, 0.02%)</title><rect x="68.1099%" y="421" width="0.0246%" height="15" fill="rgb(236,171,36)" fg:x="11059" fg:w="4"/><text x="68.3599%" y="431.50"></text></g><g><title>tcp_send_mss (5 samples, 0.03%)</title><rect x="68.1407%" y="421" width="0.0308%" height="15" fill="rgb(221,22,14)" fg:x="11064" fg:w="5"/><text x="68.3907%" y="431.50"></text></g><g><title>tcp_current_mss (2 samples, 0.01%)</title><rect x="68.1591%" y="405" width="0.0123%" height="15" fill="rgb(242,43,11)" fg:x="11067" fg:w="2"/><text x="68.4091%" y="415.50"></text></g><g><title>sock_sendmsg (358 samples, 2.20%)</title><rect x="65.9728%" y="469" width="2.2048%" height="15" fill="rgb(232,69,23)" fg:x="10712" fg:w="358"/><text x="66.2228%" y="479.50">s..</text></g><g><title>tcp_sendmsg (350 samples, 2.16%)</title><rect x="66.0220%" y="453" width="2.1556%" height="15" fill="rgb(216,180,54)" fg:x="10720" fg:w="350"/><text x="66.2720%" y="463.50">t..</text></g><g><title>tcp_sendmsg_locked (333 samples, 2.05%)</title><rect x="66.1267%" y="437" width="2.0509%" height="15" fill="rgb(216,5,24)" fg:x="10737" fg:w="333"/><text x="66.3767%" y="447.50">t..</text></g><g><title>__x64_sys_sendto (363 samples, 2.24%)</title><rect x="65.9543%" y="501" width="2.2356%" height="15" fill="rgb(225,89,9)" fg:x="10709" fg:w="363"/><text x="66.2043%" y="511.50">_..</text></g><g><title>__sys_sendto (363 samples, 2.24%)</title><rect x="65.9543%" y="485" width="2.2356%" height="15" fill="rgb(243,75,33)" fg:x="10709" fg:w="363"/><text x="66.2043%" y="495.50">_..</text></g><g><title>sockfd_lookup_light (2 samples, 0.01%)</title><rect x="68.1776%" y="469" width="0.0123%" height="15" fill="rgb(247,141,45)" fg:x="11070" fg:w="2"/><text x="68.4276%" y="479.50"></text></g><g><title>__fget_light (2 samples, 0.01%)</title><rect x="68.1776%" y="453" width="0.0123%" height="15" fill="rgb(232,177,36)" fg:x="11070" fg:w="2"/><text x="68.4276%" y="463.50"></text></g><g><title>__fget_files (2 samples, 0.01%)</title><rect x="68.1776%" y="437" width="0.0123%" height="15" fill="rgb(219,125,36)" fg:x="11070" fg:w="2"/><text x="68.4276%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (366 samples, 2.25%)</title><rect x="65.9481%" y="533" width="2.2541%" height="15" fill="rgb(227,94,9)" fg:x="10708" fg:w="366"/><text x="66.1981%" y="543.50">e..</text></g><g><title>do_syscall_64 (365 samples, 2.25%)</title><rect x="65.9543%" y="517" width="2.2480%" height="15" fill="rgb(240,34,52)" fg:x="10709" fg:w="365"/><text x="66.2043%" y="527.50">d..</text></g><g><title>&lt;tokio::io::util::flush::Flush&lt;A&gt; as core::future::future::Future&gt;::poll (374 samples, 2.30%)</title><rect x="65.9050%" y="821" width="2.3034%" height="15" fill="rgb(216,45,12)" fg:x="10701" fg:w="374"/><text x="66.1550%" y="831.50">&lt;..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_flush (374 samples, 2.30%)</title><rect x="65.9050%" y="805" width="2.3034%" height="15" fill="rgb(246,21,19)" fg:x="10701" fg:w="374"/><text x="66.1550%" y="815.50">&lt;..</text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_flush (374 samples, 2.30%)</title><rect x="65.9050%" y="789" width="2.3034%" height="15" fill="rgb(213,98,42)" fg:x="10701" fg:w="374"/><text x="66.1550%" y="799.50">&lt;..</text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (374 samples, 2.30%)</title><rect x="65.9050%" y="773" width="2.3034%" height="15" fill="rgb(250,136,47)" fg:x="10701" fg:w="374"/><text x="66.1550%" y="783.50">t..</text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (373 samples, 2.30%)</title><rect x="65.9112%" y="757" width="2.2972%" height="15" fill="rgb(251,124,27)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="767.50">&lt;..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (373 samples, 2.30%)</title><rect x="65.9112%" y="741" width="2.2972%" height="15" fill="rgb(229,180,14)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="751.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (373 samples, 2.30%)</title><rect x="65.9112%" y="725" width="2.2972%" height="15" fill="rgb(245,216,25)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="735.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (373 samples, 2.30%)</title><rect x="65.9112%" y="709" width="2.2972%" height="15" fill="rgb(251,43,5)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="719.50">t..</text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (373 samples, 2.30%)</title><rect x="65.9112%" y="693" width="2.2972%" height="15" fill="rgb(250,128,24)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="703.50">t..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (373 samples, 2.30%)</title><rect x="65.9112%" y="677" width="2.2972%" height="15" fill="rgb(217,117,27)" fg:x="10702" fg:w="373"/><text x="66.1612%" y="687.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (369 samples, 2.27%)</title><rect x="65.9358%" y="661" width="2.2726%" height="15" fill="rgb(245,147,4)" fg:x="10706" fg:w="369"/><text x="66.1858%" y="671.50">t..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (369 samples, 2.27%)</title><rect x="65.9358%" y="645" width="2.2726%" height="15" fill="rgb(242,201,35)" fg:x="10706" fg:w="369"/><text x="66.1858%" y="655.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (368 samples, 2.27%)</title><rect x="65.9420%" y="629" width="2.2664%" height="15" fill="rgb(218,181,1)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="639.50">m..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (368 samples, 2.27%)</title><rect x="65.9420%" y="613" width="2.2664%" height="15" fill="rgb(222,6,29)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="623.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (368 samples, 2.27%)</title><rect x="65.9420%" y="597" width="2.2664%" height="15" fill="rgb(208,186,3)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="607.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (368 samples, 2.27%)</title><rect x="65.9420%" y="581" width="2.2664%" height="15" fill="rgb(216,36,26)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="591.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (368 samples, 2.27%)</title><rect x="65.9420%" y="565" width="2.2664%" height="15" fill="rgb(248,201,23)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="575.50">s..</text></g><g><title>__libc_send (368 samples, 2.27%)</title><rect x="65.9420%" y="549" width="2.2664%" height="15" fill="rgb(251,170,31)" fg:x="10707" fg:w="368"/><text x="66.1920%" y="559.50">_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="68.3316%" y="709" width="0.0123%" height="15" fill="rgb(207,110,25)" fg:x="11095" fg:w="2"/><text x="68.5816%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="68.3316%" y="693" width="0.0123%" height="15" fill="rgb(250,54,15)" fg:x="11095" fg:w="2"/><text x="68.5816%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned (7 samples, 0.04%)</title><rect x="68.3439%" y="693" width="0.0431%" height="15" fill="rgb(227,68,33)" fg:x="11097" fg:w="7"/><text x="68.5939%" y="703.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write (124 samples, 0.76%)</title><rect x="68.3316%" y="773" width="0.7637%" height="15" fill="rgb(238,34,41)" fg:x="11095" fg:w="124"/><text x="68.5816%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (124 samples, 0.76%)</title><rect x="68.3316%" y="757" width="0.7637%" height="15" fill="rgb(220,11,15)" fg:x="11095" fg:w="124"/><text x="68.5816%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (124 samples, 0.76%)</title><rect x="68.3316%" y="741" width="0.7637%" height="15" fill="rgb(246,111,35)" fg:x="11095" fg:w="124"/><text x="68.5816%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (124 samples, 0.76%)</title><rect x="68.3316%" y="725" width="0.7637%" height="15" fill="rgb(209,88,53)" fg:x="11095" fg:w="124"/><text x="68.5816%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (122 samples, 0.75%)</title><rect x="68.3439%" y="709" width="0.7514%" height="15" fill="rgb(231,185,47)" fg:x="11097" fg:w="122"/><text x="68.5939%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (115 samples, 0.71%)</title><rect x="68.3870%" y="693" width="0.7083%" height="15" fill="rgb(233,154,1)" fg:x="11104" fg:w="115"/><text x="68.6370%" y="703.50"></text></g><g><title>release_sock (2 samples, 0.01%)</title><rect x="69.1199%" y="437" width="0.0123%" height="15" fill="rgb(225,15,46)" fg:x="11223" fg:w="2"/><text x="69.3699%" y="447.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (2 samples, 0.01%)</title><rect x="69.2000%" y="229" width="0.0123%" height="15" fill="rgb(211,135,41)" fg:x="11236" fg:w="2"/><text x="69.4500%" y="239.50"></text></g><g><title>ip_local_deliver (3 samples, 0.02%)</title><rect x="69.2123%" y="229" width="0.0185%" height="15" fill="rgb(208,54,0)" fg:x="11238" fg:w="3"/><text x="69.4623%" y="239.50"></text></g><g><title>nf_hook_slow (3 samples, 0.02%)</title><rect x="69.2123%" y="213" width="0.0185%" height="15" fill="rgb(244,136,14)" fg:x="11238" fg:w="3"/><text x="69.4623%" y="223.50"></text></g><g><title>nft_do_chain_inet (2 samples, 0.01%)</title><rect x="69.2185%" y="197" width="0.0123%" height="15" fill="rgb(241,56,14)" fg:x="11239" fg:w="2"/><text x="69.4685%" y="207.50"></text></g><g><title>nft_do_chain (2 samples, 0.01%)</title><rect x="69.2185%" y="181" width="0.0123%" height="15" fill="rgb(205,80,24)" fg:x="11239" fg:w="2"/><text x="69.4685%" y="191.50"></text></g><g><title>nft_lookup_eval (2 samples, 0.01%)</title><rect x="69.2185%" y="165" width="0.0123%" height="15" fill="rgb(220,57,4)" fg:x="11239" fg:w="2"/><text x="69.4685%" y="175.50"></text></g><g><title>nft_rhash_lookup (2 samples, 0.01%)</title><rect x="69.2185%" y="149" width="0.0123%" height="15" fill="rgb(226,193,50)" fg:x="11239" fg:w="2"/><text x="69.4685%" y="159.50"></text></g><g><title>sk_reset_timer (2 samples, 0.01%)</title><rect x="69.2800%" y="149" width="0.0123%" height="15" fill="rgb(231,168,22)" fg:x="11249" fg:w="2"/><text x="69.5300%" y="159.50"></text></g><g><title>__mod_timer (2 samples, 0.01%)</title><rect x="69.2800%" y="133" width="0.0123%" height="15" fill="rgb(254,215,14)" fg:x="11249" fg:w="2"/><text x="69.5300%" y="143.50"></text></g><g><title>sock_def_readable (4 samples, 0.02%)</title><rect x="69.2924%" y="149" width="0.0246%" height="15" fill="rgb(211,115,16)" fg:x="11251" fg:w="4"/><text x="69.5424%" y="159.50"></text></g><g><title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="69.2924%" y="133" width="0.0246%" height="15" fill="rgb(236,210,16)" fg:x="11251" fg:w="4"/><text x="69.5424%" y="143.50"></text></g><g><title>__wake_up_common (4 samples, 0.02%)</title><rect x="69.2924%" y="117" width="0.0246%" height="15" fill="rgb(221,94,12)" fg:x="11251" fg:w="4"/><text x="69.5424%" y="127.50"></text></g><g><title>ep_poll_callback (4 samples, 0.02%)</title><rect x="69.2924%" y="101" width="0.0246%" height="15" fill="rgb(235,218,49)" fg:x="11251" fg:w="4"/><text x="69.5424%" y="111.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.02%)</title><rect x="69.2985%" y="85" width="0.0185%" height="15" fill="rgb(217,114,14)" fg:x="11252" fg:w="3"/><text x="69.5485%" y="95.50"></text></g><g><title>__wake_up_common (3 samples, 0.02%)</title><rect x="69.2985%" y="69" width="0.0185%" height="15" fill="rgb(216,145,22)" fg:x="11252" fg:w="3"/><text x="69.5485%" y="79.50"></text></g><g><title>autoremove_wake_function (2 samples, 0.01%)</title><rect x="69.3047%" y="53" width="0.0123%" height="15" fill="rgb(217,112,39)" fg:x="11253" fg:w="2"/><text x="69.5547%" y="63.50"></text></g><g><title>try_to_wake_up (2 samples, 0.01%)</title><rect x="69.3047%" y="37" width="0.0123%" height="15" fill="rgb(225,85,32)" fg:x="11253" fg:w="2"/><text x="69.5547%" y="47.50"></text></g><g><title>tcp_ack (3 samples, 0.02%)</title><rect x="69.3170%" y="149" width="0.0185%" height="15" fill="rgb(245,209,47)" fg:x="11255" fg:w="3"/><text x="69.5670%" y="159.50"></text></g><g><title>ip_local_deliver_finish (19 samples, 0.12%)</title><rect x="69.2308%" y="229" width="0.1170%" height="15" fill="rgb(218,220,15)" fg:x="11241" fg:w="19"/><text x="69.4808%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (19 samples, 0.12%)</title><rect x="69.2308%" y="213" width="0.1170%" height="15" fill="rgb(222,202,31)" fg:x="11241" fg:w="19"/><text x="69.4808%" y="223.50"></text></g><g><title>tcp_v4_rcv (19 samples, 0.12%)</title><rect x="69.2308%" y="197" width="0.1170%" height="15" fill="rgb(243,203,4)" fg:x="11241" fg:w="19"/><text x="69.4808%" y="207.50"></text></g><g><title>tcp_v4_do_rcv (13 samples, 0.08%)</title><rect x="69.2677%" y="181" width="0.0801%" height="15" fill="rgb(237,92,17)" fg:x="11247" fg:w="13"/><text x="69.5177%" y="191.50"></text></g><g><title>tcp_rcv_established (12 samples, 0.07%)</title><rect x="69.2739%" y="165" width="0.0739%" height="15" fill="rgb(231,119,7)" fg:x="11248" fg:w="12"/><text x="69.5239%" y="175.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (2 samples, 0.01%)</title><rect x="69.3478%" y="213" width="0.0123%" height="15" fill="rgb(237,82,41)" fg:x="11260" fg:w="2"/><text x="69.5978%" y="223.50"></text></g><g><title>ip_finish_output2 (37 samples, 0.23%)</title><rect x="69.1630%" y="357" width="0.2279%" height="15" fill="rgb(226,81,48)" fg:x="11230" fg:w="37"/><text x="69.4130%" y="367.50"></text></g><g><title>__local_bh_enable_ip (34 samples, 0.21%)</title><rect x="69.1815%" y="341" width="0.2094%" height="15" fill="rgb(234,70,51)" fg:x="11233" fg:w="34"/><text x="69.4315%" y="351.50"></text></g><g><title>do_softirq (34 samples, 0.21%)</title><rect x="69.1815%" y="325" width="0.2094%" height="15" fill="rgb(251,86,4)" fg:x="11233" fg:w="34"/><text x="69.4315%" y="335.50"></text></g><g><title>__softirqentry_text_start (34 samples, 0.21%)</title><rect x="69.1815%" y="309" width="0.2094%" height="15" fill="rgb(244,144,28)" fg:x="11233" fg:w="34"/><text x="69.4315%" y="319.50"></text></g><g><title>net_rx_action (34 samples, 0.21%)</title><rect x="69.1815%" y="293" width="0.2094%" height="15" fill="rgb(232,161,39)" fg:x="11233" fg:w="34"/><text x="69.4315%" y="303.50"></text></g><g><title>__napi_poll (34 samples, 0.21%)</title><rect x="69.1815%" y="277" width="0.2094%" height="15" fill="rgb(247,34,51)" fg:x="11233" fg:w="34"/><text x="69.4315%" y="287.50"></text></g><g><title>process_backlog (33 samples, 0.20%)</title><rect x="69.1877%" y="261" width="0.2032%" height="15" fill="rgb(225,132,2)" fg:x="11234" fg:w="33"/><text x="69.4377%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (31 samples, 0.19%)</title><rect x="69.2000%" y="245" width="0.1909%" height="15" fill="rgb(209,159,44)" fg:x="11236" fg:w="31"/><text x="69.4500%" y="255.50"></text></g><g><title>ip_rcv (7 samples, 0.04%)</title><rect x="69.3478%" y="229" width="0.0431%" height="15" fill="rgb(251,214,1)" fg:x="11260" fg:w="7"/><text x="69.5978%" y="239.50"></text></g><g><title>nf_hook_slow (5 samples, 0.03%)</title><rect x="69.3601%" y="213" width="0.0308%" height="15" fill="rgb(247,84,47)" fg:x="11262" fg:w="5"/><text x="69.6101%" y="223.50"></text></g><g><title>nft_do_chain_inet (5 samples, 0.03%)</title><rect x="69.3601%" y="197" width="0.0308%" height="15" fill="rgb(240,111,43)" fg:x="11262" fg:w="5"/><text x="69.6101%" y="207.50"></text></g><g><title>nft_do_chain (5 samples, 0.03%)</title><rect x="69.3601%" y="181" width="0.0308%" height="15" fill="rgb(215,214,35)" fg:x="11262" fg:w="5"/><text x="69.6101%" y="191.50"></text></g><g><title>strncpy (2 samples, 0.01%)</title><rect x="69.3786%" y="165" width="0.0123%" height="15" fill="rgb(248,207,23)" fg:x="11265" fg:w="2"/><text x="69.6286%" y="175.50"></text></g><g><title>ip_local_out (4 samples, 0.02%)</title><rect x="69.3909%" y="357" width="0.0246%" height="15" fill="rgb(214,186,4)" fg:x="11267" fg:w="4"/><text x="69.6409%" y="367.50"></text></g><g><title>__ip_local_out (4 samples, 0.02%)</title><rect x="69.3909%" y="341" width="0.0246%" height="15" fill="rgb(220,133,22)" fg:x="11267" fg:w="4"/><text x="69.6409%" y="351.50"></text></g><g><title>nf_hook_slow (4 samples, 0.02%)</title><rect x="69.3909%" y="325" width="0.0246%" height="15" fill="rgb(239,134,19)" fg:x="11267" fg:w="4"/><text x="69.6409%" y="335.50"></text></g><g><title>nf_conntrack_in (3 samples, 0.02%)</title><rect x="69.3971%" y="309" width="0.0185%" height="15" fill="rgb(250,140,9)" fg:x="11268" fg:w="3"/><text x="69.6471%" y="319.50"></text></g><g><title>__ip_queue_xmit (44 samples, 0.27%)</title><rect x="69.1507%" y="373" width="0.2710%" height="15" fill="rgb(225,59,14)" fg:x="11228" fg:w="44"/><text x="69.4007%" y="383.50"></text></g><g><title>__tcp_transmit_skb (46 samples, 0.28%)</title><rect x="69.1507%" y="389" width="0.2833%" height="15" fill="rgb(214,152,51)" fg:x="11228" fg:w="46"/><text x="69.4007%" y="399.50"></text></g><g><title>tcp_event_new_data_sent (2 samples, 0.01%)</title><rect x="69.4340%" y="389" width="0.0123%" height="15" fill="rgb(251,227,43)" fg:x="11274" fg:w="2"/><text x="69.6840%" y="399.50"></text></g><g><title>sk_reset_timer (2 samples, 0.01%)</title><rect x="69.4340%" y="373" width="0.0123%" height="15" fill="rgb(241,96,17)" fg:x="11274" fg:w="2"/><text x="69.6840%" y="383.50"></text></g><g><title>__mod_timer (2 samples, 0.01%)</title><rect x="69.4340%" y="357" width="0.0123%" height="15" fill="rgb(234,198,43)" fg:x="11274" fg:w="2"/><text x="69.6840%" y="367.50"></text></g><g><title>__tcp_push_pending_frames (51 samples, 0.31%)</title><rect x="69.1384%" y="421" width="0.3141%" height="15" fill="rgb(220,108,29)" fg:x="11226" fg:w="51"/><text x="69.3884%" y="431.50"></text></g><g><title>tcp_write_xmit (50 samples, 0.31%)</title><rect x="69.1445%" y="405" width="0.3079%" height="15" fill="rgb(226,163,33)" fg:x="11227" fg:w="50"/><text x="69.3945%" y="415.50"></text></g><g><title>sk_stream_alloc_skb (2 samples, 0.01%)</title><rect x="69.4586%" y="421" width="0.0123%" height="15" fill="rgb(205,194,45)" fg:x="11278" fg:w="2"/><text x="69.7086%" y="431.50"></text></g><g><title>__alloc_skb (2 samples, 0.01%)</title><rect x="69.4586%" y="405" width="0.0123%" height="15" fill="rgb(206,143,44)" fg:x="11278" fg:w="2"/><text x="69.7086%" y="415.50"></text></g><g><title>skb_do_copy_data_nocache (13 samples, 0.08%)</title><rect x="69.4710%" y="421" width="0.0801%" height="15" fill="rgb(236,136,36)" fg:x="11280" fg:w="13"/><text x="69.7210%" y="431.50"></text></g><g><title>_copy_from_iter_full (13 samples, 0.08%)</title><rect x="69.4710%" y="405" width="0.0801%" height="15" fill="rgb(249,172,42)" fg:x="11280" fg:w="13"/><text x="69.7210%" y="415.50"></text></g><g><title>copy_user_generic_string (13 samples, 0.08%)</title><rect x="69.4710%" y="389" width="0.0801%" height="15" fill="rgb(216,139,23)" fg:x="11280" fg:w="13"/><text x="69.7210%" y="399.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (218 samples, 1.34%)</title><rect x="68.2330%" y="805" width="1.3426%" height="15" fill="rgb(207,166,20)" fg:x="11079" fg:w="218"/><text x="68.4830%" y="815.50"></text></g><g><title>&lt;tokio::io::util::buf_writer::BufWriter&lt;W&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (205 samples, 1.26%)</title><rect x="68.3131%" y="789" width="1.2625%" height="15" fill="rgb(210,209,22)" fg:x="11092" fg:w="205"/><text x="68.5631%" y="799.50"></text></g><g><title>tokio::io::util::buf_writer::BufWriter&lt;W&gt;::flush_buf (78 samples, 0.48%)</title><rect x="69.0953%" y="773" width="0.4804%" height="15" fill="rgb(232,118,20)" fg:x="11219" fg:w="78"/><text x="69.3453%" y="783.50"></text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (77 samples, 0.47%)</title><rect x="69.1014%" y="757" width="0.4742%" height="15" fill="rgb(238,113,42)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="767.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (77 samples, 0.47%)</title><rect x="69.1014%" y="741" width="0.4742%" height="15" fill="rgb(231,42,5)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="751.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (77 samples, 0.47%)</title><rect x="69.1014%" y="725" width="0.4742%" height="15" fill="rgb(243,166,24)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="735.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (77 samples, 0.47%)</title><rect x="69.1014%" y="709" width="0.4742%" height="15" fill="rgb(237,226,12)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="719.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (77 samples, 0.47%)</title><rect x="69.1014%" y="693" width="0.4742%" height="15" fill="rgb(229,133,24)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="703.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (77 samples, 0.47%)</title><rect x="69.1014%" y="677" width="0.4742%" height="15" fill="rgb(238,33,43)" fg:x="11220" fg:w="77"/><text x="69.3514%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (76 samples, 0.47%)</title><rect x="69.1076%" y="661" width="0.4681%" height="15" fill="rgb(227,59,38)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="671.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (76 samples, 0.47%)</title><rect x="69.1076%" y="645" width="0.4681%" height="15" fill="rgb(230,97,0)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="655.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (76 samples, 0.47%)</title><rect x="69.1076%" y="629" width="0.4681%" height="15" fill="rgb(250,173,50)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="639.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (76 samples, 0.47%)</title><rect x="69.1076%" y="613" width="0.4681%" height="15" fill="rgb(240,15,50)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="623.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (76 samples, 0.47%)</title><rect x="69.1076%" y="597" width="0.4681%" height="15" fill="rgb(221,93,22)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="607.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (76 samples, 0.47%)</title><rect x="69.1076%" y="581" width="0.4681%" height="15" fill="rgb(245,180,53)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (76 samples, 0.47%)</title><rect x="69.1076%" y="565" width="0.4681%" height="15" fill="rgb(231,88,51)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="575.50"></text></g><g><title>__libc_send (76 samples, 0.47%)</title><rect x="69.1076%" y="549" width="0.4681%" height="15" fill="rgb(240,58,21)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (76 samples, 0.47%)</title><rect x="69.1076%" y="533" width="0.4681%" height="15" fill="rgb(237,21,10)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="543.50"></text></g><g><title>do_syscall_64 (76 samples, 0.47%)</title><rect x="69.1076%" y="517" width="0.4681%" height="15" fill="rgb(218,43,11)" fg:x="11221" fg:w="76"/><text x="69.3576%" y="527.50"></text></g><g><title>__x64_sys_sendto (75 samples, 0.46%)</title><rect x="69.1138%" y="501" width="0.4619%" height="15" fill="rgb(218,221,29)" fg:x="11222" fg:w="75"/><text x="69.3638%" y="511.50"></text></g><g><title>__sys_sendto (75 samples, 0.46%)</title><rect x="69.1138%" y="485" width="0.4619%" height="15" fill="rgb(214,118,42)" fg:x="11222" fg:w="75"/><text x="69.3638%" y="495.50"></text></g><g><title>sock_sendmsg (75 samples, 0.46%)</title><rect x="69.1138%" y="469" width="0.4619%" height="15" fill="rgb(251,200,26)" fg:x="11222" fg:w="75"/><text x="69.3638%" y="479.50"></text></g><g><title>tcp_sendmsg (74 samples, 0.46%)</title><rect x="69.1199%" y="453" width="0.4557%" height="15" fill="rgb(237,101,39)" fg:x="11223" fg:w="74"/><text x="69.3699%" y="463.50"></text></g><g><title>tcp_sendmsg_locked (72 samples, 0.44%)</title><rect x="69.1322%" y="437" width="0.4434%" height="15" fill="rgb(251,117,11)" fg:x="11225" fg:w="72"/><text x="69.3822%" y="447.50"></text></g><g><title>tcp_send_mss (3 samples, 0.02%)</title><rect x="69.5572%" y="421" width="0.0185%" height="15" fill="rgb(216,223,23)" fg:x="11294" fg:w="3"/><text x="69.8072%" y="431.50"></text></g><g><title>tcp_current_mss (3 samples, 0.02%)</title><rect x="69.5572%" y="405" width="0.0185%" height="15" fill="rgb(251,54,12)" fg:x="11294" fg:w="3"/><text x="69.8072%" y="415.50"></text></g><g><title>ipv4_mtu (3 samples, 0.02%)</title><rect x="69.5572%" y="389" width="0.0185%" height="15" fill="rgb(254,176,54)" fg:x="11294" fg:w="3"/><text x="69.8072%" y="399.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (223 samples, 1.37%)</title><rect x="68.2084%" y="821" width="1.3734%" height="15" fill="rgb(210,32,8)" fg:x="11075" fg:w="223"/><text x="68.4584%" y="831.50"></text></g><g><title>__GI___libc_free (69 samples, 0.42%)</title><rect x="69.5880%" y="725" width="0.4250%" height="15" fill="rgb(235,52,38)" fg:x="11299" fg:w="69"/><text x="69.8380%" y="735.50"></text></g><g><title>_int_free (33 samples, 0.20%)</title><rect x="69.8097%" y="709" width="0.2032%" height="15" fill="rgb(231,4,44)" fg:x="11335" fg:w="33"/><text x="70.0597%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::SerializedRequest&gt; (73 samples, 0.45%)</title><rect x="69.5818%" y="821" width="0.4496%" height="15" fill="rgb(249,2,32)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (73 samples, 0.45%)</title><rect x="69.5818%" y="805" width="0.4496%" height="15" fill="rgb(224,65,26)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (73 samples, 0.45%)</title><rect x="69.5818%" y="789" width="0.4496%" height="15" fill="rgb(250,73,40)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.45%)</title><rect x="69.5818%" y="773" width="0.4496%" height="15" fill="rgb(253,177,16)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 0.45%)</title><rect x="69.5818%" y="757" width="0.4496%" height="15" fill="rgb(217,32,34)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (73 samples, 0.45%)</title><rect x="69.5818%" y="741" width="0.4496%" height="15" fill="rgb(212,7,10)" fg:x="11298" fg:w="73"/><text x="69.8318%" y="751.50"></text></g><g><title>__rust_dealloc (3 samples, 0.02%)</title><rect x="70.0129%" y="725" width="0.0185%" height="15" fill="rgb(245,89,8)" fg:x="11368" fg:w="3"/><text x="70.2629%" y="735.50"></text></g><g><title>scylla::frame::SerializedRequest::get_data (16 samples, 0.10%)</title><rect x="70.0314%" y="821" width="0.0985%" height="15" fill="rgb(237,16,53)" fg:x="11371" fg:w="16"/><text x="70.2814%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (16 samples, 0.10%)</title><rect x="70.0314%" y="805" width="0.0985%" height="15" fill="rgb(250,204,30)" fg:x="11371" fg:w="16"/><text x="70.2814%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.10%)</title><rect x="70.0314%" y="789" width="0.0985%" height="15" fill="rgb(208,77,27)" fg:x="11371" fg:w="16"/><text x="70.2814%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (16 samples, 0.10%)</title><rect x="70.0314%" y="773" width="0.0985%" height="15" fill="rgb(250,204,28)" fg:x="11371" fg:w="16"/><text x="70.2814%" y="783.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.02%)</title><rect x="70.1792%" y="741" width="0.0246%" height="15" fill="rgb(244,63,21)" fg:x="11395" fg:w="4"/><text x="70.4292%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;scylla::transport::connection::ResponseHandlerMap&gt;&gt; (10 samples, 0.06%)</title><rect x="70.1669%" y="805" width="0.0616%" height="15" fill="rgb(236,85,44)" fg:x="11393" fg:w="10"/><text x="70.4169%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="70.1669%" y="789" width="0.0616%" height="15" fill="rgb(215,98,4)" fg:x="11393" fg:w="10"/><text x="70.4169%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.06%)</title><rect x="70.1669%" y="773" width="0.0616%" height="15" fill="rgb(235,38,11)" fg:x="11393" fg:w="10"/><text x="70.4169%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (10 samples, 0.06%)</title><rect x="70.1669%" y="757" width="0.0616%" height="15" fill="rgb(254,186,25)" fg:x="11393" fg:w="10"/><text x="70.4169%" y="767.50"></text></g><g><title>pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="70.2039%" y="741" width="0.0246%" height="15" fill="rgb(225,55,31)" fg:x="11399" fg:w="4"/><text x="70.4539%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="70.3270%" y="773" width="0.0123%" height="15" fill="rgb(211,15,21)" fg:x="11419" fg:w="2"/><text x="70.5770%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="70.3270%" y="757" width="0.0123%" height="15" fill="rgb(215,187,41)" fg:x="11419" fg:w="2"/><text x="70.5770%" y="767.50"></text></g><g><title>scylla::transport::connection::StreamIdSet::allocate (8 samples, 0.05%)</title><rect x="70.2962%" y="789" width="0.0493%" height="15" fill="rgb(248,69,32)" fg:x="11414" fg:w="8"/><text x="70.5462%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.02%)</title><rect x="70.3825%" y="693" width="0.0185%" height="15" fill="rgb(252,102,52)" fg:x="11428" fg:w="3"/><text x="70.6325%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.02%)</title><rect x="70.4133%" y="677" width="0.0185%" height="15" fill="rgb(253,140,32)" fg:x="11433" fg:w="3"/><text x="70.6633%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="70.3701%" y="741" width="0.0739%" height="15" fill="rgb(216,56,42)" fg:x="11426" fg:w="12"/><text x="70.6201%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="70.3701%" y="725" width="0.0739%" height="15" fill="rgb(216,184,14)" fg:x="11426" fg:w="12"/><text x="70.6201%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="70.3701%" y="709" width="0.0739%" height="15" fill="rgb(237,187,27)" fg:x="11426" fg:w="12"/><text x="70.6201%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.04%)</title><rect x="70.4009%" y="693" width="0.0431%" height="15" fill="rgb(219,65,3)" fg:x="11431" fg:w="7"/><text x="70.6509%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="70.4317%" y="677" width="0.0123%" height="15" fill="rgb(245,83,25)" fg:x="11436" fg:w="2"/><text x="70.6817%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.03%)</title><rect x="70.4440%" y="741" width="0.0308%" height="15" fill="rgb(214,205,45)" fg:x="11438" fg:w="5"/><text x="70.6940%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.02%)</title><rect x="70.4502%" y="725" width="0.0246%" height="15" fill="rgb(241,20,18)" fg:x="11439" fg:w="4"/><text x="70.7002%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (4 samples, 0.02%)</title><rect x="70.4502%" y="709" width="0.0246%" height="15" fill="rgb(232,163,23)" fg:x="11439" fg:w="4"/><text x="70.7002%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.02%)</title><rect x="70.4502%" y="693" width="0.0246%" height="15" fill="rgb(214,5,46)" fg:x="11439" fg:w="4"/><text x="70.7002%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.06%)</title><rect x="70.4810%" y="661" width="0.0554%" height="15" fill="rgb(229,78,17)" fg:x="11444" fg:w="9"/><text x="70.7310%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.04%)</title><rect x="70.4995%" y="645" width="0.0370%" height="15" fill="rgb(248,89,10)" fg:x="11447" fg:w="6"/><text x="70.7495%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (28 samples, 0.17%)</title><rect x="70.3701%" y="757" width="0.1724%" height="15" fill="rgb(248,54,15)" fg:x="11426" fg:w="28"/><text x="70.6201%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (11 samples, 0.07%)</title><rect x="70.4748%" y="741" width="0.0677%" height="15" fill="rgb(223,116,6)" fg:x="11443" fg:w="11"/><text x="70.7248%" y="751.50"></text></g><g><title>core::hash::Hasher::write_i16 (11 samples, 0.07%)</title><rect x="70.4748%" y="725" width="0.0677%" height="15" fill="rgb(205,125,38)" fg:x="11443" fg:w="11"/><text x="70.7248%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u16 (11 samples, 0.07%)</title><rect x="70.4748%" y="709" width="0.0677%" height="15" fill="rgb(251,78,38)" fg:x="11443" fg:w="11"/><text x="70.7248%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.07%)</title><rect x="70.4748%" y="693" width="0.0677%" height="15" fill="rgb(253,78,28)" fg:x="11443" fg:w="11"/><text x="70.7248%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.06%)</title><rect x="70.4810%" y="677" width="0.0616%" height="15" fill="rgb(209,120,3)" fg:x="11444" fg:w="10"/><text x="70.7310%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="70.5487%" y="725" width="0.0123%" height="15" fill="rgb(238,229,9)" fg:x="11455" fg:w="2"/><text x="70.7987%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="70.5487%" y="709" width="0.0123%" height="15" fill="rgb(253,159,18)" fg:x="11455" fg:w="2"/><text x="70.7987%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (8 samples, 0.05%)</title><rect x="70.5426%" y="757" width="0.0493%" height="15" fill="rgb(244,42,34)" fg:x="11454" fg:w="8"/><text x="70.7926%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.04%)</title><rect x="70.5487%" y="741" width="0.0431%" height="15" fill="rgb(224,8,7)" fg:x="11455" fg:w="7"/><text x="70.7987%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.03%)</title><rect x="70.5611%" y="725" width="0.0308%" height="15" fill="rgb(210,201,45)" fg:x="11457" fg:w="5"/><text x="70.8111%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.03%)</title><rect x="70.5611%" y="709" width="0.0308%" height="15" fill="rgb(252,185,21)" fg:x="11457" fg:w="5"/><text x="70.8111%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="70.5611%" y="693" width="0.0308%" height="15" fill="rgb(223,131,1)" fg:x="11457" fg:w="5"/><text x="70.8111%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.02%)</title><rect x="70.5672%" y="677" width="0.0246%" height="15" fill="rgb(245,141,16)" fg:x="11458" fg:w="4"/><text x="70.8172%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.02%)</title><rect x="70.5672%" y="661" width="0.0246%" height="15" fill="rgb(229,55,45)" fg:x="11458" fg:w="4"/><text x="70.8172%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.02%)</title><rect x="70.5672%" y="645" width="0.0246%" height="15" fill="rgb(208,92,15)" fg:x="11458" fg:w="4"/><text x="70.8172%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.02%)</title><rect x="70.5672%" y="629" width="0.0246%" height="15" fill="rgb(234,185,47)" fg:x="11458" fg:w="4"/><text x="70.8172%" y="639.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.02%)</title><rect x="70.6350%" y="725" width="0.0185%" height="15" fill="rgb(253,104,50)" fg:x="11469" fg:w="3"/><text x="70.8850%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.03%)</title><rect x="70.6288%" y="741" width="0.0308%" height="15" fill="rgb(205,70,7)" fg:x="11468" fg:w="5"/><text x="70.8788%" y="751.50"></text></g><g><title>scylla::transport::connection::ResponseHandlerMap::allocate (71 samples, 0.44%)</title><rect x="70.2285%" y="805" width="0.4373%" height="15" fill="rgb(240,178,43)" fg:x="11403" fg:w="71"/><text x="70.4785%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (52 samples, 0.32%)</title><rect x="70.3455%" y="789" width="0.3203%" height="15" fill="rgb(214,112,2)" fg:x="11422" fg:w="52"/><text x="70.5955%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.32%)</title><rect x="70.3455%" y="773" width="0.3203%" height="15" fill="rgb(206,46,17)" fg:x="11422" fg:w="52"/><text x="70.5955%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.07%)</title><rect x="70.5919%" y="757" width="0.0739%" height="15" fill="rgb(225,220,16)" fg:x="11462" fg:w="12"/><text x="70.8419%" y="767.50"></text></g><g><title>scylla::transport::connection::Connection::alloc_stream_id (111 samples, 0.68%)</title><rect x="70.1300%" y="821" width="0.6836%" height="15" fill="rgb(238,65,40)" fg:x="11387" fg:w="111"/><text x="70.3800%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (24 samples, 0.15%)</title><rect x="70.6658%" y="805" width="0.1478%" height="15" fill="rgb(230,151,21)" fg:x="11474" fg:w="24"/><text x="70.9158%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (23 samples, 0.14%)</title><rect x="70.6719%" y="789" width="0.1417%" height="15" fill="rgb(218,58,49)" fg:x="11475" fg:w="23"/><text x="70.9219%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (23 samples, 0.14%)</title><rect x="70.6719%" y="773" width="0.1417%" height="15" fill="rgb(219,179,14)" fg:x="11475" fg:w="23"/><text x="70.9219%" y="783.50"></text></g><g><title>__GI___pthread_mutex_trylock (22 samples, 0.14%)</title><rect x="70.6781%" y="757" width="0.1355%" height="15" fill="rgb(223,72,1)" fg:x="11476" fg:w="22"/><text x="70.9281%" y="767.50"></text></g><g><title>&lt;(tokio::sync::batch_semaphore::Semaphore,usize) as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (12 samples, 0.07%)</title><rect x="70.8936%" y="757" width="0.0739%" height="15" fill="rgb(238,126,10)" fg:x="11511" fg:w="12"/><text x="71.1436%" y="767.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (12 samples, 0.07%)</title><rect x="70.8936%" y="741" width="0.0739%" height="15" fill="rgb(224,206,38)" fg:x="11511" fg:w="12"/><text x="71.1436%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.07%)</title><rect x="70.8936%" y="725" width="0.0739%" height="15" fill="rgb(212,201,54)" fg:x="11511" fg:w="12"/><text x="71.1436%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.07%)</title><rect x="70.8936%" y="709" width="0.0739%" height="15" fill="rgb(218,154,48)" fg:x="11511" fg:w="12"/><text x="71.1436%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.07%)</title><rect x="70.8936%" y="693" width="0.0739%" height="15" fill="rgb(232,93,24)" fg:x="11511" fg:w="12"/><text x="71.1436%" y="703.50"></text></g><g><title>core::mem::drop (6 samples, 0.04%)</title><rect x="71.1030%" y="741" width="0.0370%" height="15" fill="rgb(245,30,21)" fg:x="11545" fg:w="6"/><text x="71.3530%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (6 samples, 0.04%)</title><rect x="71.1030%" y="725" width="0.0370%" height="15" fill="rgb(242,148,29)" fg:x="11545" fg:w="6"/><text x="71.3530%" y="735.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="71.1030%" y="709" width="0.0370%" height="15" fill="rgb(244,153,54)" fg:x="11545" fg:w="6"/><text x="71.3530%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.04%)</title><rect x="71.1030%" y="693" width="0.0370%" height="15" fill="rgb(252,87,22)" fg:x="11545" fg:w="6"/><text x="71.3530%" y="703.50"></text></g><g><title>tokio::util::wake_list::WakeList::can_push (2 samples, 0.01%)</title><rect x="71.1461%" y="741" width="0.0123%" height="15" fill="rgb(210,51,29)" fg:x="11552" fg:w="2"/><text x="71.3961%" y="751.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (32 samples, 0.20%)</title><rect x="70.9675%" y="757" width="0.1971%" height="15" fill="rgb(242,136,47)" fg:x="11523" fg:w="32"/><text x="71.2175%" y="767.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="71.2508%" y="741" width="0.0185%" height="15" fill="rgb(238,68,4)" fg:x="11569" fg:w="3"/><text x="71.5008%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.04%)</title><rect x="71.2693%" y="741" width="0.0370%" height="15" fill="rgb(242,161,30)" fg:x="11572" fg:w="6"/><text x="71.5193%" y="751.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.03%)</title><rect x="71.2755%" y="725" width="0.0308%" height="15" fill="rgb(218,58,44)" fg:x="11573" fg:w="5"/><text x="71.5255%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (42 samples, 0.26%)</title><rect x="71.3863%" y="709" width="0.2587%" height="15" fill="rgb(252,125,32)" fg:x="11591" fg:w="42"/><text x="71.6363%" y="719.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::{{closure}} (42 samples, 0.26%)</title><rect x="71.3863%" y="693" width="0.2587%" height="15" fill="rgb(219,178,0)" fg:x="11591" fg:w="42"/><text x="71.6363%" y="703.50"></text></g><g><title>core::ptr::read (42 samples, 0.26%)</title><rect x="71.3863%" y="677" width="0.2587%" height="15" fill="rgb(213,152,7)" fg:x="11591" fg:w="42"/><text x="71.6363%" y="687.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (3 samples, 0.02%)</title><rect x="71.6450%" y="709" width="0.0185%" height="15" fill="rgb(249,109,34)" fg:x="11633" fg:w="3"/><text x="71.8950%" y="719.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (52 samples, 0.32%)</title><rect x="71.3494%" y="725" width="0.3203%" height="15" fill="rgb(232,96,21)" fg:x="11585" fg:w="52"/><text x="71.5994%" y="735.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.01%)</title><rect x="71.7066%" y="453" width="0.0123%" height="15" fill="rgb(228,27,39)" fg:x="11643" fg:w="2"/><text x="71.9566%" y="463.50"></text></g><g><title>dequeue_entity (2 samples, 0.01%)</title><rect x="71.7066%" y="437" width="0.0123%" height="15" fill="rgb(211,182,52)" fg:x="11643" fg:w="2"/><text x="71.9566%" y="447.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="71.7189%" y="453" width="0.0431%" height="15" fill="rgb(234,178,38)" fg:x="11645" fg:w="7"/><text x="71.9689%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (7 samples, 0.04%)</title><rect x="71.7189%" y="437" width="0.0431%" height="15" fill="rgb(221,111,3)" fg:x="11645" fg:w="7"/><text x="71.9689%" y="447.50"></text></g><g><title>x86_pmu_enable_all (7 samples, 0.04%)</title><rect x="71.7189%" y="421" width="0.0431%" height="15" fill="rgb(228,175,21)" fg:x="11645" fg:w="7"/><text x="71.9689%" y="431.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.01%)</title><rect x="71.7620%" y="453" width="0.0123%" height="15" fill="rgb(228,174,43)" fg:x="11652" fg:w="2"/><text x="72.0120%" y="463.50"></text></g><g><title>newidle_balance (2 samples, 0.01%)</title><rect x="71.7620%" y="437" width="0.0123%" height="15" fill="rgb(211,191,0)" fg:x="11652" fg:w="2"/><text x="72.0120%" y="447.50"></text></g><g><title>load_balance (2 samples, 0.01%)</title><rect x="71.7620%" y="421" width="0.0123%" height="15" fill="rgb(253,117,3)" fg:x="11652" fg:w="2"/><text x="72.0120%" y="431.50"></text></g><g><title>find_busiest_group (2 samples, 0.01%)</title><rect x="71.7620%" y="405" width="0.0123%" height="15" fill="rgb(241,127,19)" fg:x="11652" fg:w="2"/><text x="72.0120%" y="415.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (2 samples, 0.01%)</title><rect x="71.7620%" y="389" width="0.0123%" height="15" fill="rgb(218,103,12)" fg:x="11652" fg:w="2"/><text x="72.0120%" y="399.50"></text></g><g><title>futex_wait_queue_me (12 samples, 0.07%)</title><rect x="71.7066%" y="501" width="0.0739%" height="15" fill="rgb(236,214,43)" fg:x="11643" fg:w="12"/><text x="71.9566%" y="511.50"></text></g><g><title>schedule (12 samples, 0.07%)</title><rect x="71.7066%" y="485" width="0.0739%" height="15" fill="rgb(244,144,19)" fg:x="11643" fg:w="12"/><text x="71.9566%" y="495.50"></text></g><g><title>__schedule (12 samples, 0.07%)</title><rect x="71.7066%" y="469" width="0.0739%" height="15" fill="rgb(246,188,10)" fg:x="11643" fg:w="12"/><text x="71.9566%" y="479.50"></text></g><g><title>__lll_lock_wait_private (13 samples, 0.08%)</title><rect x="71.7066%" y="597" width="0.0801%" height="15" fill="rgb(212,193,33)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 0.08%)</title><rect x="71.7066%" y="581" width="0.0801%" height="15" fill="rgb(241,51,29)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="591.50"></text></g><g><title>do_syscall_64 (13 samples, 0.08%)</title><rect x="71.7066%" y="565" width="0.0801%" height="15" fill="rgb(211,58,19)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="575.50"></text></g><g><title>__x64_sys_futex (13 samples, 0.08%)</title><rect x="71.7066%" y="549" width="0.0801%" height="15" fill="rgb(229,111,26)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="559.50"></text></g><g><title>do_futex (13 samples, 0.08%)</title><rect x="71.7066%" y="533" width="0.0801%" height="15" fill="rgb(213,115,40)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="543.50"></text></g><g><title>futex_wait (13 samples, 0.08%)</title><rect x="71.7066%" y="517" width="0.0801%" height="15" fill="rgb(209,56,44)" fg:x="11643" fg:w="13"/><text x="71.9566%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="71.7867%" y="597" width="0.0123%" height="15" fill="rgb(230,108,32)" fg:x="11656" fg:w="2"/><text x="72.0367%" y="607.50"></text></g><g><title>do_syscall_64 (2 samples, 0.01%)</title><rect x="71.7867%" y="581" width="0.0123%" height="15" fill="rgb(216,165,31)" fg:x="11656" fg:w="2"/><text x="72.0367%" y="591.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="71.7867%" y="565" width="0.0123%" height="15" fill="rgb(218,122,21)" fg:x="11656" fg:w="2"/><text x="72.0367%" y="575.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="71.7867%" y="549" width="0.0123%" height="15" fill="rgb(223,224,47)" fg:x="11656" fg:w="2"/><text x="72.0367%" y="559.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (23 samples, 0.14%)</title><rect x="71.6696%" y="725" width="0.1417%" height="15" fill="rgb(238,102,44)" fg:x="11637" fg:w="23"/><text x="71.9196%" y="735.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::reclaim_block (22 samples, 0.14%)</title><rect x="71.6758%" y="709" width="0.1355%" height="15" fill="rgb(236,46,40)" fg:x="11638" fg:w="22"/><text x="71.9258%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::sync::mpsc::block::Block&lt;scylla::transport::connection::Task&gt;&gt;&gt; (20 samples, 0.12%)</title><rect x="71.6881%" y="693" width="0.1232%" height="15" fill="rgb(247,202,50)" fg:x="11640" fg:w="20"/><text x="71.9381%" y="703.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.12%)</title><rect x="71.6881%" y="677" width="0.1232%" height="15" fill="rgb(209,99,20)" fg:x="11640" fg:w="20"/><text x="71.9381%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.12%)</title><rect x="71.6881%" y="661" width="0.1232%" height="15" fill="rgb(252,27,34)" fg:x="11640" fg:w="20"/><text x="71.9381%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.12%)</title><rect x="71.6881%" y="645" width="0.1232%" height="15" fill="rgb(215,206,23)" fg:x="11640" fg:w="20"/><text x="71.9381%" y="655.50"></text></g><g><title>__GI___libc_free (20 samples, 0.12%)</title><rect x="71.6881%" y="629" width="0.1232%" height="15" fill="rgb(212,135,36)" fg:x="11640" fg:w="20"/><text x="71.9381%" y="639.50"></text></g><g><title>_int_free (19 samples, 0.12%)</title><rect x="71.6943%" y="613" width="0.1170%" height="15" fill="rgb(240,189,1)" fg:x="11641" fg:w="19"/><text x="71.9443%" y="623.50"></text></g><g><title>scylla::transport::connection::Connection::router::{{closure}} (2,363 samples, 14.55%)</title><rect x="57.3505%" y="917" width="14.5532%" height="15" fill="rgb(242,56,20)" fg:x="9312" fg:w="2363"/><text x="57.6005%" y="927.50">scylla::transport::con..</text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,358 samples, 14.52%)</title><rect x="57.3813%" y="901" width="14.5224%" height="15" fill="rgb(247,132,33)" fg:x="9317" fg:w="2358"/><text x="57.6313%" y="911.50">&lt;futures_util::future:..</text></g><g><title>scylla::transport::connection::Connection::router::{{closure}}::{{closure}} (2,358 samples, 14.52%)</title><rect x="57.3813%" y="885" width="14.5224%" height="15" fill="rgb(208,149,11)" fg:x="9317" fg:w="2358"/><text x="57.6313%" y="895.50">scylla::transport::con..</text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,358 samples, 14.52%)</title><rect x="57.3813%" y="869" width="14.5224%" height="15" fill="rgb(211,33,11)" fg:x="9317" fg:w="2358"/><text x="57.6313%" y="879.50">&lt;futures_util::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,358 samples, 14.52%)</title><rect x="57.3813%" y="853" width="14.5224%" height="15" fill="rgb(221,29,38)" fg:x="9317" fg:w="2358"/><text x="57.6313%" y="863.50">&lt;core::future::from_ge..</text></g><g><title>scylla::transport::connection::Connection::writer::{{closure}} (1,037 samples, 6.39%)</title><rect x="65.5170%" y="837" width="6.3866%" height="15" fill="rgb(206,182,49)" fg:x="10638" fg:w="1037"/><text x="65.7670%" y="847.50">scylla::..</text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::try_recv (177 samples, 1.09%)</title><rect x="70.8136%" y="821" width="1.0901%" height="15" fill="rgb(216,140,1)" fg:x="11498" fg:w="177"/><text x="71.0636%" y="831.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv (177 samples, 1.09%)</title><rect x="70.8136%" y="805" width="1.0901%" height="15" fill="rgb(232,57,40)" fg:x="11498" fg:w="177"/><text x="71.0636%" y="815.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (177 samples, 1.09%)</title><rect x="70.8136%" y="789" width="1.0901%" height="15" fill="rgb(224,186,18)" fg:x="11498" fg:w="177"/><text x="71.0636%" y="799.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::try_recv::{{closure}} (170 samples, 1.05%)</title><rect x="70.8567%" y="773" width="1.0470%" height="15" fill="rgb(215,121,11)" fg:x="11505" fg:w="170"/><text x="71.1067%" y="783.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_pop (120 samples, 0.74%)</title><rect x="71.1646%" y="757" width="0.7391%" height="15" fill="rgb(245,147,10)" fg:x="11555" fg:w="120"/><text x="71.4146%" y="767.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (97 samples, 0.60%)</title><rect x="71.3063%" y="741" width="0.5974%" height="15" fill="rgb(238,153,13)" fg:x="11578" fg:w="97"/><text x="71.5563%" y="751.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (15 samples, 0.09%)</title><rect x="71.8113%" y="725" width="0.0924%" height="15" fill="rgb(233,108,0)" fg:x="11660" fg:w="15"/><text x="72.0613%" y="735.50"></text></g><g><title>tokio::sync::mpsc::block::start_index (2 samples, 0.01%)</title><rect x="71.8914%" y="709" width="0.0123%" height="15" fill="rgb(212,157,17)" fg:x="11673" fg:w="2"/><text x="72.1414%" y="719.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,368 samples, 14.58%)</title><rect x="57.3320%" y="1045" width="14.5840%" height="15" fill="rgb(225,213,38)" fg:x="9309" fg:w="2368"/><text x="57.5820%" y="1055.50">&lt;futures_util::future:..</text></g><g><title>std::panic::catch_unwind (2,367 samples, 14.58%)</title><rect x="57.3382%" y="1029" width="14.5778%" height="15" fill="rgb(248,16,11)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="1039.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (2,367 samples, 14.58%)</title><rect x="57.3382%" y="1013" width="14.5778%" height="15" fill="rgb(241,33,4)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,367 samples, 14.58%)</title><rect x="57.3382%" y="997" width="14.5778%" height="15" fill="rgb(222,26,43)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="1007.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,367 samples, 14.58%)</title><rect x="57.3382%" y="981" width="14.5778%" height="15" fill="rgb(243,29,36)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="991.50">&lt;core::panic::unwind_s..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,367 samples, 14.58%)</title><rect x="57.3382%" y="965" width="14.5778%" height="15" fill="rgb(241,9,27)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="975.50">&lt;futures_util::future:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (2,367 samples, 14.58%)</title><rect x="57.3382%" y="949" width="14.5778%" height="15" fill="rgb(205,117,26)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="959.50">&lt;core::panic::unwind_s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,367 samples, 14.58%)</title><rect x="57.3382%" y="933" width="14.5778%" height="15" fill="rgb(209,80,39)" fg:x="9310" fg:w="2367"/><text x="57.5882%" y="943.50">&lt;core::future::from_ge..</text></g><g><title>scylla::transport::connection_pool::PoolRefiller::run::{{closure}} (2 samples, 0.01%)</title><rect x="71.9037%" y="917" width="0.0123%" height="15" fill="rgb(239,155,6)" fg:x="11675" fg:w="2"/><text x="72.1537%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (6 samples, 0.04%)</title><rect x="71.9222%" y="1013" width="0.0370%" height="15" fill="rgb(212,104,12)" fg:x="11678" fg:w="6"/><text x="72.1722%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (6 samples, 0.04%)</title><rect x="71.9222%" y="997" width="0.0370%" height="15" fill="rgb(234,204,3)" fg:x="11678" fg:w="6"/><text x="72.1722%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="71.9222%" y="981" width="0.0370%" height="15" fill="rgb(251,218,7)" fg:x="11678" fg:w="6"/><text x="72.1722%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (6 samples, 0.04%)</title><rect x="71.9222%" y="965" width="0.0370%" height="15" fill="rgb(221,81,32)" fg:x="11678" fg:w="6"/><text x="72.1722%" y="975.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.01%)</title><rect x="71.9468%" y="949" width="0.0123%" height="15" fill="rgb(214,152,26)" fg:x="11682" fg:w="2"/><text x="72.1968%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1205" width="39.5024%" height="15" fill="rgb(223,22,3)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1215.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1189" width="39.5024%" height="15" fill="rgb(207,174,7)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1173" width="39.5024%" height="15" fill="rgb(224,19,52)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1157" width="39.5024%" height="15" fill="rgb(228,24,14)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1167.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1141" width="39.5024%" height="15" fill="rgb(230,153,43)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1151.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1125" width="39.5024%" height="15" fill="rgb(231,106,12)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1135.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6,414 samples, 39.50%)</title><rect x="32.4629%" y="1109" width="39.5024%" height="15" fill="rgb(215,92,2)" fg:x="5271" fg:w="6414"/><text x="32.7129%" y="1119.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6,412 samples, 39.49%)</title><rect x="32.4752%" y="1093" width="39.4901%" height="15" fill="rgb(249,143,25)" fg:x="5273" fg:w="6412"/><text x="32.7252%" y="1103.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (6,412 samples, 39.49%)</title><rect x="32.4752%" y="1077" width="39.4901%" height="15" fill="rgb(252,7,35)" fg:x="5273" fg:w="6412"/><text x="32.7252%" y="1087.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;futures_util::future::future::remote_handle::Remote&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,376 samples, 14.63%)</title><rect x="57.3320%" y="1061" width="14.6332%" height="15" fill="rgb(216,69,40)" fg:x="9309" fg:w="2376"/><text x="57.5820%" y="1071.50">&lt;futures_util::future:..</text></g><g><title>futures_channel::oneshot::Sender&lt;T&gt;::poll_canceled (8 samples, 0.05%)</title><rect x="71.9160%" y="1045" width="0.0493%" height="15" fill="rgb(240,36,33)" fg:x="11677" fg:w="8"/><text x="72.1660%" y="1055.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::poll_canceled (8 samples, 0.05%)</title><rect x="71.9160%" y="1029" width="0.0493%" height="15" fill="rgb(231,128,14)" fg:x="11677" fg:w="8"/><text x="72.1660%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6,420 samples, 39.54%)</title><rect x="32.4444%" y="1221" width="39.5393%" height="15" fill="rgb(245,143,14)" fg:x="5268" fg:w="6420"/><text x="32.6944%" y="1231.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.02%)</title><rect x="71.9653%" y="1205" width="0.0185%" height="15" fill="rgb(222,130,28)" fg:x="11685" fg:w="3"/><text x="72.2153%" y="1215.50"></text></g><g><title>__fdget_pos (2 samples, 0.01%)</title><rect x="72.0145%" y="997" width="0.0123%" height="15" fill="rgb(212,10,48)" fg:x="11693" fg:w="2"/><text x="72.2645%" y="1007.50"></text></g><g><title>__fget_light (2 samples, 0.01%)</title><rect x="72.0145%" y="981" width="0.0123%" height="15" fill="rgb(254,118,45)" fg:x="11693" fg:w="2"/><text x="72.2645%" y="991.50"></text></g><g><title>enqueue_entity (3 samples, 0.02%)</title><rect x="72.0823%" y="837" width="0.0185%" height="15" fill="rgb(228,6,45)" fg:x="11704" fg:w="3"/><text x="72.3323%" y="847.50"></text></g><g><title>enqueue_task_fair (4 samples, 0.02%)</title><rect x="72.0823%" y="853" width="0.0246%" height="15" fill="rgb(241,18,35)" fg:x="11704" fg:w="4"/><text x="72.3323%" y="863.50"></text></g><g><title>ttwu_do_activate (8 samples, 0.05%)</title><rect x="72.0823%" y="869" width="0.0493%" height="15" fill="rgb(227,214,53)" fg:x="11704" fg:w="8"/><text x="72.3323%" y="879.50"></text></g><g><title>psi_task_change (4 samples, 0.02%)</title><rect x="72.1069%" y="853" width="0.0246%" height="15" fill="rgb(224,107,51)" fg:x="11708" fg:w="4"/><text x="72.3569%" y="863.50"></text></g><g><title>psi_group_change (2 samples, 0.01%)</title><rect x="72.1192%" y="837" width="0.0123%" height="15" fill="rgb(248,60,28)" fg:x="11710" fg:w="2"/><text x="72.3692%" y="847.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.01%)</title><rect x="72.1316%" y="869" width="0.0123%" height="15" fill="rgb(249,101,23)" fg:x="11712" fg:w="2"/><text x="72.3816%" y="879.50"></text></g><g><title>check_preempt_curr (2 samples, 0.01%)</title><rect x="72.1316%" y="853" width="0.0123%" height="15" fill="rgb(228,51,19)" fg:x="11712" fg:w="2"/><text x="72.3816%" y="863.50"></text></g><g><title>native_send_call_func_single_ipi (3 samples, 0.02%)</title><rect x="72.1562%" y="853" width="0.0185%" height="15" fill="rgb(213,20,6)" fg:x="11716" fg:w="3"/><text x="72.4062%" y="863.50"></text></g><g><title>__wake_up_common (20 samples, 0.12%)</title><rect x="72.0576%" y="917" width="0.1232%" height="15" fill="rgb(212,124,10)" fg:x="11700" fg:w="20"/><text x="72.3076%" y="927.50"></text></g><g><title>autoremove_wake_function (18 samples, 0.11%)</title><rect x="72.0700%" y="901" width="0.1109%" height="15" fill="rgb(248,3,40)" fg:x="11702" fg:w="18"/><text x="72.3200%" y="911.50"></text></g><g><title>try_to_wake_up (18 samples, 0.11%)</title><rect x="72.0700%" y="885" width="0.1109%" height="15" fill="rgb(223,178,23)" fg:x="11702" fg:w="18"/><text x="72.3200%" y="895.50"></text></g><g><title>ttwu_queue_wakelist (6 samples, 0.04%)</title><rect x="72.1439%" y="869" width="0.0370%" height="15" fill="rgb(240,132,45)" fg:x="11714" fg:w="6"/><text x="72.3939%" y="879.50"></text></g><g><title>__wake_up_common_lock (21 samples, 0.13%)</title><rect x="72.0576%" y="933" width="0.1293%" height="15" fill="rgb(245,164,36)" fg:x="11700" fg:w="21"/><text x="72.3076%" y="943.50"></text></g><g><title>eventfd_write (27 samples, 0.17%)</title><rect x="72.0392%" y="981" width="0.1663%" height="15" fill="rgb(231,188,53)" fg:x="11697" fg:w="27"/><text x="72.2892%" y="991.50"></text></g><g><title>__wake_up_common (27 samples, 0.17%)</title><rect x="72.0392%" y="965" width="0.1663%" height="15" fill="rgb(237,198,39)" fg:x="11697" fg:w="27"/><text x="72.2892%" y="975.50"></text></g><g><title>ep_poll_callback (27 samples, 0.17%)</title><rect x="72.0392%" y="949" width="0.1663%" height="15" fill="rgb(223,120,35)" fg:x="11697" fg:w="27"/><text x="72.2892%" y="959.50"></text></g><g><title>_raw_read_lock_irqsave (3 samples, 0.02%)</title><rect x="72.1870%" y="933" width="0.0185%" height="15" fill="rgb(253,107,49)" fg:x="11721" fg:w="3"/><text x="72.4370%" y="943.50"></text></g><g><title>fsnotify (6 samples, 0.04%)</title><rect x="72.2055%" y="981" width="0.0370%" height="15" fill="rgb(216,44,31)" fg:x="11724" fg:w="6"/><text x="72.4555%" y="991.50"></text></g><g><title>ksys_write (46 samples, 0.28%)</title><rect x="72.0145%" y="1013" width="0.2833%" height="15" fill="rgb(253,87,21)" fg:x="11693" fg:w="46"/><text x="72.2645%" y="1023.50"></text></g><g><title>vfs_write (44 samples, 0.27%)</title><rect x="72.0269%" y="997" width="0.2710%" height="15" fill="rgb(226,18,2)" fg:x="11695" fg:w="44"/><text x="72.2769%" y="1007.50"></text></g><g><title>security_file_permission (9 samples, 0.06%)</title><rect x="72.2424%" y="981" width="0.0554%" height="15" fill="rgb(216,8,46)" fg:x="11730" fg:w="9"/><text x="72.4924%" y="991.50"></text></g><g><title>selinux_file_permission (6 samples, 0.04%)</title><rect x="72.2609%" y="965" width="0.0370%" height="15" fill="rgb(226,140,39)" fg:x="11733" fg:w="6"/><text x="72.5109%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50 samples, 0.31%)</title><rect x="72.0084%" y="1045" width="0.3079%" height="15" fill="rgb(221,194,54)" fg:x="11692" fg:w="50"/><text x="72.2584%" y="1055.50"></text></g><g><title>do_syscall_64 (50 samples, 0.31%)</title><rect x="72.0084%" y="1029" width="0.3079%" height="15" fill="rgb(213,92,11)" fg:x="11692" fg:w="50"/><text x="72.2584%" y="1039.50"></text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.02%)</title><rect x="72.2978%" y="1013" width="0.0185%" height="15" fill="rgb(229,162,46)" fg:x="11739" fg:w="3"/><text x="72.5478%" y="1023.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (52 samples, 0.32%)</title><rect x="72.0022%" y="1125" width="0.3203%" height="15" fill="rgb(214,111,36)" fg:x="11691" fg:w="52"/><text x="72.2522%" y="1135.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (52 samples, 0.32%)</title><rect x="72.0022%" y="1109" width="0.3203%" height="15" fill="rgb(207,6,21)" fg:x="11691" fg:w="52"/><text x="72.2522%" y="1119.50"></text></g><g><title>std::sys::unix::fs::File::write (52 samples, 0.32%)</title><rect x="72.0022%" y="1093" width="0.3203%" height="15" fill="rgb(213,127,38)" fg:x="11691" fg:w="52"/><text x="72.2522%" y="1103.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (52 samples, 0.32%)</title><rect x="72.0022%" y="1077" width="0.3203%" height="15" fill="rgb(238,118,32)" fg:x="11691" fg:w="52"/><text x="72.2522%" y="1087.50"></text></g><g><title>__GI___libc_write (52 samples, 0.32%)</title><rect x="72.0022%" y="1061" width="0.3203%" height="15" fill="rgb(240,139,39)" fg:x="11691" fg:w="52"/><text x="72.2522%" y="1071.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (53 samples, 0.33%)</title><rect x="72.0022%" y="1157" width="0.3264%" height="15" fill="rgb(235,10,37)" fg:x="11691" fg:w="53"/><text x="72.2522%" y="1167.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (53 samples, 0.33%)</title><rect x="72.0022%" y="1141" width="0.3264%" height="15" fill="rgb(249,171,38)" fg:x="11691" fg:w="53"/><text x="72.2522%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (3 samples, 0.02%)</title><rect x="72.3409%" y="1141" width="0.0185%" height="15" fill="rgb(242,144,32)" fg:x="11746" fg:w="3"/><text x="72.5909%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (7 samples, 0.04%)</title><rect x="72.3286%" y="1157" width="0.0431%" height="15" fill="rgb(217,117,21)" fg:x="11744" fg:w="7"/><text x="72.5786%" y="1167.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (2 samples, 0.01%)</title><rect x="72.3594%" y="1141" width="0.0123%" height="15" fill="rgb(249,87,1)" fg:x="11749" fg:w="2"/><text x="72.6094%" y="1151.50"></text></g><g><title>hash_futex (2 samples, 0.01%)</title><rect x="72.4087%" y="1013" width="0.0123%" height="15" fill="rgb(248,196,48)" fg:x="11757" fg:w="2"/><text x="72.6587%" y="1023.50"></text></g><g><title>mark_wake_futex (3 samples, 0.02%)</title><rect x="72.4210%" y="1013" width="0.0185%" height="15" fill="rgb(251,206,33)" fg:x="11759" fg:w="3"/><text x="72.6710%" y="1023.50"></text></g><g><title>available_idle_cpu (2 samples, 0.01%)</title><rect x="72.4641%" y="965" width="0.0123%" height="15" fill="rgb(232,141,28)" fg:x="11766" fg:w="2"/><text x="72.7141%" y="975.50"></text></g><g><title>select_task_rq_fair (8 samples, 0.05%)</title><rect x="72.4456%" y="981" width="0.0493%" height="15" fill="rgb(209,167,14)" fg:x="11763" fg:w="8"/><text x="72.6956%" y="991.50"></text></g><g><title>task_h_load (3 samples, 0.02%)</title><rect x="72.4764%" y="965" width="0.0185%" height="15" fill="rgb(225,11,50)" fg:x="11768" fg:w="3"/><text x="72.7264%" y="975.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.03%)</title><rect x="72.4949%" y="965" width="0.0308%" height="15" fill="rgb(209,50,20)" fg:x="11771" fg:w="5"/><text x="72.7449%" y="975.50"></text></g><g><title>enqueue_entity (3 samples, 0.02%)</title><rect x="72.5072%" y="949" width="0.0185%" height="15" fill="rgb(212,17,46)" fg:x="11773" fg:w="3"/><text x="72.7572%" y="959.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="72.5134%" y="933" width="0.0123%" height="15" fill="rgb(216,101,39)" fg:x="11774" fg:w="2"/><text x="72.7634%" y="943.50"></text></g><g><title>ttwu_do_activate (8 samples, 0.05%)</title><rect x="72.4949%" y="981" width="0.0493%" height="15" fill="rgb(212,228,48)" fg:x="11771" fg:w="8"/><text x="72.7449%" y="991.50"></text></g><g><title>psi_task_change (3 samples, 0.02%)</title><rect x="72.5257%" y="965" width="0.0185%" height="15" fill="rgb(250,6,50)" fg:x="11776" fg:w="3"/><text x="72.7757%" y="975.50"></text></g><g><title>psi_group_change (3 samples, 0.02%)</title><rect x="72.5257%" y="949" width="0.0185%" height="15" fill="rgb(250,160,48)" fg:x="11776" fg:w="3"/><text x="72.7757%" y="959.50"></text></g><g><title>__smp_call_single_queue (3 samples, 0.02%)</title><rect x="72.5503%" y="965" width="0.0185%" height="15" fill="rgb(244,216,33)" fg:x="11780" fg:w="3"/><text x="72.8003%" y="975.50"></text></g><g><title>llist_add_batch (3 samples, 0.02%)</title><rect x="72.5503%" y="949" width="0.0185%" height="15" fill="rgb(207,157,5)" fg:x="11780" fg:w="3"/><text x="72.8003%" y="959.50"></text></g><g><title>__x64_sys_futex (32 samples, 0.20%)</title><rect x="72.3902%" y="1061" width="0.1971%" height="15" fill="rgb(228,199,8)" fg:x="11754" fg:w="32"/><text x="72.6402%" y="1071.50"></text></g><g><title>do_futex (32 samples, 0.20%)</title><rect x="72.3902%" y="1045" width="0.1971%" height="15" fill="rgb(227,80,20)" fg:x="11754" fg:w="32"/><text x="72.6402%" y="1055.50"></text></g><g><title>futex_wake (31 samples, 0.19%)</title><rect x="72.3964%" y="1029" width="0.1909%" height="15" fill="rgb(222,9,33)" fg:x="11755" fg:w="31"/><text x="72.6464%" y="1039.50"></text></g><g><title>wake_up_q (24 samples, 0.15%)</title><rect x="72.4395%" y="1013" width="0.1478%" height="15" fill="rgb(239,44,28)" fg:x="11762" fg:w="24"/><text x="72.6895%" y="1023.50"></text></g><g><title>try_to_wake_up (24 samples, 0.15%)</title><rect x="72.4395%" y="997" width="0.1478%" height="15" fill="rgb(249,187,43)" fg:x="11762" fg:w="24"/><text x="72.6895%" y="1007.50"></text></g><g><title>ttwu_queue_wakelist (6 samples, 0.04%)</title><rect x="72.5503%" y="981" width="0.0370%" height="15" fill="rgb(216,141,28)" fg:x="11780" fg:w="6"/><text x="72.8003%" y="991.50"></text></g><g><title>default_send_IPI_single_phys (3 samples, 0.02%)</title><rect x="72.5688%" y="965" width="0.0185%" height="15" fill="rgb(230,154,53)" fg:x="11783" fg:w="3"/><text x="72.8188%" y="975.50"></text></g><g><title>__default_send_IPI_dest_field (3 samples, 0.02%)</title><rect x="72.5688%" y="949" width="0.0185%" height="15" fill="rgb(227,82,4)" fg:x="11783" fg:w="3"/><text x="72.8188%" y="959.50"></text></g><g><title>syscall_enter_from_user_mode (2 samples, 0.01%)</title><rect x="72.5935%" y="1061" width="0.0123%" height="15" fill="rgb(220,107,16)" fg:x="11787" fg:w="2"/><text x="72.8435%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (45 samples, 0.28%)</title><rect x="72.3902%" y="1125" width="0.2771%" height="15" fill="rgb(207,187,2)" fg:x="11754" fg:w="45"/><text x="72.6402%" y="1135.50"></text></g><g><title>syscall (45 samples, 0.28%)</title><rect x="72.3902%" y="1109" width="0.2771%" height="15" fill="rgb(210,162,52)" fg:x="11754" fg:w="45"/><text x="72.6402%" y="1119.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.28%)</title><rect x="72.3902%" y="1093" width="0.2771%" height="15" fill="rgb(217,216,49)" fg:x="11754" fg:w="45"/><text x="72.6402%" y="1103.50"></text></g><g><title>do_syscall_64 (45 samples, 0.28%)</title><rect x="72.3902%" y="1077" width="0.2771%" height="15" fill="rgb(218,146,49)" fg:x="11754" fg:w="45"/><text x="72.6402%" y="1087.50"></text></g><g><title>syscall_exit_to_user_mode (10 samples, 0.06%)</title><rect x="72.6058%" y="1061" width="0.0616%" height="15" fill="rgb(216,55,40)" fg:x="11789" fg:w="10"/><text x="72.8558%" y="1071.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.04%)</title><rect x="72.6243%" y="1045" width="0.0431%" height="15" fill="rgb(208,196,21)" fg:x="11792" fg:w="7"/><text x="72.8743%" y="1055.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="72.6243%" y="1029" width="0.0431%" height="15" fill="rgb(242,117,42)" fg:x="11792" fg:w="7"/><text x="72.8743%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.02%)</title><rect x="72.6674%" y="1125" width="0.0185%" height="15" fill="rgb(210,11,23)" fg:x="11799" fg:w="3"/><text x="72.9174%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::gen_u32 (2 samples, 0.01%)</title><rect x="72.6735%" y="1109" width="0.0123%" height="15" fill="rgb(217,110,2)" fg:x="11800" fg:w="2"/><text x="72.9235%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="72.6858%" y="1125" width="0.0185%" height="15" fill="rgb(229,77,54)" fg:x="11802" fg:w="3"/><text x="72.9358%" y="1135.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.01%)</title><rect x="72.6920%" y="1109" width="0.0123%" height="15" fill="rgb(218,53,16)" fg:x="11803" fg:w="2"/><text x="72.9420%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (57 samples, 0.35%)</title><rect x="72.3779%" y="1157" width="0.3511%" height="15" fill="rgb(215,38,13)" fg:x="11752" fg:w="57"/><text x="72.6279%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (57 samples, 0.35%)</title><rect x="72.3779%" y="1141" width="0.3511%" height="15" fill="rgb(235,42,18)" fg:x="11752" fg:w="57"/><text x="72.6279%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (4 samples, 0.02%)</title><rect x="72.7043%" y="1125" width="0.0246%" height="15" fill="rgb(219,66,54)" fg:x="11805" fg:w="4"/><text x="72.9543%" y="1135.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (4 samples, 0.02%)</title><rect x="72.7043%" y="1109" width="0.0246%" height="15" fill="rgb(222,205,4)" fg:x="11805" fg:w="4"/><text x="72.9543%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="72.7043%" y="1093" width="0.0246%" height="15" fill="rgb(227,213,46)" fg:x="11805" fg:w="4"/><text x="72.9543%" y="1103.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.02%)</title><rect x="72.7043%" y="1077" width="0.0246%" height="15" fill="rgb(250,145,42)" fg:x="11805" fg:w="4"/><text x="72.9543%" y="1087.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (4 samples, 0.02%)</title><rect x="72.7351%" y="1141" width="0.0246%" height="15" fill="rgb(219,15,2)" fg:x="11810" fg:w="4"/><text x="72.9851%" y="1151.50"></text></g><g><title>tokio::runtime::queue::unpack (3 samples, 0.02%)</title><rect x="72.7413%" y="1125" width="0.0185%" height="15" fill="rgb(231,181,52)" fg:x="11811" fg:w="3"/><text x="72.9913%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.02%)</title><rect x="72.7597%" y="1109" width="0.0246%" height="15" fill="rgb(235,1,42)" fg:x="11814" fg:w="4"/><text x="73.0097%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6,559 samples, 40.40%)</title><rect x="32.4321%" y="1237" width="40.3954%" height="15" fill="rgb(249,88,27)" fg:x="5266" fg:w="6559"/><text x="32.6821%" y="1247.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::yield_now (137 samples, 0.84%)</title><rect x="71.9837%" y="1221" width="0.8438%" height="15" fill="rgb(235,145,16)" fg:x="11688" fg:w="137"/><text x="72.2337%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (136 samples, 0.84%)</title><rect x="71.9899%" y="1205" width="0.8376%" height="15" fill="rgb(237,114,19)" fg:x="11689" fg:w="136"/><text x="72.2399%" y="1215.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (136 samples, 0.84%)</title><rect x="71.9899%" y="1189" width="0.8376%" height="15" fill="rgb(238,51,50)" fg:x="11689" fg:w="136"/><text x="72.2399%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (134 samples, 0.83%)</title><rect x="72.0022%" y="1173" width="0.8253%" height="15" fill="rgb(205,194,25)" fg:x="11691" fg:w="134"/><text x="72.2522%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (16 samples, 0.10%)</title><rect x="72.7290%" y="1157" width="0.0985%" height="15" fill="rgb(215,203,17)" fg:x="11809" fg:w="16"/><text x="72.9790%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (11 samples, 0.07%)</title><rect x="72.7597%" y="1141" width="0.0677%" height="15" fill="rgb(233,112,49)" fg:x="11814" fg:w="11"/><text x="73.0097%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (11 samples, 0.07%)</title><rect x="72.7597%" y="1125" width="0.0677%" height="15" fill="rgb(241,130,26)" fg:x="11814" fg:w="11"/><text x="73.0097%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (6 samples, 0.04%)</title><rect x="72.7905%" y="1109" width="0.0370%" height="15" fill="rgb(252,223,19)" fg:x="11819" fg:w="6"/><text x="73.0405%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.03%)</title><rect x="72.7967%" y="1093" width="0.0308%" height="15" fill="rgb(211,95,25)" fg:x="11820" fg:w="5"/><text x="73.0467%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.03%)</title><rect x="72.7967%" y="1077" width="0.0308%" height="15" fill="rgb(251,182,27)" fg:x="11820" fg:w="5"/><text x="73.0467%" y="1087.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (6,563 samples, 40.42%)</title><rect x="32.4321%" y="1269" width="40.4200%" height="15" fill="rgb(238,24,4)" fg:x="5266" fg:w="6563"/><text x="32.6821%" y="1279.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6,563 samples, 40.42%)</title><rect x="32.4321%" y="1253" width="40.4200%" height="15" fill="rgb(224,220,25)" fg:x="5266" fg:w="6563"/><text x="32.6821%" y="1263.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.02%)</title><rect x="72.8275%" y="1237" width="0.0246%" height="15" fill="rgb(239,133,26)" fg:x="11825" fg:w="4"/><text x="73.0775%" y="1247.50"></text></g><g><title>tokio::coop::budget (6,566 samples, 40.44%)</title><rect x="32.4198%" y="1365" width="40.4385%" height="15" fill="rgb(211,94,48)" fg:x="5264" fg:w="6566"/><text x="32.6698%" y="1375.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (6,566 samples, 40.44%)</title><rect x="32.4198%" y="1349" width="40.4385%" height="15" fill="rgb(239,87,6)" fg:x="5264" fg:w="6566"/><text x="32.6698%" y="1359.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,566 samples, 40.44%)</title><rect x="32.4198%" y="1333" width="40.4385%" height="15" fill="rgb(227,62,0)" fg:x="5264" fg:w="6566"/><text x="32.6698%" y="1343.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,565 samples, 40.43%)</title><rect x="32.4259%" y="1317" width="40.4323%" height="15" fill="rgb(211,226,4)" fg:x="5265" fg:w="6565"/><text x="32.6759%" y="1327.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (6,565 samples, 40.43%)</title><rect x="32.4259%" y="1301" width="40.4323%" height="15" fill="rgb(253,38,52)" fg:x="5265" fg:w="6565"/><text x="32.6759%" y="1311.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6,565 samples, 40.43%)</title><rect x="32.4259%" y="1285" width="40.4323%" height="15" fill="rgb(229,126,40)" fg:x="5265" fg:w="6565"/><text x="32.6759%" y="1295.50">tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}</text></g><g><title>__wake_up_common_lock (8 samples, 0.05%)</title><rect x="72.9076%" y="1093" width="0.0493%" height="15" fill="rgb(229,165,44)" fg:x="11838" fg:w="8"/><text x="73.1576%" y="1103.50"></text></g><g><title>__wake_up_common (7 samples, 0.04%)</title><rect x="72.9137%" y="1077" width="0.0431%" height="15" fill="rgb(247,95,47)" fg:x="11839" fg:w="7"/><text x="73.1637%" y="1087.50"></text></g><g><title>autoremove_wake_function (6 samples, 0.04%)</title><rect x="72.9199%" y="1061" width="0.0370%" height="15" fill="rgb(216,140,30)" fg:x="11840" fg:w="6"/><text x="73.1699%" y="1071.50"></text></g><g><title>try_to_wake_up (6 samples, 0.04%)</title><rect x="72.9199%" y="1045" width="0.0370%" height="15" fill="rgb(246,214,8)" fg:x="11840" fg:w="6"/><text x="73.1699%" y="1055.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.01%)</title><rect x="72.9445%" y="1029" width="0.0123%" height="15" fill="rgb(227,224,15)" fg:x="11844" fg:w="2"/><text x="73.1945%" y="1039.50"></text></g><g><title>__wake_up_common (10 samples, 0.06%)</title><rect x="72.9014%" y="1125" width="0.0616%" height="15" fill="rgb(233,175,4)" fg:x="11837" fg:w="10"/><text x="73.1514%" y="1135.50"></text></g><g><title>ep_poll_callback (9 samples, 0.06%)</title><rect x="72.9076%" y="1109" width="0.0554%" height="15" fill="rgb(221,66,45)" fg:x="11838" fg:w="9"/><text x="73.1576%" y="1119.50"></text></g><g><title>eventfd_write (15 samples, 0.09%)</title><rect x="72.8891%" y="1141" width="0.0924%" height="15" fill="rgb(221,178,18)" fg:x="11835" fg:w="15"/><text x="73.1391%" y="1151.50"></text></g><g><title>_copy_from_user (3 samples, 0.02%)</title><rect x="72.9630%" y="1125" width="0.0185%" height="15" fill="rgb(213,81,29)" fg:x="11847" fg:w="3"/><text x="73.2130%" y="1135.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.01%)</title><rect x="72.9691%" y="1109" width="0.0123%" height="15" fill="rgb(220,89,49)" fg:x="11848" fg:w="2"/><text x="73.2191%" y="1119.50"></text></g><g><title>fsnotify (3 samples, 0.02%)</title><rect x="72.9815%" y="1141" width="0.0185%" height="15" fill="rgb(227,60,33)" fg:x="11850" fg:w="3"/><text x="73.2315%" y="1151.50"></text></g><g><title>ksys_write (21 samples, 0.13%)</title><rect x="72.8829%" y="1173" width="0.1293%" height="15" fill="rgb(205,113,12)" fg:x="11834" fg:w="21"/><text x="73.1329%" y="1183.50"></text></g><g><title>vfs_write (20 samples, 0.12%)</title><rect x="72.8891%" y="1157" width="0.1232%" height="15" fill="rgb(211,32,1)" fg:x="11835" fg:w="20"/><text x="73.1391%" y="1167.50"></text></g><g><title>security_file_permission (2 samples, 0.01%)</title><rect x="72.9999%" y="1141" width="0.0123%" height="15" fill="rgb(246,2,12)" fg:x="11853" fg:w="2"/><text x="73.2499%" y="1151.50"></text></g><g><title>selinux_file_permission (2 samples, 0.01%)</title><rect x="72.9999%" y="1125" width="0.0123%" height="15" fill="rgb(243,37,27)" fg:x="11853" fg:w="2"/><text x="73.2499%" y="1135.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (27 samples, 0.17%)</title><rect x="72.8583%" y="1285" width="0.1663%" height="15" fill="rgb(248,211,31)" fg:x="11830" fg:w="27"/><text x="73.1083%" y="1295.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (27 samples, 0.17%)</title><rect x="72.8583%" y="1269" width="0.1663%" height="15" fill="rgb(242,146,47)" fg:x="11830" fg:w="27"/><text x="73.1083%" y="1279.50"></text></g><g><title>std::sys::unix::fs::File::write (26 samples, 0.16%)</title><rect x="72.8644%" y="1253" width="0.1601%" height="15" fill="rgb(206,70,20)" fg:x="11831" fg:w="26"/><text x="73.1144%" y="1263.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (26 samples, 0.16%)</title><rect x="72.8644%" y="1237" width="0.1601%" height="15" fill="rgb(215,10,51)" fg:x="11831" fg:w="26"/><text x="73.1144%" y="1247.50"></text></g><g><title>__GI___libc_write (26 samples, 0.16%)</title><rect x="72.8644%" y="1221" width="0.1601%" height="15" fill="rgb(243,178,53)" fg:x="11831" fg:w="26"/><text x="73.1144%" y="1231.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.15%)</title><rect x="72.8706%" y="1205" width="0.1540%" height="15" fill="rgb(233,221,20)" fg:x="11832" fg:w="25"/><text x="73.1206%" y="1215.50"></text></g><g><title>do_syscall_64 (25 samples, 0.15%)</title><rect x="72.8706%" y="1189" width="0.1540%" height="15" fill="rgb(218,95,35)" fg:x="11832" fg:w="25"/><text x="73.1206%" y="1199.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.01%)</title><rect x="73.0123%" y="1173" width="0.0123%" height="15" fill="rgb(229,13,5)" fg:x="11855" fg:w="2"/><text x="73.2623%" y="1183.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="73.0123%" y="1157" width="0.0123%" height="15" fill="rgb(252,164,30)" fg:x="11855" fg:w="2"/><text x="73.2623%" y="1167.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (28 samples, 0.17%)</title><rect x="72.8583%" y="1317" width="0.1724%" height="15" fill="rgb(232,68,36)" fg:x="11830" fg:w="28"/><text x="73.1083%" y="1327.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (28 samples, 0.17%)</title><rect x="72.8583%" y="1301" width="0.1724%" height="15" fill="rgb(219,59,54)" fg:x="11830" fg:w="28"/><text x="73.1083%" y="1311.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (5 samples, 0.03%)</title><rect x="73.0307%" y="1317" width="0.0308%" height="15" fill="rgb(250,92,33)" fg:x="11858" fg:w="5"/><text x="73.2807%" y="1327.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (3 samples, 0.02%)</title><rect x="73.0430%" y="1301" width="0.0185%" height="15" fill="rgb(229,162,54)" fg:x="11860" fg:w="3"/><text x="73.2930%" y="1311.50"></text></g><g><title>mark_wake_futex (2 samples, 0.01%)</title><rect x="73.1108%" y="1173" width="0.0123%" height="15" fill="rgb(244,114,52)" fg:x="11871" fg:w="2"/><text x="73.3608%" y="1183.50"></text></g><g><title>select_task_rq_fair (3 samples, 0.02%)</title><rect x="73.1416%" y="1141" width="0.0185%" height="15" fill="rgb(212,211,43)" fg:x="11876" fg:w="3"/><text x="73.3916%" y="1151.50"></text></g><g><title>task_h_load (2 samples, 0.01%)</title><rect x="73.1477%" y="1125" width="0.0123%" height="15" fill="rgb(226,147,8)" fg:x="11877" fg:w="2"/><text x="73.3977%" y="1135.50"></text></g><g><title>enqueue_task_fair (3 samples, 0.02%)</title><rect x="73.1601%" y="1125" width="0.0185%" height="15" fill="rgb(226,23,13)" fg:x="11879" fg:w="3"/><text x="73.4101%" y="1135.50"></text></g><g><title>enqueue_entity (2 samples, 0.01%)</title><rect x="73.1662%" y="1109" width="0.0123%" height="15" fill="rgb(240,63,4)" fg:x="11880" fg:w="2"/><text x="73.4162%" y="1119.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="73.1662%" y="1093" width="0.0123%" height="15" fill="rgb(221,1,32)" fg:x="11880" fg:w="2"/><text x="73.4162%" y="1103.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.02%)</title><rect x="73.1601%" y="1141" width="0.0246%" height="15" fill="rgb(242,117,10)" fg:x="11879" fg:w="4"/><text x="73.4101%" y="1151.50"></text></g><g><title>ttwu_do_wakeup (2 samples, 0.01%)</title><rect x="73.1847%" y="1141" width="0.0123%" height="15" fill="rgb(249,172,44)" fg:x="11883" fg:w="2"/><text x="73.4347%" y="1151.50"></text></g><g><title>check_preempt_curr (2 samples, 0.01%)</title><rect x="73.1847%" y="1125" width="0.0123%" height="15" fill="rgb(244,46,45)" fg:x="11883" fg:w="2"/><text x="73.4347%" y="1135.50"></text></g><g><title>default_send_IPI_single_phys (2 samples, 0.01%)</title><rect x="73.1847%" y="1109" width="0.0123%" height="15" fill="rgb(206,43,17)" fg:x="11883" fg:w="2"/><text x="73.4347%" y="1119.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.01%)</title><rect x="73.1970%" y="1141" width="0.0123%" height="15" fill="rgb(239,218,39)" fg:x="11885" fg:w="2"/><text x="73.4470%" y="1151.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.14%)</title><rect x="73.0862%" y="1221" width="0.1355%" height="15" fill="rgb(208,169,54)" fg:x="11867" fg:w="22"/><text x="73.3362%" y="1231.50"></text></g><g><title>do_futex (21 samples, 0.13%)</title><rect x="73.0923%" y="1205" width="0.1293%" height="15" fill="rgb(247,25,42)" fg:x="11868" fg:w="21"/><text x="73.3423%" y="1215.50"></text></g><g><title>futex_wake (20 samples, 0.12%)</title><rect x="73.0985%" y="1189" width="0.1232%" height="15" fill="rgb(226,23,31)" fg:x="11869" fg:w="20"/><text x="73.3485%" y="1199.50"></text></g><g><title>wake_up_q (16 samples, 0.10%)</title><rect x="73.1231%" y="1173" width="0.0985%" height="15" fill="rgb(247,16,28)" fg:x="11873" fg:w="16"/><text x="73.3731%" y="1183.50"></text></g><g><title>try_to_wake_up (16 samples, 0.10%)</title><rect x="73.1231%" y="1157" width="0.0985%" height="15" fill="rgb(231,147,38)" fg:x="11873" fg:w="16"/><text x="73.3731%" y="1167.50"></text></g><g><title>update_rq_clock (2 samples, 0.01%)</title><rect x="73.2093%" y="1141" width="0.0123%" height="15" fill="rgb(253,81,48)" fg:x="11887" fg:w="2"/><text x="73.4593%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (27 samples, 0.17%)</title><rect x="73.0800%" y="1285" width="0.1663%" height="15" fill="rgb(249,222,43)" fg:x="11866" fg:w="27"/><text x="73.3300%" y="1295.50"></text></g><g><title>syscall (26 samples, 0.16%)</title><rect x="73.0862%" y="1269" width="0.1601%" height="15" fill="rgb(221,3,27)" fg:x="11867" fg:w="26"/><text x="73.3362%" y="1279.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.16%)</title><rect x="73.0862%" y="1253" width="0.1601%" height="15" fill="rgb(228,180,5)" fg:x="11867" fg:w="26"/><text x="73.3362%" y="1263.50"></text></g><g><title>do_syscall_64 (26 samples, 0.16%)</title><rect x="73.0862%" y="1237" width="0.1601%" height="15" fill="rgb(227,131,42)" fg:x="11867" fg:w="26"/><text x="73.3362%" y="1247.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.02%)</title><rect x="73.2217%" y="1221" width="0.0246%" height="15" fill="rgb(212,3,39)" fg:x="11889" fg:w="4"/><text x="73.4717%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (33 samples, 0.20%)</title><rect x="73.0615%" y="1317" width="0.2032%" height="15" fill="rgb(226,45,5)" fg:x="11863" fg:w="33"/><text x="73.3115%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (33 samples, 0.20%)</title><rect x="73.0615%" y="1301" width="0.2032%" height="15" fill="rgb(215,167,45)" fg:x="11863" fg:w="33"/><text x="73.3115%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="73.2463%" y="1285" width="0.0185%" height="15" fill="rgb(250,218,53)" fg:x="11893" fg:w="3"/><text x="73.4963%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6,637 samples, 40.88%)</title><rect x="32.3951%" y="1381" width="40.8758%" height="15" fill="rgb(207,140,0)" fg:x="5260" fg:w="6637"/><text x="32.6451%" y="1391.50">tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (67 samples, 0.41%)</title><rect x="72.8583%" y="1365" width="0.4126%" height="15" fill="rgb(238,133,51)" fg:x="11830" fg:w="67"/><text x="73.1083%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (67 samples, 0.41%)</title><rect x="72.8583%" y="1349" width="0.4126%" height="15" fill="rgb(218,203,53)" fg:x="11830" fg:w="67"/><text x="73.1083%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (67 samples, 0.41%)</title><rect x="72.8583%" y="1333" width="0.4126%" height="15" fill="rgb(226,184,25)" fg:x="11830" fg:w="67"/><text x="73.1083%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (4 samples, 0.02%)</title><rect x="73.2709%" y="1381" width="0.0246%" height="15" fill="rgb(231,121,21)" fg:x="11897" fg:w="4"/><text x="73.5209%" y="1391.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (2 samples, 0.01%)</title><rect x="73.2832%" y="1365" width="0.0123%" height="15" fill="rgb(251,14,34)" fg:x="11899" fg:w="2"/><text x="73.5332%" y="1375.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.01%)</title><rect x="73.2832%" y="1349" width="0.0123%" height="15" fill="rgb(249,193,11)" fg:x="11899" fg:w="2"/><text x="73.5332%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (2 samples, 0.01%)</title><rect x="73.2832%" y="1333" width="0.0123%" height="15" fill="rgb(220,172,37)" fg:x="11899" fg:w="2"/><text x="73.5332%" y="1343.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="73.2832%" y="1317" width="0.0123%" height="15" fill="rgb(231,229,43)" fg:x="11899" fg:w="2"/><text x="73.5332%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.02%)</title><rect x="73.3448%" y="1333" width="0.0185%" height="15" fill="rgb(250,161,5)" fg:x="11909" fg:w="3"/><text x="73.5948%" y="1343.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="73.3448%" y="1317" width="0.0185%" height="15" fill="rgb(218,225,18)" fg:x="11909" fg:w="3"/><text x="73.5948%" y="1327.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (28 samples, 0.17%)</title><rect x="73.3202%" y="1365" width="0.1724%" height="15" fill="rgb(245,45,42)" fg:x="11905" fg:w="28"/><text x="73.5702%" y="1375.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (27 samples, 0.17%)</title><rect x="73.3264%" y="1349" width="0.1663%" height="15" fill="rgb(211,115,1)" fg:x="11906" fg:w="27"/><text x="73.5764%" y="1359.50"></text></g><g><title>tokio::runtime::queue::unpack (21 samples, 0.13%)</title><rect x="73.3633%" y="1333" width="0.1293%" height="15" fill="rgb(248,133,52)" fg:x="11912" fg:w="21"/><text x="73.6133%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (32 samples, 0.20%)</title><rect x="73.3017%" y="1381" width="0.1971%" height="15" fill="rgb(238,100,21)" fg:x="11902" fg:w="32"/><text x="73.5517%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1813" width="49.4549%" height="15" fill="rgb(247,144,11)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1823.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1797" width="49.4549%" height="15" fill="rgb(206,164,16)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1807.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1781" width="49.4549%" height="15" fill="rgb(222,34,3)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1791.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1765" width="49.4549%" height="15" fill="rgb(248,82,4)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1775.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1749" width="49.4549%" height="15" fill="rgb(228,81,46)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1759.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1733" width="49.4549%" height="15" fill="rgb(227,67,47)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1743.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1717" width="49.4549%" height="15" fill="rgb(215,93,53)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1727.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (8,030 samples, 49.45%)</title><rect x="24.0870%" y="1701" width="49.4549%" height="15" fill="rgb(248,194,39)" fg:x="3911" fg:w="8030"/><text x="24.3370%" y="1711.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1685" width="49.1532%" height="15" fill="rgb(215,5,19)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1695.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1669" width="49.1532%" height="15" fill="rgb(226,215,51)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1679.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1653" width="49.1532%" height="15" fill="rgb(225,56,26)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1663.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1637" width="49.1532%" height="15" fill="rgb(222,75,29)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1647.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1621" width="49.1532%" height="15" fill="rgb(236,139,6)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1631.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1605" width="49.1532%" height="15" fill="rgb(223,137,36)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1615.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1589" width="49.1532%" height="15" fill="rgb(226,99,2)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1599.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1573" width="49.1532%" height="15" fill="rgb(206,133,23)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1583.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1557" width="49.1532%" height="15" fill="rgb(243,173,15)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1567.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1541" width="49.1532%" height="15" fill="rgb(228,69,28)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1551.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1525" width="49.1532%" height="15" fill="rgb(212,51,22)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1535.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1509" width="49.1532%" height="15" fill="rgb(227,113,0)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1519.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1493" width="49.1532%" height="15" fill="rgb(252,84,27)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1503.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (7,981 samples, 49.15%)</title><rect x="24.3887%" y="1477" width="49.1532%" height="15" fill="rgb(223,145,39)" fg:x="3960" fg:w="7981"/><text x="24.6387%" y="1487.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (7,980 samples, 49.15%)</title><rect x="24.3949%" y="1461" width="49.1470%" height="15" fill="rgb(239,219,30)" fg:x="3961" fg:w="7980"/><text x="24.6449%" y="1471.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (7,980 samples, 49.15%)</title><rect x="24.3949%" y="1445" width="49.1470%" height="15" fill="rgb(224,196,39)" fg:x="3961" fg:w="7980"/><text x="24.6449%" y="1455.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7,979 samples, 49.14%)</title><rect x="24.4011%" y="1429" width="49.1409%" height="15" fill="rgb(205,35,43)" fg:x="3962" fg:w="7979"/><text x="24.6511%" y="1439.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (7,979 samples, 49.14%)</title><rect x="24.4011%" y="1413" width="49.1409%" height="15" fill="rgb(228,201,21)" fg:x="3962" fg:w="7979"/><text x="24.6511%" y="1423.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7,979 samples, 49.14%)</title><rect x="24.4011%" y="1397" width="49.1409%" height="15" fill="rgb(237,118,16)" fg:x="3962" fg:w="7979"/><text x="24.6511%" y="1407.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::shutdown (7 samples, 0.04%)</title><rect x="73.4988%" y="1381" width="0.0431%" height="15" fill="rgb(241,17,19)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1391.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.04%)</title><rect x="73.4988%" y="1365" width="0.0431%" height="15" fill="rgb(214,10,25)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1375.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.04%)</title><rect x="73.4988%" y="1349" width="0.0431%" height="15" fill="rgb(238,37,29)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1359.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.04%)</title><rect x="73.4988%" y="1333" width="0.0431%" height="15" fill="rgb(253,83,25)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1343.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.04%)</title><rect x="73.4988%" y="1317" width="0.0431%" height="15" fill="rgb(234,192,12)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.04%)</title><rect x="73.4988%" y="1301" width="0.0431%" height="15" fill="rgb(241,216,45)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.04%)</title><rect x="73.4988%" y="1285" width="0.0431%" height="15" fill="rgb(242,22,33)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (7 samples, 0.04%)</title><rect x="73.4988%" y="1269" width="0.0431%" height="15" fill="rgb(231,105,49)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1279.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (7 samples, 0.04%)</title><rect x="73.4988%" y="1253" width="0.0431%" height="15" fill="rgb(218,204,15)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1263.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (7 samples, 0.04%)</title><rect x="73.4988%" y="1237" width="0.0431%" height="15" fill="rgb(235,138,41)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1247.50"></text></g><g><title>syscall (7 samples, 0.04%)</title><rect x="73.4988%" y="1221" width="0.0431%" height="15" fill="rgb(246,0,9)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1231.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="73.4988%" y="1205" width="0.0431%" height="15" fill="rgb(210,74,4)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1215.50"></text></g><g><title>do_syscall_64 (7 samples, 0.04%)</title><rect x="73.4988%" y="1189" width="0.0431%" height="15" fill="rgb(250,60,41)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1199.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="73.4988%" y="1173" width="0.0431%" height="15" fill="rgb(220,115,12)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1183.50"></text></g><g><title>do_futex (7 samples, 0.04%)</title><rect x="73.4988%" y="1157" width="0.0431%" height="15" fill="rgb(237,100,13)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1167.50"></text></g><g><title>futex_wait (7 samples, 0.04%)</title><rect x="73.4988%" y="1141" width="0.0431%" height="15" fill="rgb(213,55,26)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1151.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.04%)</title><rect x="73.4988%" y="1125" width="0.0431%" height="15" fill="rgb(216,17,4)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1135.50"></text></g><g><title>schedule (7 samples, 0.04%)</title><rect x="73.4988%" y="1109" width="0.0431%" height="15" fill="rgb(220,153,47)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1119.50"></text></g><g><title>__schedule (7 samples, 0.04%)</title><rect x="73.4988%" y="1093" width="0.0431%" height="15" fill="rgb(215,131,9)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1103.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.04%)</title><rect x="73.4988%" y="1077" width="0.0431%" height="15" fill="rgb(233,46,42)" fg:x="11934" fg:w="7"/><text x="73.7488%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,031 samples, 49.46%)</title><rect x="24.0870%" y="1877" width="49.4611%" height="15" fill="rgb(226,86,7)" fg:x="3911" fg:w="8031"/><text x="24.3370%" y="1887.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (8,031 samples, 49.46%)</title><rect x="24.0870%" y="1861" width="49.4611%" height="15" fill="rgb(239,226,21)" fg:x="3911" fg:w="8031"/><text x="24.3370%" y="1871.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8,031 samples, 49.46%)</title><rect x="24.0870%" y="1845" width="49.4611%" height="15" fill="rgb(244,137,22)" fg:x="3911" fg:w="8031"/><text x="24.3370%" y="1855.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (8,031 samples, 49.46%)</title><rect x="24.0870%" y="1829" width="49.4611%" height="15" fill="rgb(211,139,35)" fg:x="3911" fg:w="8031"/><text x="24.3370%" y="1839.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>__do_munmap (2 samples, 0.01%)</title><rect x="73.5481%" y="1749" width="0.0123%" height="15" fill="rgb(214,62,50)" fg:x="11942" fg:w="2"/><text x="73.7981%" y="1759.50"></text></g><g><title>unmap_region (2 samples, 0.01%)</title><rect x="73.5481%" y="1733" width="0.0123%" height="15" fill="rgb(212,113,44)" fg:x="11942" fg:w="2"/><text x="73.7981%" y="1743.50"></text></g><g><title>__GI___clone (8,035 samples, 49.49%)</title><rect x="24.0808%" y="1925" width="49.4857%" height="15" fill="rgb(226,150,43)" fg:x="3910" fg:w="8035"/><text x="24.3308%" y="1935.50">__GI___clone</text></g><g><title>start_thread (8,035 samples, 49.49%)</title><rect x="24.0808%" y="1909" width="49.4857%" height="15" fill="rgb(250,71,37)" fg:x="3910" fg:w="8035"/><text x="24.3308%" y="1919.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8,034 samples, 49.48%)</title><rect x="24.0870%" y="1893" width="49.4796%" height="15" fill="rgb(219,76,19)" fg:x="3911" fg:w="8034"/><text x="24.3370%" y="1903.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (3 samples, 0.02%)</title><rect x="73.5481%" y="1877" width="0.0185%" height="15" fill="rgb(250,39,11)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1887.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="73.5481%" y="1861" width="0.0185%" height="15" fill="rgb(230,64,31)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1871.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (3 samples, 0.02%)</title><rect x="73.5481%" y="1845" width="0.0185%" height="15" fill="rgb(208,222,23)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1855.50"></text></g><g><title>__GI_munmap (3 samples, 0.02%)</title><rect x="73.5481%" y="1829" width="0.0185%" height="15" fill="rgb(227,125,18)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1839.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="73.5481%" y="1813" width="0.0185%" height="15" fill="rgb(234,210,9)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1823.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="73.5481%" y="1797" width="0.0185%" height="15" fill="rgb(217,127,24)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1807.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="73.5481%" y="1781" width="0.0185%" height="15" fill="rgb(239,141,48)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1791.50"></text></g><g><title>__vm_munmap (3 samples, 0.02%)</title><rect x="73.5481%" y="1765" width="0.0185%" height="15" fill="rgb(227,109,8)" fg:x="11942" fg:w="3"/><text x="73.7981%" y="1775.50"></text></g><g><title>__entry_text_start (2 samples, 0.01%)</title><rect x="73.5665%" y="1893" width="0.0123%" height="15" fill="rgb(235,184,23)" fg:x="11945" fg:w="2"/><text x="73.8165%" y="1903.50"></text></g><g><title>__posix_memalign (3 samples, 0.02%)</title><rect x="73.5665%" y="1925" width="0.0185%" height="15" fill="rgb(227,226,48)" fg:x="11945" fg:w="3"/><text x="73.8165%" y="1935.50"></text></g><g><title>_mid_memalign (3 samples, 0.02%)</title><rect x="73.5665%" y="1909" width="0.0185%" height="15" fill="rgb(206,150,11)" fg:x="11945" fg:w="3"/><text x="73.8165%" y="1919.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="73.5912%" y="1925" width="0.0246%" height="15" fill="rgb(254,2,33)" fg:x="11949" fg:w="4"/><text x="73.8412%" y="1935.50"></text></g><g><title>error_entry (3 samples, 0.02%)</title><rect x="73.5973%" y="1909" width="0.0185%" height="15" fill="rgb(243,160,20)" fg:x="11950" fg:w="3"/><text x="73.8473%" y="1919.50"></text></g><g><title>sync_regs (3 samples, 0.02%)</title><rect x="73.5973%" y="1893" width="0.0185%" height="15" fill="rgb(218,208,30)" fg:x="11950" fg:w="3"/><text x="73.8473%" y="1903.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.39%)</title><rect x="73.6343%" y="933" width="0.3880%" height="15" fill="rgb(224,120,49)" fg:x="11956" fg:w="63"/><text x="73.8843%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 0.36%)</title><rect x="74.9153%" y="901" width="0.3634%" height="15" fill="rgb(246,12,2)" fg:x="12164" fg:w="59"/><text x="75.1653%" y="911.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="76.9539%" y="885" width="0.0308%" height="15" fill="rgb(236,117,3)" fg:x="12495" fg:w="5"/><text x="77.2039%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.10%)</title><rect x="77.1202%" y="869" width="0.0985%" height="15" fill="rgb(216,128,52)" fg:x="12522" fg:w="16"/><text x="77.3702%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.35%)</title><rect x="78.1364%" y="837" width="0.3511%" height="15" fill="rgb(246,145,19)" fg:x="12687" fg:w="57"/><text x="78.3864%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="80.7600%" y="821" width="0.0554%" height="15" fill="rgb(222,11,46)" fg:x="13113" fg:w="9"/><text x="81.0100%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="80.7600%" y="805" width="0.0554%" height="15" fill="rgb(245,82,36)" fg:x="13113" fg:w="9"/><text x="81.0100%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.10%)</title><rect x="80.8154%" y="821" width="0.0985%" height="15" fill="rgb(250,73,51)" fg:x="13122" fg:w="16"/><text x="81.0654%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="80.9140%" y="821" width="0.0123%" height="15" fill="rgb(221,189,23)" fg:x="13138" fg:w="2"/><text x="81.1640%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.14%)</title><rect x="80.9263%" y="821" width="0.1417%" height="15" fill="rgb(210,33,7)" fg:x="13140" fg:w="23"/><text x="81.1763%" y="831.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="81.0741%" y="821" width="0.0308%" height="15" fill="rgb(210,107,22)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="831.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="81.0741%" y="805" width="0.0308%" height="15" fill="rgb(222,116,37)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="815.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="81.0741%" y="789" width="0.0308%" height="15" fill="rgb(254,17,48)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="799.50"></text></g><g><title>hrtimer_interrupt (5 samples, 0.03%)</title><rect x="81.0741%" y="773" width="0.0308%" height="15" fill="rgb(224,36,32)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="783.50"></text></g><g><title>__hrtimer_run_queues (5 samples, 0.03%)</title><rect x="81.0741%" y="757" width="0.0308%" height="15" fill="rgb(232,90,46)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="767.50"></text></g><g><title>tick_sched_timer (5 samples, 0.03%)</title><rect x="81.0741%" y="741" width="0.0308%" height="15" fill="rgb(241,66,40)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="751.50"></text></g><g><title>tick_sched_handle (5 samples, 0.03%)</title><rect x="81.0741%" y="725" width="0.0308%" height="15" fill="rgb(249,184,29)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="735.50"></text></g><g><title>update_process_times (5 samples, 0.03%)</title><rect x="81.0741%" y="709" width="0.0308%" height="15" fill="rgb(231,181,1)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="719.50"></text></g><g><title>scheduler_tick (5 samples, 0.03%)</title><rect x="81.0741%" y="693" width="0.0308%" height="15" fill="rgb(224,94,2)" fg:x="13164" fg:w="5"/><text x="81.3241%" y="703.50"></text></g><g><title>task_tick_fair (4 samples, 0.02%)</title><rect x="81.0802%" y="677" width="0.0246%" height="15" fill="rgb(229,170,15)" fg:x="13165" fg:w="4"/><text x="81.3302%" y="687.50"></text></g><g><title>update_load_avg (2 samples, 0.01%)</title><rect x="81.0926%" y="661" width="0.0123%" height="15" fill="rgb(240,127,35)" fg:x="13167" fg:w="2"/><text x="81.3426%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.15%)</title><rect x="81.1049%" y="821" width="0.1478%" height="15" fill="rgb(248,196,34)" fg:x="13169" fg:w="24"/><text x="81.3549%" y="831.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.02%)</title><rect x="81.2712%" y="805" width="0.0246%" height="15" fill="rgb(236,137,7)" fg:x="13196" fg:w="4"/><text x="81.5212%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="81.2712%" y="789" width="0.0246%" height="15" fill="rgb(235,127,16)" fg:x="13196" fg:w="4"/><text x="81.5212%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="81.2773%" y="773" width="0.0185%" height="15" fill="rgb(250,192,54)" fg:x="13197" fg:w="3"/><text x="81.5273%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (9 samples, 0.06%)</title><rect x="81.2527%" y="821" width="0.0554%" height="15" fill="rgb(218,98,20)" fg:x="13193" fg:w="9"/><text x="81.5027%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="81.2958%" y="805" width="0.0123%" height="15" fill="rgb(230,176,47)" fg:x="13200" fg:w="2"/><text x="81.5458%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.2958%" y="789" width="0.0123%" height="15" fill="rgb(244,2,33)" fg:x="13200" fg:w="2"/><text x="81.5458%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn scylla::transport::retry_policy::RetrySession&gt;&gt; (5 samples, 0.03%)</title><rect x="81.3081%" y="821" width="0.0308%" height="15" fill="rgb(231,100,17)" fg:x="13202" fg:w="5"/><text x="81.5581%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&amp;tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),scylla::transport::errors::QueryError&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="81.3081%" y="805" width="0.0308%" height="15" fill="rgb(245,23,12)" fg:x="13202" fg:w="5"/><text x="81.5581%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (79 samples, 0.49%)</title><rect x="81.3389%" y="821" width="0.4865%" height="15" fill="rgb(249,55,22)" fg:x="13207" fg:w="79"/><text x="81.5889%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.49%)</title><rect x="81.3389%" y="805" width="0.4865%" height="15" fill="rgb(207,134,9)" fg:x="13207" fg:w="79"/><text x="81.5889%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="81.8131%" y="789" width="0.0123%" height="15" fill="rgb(218,134,0)" fg:x="13284" fg:w="2"/><text x="82.0631%" y="799.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="81.8131%" y="773" width="0.0123%" height="15" fill="rgb(213,212,33)" fg:x="13284" fg:w="2"/><text x="82.0631%" y="783.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="81.8131%" y="757" width="0.0123%" height="15" fill="rgb(252,106,18)" fg:x="13284" fg:w="2"/><text x="82.0631%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;scylla::transport::errors::QueryError&gt;&gt; (133 samples, 0.82%)</title><rect x="81.8316%" y="821" width="0.8191%" height="15" fill="rgb(208,126,42)" fg:x="13287" fg:w="133"/><text x="82.0816%" y="831.50"></text></g><g><title>scylla::transport::metrics::Metrics::inc_total_nonpaged_queries (43 samples, 0.26%)</title><rect x="82.6631%" y="821" width="0.2648%" height="15" fill="rgb(246,175,29)" fg:x="13422" fg:w="43"/><text x="82.9131%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (3 samples, 0.02%)</title><rect x="82.9094%" y="805" width="0.0185%" height="15" fill="rgb(215,13,50)" fg:x="13462" fg:w="3"/><text x="83.1594%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="82.9094%" y="789" width="0.0185%" height="15" fill="rgb(216,172,15)" fg:x="13462" fg:w="3"/><text x="83.1594%" y="799.50"></text></g><g><title>scylla::transport::metrics::Metrics::log_query_latency (3 samples, 0.02%)</title><rect x="82.9279%" y="821" width="0.0185%" height="15" fill="rgb(212,103,13)" fg:x="13465" fg:w="3"/><text x="83.1779%" y="831.50"></text></g><g><title>std::time::Instant::elapsed (3 samples, 0.02%)</title><rect x="82.9464%" y="821" width="0.0185%" height="15" fill="rgb(231,171,36)" fg:x="13468" fg:w="3"/><text x="83.1964%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (786 samples, 4.84%)</title><rect x="78.1364%" y="853" width="4.8408%" height="15" fill="rgb(250,123,20)" fg:x="12687" fg:w="786"/><text x="78.3864%" y="863.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (729 samples, 4.49%)</title><rect x="78.4874%" y="837" width="4.4897%" height="15" fill="rgb(212,53,50)" fg:x="12744" fg:w="729"/><text x="78.7374%" y="847.50">scyll..</text></g><g><title>std::time::Instant::now (2 samples, 0.01%)</title><rect x="82.9648%" y="821" width="0.0123%" height="15" fill="rgb(243,54,12)" fg:x="13471" fg:w="2"/><text x="83.2148%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.01%)</title><rect x="82.9648%" y="805" width="0.0123%" height="15" fill="rgb(234,101,34)" fg:x="13471" fg:w="2"/><text x="83.2148%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.01%)</title><rect x="82.9648%" y="789" width="0.0123%" height="15" fill="rgb(254,67,22)" fg:x="13471" fg:w="2"/><text x="83.2148%" y="799.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (2 samples, 0.01%)</title><rect x="82.9772%" y="853" width="0.0123%" height="15" fill="rgb(250,35,47)" fg:x="13473" fg:w="2"/><text x="83.2272%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="83.0203%" y="757" width="0.0123%" height="15" fill="rgb(226,126,38)" fg:x="13480" fg:w="2"/><text x="83.2703%" y="767.50"></text></g><g><title>&lt;scylla::transport::retry_policy::DefaultRetryPolicy as scylla::transport::retry_policy::RetryPolicy&gt;::new_session (9 samples, 0.06%)</title><rect x="82.9895%" y="853" width="0.0554%" height="15" fill="rgb(216,138,53)" fg:x="13475" fg:w="9"/><text x="83.2395%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.04%)</title><rect x="83.0079%" y="837" width="0.0370%" height="15" fill="rgb(246,199,43)" fg:x="13478" fg:w="6"/><text x="83.2579%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.04%)</title><rect x="83.0079%" y="821" width="0.0370%" height="15" fill="rgb(232,125,11)" fg:x="13478" fg:w="6"/><text x="83.2579%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.04%)</title><rect x="83.0079%" y="805" width="0.0370%" height="15" fill="rgb(218,219,45)" fg:x="13478" fg:w="6"/><text x="83.2579%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.04%)</title><rect x="83.0079%" y="789" width="0.0370%" height="15" fill="rgb(216,102,54)" fg:x="13478" fg:w="6"/><text x="83.2579%" y="799.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.03%)</title><rect x="83.0141%" y="773" width="0.0308%" height="15" fill="rgb(250,228,7)" fg:x="13479" fg:w="5"/><text x="83.2641%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (4 samples, 0.02%)</title><rect x="83.0572%" y="853" width="0.0246%" height="15" fill="rgb(226,125,25)" fg:x="13486" fg:w="4"/><text x="83.3072%" y="863.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}}::{{closure}} (4 samples, 0.02%)</title><rect x="83.0572%" y="837" width="0.0246%" height="15" fill="rgb(224,165,27)" fg:x="13486" fg:w="4"/><text x="83.3072%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="83.0572%" y="821" width="0.0246%" height="15" fill="rgb(233,86,3)" fg:x="13486" fg:w="4"/><text x="83.3072%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (21 samples, 0.13%)</title><rect x="83.0819%" y="853" width="0.1293%" height="15" fill="rgb(228,116,20)" fg:x="13490" fg:w="21"/><text x="83.3319%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;scylla::transport::connection::QueryResponse,scylla::transport::errors::QueryError&gt;&gt; (6 samples, 0.04%)</title><rect x="83.1742%" y="837" width="0.0370%" height="15" fill="rgb(209,192,17)" fg:x="13505" fg:w="6"/><text x="83.4242%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::errors::QueryError&gt; (5 samples, 0.03%)</title><rect x="83.1804%" y="821" width="0.0308%" height="15" fill="rgb(224,88,34)" fg:x="13506" fg:w="5"/><text x="83.4304%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::cluster::ClusterData&gt;&gt; (79 samples, 0.49%)</title><rect x="83.2112%" y="853" width="0.4865%" height="15" fill="rgb(233,38,6)" fg:x="13511" fg:w="79"/><text x="83.4612%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.49%)</title><rect x="83.2112%" y="837" width="0.4865%" height="15" fill="rgb(212,59,30)" fg:x="13511" fg:w="79"/><text x="83.4612%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;,&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}},&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt;&gt; (5 samples, 0.03%)</title><rect x="83.6977%" y="853" width="0.0308%" height="15" fill="rgb(213,80,3)" fg:x="13590" fg:w="5"/><text x="83.9477%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::session::Session::execute_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;,&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}},&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (4 samples, 0.02%)</title><rect x="83.7039%" y="837" width="0.0246%" height="15" fill="rgb(251,178,7)" fg:x="13591" fg:w="4"/><text x="83.9539%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,100 samples, 6.77%)</title><rect x="76.9847%" y="885" width="6.7747%" height="15" fill="rgb(213,154,26)" fg:x="12500" fg:w="1100"/><text x="77.2347%" y="895.50">&lt;core::fu..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (1,062 samples, 6.54%)</title><rect x="77.2187%" y="869" width="6.5406%" height="15" fill="rgb(238,165,49)" fg:x="12538" fg:w="1062"/><text x="77.4687%" y="879.50">scylla::t..</text></g><g><title>scylla::transport::cluster::Cluster::get_data (5 samples, 0.03%)</title><rect x="83.7285%" y="853" width="0.0308%" height="15" fill="rgb(248,91,46)" fg:x="13595" fg:w="5"/><text x="83.9785%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (55 samples, 0.34%)</title><rect x="83.7593%" y="885" width="0.3387%" height="15" fill="rgb(244,21,52)" fg:x="13600" fg:w="55"/><text x="84.0093%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="84.0857%" y="869" width="0.0123%" height="15" fill="rgb(247,122,20)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="879.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="84.0857%" y="853" width="0.0123%" height="15" fill="rgb(218,27,9)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="863.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="84.0857%" y="837" width="0.0123%" height="15" fill="rgb(246,7,6)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="847.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="84.0857%" y="821" width="0.0123%" height="15" fill="rgb(227,135,54)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="831.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="84.0857%" y="805" width="0.0123%" height="15" fill="rgb(247,14,11)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="815.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="84.0857%" y="789" width="0.0123%" height="15" fill="rgb(206,149,34)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="799.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="84.0857%" y="773" width="0.0123%" height="15" fill="rgb(227,228,4)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="783.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="84.0857%" y="757" width="0.0123%" height="15" fill="rgb(238,218,28)" fg:x="13653" fg:w="2"/><text x="84.3357%" y="767.50"></text></g><g><title>&lt;scylla::frame::value::SerializedValues as scylla::frame::value::ValueList&gt;::serialized (3 samples, 0.02%)</title><rect x="84.0980%" y="885" width="0.0185%" height="15" fill="rgb(252,86,40)" fg:x="13655" fg:w="3"/><text x="84.3480%" y="895.50"></text></g><g><title>__memcpy_avx_unaligned (5 samples, 0.03%)</title><rect x="84.1165%" y="885" width="0.0308%" height="15" fill="rgb(251,225,11)" fg:x="13658" fg:w="5"/><text x="84.3665%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (51 samples, 0.31%)</title><rect x="84.1473%" y="885" width="0.3141%" height="15" fill="rgb(206,46,49)" fg:x="13663" fg:w="51"/><text x="84.3973%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt; (148 samples, 0.91%)</title><rect x="84.4676%" y="885" width="0.9115%" height="15" fill="rgb(245,128,24)" fg:x="13715" fg:w="148"/><text x="84.7176%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::run_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}},scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt;&gt; (5 samples, 0.03%)</title><rect x="85.3852%" y="885" width="0.0308%" height="15" fill="rgb(219,177,34)" fg:x="13864" fg:w="5"/><text x="85.6352%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::session::Session::run_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}},scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="85.3975%" y="869" width="0.0185%" height="15" fill="rgb(218,60,48)" fg:x="13866" fg:w="3"/><text x="85.6475%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (4 samples, 0.02%)</title><rect x="85.4160%" y="885" width="0.0246%" height="15" fill="rgb(221,11,5)" fg:x="13869" fg:w="4"/><text x="85.6660%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::value::SerializedValues&gt; (3 samples, 0.02%)</title><rect x="85.4407%" y="885" width="0.0185%" height="15" fill="rgb(220,148,13)" fg:x="13873" fg:w="3"/><text x="85.6907%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="85.4407%" y="869" width="0.0185%" height="15" fill="rgb(210,16,3)" fg:x="13873" fg:w="3"/><text x="85.6907%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.02%)</title><rect x="85.4407%" y="853" width="0.0185%" height="15" fill="rgb(236,80,2)" fg:x="13873" fg:w="3"/><text x="85.6907%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="85.4407%" y="837" width="0.0185%" height="15" fill="rgb(239,129,19)" fg:x="13873" fg:w="3"/><text x="85.6907%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="85.4468%" y="821" width="0.0123%" height="15" fill="rgb(220,106,35)" fg:x="13874" fg:w="2"/><text x="85.6968%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="85.4468%" y="805" width="0.0123%" height="15" fill="rgb(252,139,45)" fg:x="13874" fg:w="2"/><text x="85.6968%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.03%)</title><rect x="85.4591%" y="869" width="0.0308%" height="15" fill="rgb(229,8,36)" fg:x="13876" fg:w="5"/><text x="85.7091%" y="879.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_keyspace_name::{{closure}} (3 samples, 0.02%)</title><rect x="85.4715%" y="853" width="0.0185%" height="15" fill="rgb(230,126,33)" fg:x="13878" fg:w="3"/><text x="85.7215%" y="863.50"></text></g><g><title>alloc::string::String::as_str (3 samples, 0.02%)</title><rect x="85.4715%" y="837" width="0.0185%" height="15" fill="rgb(239,140,21)" fg:x="13878" fg:w="3"/><text x="85.7215%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="85.4715%" y="821" width="0.0185%" height="15" fill="rgb(254,104,9)" fg:x="13878" fg:w="3"/><text x="85.7215%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="85.4715%" y="805" width="0.0185%" height="15" fill="rgb(239,52,14)" fg:x="13878" fg:w="3"/><text x="85.7215%" y="815.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_keyspace_name (7 samples, 0.04%)</title><rect x="85.4591%" y="885" width="0.0431%" height="15" fill="rgb(208,227,44)" fg:x="13876" fg:w="7"/><text x="85.7091%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (2 samples, 0.01%)</title><rect x="85.4899%" y="869" width="0.0123%" height="15" fill="rgb(246,18,19)" fg:x="13881" fg:w="2"/><text x="85.7399%" y="879.50"></text></g><g><title>scylla::transport::connection::QueryResponse::into_query_result (5 samples, 0.03%)</title><rect x="85.5022%" y="885" width="0.0308%" height="15" fill="rgb(235,228,25)" fg:x="13883" fg:w="5"/><text x="85.7522%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,742 samples, 10.73%)</title><rect x="74.8476%" y="917" width="10.7286%" height="15" fill="rgb(240,156,20)" fg:x="12153" fg:w="1742"/><text x="75.0976%" y="927.50">&lt;core::future::f..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (1,672 samples, 10.30%)</title><rect x="75.2787%" y="901" width="10.2975%" height="15" fill="rgb(224,8,20)" fg:x="12223" fg:w="1672"/><text x="75.5287%" y="911.50">scylla::transpo..</text></g><g><title>scylla::transport::session::calculate_token (6 samples, 0.04%)</title><rect x="85.5392%" y="885" width="0.0370%" height="15" fill="rgb(214,12,52)" fg:x="13889" fg:w="6"/><text x="85.7892%" y="895.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="85.5762%" y="917" width="0.0123%" height="15" fill="rgb(211,220,47)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="85.5762%" y="901" width="0.0123%" height="15" fill="rgb(250,173,5)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="911.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="85.5762%" y="885" width="0.0123%" height="15" fill="rgb(250,125,52)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="895.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="85.5762%" y="869" width="0.0123%" height="15" fill="rgb(209,133,18)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="879.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="85.5762%" y="853" width="0.0123%" height="15" fill="rgb(216,173,22)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="863.50"></text></g><g><title>tick_sched_timer (2 samples, 0.01%)</title><rect x="85.5762%" y="837" width="0.0123%" height="15" fill="rgb(205,3,22)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="847.50"></text></g><g><title>tick_sched_handle (2 samples, 0.01%)</title><rect x="85.5762%" y="821" width="0.0123%" height="15" fill="rgb(248,22,20)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="831.50"></text></g><g><title>update_process_times (2 samples, 0.01%)</title><rect x="85.5762%" y="805" width="0.0123%" height="15" fill="rgb(233,6,29)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="815.50"></text></g><g><title>scheduler_tick (2 samples, 0.01%)</title><rect x="85.5762%" y="789" width="0.0123%" height="15" fill="rgb(240,22,54)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="799.50"></text></g><g><title>task_tick_fair (2 samples, 0.01%)</title><rect x="85.5762%" y="773" width="0.0123%" height="15" fill="rgb(231,133,32)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="783.50"></text></g><g><title>update_cfs_group (2 samples, 0.01%)</title><rect x="85.5762%" y="757" width="0.0123%" height="15" fill="rgb(248,193,4)" fg:x="13895" fg:w="2"/><text x="85.8262%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1925" width="11.9850%" height="15" fill="rgb(211,178,46)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1935.50">core::ops::functio..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1909" width="11.9850%" height="15" fill="rgb(224,5,42)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1919.50">std::thread::Build..</text></g><g><title>std::panic::catch_unwind (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1893" width="11.9850%" height="15" fill="rgb(239,176,25)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1903.50">std::panic::catch_..</text></g><g><title>std::panicking::try (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1877" width="11.9850%" height="15" fill="rgb(245,187,50)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1887.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1861" width="11.9850%" height="15" fill="rgb(248,24,15)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1871.50">std::panicking::tr..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1845" width="11.9850%" height="15" fill="rgb(205,166,13)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1855.50">&lt;core::panic::unwi..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1829" width="11.9850%" height="15" fill="rgb(208,114,23)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1839.50">std::thread::Build..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1813" width="11.9850%" height="15" fill="rgb(239,127,18)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1823.50">std::sys_common::b..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1797" width="11.9850%" height="15" fill="rgb(219,154,28)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1807.50">tokio::runtime::bl..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1781" width="11.9850%" height="15" fill="rgb(225,157,23)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1791.50">tokio::runtime::bl..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1765" width="11.9850%" height="15" fill="rgb(219,8,6)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1775.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1749" width="11.9850%" height="15" fill="rgb(212,47,6)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1759.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1733" width="11.9850%" height="15" fill="rgb(224,190,4)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1743.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1717" width="11.9850%" height="15" fill="rgb(239,183,29)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1727.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::poll_future (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1701" width="11.9850%" height="15" fill="rgb(213,57,7)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1711.50">tokio::runtime::ta..</text></g><g><title>std::panic::catch_unwind (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1685" width="11.9850%" height="15" fill="rgb(216,148,1)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1695.50">std::panic::catch_..</text></g><g><title>std::panicking::try (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1669" width="11.9850%" height="15" fill="rgb(236,182,29)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1679.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1653" width="11.9850%" height="15" fill="rgb(244,120,48)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1663.50">std::panicking::tr..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1637" width="11.9850%" height="15" fill="rgb(206,71,34)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1647.50">&lt;core::panic::unwi..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1621" width="11.9850%" height="15" fill="rgb(242,32,6)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1631.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1605" width="11.9850%" height="15" fill="rgb(241,35,3)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1615.50">tokio::runtime::ta..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1589" width="11.9850%" height="15" fill="rgb(222,62,19)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1599.50">tokio::loom::std::..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1573" width="11.9850%" height="15" fill="rgb(223,110,41)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1583.50">tokio::runtime::ta..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1557" width="11.9850%" height="15" fill="rgb(208,224,4)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1567.50">&lt;tokio::runtime::b..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1541" width="11.9850%" height="15" fill="rgb(241,137,19)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1551.50">tokio::runtime::th..</text></g><g><title>tokio::runtime::thread_pool::worker::run (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1525" width="11.9850%" height="15" fill="rgb(244,24,17)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1535.50">tokio::runtime::th..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1509" width="11.9850%" height="15" fill="rgb(245,178,49)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1519.50">tokio::macros::sco..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1493" width="11.9850%" height="15" fill="rgb(219,160,38)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1503.50">tokio::runtime::th..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1477" width="11.9850%" height="15" fill="rgb(228,137,14)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1487.50">tokio::runtime::th..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1461" width="11.9850%" height="15" fill="rgb(237,134,11)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1471.50">tokio::runtime::th..</text></g><g><title>tokio::coop::budget (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1445" width="11.9850%" height="15" fill="rgb(211,126,44)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1455.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1429" width="11.9850%" height="15" fill="rgb(226,171,33)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1439.50">tokio::coop::with_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1413" width="11.9850%" height="15" fill="rgb(253,99,13)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1423.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1397" width="11.9850%" height="15" fill="rgb(244,48,7)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1407.50">std::thread::local..</text></g><g><title>tokio::coop::with_budget::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1381" width="11.9850%" height="15" fill="rgb(244,217,54)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1391.50">tokio::coop::with_..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1365" width="11.9850%" height="15" fill="rgb(224,15,18)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1375.50">tokio::runtime::th..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1349" width="11.9850%" height="15" fill="rgb(244,99,12)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1359.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1333" width="11.9850%" height="15" fill="rgb(233,226,8)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1343.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1317" width="11.9850%" height="15" fill="rgb(229,211,3)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1327.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1301" width="11.9850%" height="15" fill="rgb(216,140,21)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1311.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::poll_future (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1285" width="11.9850%" height="15" fill="rgb(234,122,30)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1295.50">tokio::runtime::ta..</text></g><g><title>std::panic::catch_unwind (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1269" width="11.9850%" height="15" fill="rgb(236,25,46)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1279.50">std::panic::catch_..</text></g><g><title>std::panicking::try (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1253" width="11.9850%" height="15" fill="rgb(217,52,54)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1263.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1237" width="11.9850%" height="15" fill="rgb(222,29,26)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1247.50">std::panicking::tr..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1221" width="11.9850%" height="15" fill="rgb(216,177,29)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1231.50">&lt;core::panic::unwi..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1205" width="11.9850%" height="15" fill="rgb(247,136,51)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1215.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1189" width="11.9850%" height="15" fill="rgb(231,47,47)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1199.50">tokio::runtime::ta..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1173" width="11.9850%" height="15" fill="rgb(211,192,36)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1183.50">tokio::loom::std::..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1157" width="11.9850%" height="15" fill="rgb(229,156,32)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1167.50">tokio::runtime::ta..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1141" width="11.9850%" height="15" fill="rgb(248,213,20)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1151.50">&lt;core::future::fro..</text></g><g><title>latte::req_stream::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1125" width="11.9850%" height="15" fill="rgb(217,64,7)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1135.50">latte::req_stream:..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1109" width="11.9850%" height="15" fill="rgb(232,142,8)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1119.50">&lt;futures_util::str..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1093" width="11.9850%" height="15" fill="rgb(224,92,44)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1103.50">futures_util::stre..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1077" width="11.9850%" height="15" fill="rgb(214,169,17)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1087.50">&lt;futures_util::str..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1061" width="11.9850%" height="15" fill="rgb(210,59,37)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1071.50">futures_util::stre..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1045" width="11.9850%" height="15" fill="rgb(214,116,48)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1055.50">&lt;futures_util::str..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1029" width="11.9850%" height="15" fill="rgb(244,191,6)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1039.50">&lt;core::future::fro..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="1013" width="11.9850%" height="15" fill="rgb(241,50,52)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1023.50">latte::req_stream:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="997" width="11.9850%" height="15" fill="rgb(236,75,39)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="1007.50">&lt;core::pin::Pin&lt;P&gt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="981" width="11.9850%" height="15" fill="rgb(236,99,0)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="991.50">&lt;core::future::fro..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,946 samples, 11.98%)</title><rect x="73.6158%" y="965" width="11.9850%" height="15" fill="rgb(207,202,15)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="975.50">&lt;latte::workload::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,946 samples, 11.98%)</title><rect x="73.6158%" y="949" width="11.9850%" height="15" fill="rgb(233,207,14)" fg:x="11953" fg:w="1946"/><text x="73.8658%" y="959.50">&lt;core::future::fro..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (1,879 samples, 11.57%)</title><rect x="74.0285%" y="933" width="11.5723%" height="15" fill="rgb(226,27,51)" fg:x="12020" fg:w="1879"/><text x="74.2785%" y="943.50">scylla::transport..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}&gt;&gt; (2 samples, 0.01%)</title><rect x="85.5885%" y="917" width="0.0123%" height="15" fill="rgb(206,104,42)" fg:x="13897" fg:w="2"/><text x="85.8385%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="85.6008%" y="1925" width="0.0123%" height="15" fill="rgb(212,225,4)" fg:x="13899" fg:w="2"/><text x="85.8508%" y="1935.50"></text></g><g><title>_int_free (26 samples, 0.16%)</title><rect x="85.9026%" y="917" width="0.1601%" height="15" fill="rgb(233,96,42)" fg:x="13948" fg:w="26"/><text x="86.1526%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.46%)</title><rect x="85.6193%" y="949" width="0.4557%" height="15" fill="rgb(229,21,32)" fg:x="13902" fg:w="74"/><text x="85.8693%" y="959.50"></text></g><g><title>__GI___libc_free (74 samples, 0.46%)</title><rect x="85.6193%" y="933" width="0.4557%" height="15" fill="rgb(226,216,24)" fg:x="13902" fg:w="74"/><text x="85.8693%" y="943.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="86.0627%" y="917" width="0.0123%" height="15" fill="rgb(221,163,17)" fg:x="13974" fg:w="2"/><text x="86.3127%" y="927.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="86.0627%" y="901" width="0.0123%" height="15" fill="rgb(216,216,42)" fg:x="13974" fg:w="2"/><text x="86.3127%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.08%)</title><rect x="86.0750%" y="933" width="0.0801%" height="15" fill="rgb(240,118,7)" fg:x="13976" fg:w="13"/><text x="86.3250%" y="943.50"></text></g><g><title>__GI___libc_free (76 samples, 0.47%)</title><rect x="86.1551%" y="917" width="0.4681%" height="15" fill="rgb(221,67,37)" fg:x="13989" fg:w="76"/><text x="86.4051%" y="927.50"></text></g><g><title>_int_free (38 samples, 0.23%)</title><rect x="86.3891%" y="901" width="0.2340%" height="15" fill="rgb(241,32,44)" fg:x="14027" fg:w="38"/><text x="86.6391%" y="911.50"></text></g><g><title>_int_free (37 samples, 0.23%)</title><rect x="86.7278%" y="853" width="0.2279%" height="15" fill="rgb(235,204,43)" fg:x="14082" fg:w="37"/><text x="86.9778%" y="863.50"></text></g><g><title>alloc::alloc::box_free (55 samples, 0.34%)</title><rect x="86.6231%" y="917" width="0.3387%" height="15" fill="rgb(213,116,10)" fg:x="14065" fg:w="55"/><text x="86.8731%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.34%)</title><rect x="86.6231%" y="901" width="0.3387%" height="15" fill="rgb(239,15,48)" fg:x="14065" fg:w="55"/><text x="86.8731%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.34%)</title><rect x="86.6231%" y="885" width="0.3387%" height="15" fill="rgb(207,123,36)" fg:x="14065" fg:w="55"/><text x="86.8731%" y="895.50"></text></g><g><title>__GI___libc_free (55 samples, 0.34%)</title><rect x="86.6231%" y="869" width="0.3387%" height="15" fill="rgb(209,103,30)" fg:x="14065" fg:w="55"/><text x="86.8731%" y="879.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (49 samples, 0.30%)</title><rect x="86.9619%" y="885" width="0.3018%" height="15" fill="rgb(238,100,19)" fg:x="14120" fg:w="49"/><text x="87.2119%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (184 samples, 1.13%)</title><rect x="86.1551%" y="933" width="1.1332%" height="15" fill="rgb(244,30,14)" fg:x="13989" fg:w="184"/><text x="86.4051%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt; (53 samples, 0.33%)</title><rect x="86.9619%" y="917" width="0.3264%" height="15" fill="rgb(249,174,6)" fg:x="14120" fg:w="53"/><text x="87.2119%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.33%)</title><rect x="86.9619%" y="901" width="0.3264%" height="15" fill="rgb(235,213,41)" fg:x="14120" fg:w="53"/><text x="87.2119%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,alloc::alloc::Global&gt;&gt; (4 samples, 0.02%)</title><rect x="87.2637%" y="885" width="0.0246%" height="15" fill="rgb(213,118,6)" fg:x="14169" fg:w="4"/><text x="87.5137%" y="895.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="87.2637%" y="869" width="0.0246%" height="15" fill="rgb(235,44,51)" fg:x="14169" fg:w="4"/><text x="87.5137%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="87.2637%" y="853" width="0.0246%" height="15" fill="rgb(217,9,53)" fg:x="14169" fg:w="4"/><text x="87.5137%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="87.2637%" y="837" width="0.0246%" height="15" fill="rgb(237,172,34)" fg:x="14169" fg:w="4"/><text x="87.5137%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.02%)</title><rect x="87.2637%" y="821" width="0.0246%" height="15" fill="rgb(206,206,11)" fg:x="14169" fg:w="4"/><text x="87.5137%" y="831.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (6 samples, 0.04%)</title><rect x="87.2945%" y="917" width="0.0370%" height="15" fill="rgb(214,149,29)" fg:x="14174" fg:w="6"/><text x="87.5445%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="87.3129%" y="901" width="0.0185%" height="15" fill="rgb(208,123,3)" fg:x="14177" fg:w="3"/><text x="87.5629%" y="911.50"></text></g><g><title>do_syscall_64 (3 samples, 0.02%)</title><rect x="87.3129%" y="885" width="0.0185%" height="15" fill="rgb(229,126,4)" fg:x="14177" fg:w="3"/><text x="87.5629%" y="895.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.01%)</title><rect x="87.3191%" y="869" width="0.0123%" height="15" fill="rgb(222,92,36)" fg:x="14178" fg:w="2"/><text x="87.5691%" y="879.50"></text></g><g><title>do_futex (2 samples, 0.01%)</title><rect x="87.3191%" y="853" width="0.0123%" height="15" fill="rgb(216,39,41)" fg:x="14178" fg:w="2"/><text x="87.5691%" y="863.50"></text></g><g><title>futex_wake (2 samples, 0.01%)</title><rect x="87.3191%" y="837" width="0.0123%" height="15" fill="rgb(253,127,28)" fg:x="14178" fg:w="2"/><text x="87.5691%" y="847.50"></text></g><g><title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="87.3191%" y="821" width="0.0123%" height="15" fill="rgb(249,152,51)" fg:x="14178" fg:w="2"/><text x="87.5691%" y="831.50"></text></g><g><title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="87.3191%" y="805" width="0.0123%" height="15" fill="rgb(209,123,42)" fg:x="14178" fg:w="2"/><text x="87.5691%" y="815.50"></text></g><g><title>histogram::Histogram::increment (51 samples, 0.31%)</title><rect x="87.3622%" y="901" width="0.3141%" height="15" fill="rgb(241,118,22)" fg:x="14185" fg:w="51"/><text x="87.6122%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (3 samples, 0.02%)</title><rect x="87.6825%" y="885" width="0.0185%" height="15" fill="rgb(208,25,7)" fg:x="14237" fg:w="3"/><text x="87.9325%" y="895.50"></text></g><g><title>histogram::Histogram::increment (62 samples, 0.38%)</title><rect x="87.3314%" y="917" width="0.3818%" height="15" fill="rgb(243,144,39)" fg:x="14180" fg:w="62"/><text x="87.5814%" y="927.50"></text></g><g><title>histogram::Histogram::increment_by (6 samples, 0.04%)</title><rect x="87.6763%" y="901" width="0.0370%" height="15" fill="rgb(250,50,5)" fg:x="14236" fg:w="6"/><text x="87.9263%" y="911.50"></text></g><g><title>histogram::Histogram::get_index (2 samples, 0.01%)</title><rect x="87.7009%" y="885" width="0.0123%" height="15" fill="rgb(207,67,11)" fg:x="14240" fg:w="2"/><text x="87.9509%" y="895.50"></text></g><g><title>pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="87.7132%" y="917" width="0.0185%" height="15" fill="rgb(245,204,40)" fg:x="14242" fg:w="3"/><text x="87.9632%" y="927.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="88.0581%" y="709" width="0.0123%" height="15" fill="rgb(238,228,24)" fg:x="14298" fg:w="2"/><text x="88.3081%" y="719.50"></text></g><g><title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="88.0581%" y="693" width="0.0123%" height="15" fill="rgb(217,116,22)" fg:x="14298" fg:w="2"/><text x="88.3081%" y="703.50"></text></g><g><title>x86_pmu_disable_all (2 samples, 0.01%)</title><rect x="88.0581%" y="677" width="0.0123%" height="15" fill="rgb(234,98,12)" fg:x="14298" fg:w="2"/><text x="88.3081%" y="687.50"></text></g><g><title>futex_wait_queue_me (4 samples, 0.02%)</title><rect x="88.0520%" y="757" width="0.0246%" height="15" fill="rgb(242,170,50)" fg:x="14297" fg:w="4"/><text x="88.3020%" y="767.50"></text></g><g><title>schedule (4 samples, 0.02%)</title><rect x="88.0520%" y="741" width="0.0246%" height="15" fill="rgb(235,7,5)" fg:x="14297" fg:w="4"/><text x="88.3020%" y="751.50"></text></g><g><title>__schedule (4 samples, 0.02%)</title><rect x="88.0520%" y="725" width="0.0246%" height="15" fill="rgb(241,114,28)" fg:x="14297" fg:w="4"/><text x="88.3020%" y="735.50"></text></g><g><title>__lll_lock_wait (7 samples, 0.04%)</title><rect x="88.0458%" y="853" width="0.0431%" height="15" fill="rgb(246,112,42)" fg:x="14296" fg:w="7"/><text x="88.2958%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.04%)</title><rect x="88.0520%" y="837" width="0.0370%" height="15" fill="rgb(248,228,14)" fg:x="14297" fg:w="6"/><text x="88.3020%" y="847.50"></text></g><g><title>do_syscall_64 (6 samples, 0.04%)</title><rect x="88.0520%" y="821" width="0.0370%" height="15" fill="rgb(208,133,18)" fg:x="14297" fg:w="6"/><text x="88.3020%" y="831.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.04%)</title><rect x="88.0520%" y="805" width="0.0370%" height="15" fill="rgb(207,35,49)" fg:x="14297" fg:w="6"/><text x="88.3020%" y="815.50"></text></g><g><title>do_futex (6 samples, 0.04%)</title><rect x="88.0520%" y="789" width="0.0370%" height="15" fill="rgb(205,68,36)" fg:x="14297" fg:w="6"/><text x="88.3020%" y="799.50"></text></g><g><title>futex_wait (6 samples, 0.04%)</title><rect x="88.0520%" y="773" width="0.0370%" height="15" fill="rgb(245,62,40)" fg:x="14297" fg:w="6"/><text x="88.3020%" y="783.50"></text></g><g><title>futex_wait_setup (2 samples, 0.01%)</title><rect x="88.0766%" y="757" width="0.0123%" height="15" fill="rgb(228,27,24)" fg:x="14301" fg:w="2"/><text x="88.3266%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (55 samples, 0.34%)</title><rect x="87.7564%" y="869" width="0.3387%" height="15" fill="rgb(253,19,12)" fg:x="14249" fg:w="55"/><text x="88.0064%" y="879.50"></text></g><g><title>scylla::transport::metrics::Metrics::log_query_latency (134 samples, 0.83%)</title><rect x="87.2883%" y="933" width="0.8253%" height="15" fill="rgb(232,28,20)" fg:x="14173" fg:w="134"/><text x="87.5383%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (62 samples, 0.38%)</title><rect x="87.7317%" y="917" width="0.3818%" height="15" fill="rgb(218,35,51)" fg:x="14245" fg:w="62"/><text x="87.9817%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (62 samples, 0.38%)</title><rect x="87.7317%" y="901" width="0.3818%" height="15" fill="rgb(212,90,40)" fg:x="14245" fg:w="62"/><text x="87.9817%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (61 samples, 0.38%)</title><rect x="87.7379%" y="885" width="0.3757%" height="15" fill="rgb(220,172,12)" fg:x="14246" fg:w="61"/><text x="87.9879%" y="895.50"></text></g><g><title>pthread_mutex_lock (3 samples, 0.02%)</title><rect x="88.0951%" y="869" width="0.0185%" height="15" fill="rgb(226,159,20)" fg:x="14304" fg:w="3"/><text x="88.3451%" y="879.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.03%)</title><rect x="88.1444%" y="917" width="0.0308%" height="15" fill="rgb(234,205,16)" fg:x="14312" fg:w="5"/><text x="88.3944%" y="927.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.03%)</title><rect x="88.1444%" y="901" width="0.0308%" height="15" fill="rgb(207,9,39)" fg:x="14312" fg:w="5"/><text x="88.3944%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.03%)</title><rect x="88.1444%" y="885" width="0.0308%" height="15" fill="rgb(249,143,15)" fg:x="14312" fg:w="5"/><text x="88.3944%" y="895.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.03%)</title><rect x="88.1444%" y="869" width="0.0308%" height="15" fill="rgb(253,133,29)" fg:x="14312" fg:w="5"/><text x="88.3944%" y="879.50"></text></g><g><title>std::time::Instant::elapsed (62 samples, 0.38%)</title><rect x="88.1136%" y="933" width="0.3818%" height="15" fill="rgb(221,187,0)" fg:x="14307" fg:w="62"/><text x="88.3636%" y="943.50"></text></g><g><title>std::time::Instant::now (52 samples, 0.32%)</title><rect x="88.1752%" y="917" width="0.3203%" height="15" fill="rgb(205,204,26)" fg:x="14317" fg:w="52"/><text x="88.4252%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (52 samples, 0.32%)</title><rect x="88.1752%" y="901" width="0.3203%" height="15" fill="rgb(224,68,54)" fg:x="14317" fg:w="52"/><text x="88.4252%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::now (52 samples, 0.32%)</title><rect x="88.1752%" y="885" width="0.3203%" height="15" fill="rgb(209,67,4)" fg:x="14317" fg:w="52"/><text x="88.4252%" y="895.50"></text></g><g><title>__clock_gettime_2 (51 samples, 0.31%)</title><rect x="88.1813%" y="869" width="0.3141%" height="15" fill="rgb(228,229,18)" fg:x="14318" fg:w="51"/><text x="88.4313%" y="879.50"></text></g><g><title>__vdso_clock_gettime (48 samples, 0.30%)</title><rect x="88.1998%" y="853" width="0.2956%" height="15" fill="rgb(231,89,13)" fg:x="14321" fg:w="48"/><text x="88.4498%" y="863.50"></text></g><g><title>[[vdso]] (43 samples, 0.26%)</title><rect x="88.2306%" y="837" width="0.2648%" height="15" fill="rgb(210,182,18)" fg:x="14326" fg:w="43"/><text x="88.4806%" y="847.50"></text></g><g><title>__clock_gettime_2 (50 samples, 0.31%)</title><rect x="88.5262%" y="885" width="0.3079%" height="15" fill="rgb(240,105,2)" fg:x="14374" fg:w="50"/><text x="88.7762%" y="895.50"></text></g><g><title>__vdso_clock_gettime (47 samples, 0.29%)</title><rect x="88.5447%" y="869" width="0.2895%" height="15" fill="rgb(207,170,50)" fg:x="14377" fg:w="47"/><text x="88.7947%" y="879.50"></text></g><g><title>[[vdso]] (32 samples, 0.20%)</title><rect x="88.6371%" y="853" width="0.1971%" height="15" fill="rgb(232,133,24)" fg:x="14392" fg:w="32"/><text x="88.8871%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (524 samples, 3.23%)</title><rect x="85.6193%" y="965" width="3.2272%" height="15" fill="rgb(235,166,27)" fg:x="13902" fg:w="524"/><text x="85.8693%" y="975.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (450 samples, 2.77%)</title><rect x="86.0750%" y="949" width="2.7714%" height="15" fill="rgb(209,19,13)" fg:x="13976" fg:w="450"/><text x="86.3250%" y="959.50">sc..</text></g><g><title>std::time::Instant::now (57 samples, 0.35%)</title><rect x="88.4954%" y="933" width="0.3511%" height="15" fill="rgb(226,79,39)" fg:x="14369" fg:w="57"/><text x="88.7454%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (57 samples, 0.35%)</title><rect x="88.4954%" y="917" width="0.3511%" height="15" fill="rgb(222,163,10)" fg:x="14369" fg:w="57"/><text x="88.7454%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::now (57 samples, 0.35%)</title><rect x="88.4954%" y="901" width="0.3511%" height="15" fill="rgb(214,44,19)" fg:x="14369" fg:w="57"/><text x="88.7454%" y="911.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.01%)</title><rect x="88.8341%" y="885" width="0.0123%" height="15" fill="rgb(210,217,13)" fg:x="14424" fg:w="2"/><text x="89.0841%" y="895.50"></text></g><g><title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (2 samples, 0.01%)</title><rect x="88.8341%" y="869" width="0.0123%" height="15" fill="rgb(237,61,54)" fg:x="14424" fg:w="2"/><text x="89.0841%" y="879.50"></text></g><g><title>&lt;scylla::transport::retry_policy::DefaultRetryPolicy as scylla::transport::retry_policy::RetryPolicy&gt;::new_session (13 samples, 0.08%)</title><rect x="88.8526%" y="965" width="0.0801%" height="15" fill="rgb(226,184,24)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.08%)</title><rect x="88.8526%" y="949" width="0.0801%" height="15" fill="rgb(223,226,4)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.08%)</title><rect x="88.8526%" y="933" width="0.0801%" height="15" fill="rgb(210,26,41)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.08%)</title><rect x="88.8526%" y="917" width="0.0801%" height="15" fill="rgb(220,221,6)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.08%)</title><rect x="88.8526%" y="901" width="0.0801%" height="15" fill="rgb(225,89,49)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="911.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.08%)</title><rect x="88.8526%" y="885" width="0.0801%" height="15" fill="rgb(218,70,45)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="895.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.08%)</title><rect x="88.8526%" y="869" width="0.0801%" height="15" fill="rgb(238,166,21)" fg:x="14427" fg:w="13"/><text x="89.1026%" y="879.50"></text></g><g><title>_int_malloc (5 samples, 0.03%)</title><rect x="88.9019%" y="853" width="0.0308%" height="15" fill="rgb(224,141,44)" fg:x="14435" fg:w="5"/><text x="89.1519%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.02%)</title><rect x="88.9327%" y="949" width="0.0246%" height="15" fill="rgb(230,12,49)" fg:x="14440" fg:w="4"/><text x="89.1827%" y="959.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (11 samples, 0.07%)</title><rect x="88.9573%" y="869" width="0.0677%" height="15" fill="rgb(212,174,12)" fg:x="14444" fg:w="11"/><text x="89.2073%" y="879.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (9 samples, 0.06%)</title><rect x="88.9696%" y="853" width="0.0554%" height="15" fill="rgb(246,67,9)" fg:x="14446" fg:w="9"/><text x="89.2196%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (12 samples, 0.07%)</title><rect x="88.9573%" y="901" width="0.0739%" height="15" fill="rgb(239,35,23)" fg:x="14444" fg:w="12"/><text x="89.2073%" y="911.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (12 samples, 0.07%)</title><rect x="88.9573%" y="885" width="0.0739%" height="15" fill="rgb(211,167,0)" fg:x="14444" fg:w="12"/><text x="89.2073%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (2 samples, 0.01%)</title><rect x="89.0374%" y="853" width="0.0123%" height="15" fill="rgb(225,119,45)" fg:x="14457" fg:w="2"/><text x="89.2874%" y="863.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (18 samples, 0.11%)</title><rect x="88.9573%" y="933" width="0.1109%" height="15" fill="rgb(210,162,6)" fg:x="14444" fg:w="18"/><text x="89.2073%" y="943.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (18 samples, 0.11%)</title><rect x="88.9573%" y="917" width="0.1109%" height="15" fill="rgb(208,118,35)" fg:x="14444" fg:w="18"/><text x="89.2073%" y="927.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (6 samples, 0.04%)</title><rect x="89.0312%" y="901" width="0.0370%" height="15" fill="rgb(239,4,53)" fg:x="14456" fg:w="6"/><text x="89.2812%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="89.0374%" y="885" width="0.0308%" height="15" fill="rgb(213,130,21)" fg:x="14457" fg:w="5"/><text x="89.2874%" y="895.50"></text></g><g><title>arc_swap::debt::list::THREAD_HEAD::__getit (5 samples, 0.03%)</title><rect x="89.0374%" y="869" width="0.0308%" height="15" fill="rgb(235,148,0)" fg:x="14457" fg:w="5"/><text x="89.2874%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="89.0497%" y="853" width="0.0185%" height="15" fill="rgb(244,224,18)" fg:x="14459" fg:w="3"/><text x="89.2997%" y="863.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (88 samples, 0.54%)</title><rect x="89.2406%" y="901" width="0.5420%" height="15" fill="rgb(211,214,4)" fg:x="14490" fg:w="88"/><text x="89.4906%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 0.54%)</title><rect x="89.2468%" y="885" width="0.5358%" height="15" fill="rgb(206,119,25)" fg:x="14491" fg:w="87"/><text x="89.4968%" y="895.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (135 samples, 0.83%)</title><rect x="88.9573%" y="949" width="0.8314%" height="15" fill="rgb(243,93,47)" fg:x="14444" fg:w="135"/><text x="89.2073%" y="959.50"></text></g><g><title>arc_swap::Guard&lt;T,S&gt;::into_inner (117 samples, 0.72%)</title><rect x="89.0682%" y="933" width="0.7206%" height="15" fill="rgb(224,194,6)" fg:x="14462" fg:w="117"/><text x="89.3182%" y="943.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as arc_swap::strategy::sealed::Protected&lt;T&gt;&gt;::into_inner (117 samples, 0.72%)</title><rect x="89.0682%" y="917" width="0.7206%" height="15" fill="rgb(243,229,6)" fg:x="14462" fg:w="117"/><text x="89.3182%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (681 samples, 4.19%)</title><rect x="85.6193%" y="997" width="4.1941%" height="15" fill="rgb(207,23,50)" fg:x="13902" fg:w="681"/><text x="85.8693%" y="1007.50">&lt;core..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (681 samples, 4.19%)</title><rect x="85.6193%" y="981" width="4.1941%" height="15" fill="rgb(253,192,32)" fg:x="13902" fg:w="681"/><text x="85.8693%" y="991.50">scyll..</text></g><g><title>scylla::transport::cluster::Cluster::get_data (143 samples, 0.88%)</title><rect x="88.9327%" y="965" width="0.8807%" height="15" fill="rgb(213,21,6)" fg:x="14440" fg:w="143"/><text x="89.1827%" y="975.50"></text></g><g><title>scylla::transport::cluster::Cluster::get_data (4 samples, 0.02%)</title><rect x="89.7888%" y="949" width="0.0246%" height="15" fill="rgb(243,151,13)" fg:x="14579" fg:w="4"/><text x="90.0388%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::value::SerializedValues&gt; (58 samples, 0.36%)</title><rect x="89.8134%" y="997" width="0.3572%" height="15" fill="rgb(233,165,41)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (58 samples, 0.36%)</title><rect x="89.8134%" y="981" width="0.3572%" height="15" fill="rgb(246,176,45)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (58 samples, 0.36%)</title><rect x="89.8134%" y="965" width="0.3572%" height="15" fill="rgb(217,170,52)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.36%)</title><rect x="89.8134%" y="949" width="0.3572%" height="15" fill="rgb(214,203,54)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.36%)</title><rect x="89.8134%" y="933" width="0.3572%" height="15" fill="rgb(248,215,49)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.36%)</title><rect x="89.8134%" y="917" width="0.3572%" height="15" fill="rgb(208,46,10)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="927.50"></text></g><g><title>__GI___libc_free (58 samples, 0.36%)</title><rect x="89.8134%" y="901" width="0.3572%" height="15" fill="rgb(254,5,31)" fg:x="14583" fg:w="58"/><text x="90.0634%" y="911.50"></text></g><g><title>_int_free (35 samples, 0.22%)</title><rect x="89.9550%" y="885" width="0.2156%" height="15" fill="rgb(222,104,33)" fg:x="14606" fg:w="35"/><text x="90.2050%" y="895.50"></text></g><g><title>scylla::transport::connection::QueryResponse::into_query_result (19 samples, 0.12%)</title><rect x="90.1706%" y="997" width="0.1170%" height="15" fill="rgb(248,49,16)" fg:x="14641" fg:w="19"/><text x="90.4206%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::response::result::Result&gt; (11 samples, 0.07%)</title><rect x="90.2199%" y="981" width="0.0677%" height="15" fill="rgb(232,198,41)" fg:x="14649" fg:w="11"/><text x="90.4699%" y="991.50"></text></g><g><title>__GI___libc_free (15 samples, 0.09%)</title><rect x="90.3615%" y="933" width="0.0924%" height="15" fill="rgb(214,125,3)" fg:x="14672" fg:w="15"/><text x="90.6115%" y="943.50"></text></g><g><title>_int_free (4 samples, 0.02%)</title><rect x="90.4293%" y="917" width="0.0246%" height="15" fill="rgb(229,220,28)" fg:x="14683" fg:w="4"/><text x="90.6793%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (23 samples, 0.14%)</title><rect x="90.3615%" y="965" width="0.1417%" height="15" fill="rgb(222,64,37)" fg:x="14672" fg:w="23"/><text x="90.6115%" y="975.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (23 samples, 0.14%)</title><rect x="90.3615%" y="949" width="0.1417%" height="15" fill="rgb(249,184,13)" fg:x="14672" fg:w="23"/><text x="90.6115%" y="959.50"></text></g><g><title>bytes::bytes::promotable_even_drop (8 samples, 0.05%)</title><rect x="90.4539%" y="933" width="0.0493%" height="15" fill="rgb(252,176,6)" fg:x="14687" fg:w="8"/><text x="90.7039%" y="943.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8 samples, 0.05%)</title><rect x="90.4539%" y="917" width="0.0493%" height="15" fill="rgb(228,153,7)" fg:x="14687" fg:w="8"/><text x="90.7039%" y="927.50"></text></g><g><title>bytes::bytes::promotable_even_drop (2 samples, 0.01%)</title><rect x="90.4909%" y="901" width="0.0123%" height="15" fill="rgb(242,193,5)" fg:x="14693" fg:w="2"/><text x="90.7409%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.12%)</title><rect x="90.5524%" y="949" width="0.1170%" height="15" fill="rgb(232,140,9)" fg:x="14703" fg:w="19"/><text x="90.8024%" y="959.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (19 samples, 0.12%)</title><rect x="90.5524%" y="933" width="0.1170%" height="15" fill="rgb(213,222,16)" fg:x="14703" fg:w="19"/><text x="90.8024%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (19 samples, 0.12%)</title><rect x="90.5524%" y="917" width="0.1170%" height="15" fill="rgb(222,75,50)" fg:x="14703" fg:w="19"/><text x="90.8024%" y="927.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;i64&gt; as core::ops::arith::MulAssign&gt;::mul_assign (2 samples, 0.01%)</title><rect x="90.6756%" y="949" width="0.0123%" height="15" fill="rgb(205,180,2)" fg:x="14723" fg:w="2"/><text x="90.9256%" y="959.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;i64&gt; as core::ops::arith::Mul&gt;::mul (2 samples, 0.01%)</title><rect x="90.6756%" y="933" width="0.0123%" height="15" fill="rgb(216,34,7)" fg:x="14723" fg:w="2"/><text x="90.9256%" y="943.50"></text></g><g><title>core::num::&lt;impl i64&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="90.6756%" y="917" width="0.0123%" height="15" fill="rgb(253,16,32)" fg:x="14723" fg:w="2"/><text x="90.9256%" y="927.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;i64&gt; as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (5 samples, 0.03%)</title><rect x="90.6879%" y="949" width="0.0308%" height="15" fill="rgb(208,97,28)" fg:x="14725" fg:w="5"/><text x="90.9379%" y="959.50"></text></g><g><title>core::num::&lt;impl i64&gt;::wrapping_shl (5 samples, 0.03%)</title><rect x="90.6879%" y="933" width="0.0308%" height="15" fill="rgb(225,92,11)" fg:x="14725" fg:w="5"/><text x="90.9379%" y="943.50"></text></g><g><title>scylla::routing::fmix (3 samples, 0.02%)</title><rect x="90.7249%" y="949" width="0.0185%" height="15" fill="rgb(243,38,12)" fg:x="14731" fg:w="3"/><text x="90.9749%" y="959.50"></text></g><g><title>scylla::routing::murmur3_token (65 samples, 0.40%)</title><rect x="90.3492%" y="981" width="0.4003%" height="15" fill="rgb(208,139,16)" fg:x="14670" fg:w="65"/><text x="90.5992%" y="991.50"></text></g><g><title>scylla::routing::hash3_x64_128 (40 samples, 0.25%)</title><rect x="90.5032%" y="965" width="0.2464%" height="15" fill="rgb(227,24,9)" fg:x="14695" fg:w="40"/><text x="90.7532%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (836 samples, 5.15%)</title><rect x="85.6193%" y="1029" width="5.1487%" height="15" fill="rgb(206,62,11)" fg:x="13902" fg:w="836"/><text x="85.8693%" y="1039.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (836 samples, 5.15%)</title><rect x="85.6193%" y="1013" width="5.1487%" height="15" fill="rgb(228,134,27)" fg:x="13902" fg:w="836"/><text x="85.8693%" y="1023.50">scylla..</text></g><g><title>scylla::transport::session::calculate_token (78 samples, 0.48%)</title><rect x="90.2876%" y="997" width="0.4804%" height="15" fill="rgb(205,55,33)" fg:x="14660" fg:w="78"/><text x="90.5376%" y="1007.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (3 samples, 0.02%)</title><rect x="90.7495%" y="981" width="0.0185%" height="15" fill="rgb(243,75,43)" fg:x="14735" fg:w="3"/><text x="90.9995%" y="991.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (841 samples, 5.18%)</title><rect x="85.6193%" y="1925" width="5.1795%" height="15" fill="rgb(223,27,42)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1935.50">std::s..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1909" width="5.1795%" height="15" fill="rgb(232,189,33)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1919.50">tokio:..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (841 samples, 5.18%)</title><rect x="85.6193%" y="1893" width="5.1795%" height="15" fill="rgb(210,9,39)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1903.50">tokio:..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (841 samples, 5.18%)</title><rect x="85.6193%" y="1877" width="5.1795%" height="15" fill="rgb(242,85,26)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1887.50">tokio:..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1861" width="5.1795%" height="15" fill="rgb(248,44,4)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1871.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1845" width="5.1795%" height="15" fill="rgb(250,96,46)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1855.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (841 samples, 5.18%)</title><rect x="85.6193%" y="1829" width="5.1795%" height="15" fill="rgb(229,116,26)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1839.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::poll_future (841 samples, 5.18%)</title><rect x="85.6193%" y="1813" width="5.1795%" height="15" fill="rgb(246,94,34)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1823.50">tokio:..</text></g><g><title>std::panic::catch_unwind (841 samples, 5.18%)</title><rect x="85.6193%" y="1797" width="5.1795%" height="15" fill="rgb(251,73,21)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1807.50">std::p..</text></g><g><title>std::panicking::try (841 samples, 5.18%)</title><rect x="85.6193%" y="1781" width="5.1795%" height="15" fill="rgb(254,121,25)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1791.50">std::p..</text></g><g><title>std::panicking::try::do_call (841 samples, 5.18%)</title><rect x="85.6193%" y="1765" width="5.1795%" height="15" fill="rgb(215,161,49)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1775.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (841 samples, 5.18%)</title><rect x="85.6193%" y="1749" width="5.1795%" height="15" fill="rgb(221,43,13)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1759.50">&lt;core:..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1733" width="5.1795%" height="15" fill="rgb(249,5,37)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1743.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1717" width="5.1795%" height="15" fill="rgb(226,25,44)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1727.50">tokio:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (841 samples, 5.18%)</title><rect x="85.6193%" y="1701" width="5.1795%" height="15" fill="rgb(238,189,16)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1711.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1685" width="5.1795%" height="15" fill="rgb(251,186,8)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1695.50">tokio:..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1669" width="5.1795%" height="15" fill="rgb(254,34,31)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1679.50">&lt;tokio..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1653" width="5.1795%" height="15" fill="rgb(225,215,27)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1663.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::run (841 samples, 5.18%)</title><rect x="85.6193%" y="1637" width="5.1795%" height="15" fill="rgb(221,192,48)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1647.50">tokio:..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (841 samples, 5.18%)</title><rect x="85.6193%" y="1621" width="5.1795%" height="15" fill="rgb(219,137,20)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1631.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1605" width="5.1795%" height="15" fill="rgb(219,84,11)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1615.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (841 samples, 5.18%)</title><rect x="85.6193%" y="1589" width="5.1795%" height="15" fill="rgb(224,10,23)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1599.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (841 samples, 5.18%)</title><rect x="85.6193%" y="1573" width="5.1795%" height="15" fill="rgb(248,22,39)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1583.50">tokio:..</text></g><g><title>tokio::coop::budget (841 samples, 5.18%)</title><rect x="85.6193%" y="1557" width="5.1795%" height="15" fill="rgb(212,154,20)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1567.50">tokio:..</text></g><g><title>tokio::coop::with_budget (841 samples, 5.18%)</title><rect x="85.6193%" y="1541" width="5.1795%" height="15" fill="rgb(236,199,50)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1551.50">tokio:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (841 samples, 5.18%)</title><rect x="85.6193%" y="1525" width="5.1795%" height="15" fill="rgb(211,9,17)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1535.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (841 samples, 5.18%)</title><rect x="85.6193%" y="1509" width="5.1795%" height="15" fill="rgb(243,216,36)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1519.50">std::t..</text></g><g><title>tokio::coop::with_budget::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1493" width="5.1795%" height="15" fill="rgb(250,2,10)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1503.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1477" width="5.1795%" height="15" fill="rgb(226,50,48)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1487.50">tokio:..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (841 samples, 5.18%)</title><rect x="85.6193%" y="1461" width="5.1795%" height="15" fill="rgb(243,81,16)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1471.50">tokio:..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1445" width="5.1795%" height="15" fill="rgb(250,14,2)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1455.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1429" width="5.1795%" height="15" fill="rgb(233,135,29)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1439.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (841 samples, 5.18%)</title><rect x="85.6193%" y="1413" width="5.1795%" height="15" fill="rgb(224,64,43)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1423.50">tokio:..</text></g><g><title>tokio::runtime::task::harness::poll_future (841 samples, 5.18%)</title><rect x="85.6193%" y="1397" width="5.1795%" height="15" fill="rgb(238,84,13)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1407.50">tokio:..</text></g><g><title>std::panic::catch_unwind (841 samples, 5.18%)</title><rect x="85.6193%" y="1381" width="5.1795%" height="15" fill="rgb(253,48,26)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1391.50">std::p..</text></g><g><title>std::panicking::try (841 samples, 5.18%)</title><rect x="85.6193%" y="1365" width="5.1795%" height="15" fill="rgb(205,223,31)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1375.50">std::p..</text></g><g><title>std::panicking::try::do_call (841 samples, 5.18%)</title><rect x="85.6193%" y="1349" width="5.1795%" height="15" fill="rgb(221,41,32)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1359.50">std::p..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (841 samples, 5.18%)</title><rect x="85.6193%" y="1333" width="5.1795%" height="15" fill="rgb(213,158,31)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1343.50">&lt;core:..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1317" width="5.1795%" height="15" fill="rgb(245,126,43)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1327.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1301" width="5.1795%" height="15" fill="rgb(227,7,22)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1311.50">tokio:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (841 samples, 5.18%)</title><rect x="85.6193%" y="1285" width="5.1795%" height="15" fill="rgb(252,90,44)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1295.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1269" width="5.1795%" height="15" fill="rgb(253,91,0)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1279.50">tokio:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1253" width="5.1795%" height="15" fill="rgb(252,175,49)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1263.50">&lt;core:..</text></g><g><title>latte::req_stream::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1237" width="5.1795%" height="15" fill="rgb(246,150,1)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1247.50">latte:..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1221" width="5.1795%" height="15" fill="rgb(241,192,25)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1231.50">&lt;futur..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (841 samples, 5.18%)</title><rect x="85.6193%" y="1205" width="5.1795%" height="15" fill="rgb(239,187,11)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1215.50">future..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (841 samples, 5.18%)</title><rect x="85.6193%" y="1189" width="5.1795%" height="15" fill="rgb(218,202,51)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1199.50">&lt;futur..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (841 samples, 5.18%)</title><rect x="85.6193%" y="1173" width="5.1795%" height="15" fill="rgb(225,176,8)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1183.50">future..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (841 samples, 5.18%)</title><rect x="85.6193%" y="1157" width="5.1795%" height="15" fill="rgb(219,122,41)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1167.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1141" width="5.1795%" height="15" fill="rgb(248,140,20)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1151.50">&lt;core:..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1125" width="5.1795%" height="15" fill="rgb(245,41,37)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1135.50">latte:..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1109" width="5.1795%" height="15" fill="rgb(235,82,39)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1119.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1093" width="5.1795%" height="15" fill="rgb(230,108,42)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1103.50">&lt;core:..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1077" width="5.1795%" height="15" fill="rgb(215,150,50)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1087.50">&lt;latte..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (841 samples, 5.18%)</title><rect x="85.6193%" y="1061" width="5.1795%" height="15" fill="rgb(233,212,5)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1071.50">&lt;core:..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (841 samples, 5.18%)</title><rect x="85.6193%" y="1045" width="5.1795%" height="15" fill="rgb(245,80,22)" fg:x="13902" fg:w="841"/><text x="85.8693%" y="1055.50">scylla..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}&gt;&gt; (5 samples, 0.03%)</title><rect x="90.7680%" y="1029" width="0.0308%" height="15" fill="rgb(238,129,16)" fg:x="14738" fg:w="5"/><text x="91.0180%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.02%)</title><rect x="90.8296%" y="1253" width="0.0185%" height="15" fill="rgb(240,19,0)" fg:x="14748" fg:w="3"/><text x="91.0796%" y="1263.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="90.8357%" y="1237" width="0.0123%" height="15" fill="rgb(232,42,35)" fg:x="14749" fg:w="2"/><text x="91.0857%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.01%)</title><rect x="90.8727%" y="1189" width="0.0123%" height="15" fill="rgb(223,130,24)" fg:x="14755" fg:w="2"/><text x="91.1227%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="90.8481%" y="1237" width="0.0739%" height="15" fill="rgb(237,16,22)" fg:x="14751" fg:w="12"/><text x="91.0981%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="90.8481%" y="1221" width="0.0739%" height="15" fill="rgb(248,192,20)" fg:x="14751" fg:w="12"/><text x="91.0981%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.07%)</title><rect x="90.8481%" y="1205" width="0.0739%" height="15" fill="rgb(233,167,2)" fg:x="14751" fg:w="12"/><text x="91.0981%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.04%)</title><rect x="90.8850%" y="1189" width="0.0370%" height="15" fill="rgb(252,71,44)" fg:x="14757" fg:w="6"/><text x="91.1350%" y="1199.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.02%)</title><rect x="90.9035%" y="1173" width="0.0185%" height="15" fill="rgb(238,37,47)" fg:x="14760" fg:w="3"/><text x="91.1535%" y="1183.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.10%)</title><rect x="90.8481%" y="1253" width="0.1047%" height="15" fill="rgb(214,202,54)" fg:x="14751" fg:w="17"/><text x="91.0981%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.03%)</title><rect x="90.9220%" y="1237" width="0.0308%" height="15" fill="rgb(254,165,40)" fg:x="14763" fg:w="5"/><text x="91.1720%" y="1247.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (4 samples, 0.02%)</title><rect x="90.9281%" y="1221" width="0.0246%" height="15" fill="rgb(246,173,38)" fg:x="14764" fg:w="4"/><text x="91.1781%" y="1231.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.02%)</title><rect x="90.9343%" y="1205" width="0.0185%" height="15" fill="rgb(215,3,27)" fg:x="14765" fg:w="3"/><text x="91.1843%" y="1215.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.02%)</title><rect x="90.9343%" y="1189" width="0.0185%" height="15" fill="rgb(239,169,51)" fg:x="14765" fg:w="3"/><text x="91.1843%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="90.9589%" y="1205" width="0.0123%" height="15" fill="rgb(212,5,25)" fg:x="14769" fg:w="2"/><text x="91.2089%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="90.9589%" y="1237" width="0.0308%" height="15" fill="rgb(243,45,17)" fg:x="14769" fg:w="5"/><text x="91.2089%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="90.9589%" y="1221" width="0.0308%" height="15" fill="rgb(242,97,9)" fg:x="14769" fg:w="5"/><text x="91.2089%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.01%)</title><rect x="90.9774%" y="1205" width="0.0123%" height="15" fill="rgb(228,71,31)" fg:x="14772" fg:w="2"/><text x="91.2274%" y="1215.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.01%)</title><rect x="90.9774%" y="1189" width="0.0123%" height="15" fill="rgb(252,184,16)" fg:x="14772" fg:w="2"/><text x="91.2274%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.07%)</title><rect x="90.9528%" y="1253" width="0.0739%" height="15" fill="rgb(236,169,46)" fg:x="14768" fg:w="12"/><text x="91.2028%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.04%)</title><rect x="90.9897%" y="1237" width="0.0370%" height="15" fill="rgb(207,17,47)" fg:x="14774" fg:w="6"/><text x="91.2397%" y="1247.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.04%)</title><rect x="90.9897%" y="1221" width="0.0370%" height="15" fill="rgb(206,201,28)" fg:x="14774" fg:w="6"/><text x="91.2397%" y="1231.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.04%)</title><rect x="90.9897%" y="1205" width="0.0370%" height="15" fill="rgb(224,184,23)" fg:x="14774" fg:w="6"/><text x="91.2397%" y="1215.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.03%)</title><rect x="90.9959%" y="1189" width="0.0308%" height="15" fill="rgb(208,139,48)" fg:x="14775" fg:w="5"/><text x="91.2459%" y="1199.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.03%)</title><rect x="90.9959%" y="1173" width="0.0308%" height="15" fill="rgb(208,130,10)" fg:x="14775" fg:w="5"/><text x="91.2459%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.03%)</title><rect x="90.9959%" y="1157" width="0.0308%" height="15" fill="rgb(211,213,45)" fg:x="14775" fg:w="5"/><text x="91.2459%" y="1167.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.03%)</title><rect x="90.9959%" y="1141" width="0.0308%" height="15" fill="rgb(235,100,30)" fg:x="14775" fg:w="5"/><text x="91.2459%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.23%)</title><rect x="90.7988%" y="1317" width="0.2340%" height="15" fill="rgb(206,144,31)" fg:x="14743" fg:w="38"/><text x="91.0488%" y="1327.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.23%)</title><rect x="90.7988%" y="1301" width="0.2340%" height="15" fill="rgb(224,200,26)" fg:x="14743" fg:w="38"/><text x="91.0488%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (38 samples, 0.23%)</title><rect x="90.7988%" y="1285" width="0.2340%" height="15" fill="rgb(247,104,53)" fg:x="14743" fg:w="38"/><text x="91.0488%" y="1295.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (38 samples, 0.23%)</title><rect x="90.7988%" y="1269" width="0.2340%" height="15" fill="rgb(220,14,17)" fg:x="14743" fg:w="38"/><text x="91.0488%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.24%)</title><rect x="90.7988%" y="1925" width="0.2402%" height="15" fill="rgb(230,140,40)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1935.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.24%)</title><rect x="90.7988%" y="1909" width="0.2402%" height="15" fill="rgb(229,2,41)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1919.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1893" width="0.2402%" height="15" fill="rgb(232,89,16)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1877" width="0.2402%" height="15" fill="rgb(247,59,52)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1887.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (39 samples, 0.24%)</title><rect x="90.7988%" y="1861" width="0.2402%" height="15" fill="rgb(226,110,21)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1871.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1845" width="0.2402%" height="15" fill="rgb(224,176,43)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1855.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1829" width="0.2402%" height="15" fill="rgb(221,73,6)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (39 samples, 0.24%)</title><rect x="90.7988%" y="1813" width="0.2402%" height="15" fill="rgb(232,78,19)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (39 samples, 0.24%)</title><rect x="90.7988%" y="1797" width="0.2402%" height="15" fill="rgb(233,112,48)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.24%)</title><rect x="90.7988%" y="1781" width="0.2402%" height="15" fill="rgb(243,131,47)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1791.50"></text></g><g><title>std::panicking::try (39 samples, 0.24%)</title><rect x="90.7988%" y="1765" width="0.2402%" height="15" fill="rgb(226,51,1)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.24%)</title><rect x="90.7988%" y="1749" width="0.2402%" height="15" fill="rgb(247,58,7)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1759.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (39 samples, 0.24%)</title><rect x="90.7988%" y="1733" width="0.2402%" height="15" fill="rgb(209,7,32)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1717" width="0.2402%" height="15" fill="rgb(209,39,41)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1727.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1701" width="0.2402%" height="15" fill="rgb(226,182,46)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1711.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (39 samples, 0.24%)</title><rect x="90.7988%" y="1685" width="0.2402%" height="15" fill="rgb(230,219,10)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1669" width="0.2402%" height="15" fill="rgb(227,175,30)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1679.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1653" width="0.2402%" height="15" fill="rgb(217,2,50)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1663.50"></text></g><g><title>latte::req_stream::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1637" width="0.2402%" height="15" fill="rgb(229,160,0)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1647.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1621" width="0.2402%" height="15" fill="rgb(207,78,37)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1631.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (39 samples, 0.24%)</title><rect x="90.7988%" y="1605" width="0.2402%" height="15" fill="rgb(225,57,0)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1615.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 0.24%)</title><rect x="90.7988%" y="1589" width="0.2402%" height="15" fill="rgb(232,154,2)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1599.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (39 samples, 0.24%)</title><rect x="90.7988%" y="1573" width="0.2402%" height="15" fill="rgb(241,212,25)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (39 samples, 0.24%)</title><rect x="90.7988%" y="1557" width="0.2402%" height="15" fill="rgb(226,69,20)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1567.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1541" width="0.2402%" height="15" fill="rgb(247,184,54)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1551.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1525" width="0.2402%" height="15" fill="rgb(210,145,0)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1535.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1509" width="0.2402%" height="15" fill="rgb(253,82,12)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1493" width="0.2402%" height="15" fill="rgb(245,42,11)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1503.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1477" width="0.2402%" height="15" fill="rgb(219,147,32)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1461" width="0.2402%" height="15" fill="rgb(246,12,7)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1471.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1445" width="0.2402%" height="15" fill="rgb(243,50,9)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1429" width="0.2402%" height="15" fill="rgb(219,149,6)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1439.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1413" width="0.2402%" height="15" fill="rgb(241,51,42)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.24%)</title><rect x="90.7988%" y="1397" width="0.2402%" height="15" fill="rgb(226,128,27)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1407.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (39 samples, 0.24%)</title><rect x="90.7988%" y="1381" width="0.2402%" height="15" fill="rgb(244,144,4)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1391.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (39 samples, 0.24%)</title><rect x="90.7988%" y="1365" width="0.2402%" height="15" fill="rgb(221,4,13)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.24%)</title><rect x="90.7988%" y="1349" width="0.2402%" height="15" fill="rgb(208,170,28)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 0.24%)</title><rect x="90.7988%" y="1333" width="0.2402%" height="15" fill="rgb(226,131,13)" fg:x="14743" fg:w="39"/><text x="91.0488%" y="1343.50"></text></g><g><title>syscall_return_via_sysret (2 samples, 0.01%)</title><rect x="91.0390%" y="1925" width="0.0123%" height="15" fill="rgb(215,72,41)" fg:x="14782" fg:w="2"/><text x="91.2890%" y="1935.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="91.0575%" y="1189" width="0.0308%" height="15" fill="rgb(243,108,20)" fg:x="14785" fg:w="5"/><text x="91.3075%" y="1199.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (5 samples, 0.03%)</title><rect x="91.0575%" y="1173" width="0.0308%" height="15" fill="rgb(230,189,17)" fg:x="14785" fg:w="5"/><text x="91.3075%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="91.0575%" y="1157" width="0.0308%" height="15" fill="rgb(220,50,17)" fg:x="14785" fg:w="5"/><text x="91.3075%" y="1167.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.03%)</title><rect x="91.0575%" y="1141" width="0.0308%" height="15" fill="rgb(248,152,48)" fg:x="14785" fg:w="5"/><text x="91.3075%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="91.0575%" y="1125" width="0.0308%" height="15" fill="rgb(244,91,11)" fg:x="14785" fg:w="5"/><text x="91.3075%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (11 samples, 0.07%)</title><rect x="91.0883%" y="1157" width="0.0677%" height="15" fill="rgb(220,157,5)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.07%)</title><rect x="91.0883%" y="1141" width="0.0677%" height="15" fill="rgb(253,137,8)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.07%)</title><rect x="91.0883%" y="1125" width="0.0677%" height="15" fill="rgb(217,137,51)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.07%)</title><rect x="91.0883%" y="1109" width="0.0677%" height="15" fill="rgb(218,209,53)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.07%)</title><rect x="91.0883%" y="1093" width="0.0677%" height="15" fill="rgb(249,137,25)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1103.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.07%)</title><rect x="91.0883%" y="1077" width="0.0677%" height="15" fill="rgb(239,155,26)" fg:x="14790" fg:w="11"/><text x="91.3383%" y="1087.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="91.1437%" y="1061" width="0.0123%" height="15" fill="rgb(227,85,46)" fg:x="14799" fg:w="2"/><text x="91.3937%" y="1071.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (14 samples, 0.09%)</title><rect x="91.0883%" y="1173" width="0.0862%" height="15" fill="rgb(251,107,43)" fg:x="14790" fg:w="14"/><text x="91.3383%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (3 samples, 0.02%)</title><rect x="91.1560%" y="1157" width="0.0185%" height="15" fill="rgb(234,170,33)" fg:x="14801" fg:w="3"/><text x="91.4060%" y="1167.50"></text></g><g><title>core::slice::rotate::ptr_rotate (3 samples, 0.02%)</title><rect x="91.1560%" y="1141" width="0.0185%" height="15" fill="rgb(206,29,35)" fg:x="14801" fg:w="3"/><text x="91.4060%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (20 samples, 0.12%)</title><rect x="91.1745%" y="1077" width="0.1232%" height="15" fill="rgb(227,138,25)" fg:x="14804" fg:w="20"/><text x="91.4245%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (20 samples, 0.12%)</title><rect x="91.1745%" y="1061" width="0.1232%" height="15" fill="rgb(249,131,35)" fg:x="14804" fg:w="20"/><text x="91.4245%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (20 samples, 0.12%)</title><rect x="91.1745%" y="1045" width="0.1232%" height="15" fill="rgb(239,6,40)" fg:x="14804" fg:w="20"/><text x="91.4245%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.07%)</title><rect x="91.2299%" y="1029" width="0.0677%" height="15" fill="rgb(246,136,47)" fg:x="14813" fg:w="11"/><text x="91.4799%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.04%)</title><rect x="91.2545%" y="1013" width="0.0431%" height="15" fill="rgb(253,58,26)" fg:x="14817" fg:w="7"/><text x="91.5045%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.01%)</title><rect x="91.2977%" y="1077" width="0.0123%" height="15" fill="rgb(237,141,10)" fg:x="14824" fg:w="2"/><text x="91.5477%" y="1087.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.01%)</title><rect x="91.2977%" y="1061" width="0.0123%" height="15" fill="rgb(234,156,12)" fg:x="14824" fg:w="2"/><text x="91.5477%" y="1071.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.01%)</title><rect x="91.2977%" y="1045" width="0.0123%" height="15" fill="rgb(243,224,36)" fg:x="14824" fg:w="2"/><text x="91.5477%" y="1055.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.01%)</title><rect x="91.2977%" y="1029" width="0.0123%" height="15" fill="rgb(205,229,51)" fg:x="14824" fg:w="2"/><text x="91.5477%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="91.3777%" y="1013" width="0.0123%" height="15" fill="rgb(223,189,4)" fg:x="14837" fg:w="2"/><text x="91.6277%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.10%)</title><rect x="91.3161%" y="1061" width="0.0985%" height="15" fill="rgb(249,167,54)" fg:x="14827" fg:w="16"/><text x="91.5661%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.10%)</title><rect x="91.3161%" y="1045" width="0.0985%" height="15" fill="rgb(218,34,28)" fg:x="14827" fg:w="16"/><text x="91.5661%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.10%)</title><rect x="91.3161%" y="1029" width="0.0985%" height="15" fill="rgb(232,109,42)" fg:x="14827" fg:w="16"/><text x="91.5661%" y="1039.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.02%)</title><rect x="91.3900%" y="1013" width="0.0246%" height="15" fill="rgb(248,214,46)" fg:x="14839" fg:w="4"/><text x="91.6400%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="91.3962%" y="997" width="0.0185%" height="15" fill="rgb(244,216,40)" fg:x="14840" fg:w="3"/><text x="91.6462%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.13%)</title><rect x="91.3100%" y="1077" width="0.1293%" height="15" fill="rgb(231,226,31)" fg:x="14826" fg:w="21"/><text x="91.5600%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.02%)</title><rect x="91.4147%" y="1061" width="0.0246%" height="15" fill="rgb(238,38,43)" fg:x="14843" fg:w="4"/><text x="91.6647%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="91.4147%" y="1045" width="0.0246%" height="15" fill="rgb(208,88,43)" fg:x="14843" fg:w="4"/><text x="91.6647%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="91.4147%" y="1029" width="0.0246%" height="15" fill="rgb(205,136,37)" fg:x="14843" fg:w="4"/><text x="91.6647%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="91.4147%" y="1013" width="0.0246%" height="15" fill="rgb(237,34,14)" fg:x="14843" fg:w="4"/><text x="91.6647%" y="1023.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="91.4270%" y="997" width="0.0123%" height="15" fill="rgb(236,193,44)" fg:x="14845" fg:w="2"/><text x="91.6770%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (44 samples, 0.27%)</title><rect x="91.1745%" y="1173" width="0.2710%" height="15" fill="rgb(231,48,10)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1183.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan::{{closure}} (44 samples, 0.27%)</title><rect x="91.1745%" y="1157" width="0.2710%" height="15" fill="rgb(213,141,34)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.27%)</title><rect x="91.1745%" y="1141" width="0.2710%" height="15" fill="rgb(249,130,34)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.27%)</title><rect x="91.1745%" y="1125" width="0.2710%" height="15" fill="rgb(219,42,41)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.27%)</title><rect x="91.1745%" y="1109" width="0.2710%" height="15" fill="rgb(224,100,54)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (44 samples, 0.27%)</title><rect x="91.1745%" y="1093" width="0.2710%" height="15" fill="rgb(229,200,27)" fg:x="14804" fg:w="44"/><text x="91.4245%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (3 samples, 0.02%)</title><rect x="91.5132%" y="1093" width="0.0185%" height="15" fill="rgb(217,118,10)" fg:x="14859" fg:w="3"/><text x="91.7632%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (3 samples, 0.02%)</title><rect x="91.5132%" y="1077" width="0.0185%" height="15" fill="rgb(206,22,3)" fg:x="14859" fg:w="3"/><text x="91.7632%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (7 samples, 0.04%)</title><rect x="91.5317%" y="1093" width="0.0431%" height="15" fill="rgb(232,163,46)" fg:x="14862" fg:w="7"/><text x="91.7817%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (7 samples, 0.04%)</title><rect x="91.5317%" y="1077" width="0.0431%" height="15" fill="rgb(206,95,13)" fg:x="14862" fg:w="7"/><text x="91.7817%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (7 samples, 0.04%)</title><rect x="91.5317%" y="1061" width="0.0431%" height="15" fill="rgb(253,154,18)" fg:x="14862" fg:w="7"/><text x="91.7817%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_upper_bound_edge (2 samples, 0.01%)</title><rect x="91.5748%" y="1093" width="0.0123%" height="15" fill="rgb(219,32,23)" fg:x="14869" fg:w="2"/><text x="91.8248%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_upper_bound_index (2 samples, 0.01%)</title><rect x="91.5748%" y="1077" width="0.0123%" height="15" fill="rgb(230,191,45)" fg:x="14869" fg:w="2"/><text x="91.8248%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2 samples, 0.01%)</title><rect x="91.5748%" y="1061" width="0.0123%" height="15" fill="rgb(229,64,36)" fg:x="14869" fg:w="2"/><text x="91.8248%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::descend (2 samples, 0.01%)</title><rect x="91.6179%" y="1077" width="0.0123%" height="15" fill="rgb(205,129,25)" fg:x="14876" fg:w="2"/><text x="91.8679%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.01%)</title><rect x="91.6179%" y="1061" width="0.0123%" height="15" fill="rgb(254,112,7)" fg:x="14876" fg:w="2"/><text x="91.8679%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.01%)</title><rect x="91.6179%" y="1045" width="0.0123%" height="15" fill="rgb(226,53,48)" fg:x="14876" fg:w="2"/><text x="91.8679%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (2 samples, 0.01%)</title><rect x="91.6179%" y="1029" width="0.0123%" height="15" fill="rgb(214,153,38)" fg:x="14876" fg:w="2"/><text x="91.8679%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (7 samples, 0.04%)</title><rect x="91.7226%" y="1045" width="0.0431%" height="15" fill="rgb(243,101,7)" fg:x="14893" fg:w="7"/><text x="91.9726%" y="1055.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (31 samples, 0.19%)</title><rect x="91.5871%" y="1093" width="0.1909%" height="15" fill="rgb(240,140,22)" fg:x="14871" fg:w="31"/><text x="91.8371%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (24 samples, 0.15%)</title><rect x="91.6302%" y="1077" width="0.1478%" height="15" fill="rgb(235,114,2)" fg:x="14878" fg:w="24"/><text x="91.8802%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (24 samples, 0.15%)</title><rect x="91.6302%" y="1061" width="0.1478%" height="15" fill="rgb(242,59,12)" fg:x="14878" fg:w="24"/><text x="91.8802%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2 samples, 0.01%)</title><rect x="91.7657%" y="1045" width="0.0123%" height="15" fill="rgb(252,134,9)" fg:x="14900" fg:w="2"/><text x="92.0157%" y="1055.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (51 samples, 0.31%)</title><rect x="91.4701%" y="1109" width="0.3141%" height="15" fill="rgb(236,4,44)" fg:x="14852" fg:w="51"/><text x="91.7201%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.73%)</title><rect x="91.0575%" y="1221" width="0.7329%" height="15" fill="rgb(254,172,41)" fg:x="14785" fg:w="119"/><text x="91.3075%" y="1231.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (119 samples, 0.73%)</title><rect x="91.0575%" y="1205" width="0.7329%" height="15" fill="rgb(244,63,20)" fg:x="14785" fg:w="119"/><text x="91.3075%" y="1215.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (114 samples, 0.70%)</title><rect x="91.0883%" y="1189" width="0.7021%" height="15" fill="rgb(250,73,31)" fg:x="14790" fg:w="114"/><text x="91.3383%" y="1199.50"></text></g><g><title>scylla::transport::load_balancing::token_aware::TokenAwarePolicy::simple_strategy_replicas (56 samples, 0.34%)</title><rect x="91.4455%" y="1173" width="0.3449%" height="15" fill="rgb(241,38,36)" fg:x="14848" fg:w="56"/><text x="91.6955%" y="1183.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range (56 samples, 0.34%)</title><rect x="91.4455%" y="1157" width="0.3449%" height="15" fill="rgb(245,211,2)" fg:x="14848" fg:w="56"/><text x="91.6955%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::range (56 samples, 0.34%)</title><rect x="91.4455%" y="1141" width="0.3449%" height="15" fill="rgb(206,120,28)" fg:x="14848" fg:w="56"/><text x="91.6955%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (56 samples, 0.34%)</title><rect x="91.4455%" y="1125" width="0.3449%" height="15" fill="rgb(211,59,34)" fg:x="14848" fg:w="56"/><text x="91.6955%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="91.7965%" y="1077" width="0.0123%" height="15" fill="rgb(233,168,5)" fg:x="14905" fg:w="2"/><text x="92.0465%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (10 samples, 0.06%)</title><rect x="91.8150%" y="1077" width="0.0616%" height="15" fill="rgb(234,33,13)" fg:x="14908" fg:w="10"/><text x="92.0650%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 0.12%)</title><rect x="91.7904%" y="1093" width="0.1232%" height="15" fill="rgb(231,150,26)" fg:x="14904" fg:w="20"/><text x="92.0404%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="91.8766%" y="1077" width="0.0370%" height="15" fill="rgb(217,191,4)" fg:x="14918" fg:w="6"/><text x="92.1266%" y="1087.50"></text></g><g><title>__rust_alloc (4 samples, 0.02%)</title><rect x="91.8889%" y="1061" width="0.0246%" height="15" fill="rgb(246,198,38)" fg:x="14920" fg:w="4"/><text x="92.1389%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (142 samples, 0.87%)</title><rect x="91.0575%" y="1925" width="0.8745%" height="15" fill="rgb(245,64,37)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1935.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1909" width="0.8745%" height="15" fill="rgb(250,30,36)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1919.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1893" width="0.8745%" height="15" fill="rgb(217,86,53)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1877" width="0.8745%" height="15" fill="rgb(228,157,16)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (142 samples, 0.87%)</title><rect x="91.0575%" y="1861" width="0.8745%" height="15" fill="rgb(217,59,31)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1871.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (142 samples, 0.87%)</title><rect x="91.0575%" y="1845" width="0.8745%" height="15" fill="rgb(237,138,41)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1855.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1829" width="0.8745%" height="15" fill="rgb(227,91,49)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (142 samples, 0.87%)</title><rect x="91.0575%" y="1813" width="0.8745%" height="15" fill="rgb(247,21,44)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1823.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (142 samples, 0.87%)</title><rect x="91.0575%" y="1797" width="0.8745%" height="15" fill="rgb(219,210,51)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1807.50"></text></g><g><title>tokio::coop::budget (142 samples, 0.87%)</title><rect x="91.0575%" y="1781" width="0.8745%" height="15" fill="rgb(209,140,6)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1791.50"></text></g><g><title>tokio::coop::with_budget (142 samples, 0.87%)</title><rect x="91.0575%" y="1765" width="0.8745%" height="15" fill="rgb(221,188,24)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1775.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (142 samples, 0.87%)</title><rect x="91.0575%" y="1749" width="0.8745%" height="15" fill="rgb(232,154,20)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (142 samples, 0.87%)</title><rect x="91.0575%" y="1733" width="0.8745%" height="15" fill="rgb(244,137,50)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1743.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1717" width="0.8745%" height="15" fill="rgb(225,185,43)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1727.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1701" width="0.8745%" height="15" fill="rgb(213,205,38)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1711.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (142 samples, 0.87%)</title><rect x="91.0575%" y="1685" width="0.8745%" height="15" fill="rgb(236,73,12)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1695.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1669" width="0.8745%" height="15" fill="rgb(235,219,13)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1653" width="0.8745%" height="15" fill="rgb(218,59,36)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (142 samples, 0.87%)</title><rect x="91.0575%" y="1637" width="0.8745%" height="15" fill="rgb(205,110,39)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (142 samples, 0.87%)</title><rect x="91.0575%" y="1621" width="0.8745%" height="15" fill="rgb(218,206,42)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1631.50"></text></g><g><title>std::panic::catch_unwind (142 samples, 0.87%)</title><rect x="91.0575%" y="1605" width="0.8745%" height="15" fill="rgb(248,125,24)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1615.50"></text></g><g><title>std::panicking::try (142 samples, 0.87%)</title><rect x="91.0575%" y="1589" width="0.8745%" height="15" fill="rgb(242,28,27)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1599.50"></text></g><g><title>std::panicking::try::do_call (142 samples, 0.87%)</title><rect x="91.0575%" y="1573" width="0.8745%" height="15" fill="rgb(216,228,15)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1583.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (142 samples, 0.87%)</title><rect x="91.0575%" y="1557" width="0.8745%" height="15" fill="rgb(235,116,46)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1567.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1541" width="0.8745%" height="15" fill="rgb(224,18,32)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1551.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1525" width="0.8745%" height="15" fill="rgb(252,5,12)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1535.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (142 samples, 0.87%)</title><rect x="91.0575%" y="1509" width="0.8745%" height="15" fill="rgb(251,36,5)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1519.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1493" width="0.8745%" height="15" fill="rgb(217,53,14)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1477" width="0.8745%" height="15" fill="rgb(215,86,45)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1487.50"></text></g><g><title>latte::req_stream::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1461" width="0.8745%" height="15" fill="rgb(242,169,11)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1471.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1445" width="0.8745%" height="15" fill="rgb(211,213,45)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1455.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (142 samples, 0.87%)</title><rect x="91.0575%" y="1429" width="0.8745%" height="15" fill="rgb(205,88,11)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (142 samples, 0.87%)</title><rect x="91.0575%" y="1413" width="0.8745%" height="15" fill="rgb(252,69,26)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1423.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (142 samples, 0.87%)</title><rect x="91.0575%" y="1397" width="0.8745%" height="15" fill="rgb(246,123,37)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1407.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (142 samples, 0.87%)</title><rect x="91.0575%" y="1381" width="0.8745%" height="15" fill="rgb(212,205,5)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1365" width="0.8745%" height="15" fill="rgb(253,148,0)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1375.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1349" width="0.8745%" height="15" fill="rgb(239,22,4)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1359.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1333" width="0.8745%" height="15" fill="rgb(226,26,53)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1317" width="0.8745%" height="15" fill="rgb(225,229,45)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1327.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1301" width="0.8745%" height="15" fill="rgb(220,60,37)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1285" width="0.8745%" height="15" fill="rgb(217,180,35)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1295.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1269" width="0.8745%" height="15" fill="rgb(229,7,53)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.87%)</title><rect x="91.0575%" y="1253" width="0.8745%" height="15" fill="rgb(254,137,3)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1263.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (142 samples, 0.87%)</title><rect x="91.0575%" y="1237" width="0.8745%" height="15" fill="rgb(215,140,41)" fg:x="14785" fg:w="142"/><text x="91.3075%" y="1247.50"></text></g><g><title>scylla::transport::session::calculate_token (23 samples, 0.14%)</title><rect x="91.7904%" y="1221" width="0.1417%" height="15" fill="rgb(250,80,15)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1231.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (23 samples, 0.14%)</title><rect x="91.7904%" y="1205" width="0.1417%" height="15" fill="rgb(252,191,6)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1215.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (23 samples, 0.14%)</title><rect x="91.7904%" y="1189" width="0.1417%" height="15" fill="rgb(246,217,18)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1199.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (23 samples, 0.14%)</title><rect x="91.7904%" y="1173" width="0.1417%" height="15" fill="rgb(223,93,7)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1183.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (23 samples, 0.14%)</title><rect x="91.7904%" y="1157" width="0.1417%" height="15" fill="rgb(225,55,52)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 0.14%)</title><rect x="91.7904%" y="1141" width="0.1417%" height="15" fill="rgb(240,31,24)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 0.14%)</title><rect x="91.7904%" y="1125" width="0.1417%" height="15" fill="rgb(205,56,52)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 0.14%)</title><rect x="91.7904%" y="1109" width="0.1417%" height="15" fill="rgb(246,146,12)" fg:x="14904" fg:w="23"/><text x="92.0404%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="91.9135%" y="1093" width="0.0185%" height="15" fill="rgb(239,84,36)" fg:x="14924" fg:w="3"/><text x="92.1635%" y="1103.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (28 samples, 0.17%)</title><rect x="91.9320%" y="1925" width="0.1724%" height="15" fill="rgb(207,41,40)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1909" width="0.1724%" height="15" fill="rgb(241,179,25)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1919.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (28 samples, 0.17%)</title><rect x="91.9320%" y="1893" width="0.1724%" height="15" fill="rgb(210,0,34)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (28 samples, 0.17%)</title><rect x="91.9320%" y="1877" width="0.1724%" height="15" fill="rgb(225,217,29)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1887.50"></text></g><g><title>tokio::coop::budget (28 samples, 0.17%)</title><rect x="91.9320%" y="1861" width="0.1724%" height="15" fill="rgb(216,191,38)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1871.50"></text></g><g><title>tokio::coop::with_budget (28 samples, 0.17%)</title><rect x="91.9320%" y="1845" width="0.1724%" height="15" fill="rgb(232,140,52)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.17%)</title><rect x="91.9320%" y="1829" width="0.1724%" height="15" fill="rgb(223,158,51)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.17%)</title><rect x="91.9320%" y="1813" width="0.1724%" height="15" fill="rgb(235,29,51)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1823.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1797" width="0.1724%" height="15" fill="rgb(215,181,18)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1807.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1781" width="0.1724%" height="15" fill="rgb(227,125,34)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1791.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (28 samples, 0.17%)</title><rect x="91.9320%" y="1765" width="0.1724%" height="15" fill="rgb(230,197,49)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1775.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1749" width="0.1724%" height="15" fill="rgb(239,141,16)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1733" width="0.1724%" height="15" fill="rgb(225,105,43)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (28 samples, 0.17%)</title><rect x="91.9320%" y="1717" width="0.1724%" height="15" fill="rgb(214,131,14)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (28 samples, 0.17%)</title><rect x="91.9320%" y="1701" width="0.1724%" height="15" fill="rgb(229,177,11)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.17%)</title><rect x="91.9320%" y="1685" width="0.1724%" height="15" fill="rgb(231,180,14)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1695.50"></text></g><g><title>std::panicking::try (28 samples, 0.17%)</title><rect x="91.9320%" y="1669" width="0.1724%" height="15" fill="rgb(232,88,2)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.17%)</title><rect x="91.9320%" y="1653" width="0.1724%" height="15" fill="rgb(205,220,8)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.17%)</title><rect x="91.9320%" y="1637" width="0.1724%" height="15" fill="rgb(225,23,53)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1621" width="0.1724%" height="15" fill="rgb(213,62,29)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1605" width="0.1724%" height="15" fill="rgb(227,75,7)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1615.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (28 samples, 0.17%)</title><rect x="91.9320%" y="1589" width="0.1724%" height="15" fill="rgb(207,105,14)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1573" width="0.1724%" height="15" fill="rgb(245,62,29)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1583.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1557" width="0.1724%" height="15" fill="rgb(236,202,4)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1567.50"></text></g><g><title>latte::req_stream::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1541" width="0.1724%" height="15" fill="rgb(250,67,1)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1525" width="0.1724%" height="15" fill="rgb(253,115,44)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1535.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (28 samples, 0.17%)</title><rect x="91.9320%" y="1509" width="0.1724%" height="15" fill="rgb(251,139,18)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (28 samples, 0.17%)</title><rect x="91.9320%" y="1493" width="0.1724%" height="15" fill="rgb(218,22,32)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1503.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (28 samples, 0.17%)</title><rect x="91.9320%" y="1477" width="0.1724%" height="15" fill="rgb(243,53,5)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (28 samples, 0.17%)</title><rect x="91.9320%" y="1461" width="0.1724%" height="15" fill="rgb(227,56,16)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1445" width="0.1724%" height="15" fill="rgb(245,53,0)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1455.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1429" width="0.1724%" height="15" fill="rgb(216,170,35)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1439.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1413" width="0.1724%" height="15" fill="rgb(211,200,8)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1397" width="0.1724%" height="15" fill="rgb(228,204,44)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1407.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1381" width="0.1724%" height="15" fill="rgb(214,121,17)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1365" width="0.1724%" height="15" fill="rgb(233,64,38)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1375.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1349" width="0.1724%" height="15" fill="rgb(253,54,19)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1333" width="0.1724%" height="15" fill="rgb(253,94,18)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1343.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1317" width="0.1724%" height="15" fill="rgb(227,57,52)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.17%)</title><rect x="91.9320%" y="1301" width="0.1724%" height="15" fill="rgb(230,228,50)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1311.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (28 samples, 0.17%)</title><rect x="91.9320%" y="1285" width="0.1724%" height="15" fill="rgb(217,205,27)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1295.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (28 samples, 0.17%)</title><rect x="91.9320%" y="1269" width="0.1724%" height="15" fill="rgb(252,71,50)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1279.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (28 samples, 0.17%)</title><rect x="91.9320%" y="1253" width="0.1724%" height="15" fill="rgb(209,86,4)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.17%)</title><rect x="91.9320%" y="1237" width="0.1724%" height="15" fill="rgb(229,94,0)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.17%)</title><rect x="91.9320%" y="1221" width="0.1724%" height="15" fill="rgb(252,223,21)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.17%)</title><rect x="91.9320%" y="1205" width="0.1724%" height="15" fill="rgb(230,210,4)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.17%)</title><rect x="91.9320%" y="1189" width="0.1724%" height="15" fill="rgb(240,149,38)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.17%)</title><rect x="91.9320%" y="1173" width="0.1724%" height="15" fill="rgb(254,105,20)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1183.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.17%)</title><rect x="91.9320%" y="1157" width="0.1724%" height="15" fill="rgb(253,87,46)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1167.50"></text></g><g><title>_int_malloc (28 samples, 0.17%)</title><rect x="91.9320%" y="1141" width="0.1724%" height="15" fill="rgb(253,116,33)" fg:x="14927" fg:w="28"/><text x="92.1820%" y="1151.50"></text></g><g><title>unlink_chunk.constprop.0 (8 samples, 0.05%)</title><rect x="92.0552%" y="1125" width="0.0493%" height="15" fill="rgb(229,198,5)" fg:x="14947" fg:w="8"/><text x="92.3052%" y="1135.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4 samples, 0.02%)</title><rect x="92.1045%" y="1829" width="0.0246%" height="15" fill="rgb(242,38,37)" fg:x="14955" fg:w="4"/><text x="92.3545%" y="1839.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="92.1045%" y="1925" width="0.0308%" height="15" fill="rgb(242,69,53)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (5 samples, 0.03%)</title><rect x="92.1045%" y="1909" width="0.0308%" height="15" fill="rgb(249,80,16)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1919.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.03%)</title><rect x="92.1045%" y="1893" width="0.0308%" height="15" fill="rgb(206,128,11)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1903.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (5 samples, 0.03%)</title><rect x="92.1045%" y="1877" width="0.0308%" height="15" fill="rgb(212,35,20)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1887.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (5 samples, 0.03%)</title><rect x="92.1045%" y="1861" width="0.0308%" height="15" fill="rgb(236,79,13)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1871.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="92.1045%" y="1845" width="0.0308%" height="15" fill="rgb(233,123,3)" fg:x="14955" fg:w="5"/><text x="92.3545%" y="1855.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.41%)</title><rect x="92.2523%" y="1013" width="0.4126%" height="15" fill="rgb(214,93,52)" fg:x="14979" fg:w="67"/><text x="92.5023%" y="1023.50"></text></g><g><title>scylla::transport::session::Session::handle_set_keyspace_response::{{closure}} (15 samples, 0.09%)</title><rect x="92.6649%" y="1013" width="0.0924%" height="15" fill="rgb(251,37,40)" fg:x="15046" fg:w="15"/><text x="92.9149%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="92.7573%" y="949" width="0.0185%" height="15" fill="rgb(227,80,54)" fg:x="15061" fg:w="3"/><text x="93.0073%" y="959.50"></text></g><g><title>arc_swap::debt::fast::Slots::get_debt (2 samples, 0.01%)</title><rect x="93.2623%" y="773" width="0.0123%" height="15" fill="rgb(254,48,11)" fg:x="15143" fg:w="2"/><text x="93.5123%" y="783.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (6 samples, 0.04%)</title><rect x="93.2500%" y="789" width="0.0370%" height="15" fill="rgb(235,193,26)" fg:x="15141" fg:w="6"/><text x="93.5000%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.01%)</title><rect x="93.2746%" y="773" width="0.0123%" height="15" fill="rgb(229,99,21)" fg:x="15145" fg:w="2"/><text x="93.5246%" y="783.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (9 samples, 0.06%)</title><rect x="93.2500%" y="853" width="0.0554%" height="15" fill="rgb(211,140,41)" fg:x="15141" fg:w="9"/><text x="93.5000%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (9 samples, 0.06%)</title><rect x="93.2500%" y="837" width="0.0554%" height="15" fill="rgb(240,227,30)" fg:x="15141" fg:w="9"/><text x="93.5000%" y="847.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (9 samples, 0.06%)</title><rect x="93.2500%" y="821" width="0.0554%" height="15" fill="rgb(215,224,45)" fg:x="15141" fg:w="9"/><text x="93.5000%" y="831.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (9 samples, 0.06%)</title><rect x="93.2500%" y="805" width="0.0554%" height="15" fill="rgb(206,123,31)" fg:x="15141" fg:w="9"/><text x="93.5000%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.02%)</title><rect x="93.2869%" y="789" width="0.0185%" height="15" fill="rgb(210,138,16)" fg:x="15147" fg:w="3"/><text x="93.5369%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="93.2869%" y="773" width="0.0185%" height="15" fill="rgb(228,57,28)" fg:x="15147" fg:w="3"/><text x="93.5369%" y="783.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (62 samples, 0.38%)</title><rect x="93.2500%" y="869" width="0.3818%" height="15" fill="rgb(242,170,10)" fg:x="15141" fg:w="62"/><text x="93.5000%" y="879.50"></text></g><g><title>arc_swap::Guard&lt;T,S&gt;::into_inner (53 samples, 0.33%)</title><rect x="93.3054%" y="853" width="0.3264%" height="15" fill="rgb(228,214,39)" fg:x="15150" fg:w="53"/><text x="93.5554%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as arc_swap::strategy::sealed::Protected&lt;T&gt;&gt;::into_inner (53 samples, 0.33%)</title><rect x="93.3054%" y="837" width="0.3264%" height="15" fill="rgb(218,179,33)" fg:x="15150" fg:w="53"/><text x="93.5554%" y="847.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (41 samples, 0.25%)</title><rect x="93.3793%" y="821" width="0.2525%" height="15" fill="rgb(235,193,39)" fg:x="15162" fg:w="41"/><text x="93.6293%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.25%)</title><rect x="93.3793%" y="805" width="0.2525%" height="15" fill="rgb(219,221,36)" fg:x="15162" fg:w="41"/><text x="93.6293%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::connection_pool::MaybePoolConnections&gt;&gt; (3 samples, 0.02%)</title><rect x="93.6318%" y="869" width="0.0185%" height="15" fill="rgb(248,218,19)" fg:x="15203" fg:w="3"/><text x="93.8818%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="93.6318%" y="853" width="0.0185%" height="15" fill="rgb(205,50,9)" fg:x="15203" fg:w="3"/><text x="93.8818%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.49%)</title><rect x="93.1761%" y="933" width="0.4865%" height="15" fill="rgb(238,81,28)" fg:x="15129" fg:w="79"/><text x="93.4261%" y="943.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token::{{closure}} (77 samples, 0.47%)</title><rect x="93.1884%" y="917" width="0.4742%" height="15" fill="rgb(235,110,19)" fg:x="15131" fg:w="77"/><text x="93.4384%" y="927.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token (72 samples, 0.44%)</title><rect x="93.2192%" y="901" width="0.4434%" height="15" fill="rgb(214,7,14)" fg:x="15136" fg:w="72"/><text x="93.4692%" y="911.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::with_connections (67 samples, 0.41%)</title><rect x="93.2500%" y="885" width="0.4126%" height="15" fill="rgb(211,77,3)" fg:x="15141" fg:w="67"/><text x="93.5000%" y="895.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token::{{closure}} (2 samples, 0.01%)</title><rect x="93.6503%" y="869" width="0.0123%" height="15" fill="rgb(229,5,9)" fg:x="15206" fg:w="2"/><text x="93.9003%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (16 samples, 0.10%)</title><rect x="93.6626%" y="933" width="0.0985%" height="15" fill="rgb(225,90,11)" fg:x="15208" fg:w="16"/><text x="93.9126%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.10%)</title><rect x="93.6626%" y="917" width="0.0985%" height="15" fill="rgb(242,56,8)" fg:x="15208" fg:w="16"/><text x="93.9126%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (267 samples, 1.64%)</title><rect x="92.1352%" y="1029" width="1.6444%" height="15" fill="rgb(249,212,39)" fg:x="14960" fg:w="267"/><text x="92.3852%" y="1039.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (166 samples, 1.02%)</title><rect x="92.7573%" y="1013" width="1.0224%" height="15" fill="rgb(236,90,9)" fg:x="15061" fg:w="166"/><text x="93.0073%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 1.02%)</title><rect x="92.7573%" y="997" width="1.0224%" height="15" fill="rgb(206,88,35)" fg:x="15061" fg:w="166"/><text x="93.0073%" y="1007.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (166 samples, 1.02%)</title><rect x="92.7573%" y="981" width="1.0224%" height="15" fill="rgb(205,126,30)" fg:x="15061" fg:w="166"/><text x="93.0073%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 1.02%)</title><rect x="92.7573%" y="965" width="1.0224%" height="15" fill="rgb(230,176,12)" fg:x="15061" fg:w="166"/><text x="93.0073%" y="975.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (163 samples, 1.00%)</title><rect x="92.7758%" y="949" width="1.0039%" height="15" fill="rgb(243,19,9)" fg:x="15064" fg:w="163"/><text x="93.0258%" y="959.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token (3 samples, 0.02%)</title><rect x="93.7612%" y="933" width="0.0185%" height="15" fill="rgb(245,171,17)" fg:x="15224" fg:w="3"/><text x="94.0112%" y="943.50"></text></g><g><title>scylla::routing::murmur3_token (10 samples, 0.06%)</title><rect x="93.7796%" y="1013" width="0.0616%" height="15" fill="rgb(227,52,21)" fg:x="15227" fg:w="10"/><text x="94.0296%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (10 samples, 0.06%)</title><rect x="93.7796%" y="997" width="0.0616%" height="15" fill="rgb(238,69,14)" fg:x="15227" fg:w="10"/><text x="94.0296%" y="1007.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="93.7796%" y="981" width="0.0616%" height="15" fill="rgb(241,156,39)" fg:x="15227" fg:w="10"/><text x="94.0296%" y="991.50"></text></g><g><title>__GI___libc_free (10 samples, 0.06%)</title><rect x="93.7796%" y="965" width="0.0616%" height="15" fill="rgb(212,227,28)" fg:x="15227" fg:w="10"/><text x="94.0296%" y="975.50"></text></g><g><title>_int_free (10 samples, 0.06%)</title><rect x="93.7796%" y="949" width="0.0616%" height="15" fill="rgb(209,118,27)" fg:x="15227" fg:w="10"/><text x="94.0296%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.07%)</title><rect x="93.9090%" y="997" width="0.0677%" height="15" fill="rgb(226,102,5)" fg:x="15248" fg:w="11"/><text x="94.1590%" y="1007.50"></text></g><g><title>bytes::bytes_mut::&lt;impl core::convert::From&lt;bytes::bytes_mut::BytesMut&gt; for bytes::bytes::Bytes&gt;::from (6 samples, 0.04%)</title><rect x="93.9398%" y="981" width="0.0370%" height="15" fill="rgb(223,34,3)" fg:x="15253" fg:w="6"/><text x="94.1898%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (8 samples, 0.05%)</title><rect x="94.0014%" y="981" width="0.0493%" height="15" fill="rgb(221,81,38)" fg:x="15263" fg:w="8"/><text x="94.2514%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (7 samples, 0.04%)</title><rect x="94.0075%" y="965" width="0.0431%" height="15" fill="rgb(236,219,28)" fg:x="15264" fg:w="7"/><text x="94.2575%" y="975.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (18 samples, 0.11%)</title><rect x="93.9767%" y="997" width="0.1109%" height="15" fill="rgb(213,200,14)" fg:x="15259" fg:w="18"/><text x="94.2267%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.04%)</title><rect x="94.0506%" y="981" width="0.0370%" height="15" fill="rgb(240,33,19)" fg:x="15271" fg:w="6"/><text x="94.3006%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="94.0691%" y="965" width="0.0185%" height="15" fill="rgb(233,113,27)" fg:x="15274" fg:w="3"/><text x="94.3191%" y="975.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (6 samples, 0.04%)</title><rect x="94.1061%" y="949" width="0.0370%" height="15" fill="rgb(220,221,18)" fg:x="15280" fg:w="6"/><text x="94.3561%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (328 samples, 2.02%)</title><rect x="92.1352%" y="1925" width="2.0201%" height="15" fill="rgb(238,92,8)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1935.50">t..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (328 samples, 2.02%)</title><rect x="92.1352%" y="1909" width="2.0201%" height="15" fill="rgb(222,164,16)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1919.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1893" width="2.0201%" height="15" fill="rgb(241,119,3)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1903.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1877" width="2.0201%" height="15" fill="rgb(241,44,8)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1887.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (328 samples, 2.02%)</title><rect x="92.1352%" y="1861" width="2.0201%" height="15" fill="rgb(230,36,40)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1871.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (328 samples, 2.02%)</title><rect x="92.1352%" y="1845" width="2.0201%" height="15" fill="rgb(243,16,36)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1855.50">t..</text></g><g><title>std::panic::catch_unwind (328 samples, 2.02%)</title><rect x="92.1352%" y="1829" width="2.0201%" height="15" fill="rgb(231,4,26)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1839.50">s..</text></g><g><title>std::panicking::try (328 samples, 2.02%)</title><rect x="92.1352%" y="1813" width="2.0201%" height="15" fill="rgb(240,9,31)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1823.50">s..</text></g><g><title>std::panicking::try::do_call (328 samples, 2.02%)</title><rect x="92.1352%" y="1797" width="2.0201%" height="15" fill="rgb(207,173,15)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1807.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (328 samples, 2.02%)</title><rect x="92.1352%" y="1781" width="2.0201%" height="15" fill="rgb(224,192,53)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1791.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1765" width="2.0201%" height="15" fill="rgb(223,67,28)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1775.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1749" width="2.0201%" height="15" fill="rgb(211,20,47)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1759.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (328 samples, 2.02%)</title><rect x="92.1352%" y="1733" width="2.0201%" height="15" fill="rgb(240,228,2)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1743.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1717" width="2.0201%" height="15" fill="rgb(248,151,12)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1727.50">t..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1701" width="2.0201%" height="15" fill="rgb(244,8,39)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1711.50">&lt;..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1685" width="2.0201%" height="15" fill="rgb(222,26,8)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1695.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::run (328 samples, 2.02%)</title><rect x="92.1352%" y="1669" width="2.0201%" height="15" fill="rgb(213,106,44)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1679.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (328 samples, 2.02%)</title><rect x="92.1352%" y="1653" width="2.0201%" height="15" fill="rgb(214,129,20)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1663.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1637" width="2.0201%" height="15" fill="rgb(212,32,13)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1647.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (328 samples, 2.02%)</title><rect x="92.1352%" y="1621" width="2.0201%" height="15" fill="rgb(208,168,33)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1631.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (328 samples, 2.02%)</title><rect x="92.1352%" y="1605" width="2.0201%" height="15" fill="rgb(231,207,8)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1615.50">t..</text></g><g><title>tokio::coop::budget (328 samples, 2.02%)</title><rect x="92.1352%" y="1589" width="2.0201%" height="15" fill="rgb(235,219,23)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1599.50">t..</text></g><g><title>tokio::coop::with_budget (328 samples, 2.02%)</title><rect x="92.1352%" y="1573" width="2.0201%" height="15" fill="rgb(226,216,26)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1583.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (328 samples, 2.02%)</title><rect x="92.1352%" y="1557" width="2.0201%" height="15" fill="rgb(239,137,16)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1567.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (328 samples, 2.02%)</title><rect x="92.1352%" y="1541" width="2.0201%" height="15" fill="rgb(207,12,36)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1551.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1525" width="2.0201%" height="15" fill="rgb(210,214,24)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1535.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1509" width="2.0201%" height="15" fill="rgb(206,56,30)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1519.50">t..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (328 samples, 2.02%)</title><rect x="92.1352%" y="1493" width="2.0201%" height="15" fill="rgb(228,143,26)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1503.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1477" width="2.0201%" height="15" fill="rgb(216,218,46)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1487.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1461" width="2.0201%" height="15" fill="rgb(206,6,19)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1471.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (328 samples, 2.02%)</title><rect x="92.1352%" y="1445" width="2.0201%" height="15" fill="rgb(239,177,51)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1455.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (328 samples, 2.02%)</title><rect x="92.1352%" y="1429" width="2.0201%" height="15" fill="rgb(216,55,25)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1439.50">t..</text></g><g><title>std::panic::catch_unwind (328 samples, 2.02%)</title><rect x="92.1352%" y="1413" width="2.0201%" height="15" fill="rgb(231,163,29)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1423.50">s..</text></g><g><title>std::panicking::try (328 samples, 2.02%)</title><rect x="92.1352%" y="1397" width="2.0201%" height="15" fill="rgb(232,149,50)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1407.50">s..</text></g><g><title>std::panicking::try::do_call (328 samples, 2.02%)</title><rect x="92.1352%" y="1381" width="2.0201%" height="15" fill="rgb(223,142,48)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1391.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (328 samples, 2.02%)</title><rect x="92.1352%" y="1365" width="2.0201%" height="15" fill="rgb(245,83,23)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1375.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1349" width="2.0201%" height="15" fill="rgb(224,63,2)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1359.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1333" width="2.0201%" height="15" fill="rgb(218,65,53)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1343.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (328 samples, 2.02%)</title><rect x="92.1352%" y="1317" width="2.0201%" height="15" fill="rgb(221,84,29)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1327.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1301" width="2.0201%" height="15" fill="rgb(234,0,32)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1311.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1285" width="2.0201%" height="15" fill="rgb(206,20,16)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1295.50">&lt;..</text></g><g><title>latte::req_stream::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1269" width="2.0201%" height="15" fill="rgb(244,172,18)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1279.50">l..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1253" width="2.0201%" height="15" fill="rgb(254,133,1)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1263.50">&lt;..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (328 samples, 2.02%)</title><rect x="92.1352%" y="1237" width="2.0201%" height="15" fill="rgb(222,206,41)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1247.50">f..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (328 samples, 2.02%)</title><rect x="92.1352%" y="1221" width="2.0201%" height="15" fill="rgb(212,3,42)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1231.50">&lt;..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (328 samples, 2.02%)</title><rect x="92.1352%" y="1205" width="2.0201%" height="15" fill="rgb(241,11,4)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1215.50">f..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (328 samples, 2.02%)</title><rect x="92.1352%" y="1189" width="2.0201%" height="15" fill="rgb(205,19,26)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1199.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1173" width="2.0201%" height="15" fill="rgb(210,179,32)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1183.50">&lt;..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1157" width="2.0201%" height="15" fill="rgb(227,116,49)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1167.50">l..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1141" width="2.0201%" height="15" fill="rgb(211,146,6)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1151.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1125" width="2.0201%" height="15" fill="rgb(219,44,39)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1135.50">&lt;..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1109" width="2.0201%" height="15" fill="rgb(234,128,11)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1119.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1093" width="2.0201%" height="15" fill="rgb(220,183,53)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1103.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1077" width="2.0201%" height="15" fill="rgb(213,219,32)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1087.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (328 samples, 2.02%)</title><rect x="92.1352%" y="1061" width="2.0201%" height="15" fill="rgb(232,156,16)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1071.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (328 samples, 2.02%)</title><rect x="92.1352%" y="1045" width="2.0201%" height="15" fill="rgb(246,135,34)" fg:x="14960" fg:w="328"/><text x="92.3852%" y="1055.50">s..</text></g><g><title>scylla::transport::session::calculate_token (61 samples, 0.38%)</title><rect x="93.7796%" y="1029" width="0.3757%" height="15" fill="rgb(241,99,0)" fg:x="15227" fg:w="61"/><text x="94.0296%" y="1039.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (51 samples, 0.31%)</title><rect x="93.8412%" y="1013" width="0.3141%" height="15" fill="rgb(222,103,45)" fg:x="15237" fg:w="51"/><text x="94.0912%" y="1023.50"></text></g><g><title>bytes::bytes_mut::BytesMut::new (11 samples, 0.07%)</title><rect x="94.0876%" y="997" width="0.0677%" height="15" fill="rgb(212,57,4)" fg:x="15277" fg:w="11"/><text x="94.3376%" y="1007.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (11 samples, 0.07%)</title><rect x="94.0876%" y="981" width="0.0677%" height="15" fill="rgb(215,68,47)" fg:x="15277" fg:w="11"/><text x="94.3376%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (10 samples, 0.06%)</title><rect x="94.0937%" y="965" width="0.0616%" height="15" fill="rgb(230,84,2)" fg:x="15278" fg:w="10"/><text x="94.3437%" y="975.50"></text></g><g><title>bytes::bytes_mut::vptr (2 samples, 0.01%)</title><rect x="94.1430%" y="949" width="0.0123%" height="15" fill="rgb(220,102,14)" fg:x="15286" fg:w="2"/><text x="94.3930%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.07%)</title><rect x="94.2600%" y="1253" width="0.0739%" height="15" fill="rgb(240,10,32)" fg:x="15305" fg:w="12"/><text x="94.5100%" y="1263.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.06%)</title><rect x="94.2785%" y="1237" width="0.0554%" height="15" fill="rgb(215,47,27)" fg:x="15308" fg:w="9"/><text x="94.5285%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.09%)</title><rect x="94.2539%" y="1285" width="0.0862%" height="15" fill="rgb(233,188,43)" fg:x="15304" fg:w="14"/><text x="94.5039%" y="1295.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.08%)</title><rect x="94.2600%" y="1269" width="0.0801%" height="15" fill="rgb(253,190,1)" fg:x="15305" fg:w="13"/><text x="94.5100%" y="1279.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="94.3401%" y="1285" width="0.0308%" height="15" fill="rgb(206,114,52)" fg:x="15318" fg:w="5"/><text x="94.5901%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (5 samples, 0.03%)</title><rect x="94.3401%" y="1269" width="0.0308%" height="15" fill="rgb(233,120,37)" fg:x="15318" fg:w="5"/><text x="94.5901%" y="1279.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u16&gt;::hash (5 samples, 0.03%)</title><rect x="94.3401%" y="1253" width="0.0308%" height="15" fill="rgb(214,52,39)" fg:x="15318" fg:w="5"/><text x="94.5901%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_u16 (5 samples, 0.03%)</title><rect x="94.3401%" y="1237" width="0.0308%" height="15" fill="rgb(223,80,29)" fg:x="15318" fg:w="5"/><text x="94.5901%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.02%)</title><rect x="94.4263%" y="1189" width="0.0246%" height="15" fill="rgb(230,101,40)" fg:x="15332" fg:w="4"/><text x="94.6763%" y="1199.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="94.4386%" y="1173" width="0.0123%" height="15" fill="rgb(219,211,8)" fg:x="15334" fg:w="2"/><text x="94.6886%" y="1183.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="94.4571%" y="1189" width="0.0185%" height="15" fill="rgb(252,126,28)" fg:x="15337" fg:w="3"/><text x="94.7071%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.10%)</title><rect x="94.3832%" y="1205" width="0.0985%" height="15" fill="rgb(215,56,38)" fg:x="15325" fg:w="16"/><text x="94.6332%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1749" width="0.3572%" height="15" fill="rgb(249,55,44)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1759.50"></text></g><g><title>latte::req_stream::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1733" width="0.3572%" height="15" fill="rgb(220,221,32)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1743.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1717" width="0.3572%" height="15" fill="rgb(212,216,41)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1727.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (58 samples, 0.36%)</title><rect x="94.1553%" y="1701" width="0.3572%" height="15" fill="rgb(228,213,43)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1711.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.36%)</title><rect x="94.1553%" y="1685" width="0.3572%" height="15" fill="rgb(211,31,26)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1695.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (58 samples, 0.36%)</title><rect x="94.1553%" y="1669" width="0.3572%" height="15" fill="rgb(229,202,19)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1679.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (58 samples, 0.36%)</title><rect x="94.1553%" y="1653" width="0.3572%" height="15" fill="rgb(229,105,46)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1663.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1637" width="0.3572%" height="15" fill="rgb(235,108,1)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1647.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1621" width="0.3572%" height="15" fill="rgb(245,111,35)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1631.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1605" width="0.3572%" height="15" fill="rgb(219,185,31)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1589" width="0.3572%" height="15" fill="rgb(214,4,43)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1599.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1573" width="0.3572%" height="15" fill="rgb(235,227,40)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1583.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1557" width="0.3572%" height="15" fill="rgb(230,88,30)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1567.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1541" width="0.3572%" height="15" fill="rgb(216,217,1)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1551.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1525" width="0.3572%" height="15" fill="rgb(248,139,50)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1535.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1509" width="0.3572%" height="15" fill="rgb(233,1,21)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.36%)</title><rect x="94.1553%" y="1493" width="0.3572%" height="15" fill="rgb(215,183,12)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1503.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (58 samples, 0.36%)</title><rect x="94.1553%" y="1477" width="0.3572%" height="15" fill="rgb(229,104,42)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1487.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (58 samples, 0.36%)</title><rect x="94.1553%" y="1461" width="0.3572%" height="15" fill="rgb(243,34,48)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (58 samples, 0.36%)</title><rect x="94.1553%" y="1445" width="0.3572%" height="15" fill="rgb(239,11,44)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (58 samples, 0.36%)</title><rect x="94.1553%" y="1429" width="0.3572%" height="15" fill="rgb(231,98,35)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1439.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.36%)</title><rect x="94.1553%" y="1413" width="0.3572%" height="15" fill="rgb(233,28,25)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1423.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.36%)</title><rect x="94.1553%" y="1397" width="0.3572%" height="15" fill="rgb(234,123,11)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1407.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (58 samples, 0.36%)</title><rect x="94.1553%" y="1381" width="0.3572%" height="15" fill="rgb(220,69,3)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1391.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (58 samples, 0.36%)</title><rect x="94.1553%" y="1365" width="0.3572%" height="15" fill="rgb(214,64,36)" fg:x="15288" fg:w="58"/><text x="94.4053%" y="1375.50"></text></g><g><title>hashbrown::map::make_insert_hash (57 samples, 0.35%)</title><rect x="94.1615%" y="1349" width="0.3511%" height="15" fill="rgb(211,138,32)" fg:x="15289" fg:w="57"/><text x="94.4115%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (57 samples, 0.35%)</title><rect x="94.1615%" y="1333" width="0.3511%" height="15" fill="rgb(213,118,47)" fg:x="15289" fg:w="57"/><text x="94.4115%" y="1343.50"></text></g><g><title>&lt;scylla::transport::node::Node as core::hash::Hash&gt;::hash (57 samples, 0.35%)</title><rect x="94.1615%" y="1317" width="0.3511%" height="15" fill="rgb(243,124,49)" fg:x="15289" fg:w="57"/><text x="94.4115%" y="1327.50"></text></g><g><title>&lt;std::net::addr::SocketAddr as core::hash::Hash&gt;::hash (57 samples, 0.35%)</title><rect x="94.1615%" y="1301" width="0.3511%" height="15" fill="rgb(221,30,28)" fg:x="15289" fg:w="57"/><text x="94.4115%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (23 samples, 0.14%)</title><rect x="94.3709%" y="1285" width="0.1417%" height="15" fill="rgb(246,37,13)" fg:x="15323" fg:w="23"/><text x="94.6209%" y="1295.50"></text></g><g><title>core::hash::Hasher::write_isize (23 samples, 0.14%)</title><rect x="94.3709%" y="1269" width="0.1417%" height="15" fill="rgb(249,66,14)" fg:x="15323" fg:w="23"/><text x="94.6209%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_usize (23 samples, 0.14%)</title><rect x="94.3709%" y="1253" width="0.1417%" height="15" fill="rgb(213,166,5)" fg:x="15323" fg:w="23"/><text x="94.6209%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.13%)</title><rect x="94.3832%" y="1237" width="0.1293%" height="15" fill="rgb(221,66,24)" fg:x="15325" fg:w="21"/><text x="94.6332%" y="1247.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 0.13%)</title><rect x="94.3832%" y="1221" width="0.1293%" height="15" fill="rgb(210,132,17)" fg:x="15325" fg:w="21"/><text x="94.6332%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.03%)</title><rect x="94.4817%" y="1205" width="0.0308%" height="15" fill="rgb(243,202,5)" fg:x="15341" fg:w="5"/><text x="94.7317%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="94.5372%" y="997" width="0.0123%" height="15" fill="rgb(233,70,48)" fg:x="15350" fg:w="2"/><text x="94.7872%" y="1007.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (3 samples, 0.02%)</title><rect x="95.6642%" y="917" width="0.0185%" height="15" fill="rgb(238,41,26)" fg:x="15533" fg:w="3"/><text x="95.9142%" y="927.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (3 samples, 0.02%)</title><rect x="95.6642%" y="901" width="0.0185%" height="15" fill="rgb(241,19,31)" fg:x="15533" fg:w="3"/><text x="95.9142%" y="911.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (3 samples, 0.02%)</title><rect x="95.6642%" y="885" width="0.0185%" height="15" fill="rgb(214,76,10)" fg:x="15533" fg:w="3"/><text x="95.9142%" y="895.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (3 samples, 0.02%)</title><rect x="95.6642%" y="869" width="0.0185%" height="15" fill="rgb(254,202,22)" fg:x="15533" fg:w="3"/><text x="95.9142%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="95.6704%" y="853" width="0.0123%" height="15" fill="rgb(214,72,24)" fg:x="15534" fg:w="2"/><text x="95.9204%" y="863.50"></text></g><g><title>arc_swap::debt::list::THREAD_HEAD::__getit (2 samples, 0.01%)</title><rect x="95.6704%" y="837" width="0.0123%" height="15" fill="rgb(221,92,46)" fg:x="15534" fg:w="2"/><text x="95.9204%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (100 samples, 0.62%)</title><rect x="95.5595%" y="981" width="0.6159%" height="15" fill="rgb(246,13,50)" fg:x="15516" fg:w="100"/><text x="95.8095%" y="991.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token::{{closure}} (83 samples, 0.51%)</title><rect x="95.6642%" y="965" width="0.5112%" height="15" fill="rgb(240,165,38)" fg:x="15533" fg:w="83"/><text x="95.9142%" y="975.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token (83 samples, 0.51%)</title><rect x="95.6642%" y="949" width="0.5112%" height="15" fill="rgb(241,24,51)" fg:x="15533" fg:w="83"/><text x="95.9142%" y="959.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::with_connections (83 samples, 0.51%)</title><rect x="95.6642%" y="933" width="0.5112%" height="15" fill="rgb(227,51,44)" fg:x="15533" fg:w="83"/><text x="95.9142%" y="943.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token::{{closure}} (80 samples, 0.49%)</title><rect x="95.6827%" y="917" width="0.4927%" height="15" fill="rgb(231,121,3)" fg:x="15536" fg:w="80"/><text x="95.9327%" y="927.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::choose_random_connection_from_slice (80 samples, 0.49%)</title><rect x="95.6827%" y="901" width="0.4927%" height="15" fill="rgb(245,3,41)" fg:x="15536" fg:w="80"/><text x="95.9327%" y="911.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.02%)</title><rect x="96.1754%" y="981" width="0.0185%" height="15" fill="rgb(214,13,26)" fg:x="15616" fg:w="3"/><text x="96.4254%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.11%)</title><rect x="96.1939%" y="981" width="0.1109%" height="15" fill="rgb(252,75,11)" fg:x="15619" fg:w="18"/><text x="96.4439%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::connection::Connection&gt;&gt; (194 samples, 1.19%)</title><rect x="96.3109%" y="981" width="1.1948%" height="15" fill="rgb(218,226,17)" fg:x="15638" fg:w="194"/><text x="96.5609%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 1.19%)</title><rect x="96.3109%" y="965" width="1.1948%" height="15" fill="rgb(248,89,38)" fg:x="15638" fg:w="194"/><text x="96.5609%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (114 samples, 0.70%)</title><rect x="96.8036%" y="949" width="0.7021%" height="15" fill="rgb(237,73,46)" fg:x="15718" fg:w="114"/><text x="97.0536%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (114 samples, 0.70%)</title><rect x="96.8036%" y="933" width="0.7021%" height="15" fill="rgb(242,78,33)" fg:x="15718" fg:w="114"/><text x="97.0536%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::execute&lt;&amp;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt;::{{closure}}&gt;&gt; (7 samples, 0.04%)</title><rect x="97.5057%" y="965" width="0.0431%" height="15" fill="rgb(235,60,3)" fg:x="15832" fg:w="7"/><text x="97.7557%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::execute&lt;&amp;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt;::{{closure}}&gt;&gt; (13 samples, 0.08%)</title><rect x="97.5057%" y="981" width="0.0801%" height="15" fill="rgb(216,172,19)" fg:x="15832" fg:w="13"/><text x="97.7557%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::connection::Connection::execute&lt;&amp;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt;::{{closure}}&gt; (6 samples, 0.04%)</title><rect x="97.5488%" y="965" width="0.0370%" height="15" fill="rgb(227,6,42)" fg:x="15839" fg:w="6"/><text x="97.7988%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (500 samples, 3.08%)</title><rect x="94.5125%" y="1045" width="3.0794%" height="15" fill="rgb(223,207,42)" fg:x="15346" fg:w="500"/><text x="94.7625%" y="1055.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (500 samples, 3.08%)</title><rect x="94.5125%" y="1029" width="3.0794%" height="15" fill="rgb(246,138,30)" fg:x="15346" fg:w="500"/><text x="94.7625%" y="1039.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (500 samples, 3.08%)</title><rect x="94.5125%" y="1013" width="3.0794%" height="15" fill="rgb(251,199,47)" fg:x="15346" fg:w="500"/><text x="94.7625%" y="1023.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (494 samples, 3.04%)</title><rect x="94.5495%" y="997" width="3.0424%" height="15" fill="rgb(228,218,44)" fg:x="15352" fg:w="494"/><text x="94.7995%" y="1007.50">scy..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.04%)</title><rect x="97.6227%" y="1029" width="0.0431%" height="15" fill="rgb(220,68,6)" fg:x="15851" fg:w="7"/><text x="97.8727%" y="1039.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="97.7336%" y="933" width="0.0185%" height="15" fill="rgb(240,60,26)" fg:x="15869" fg:w="3"/><text x="97.9836%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.06%)</title><rect x="97.7089%" y="1013" width="0.0616%" height="15" fill="rgb(211,200,19)" fg:x="15865" fg:w="10"/><text x="97.9589%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.06%)</title><rect x="97.7089%" y="997" width="0.0616%" height="15" fill="rgb(242,145,30)" fg:x="15865" fg:w="10"/><text x="97.9589%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.06%)</title><rect x="97.7089%" y="981" width="0.0616%" height="15" fill="rgb(225,64,13)" fg:x="15865" fg:w="10"/><text x="97.9589%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.06%)</title><rect x="97.7089%" y="965" width="0.0616%" height="15" fill="rgb(218,103,35)" fg:x="15865" fg:w="10"/><text x="97.9589%" y="975.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="97.7274%" y="949" width="0.0431%" height="15" fill="rgb(216,93,46)" fg:x="15868" fg:w="7"/><text x="97.9774%" y="959.50"></text></g><g><title>__rust_alloc (3 samples, 0.02%)</title><rect x="97.7520%" y="933" width="0.0185%" height="15" fill="rgb(225,159,27)" fg:x="15872" fg:w="3"/><text x="98.0020%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (3 samples, 0.02%)</title><rect x="97.7705%" y="1013" width="0.0185%" height="15" fill="rgb(225,204,11)" fg:x="15875" fg:w="3"/><text x="98.0205%" y="1023.50"></text></g><g><title>core::slice::rotate::ptr_rotate (2 samples, 0.01%)</title><rect x="97.7767%" y="997" width="0.0123%" height="15" fill="rgb(205,56,4)" fg:x="15876" fg:w="2"/><text x="98.0267%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (45 samples, 0.28%)</title><rect x="97.7890%" y="1013" width="0.2771%" height="15" fill="rgb(206,6,35)" fg:x="15878" fg:w="45"/><text x="98.0390%" y="1023.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (45 samples, 0.28%)</title><rect x="97.7890%" y="997" width="0.2771%" height="15" fill="rgb(247,73,52)" fg:x="15878" fg:w="45"/><text x="98.0390%" y="1007.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (69 samples, 0.42%)</title><rect x="97.6658%" y="1029" width="0.4250%" height="15" fill="rgb(246,97,4)" fg:x="15858" fg:w="69"/><text x="97.9158%" y="1039.50"></text></g><g><title>scylla::transport::load_balancing::compute_rotation (4 samples, 0.02%)</title><rect x="98.0661%" y="1013" width="0.0246%" height="15" fill="rgb(212,37,15)" fg:x="15923" fg:w="4"/><text x="98.3161%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="98.0908%" y="949" width="0.0123%" height="15" fill="rgb(208,130,40)" fg:x="15927" fg:w="2"/><text x="98.3408%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.07%)</title><rect x="98.1154%" y="917" width="0.0677%" height="15" fill="rgb(236,55,29)" fg:x="15931" fg:w="11"/><text x="98.3654%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (11 samples, 0.07%)</title><rect x="98.1154%" y="901" width="0.0677%" height="15" fill="rgb(209,156,45)" fg:x="15931" fg:w="11"/><text x="98.3654%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.07%)</title><rect x="98.1154%" y="885" width="0.0677%" height="15" fill="rgb(249,107,4)" fg:x="15931" fg:w="11"/><text x="98.3654%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.07%)</title><rect x="98.1154%" y="869" width="0.0677%" height="15" fill="rgb(227,7,13)" fg:x="15931" fg:w="11"/><text x="98.3654%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.07%)</title><rect x="98.1154%" y="853" width="0.0677%" height="15" fill="rgb(250,129,14)" fg:x="15931" fg:w="11"/><text x="98.3654%" y="863.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="98.1585%" y="837" width="0.0246%" height="15" fill="rgb(229,92,13)" fg:x="15938" fg:w="4"/><text x="98.4085%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (23 samples, 0.14%)</title><rect x="98.0908%" y="1029" width="0.1417%" height="15" fill="rgb(245,98,39)" fg:x="15927" fg:w="23"/><text x="98.3408%" y="1039.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan::{{closure}} (23 samples, 0.14%)</title><rect x="98.0908%" y="1013" width="0.1417%" height="15" fill="rgb(234,135,48)" fg:x="15927" fg:w="23"/><text x="98.3408%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23 samples, 0.14%)</title><rect x="98.0908%" y="997" width="0.1417%" height="15" fill="rgb(230,98,28)" fg:x="15927" fg:w="23"/><text x="98.3408%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23 samples, 0.14%)</title><rect x="98.0908%" y="981" width="0.1417%" height="15" fill="rgb(223,121,0)" fg:x="15927" fg:w="23"/><text x="98.3408%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23 samples, 0.14%)</title><rect x="98.0908%" y="965" width="0.1417%" height="15" fill="rgb(234,173,33)" fg:x="15927" fg:w="23"/><text x="98.3408%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.13%)</title><rect x="98.1031%" y="949" width="0.1293%" height="15" fill="rgb(245,47,8)" fg:x="15929" fg:w="21"/><text x="98.3531%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.12%)</title><rect x="98.1093%" y="933" width="0.1232%" height="15" fill="rgb(205,17,20)" fg:x="15930" fg:w="20"/><text x="98.3593%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.05%)</title><rect x="98.1832%" y="917" width="0.0493%" height="15" fill="rgb(232,151,16)" fg:x="15942" fg:w="8"/><text x="98.4332%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.05%)</title><rect x="98.1832%" y="901" width="0.0493%" height="15" fill="rgb(208,30,32)" fg:x="15942" fg:w="8"/><text x="98.4332%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.05%)</title><rect x="98.1832%" y="885" width="0.0493%" height="15" fill="rgb(254,26,3)" fg:x="15942" fg:w="8"/><text x="98.4332%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.04%)</title><rect x="98.1893%" y="869" width="0.0431%" height="15" fill="rgb(240,177,30)" fg:x="15943" fg:w="7"/><text x="98.4393%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.04%)</title><rect x="98.1893%" y="853" width="0.0431%" height="15" fill="rgb(248,76,44)" fg:x="15943" fg:w="7"/><text x="98.4393%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.04%)</title><rect x="98.1893%" y="837" width="0.0431%" height="15" fill="rgb(241,186,54)" fg:x="15943" fg:w="7"/><text x="98.4393%" y="847.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.04%)</title><rect x="98.1893%" y="821" width="0.0431%" height="15" fill="rgb(249,171,29)" fg:x="15943" fg:w="7"/><text x="98.4393%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.04%)</title><rect x="98.2324%" y="1013" width="0.0431%" height="15" fill="rgb(237,151,44)" fg:x="15950" fg:w="7"/><text x="98.4824%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.04%)</title><rect x="98.2324%" y="997" width="0.0431%" height="15" fill="rgb(228,174,30)" fg:x="15950" fg:w="7"/><text x="98.4824%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.02%)</title><rect x="98.2755%" y="949" width="0.0246%" height="15" fill="rgb(252,14,37)" fg:x="15957" fg:w="4"/><text x="98.5255%" y="959.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.02%)</title><rect x="98.2755%" y="933" width="0.0246%" height="15" fill="rgb(207,111,40)" fg:x="15957" fg:w="4"/><text x="98.5255%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="98.2755%" y="917" width="0.0246%" height="15" fill="rgb(248,171,54)" fg:x="15957" fg:w="4"/><text x="98.5255%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.02%)</title><rect x="98.2755%" y="901" width="0.0246%" height="15" fill="rgb(211,127,2)" fg:x="15957" fg:w="4"/><text x="98.5255%" y="911.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.02%)</title><rect x="98.2817%" y="885" width="0.0185%" height="15" fill="rgb(236,87,47)" fg:x="15958" fg:w="3"/><text x="98.5317%" y="895.50"></text></g><g><title>itertools::Itertools::unique (6 samples, 0.04%)</title><rect x="98.2755%" y="1013" width="0.0370%" height="15" fill="rgb(223,190,45)" fg:x="15957" fg:w="6"/><text x="98.5255%" y="1023.50"></text></g><g><title>itertools::unique_impl::unique (6 samples, 0.04%)</title><rect x="98.2755%" y="997" width="0.0370%" height="15" fill="rgb(215,5,16)" fg:x="15957" fg:w="6"/><text x="98.5255%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (6 samples, 0.04%)</title><rect x="98.2755%" y="981" width="0.0370%" height="15" fill="rgb(252,82,33)" fg:x="15957" fg:w="6"/><text x="98.5255%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (6 samples, 0.04%)</title><rect x="98.2755%" y="965" width="0.0370%" height="15" fill="rgb(247,213,44)" fg:x="15957" fg:w="6"/><text x="98.5255%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.01%)</title><rect x="98.3002%" y="949" width="0.0123%" height="15" fill="rgb(205,196,44)" fg:x="15961" fg:w="2"/><text x="98.5502%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (2 samples, 0.01%)</title><rect x="98.3002%" y="933" width="0.0123%" height="15" fill="rgb(237,96,54)" fg:x="15961" fg:w="2"/><text x="98.5502%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="98.3002%" y="917" width="0.0123%" height="15" fill="rgb(230,113,34)" fg:x="15961" fg:w="2"/><text x="98.5502%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (2 samples, 0.01%)</title><rect x="98.3002%" y="901" width="0.0123%" height="15" fill="rgb(221,224,12)" fg:x="15961" fg:w="2"/><text x="98.5502%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::range (9 samples, 0.06%)</title><rect x="98.3125%" y="997" width="0.0554%" height="15" fill="rgb(219,112,44)" fg:x="15963" fg:w="9"/><text x="98.5625%" y="1007.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (2 samples, 0.01%)</title><rect x="98.3556%" y="981" width="0.0123%" height="15" fill="rgb(210,31,13)" fg:x="15970" fg:w="2"/><text x="98.6056%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (628 samples, 3.87%)</title><rect x="94.5125%" y="1077" width="3.8677%" height="15" fill="rgb(230,25,16)" fg:x="15346" fg:w="628"/><text x="94.7625%" y="1087.50">&lt;cor..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (628 samples, 3.87%)</title><rect x="94.5125%" y="1061" width="3.8677%" height="15" fill="rgb(246,108,53)" fg:x="15346" fg:w="628"/><text x="94.7625%" y="1071.50">scyl..</text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (128 samples, 0.79%)</title><rect x="97.5919%" y="1045" width="0.7883%" height="15" fill="rgb(241,172,50)" fg:x="15846" fg:w="128"/><text x="97.8419%" y="1055.50"></text></g><g><title>scylla::transport::load_balancing::token_aware::TokenAwarePolicy::simple_strategy_replicas (24 samples, 0.15%)</title><rect x="98.2324%" y="1029" width="0.1478%" height="15" fill="rgb(235,141,10)" fg:x="15950" fg:w="24"/><text x="98.4824%" y="1039.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range (11 samples, 0.07%)</title><rect x="98.3125%" y="1013" width="0.0677%" height="15" fill="rgb(220,174,43)" fg:x="15963" fg:w="11"/><text x="98.5625%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.07%)</title><rect x="98.3802%" y="1045" width="0.0739%" height="15" fill="rgb(215,181,40)" fg:x="15974" fg:w="12"/><text x="98.6302%" y="1055.50"></text></g><g><title>bytes::bytes_mut::&lt;impl core::convert::From&lt;bytes::bytes_mut::BytesMut&gt; for bytes::bytes::Bytes&gt;::from (12 samples, 0.07%)</title><rect x="98.3802%" y="1029" width="0.0739%" height="15" fill="rgb(230,97,2)" fg:x="15974" fg:w="12"/><text x="98.6302%" y="1039.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (12 samples, 0.07%)</title><rect x="98.3802%" y="1013" width="0.0739%" height="15" fill="rgb(211,25,27)" fg:x="15974" fg:w="12"/><text x="98.6302%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (4 samples, 0.02%)</title><rect x="98.4849%" y="997" width="0.0246%" height="15" fill="rgb(230,87,26)" fg:x="15991" fg:w="4"/><text x="98.7349%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (709 samples, 4.37%)</title><rect x="94.1553%" y="1925" width="4.3666%" height="15" fill="rgb(227,160,17)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1935.50">tokio..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (709 samples, 4.37%)</title><rect x="94.1553%" y="1909" width="4.3666%" height="15" fill="rgb(244,85,34)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1919.50">tokio..</text></g><g><title>tokio::runtime::task::harness::poll_future (709 samples, 4.37%)</title><rect x="94.1553%" y="1893" width="4.3666%" height="15" fill="rgb(207,70,0)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1903.50">tokio..</text></g><g><title>std::panic::catch_unwind (709 samples, 4.37%)</title><rect x="94.1553%" y="1877" width="4.3666%" height="15" fill="rgb(223,129,7)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1887.50">std::..</text></g><g><title>std::panicking::try (709 samples, 4.37%)</title><rect x="94.1553%" y="1861" width="4.3666%" height="15" fill="rgb(246,105,7)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1871.50">std::..</text></g><g><title>std::panicking::try::do_call (709 samples, 4.37%)</title><rect x="94.1553%" y="1845" width="4.3666%" height="15" fill="rgb(215,154,42)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1855.50">std::..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (709 samples, 4.37%)</title><rect x="94.1553%" y="1829" width="4.3666%" height="15" fill="rgb(220,215,30)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1839.50">&lt;core..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (709 samples, 4.37%)</title><rect x="94.1553%" y="1813" width="4.3666%" height="15" fill="rgb(228,81,51)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1823.50">tokio..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (709 samples, 4.37%)</title><rect x="94.1553%" y="1797" width="4.3666%" height="15" fill="rgb(247,71,54)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1807.50">tokio..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (709 samples, 4.37%)</title><rect x="94.1553%" y="1781" width="4.3666%" height="15" fill="rgb(234,176,34)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1791.50">tokio..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (709 samples, 4.37%)</title><rect x="94.1553%" y="1765" width="4.3666%" height="15" fill="rgb(241,103,54)" fg:x="15288" fg:w="709"/><text x="94.4053%" y="1775.50">tokio..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1749" width="4.0094%" height="15" fill="rgb(228,22,34)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1759.50">&lt;tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1733" width="4.0094%" height="15" fill="rgb(241,179,48)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1743.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run (651 samples, 4.01%)</title><rect x="94.5125%" y="1717" width="4.0094%" height="15" fill="rgb(235,167,37)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1727.50">toki..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (651 samples, 4.01%)</title><rect x="94.5125%" y="1701" width="4.0094%" height="15" fill="rgb(213,109,30)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1711.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1685" width="4.0094%" height="15" fill="rgb(222,172,16)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1695.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (651 samples, 4.01%)</title><rect x="94.5125%" y="1669" width="4.0094%" height="15" fill="rgb(233,192,5)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1679.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (651 samples, 4.01%)</title><rect x="94.5125%" y="1653" width="4.0094%" height="15" fill="rgb(247,189,41)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1663.50">toki..</text></g><g><title>tokio::coop::budget (651 samples, 4.01%)</title><rect x="94.5125%" y="1637" width="4.0094%" height="15" fill="rgb(218,134,47)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1647.50">toki..</text></g><g><title>tokio::coop::with_budget (651 samples, 4.01%)</title><rect x="94.5125%" y="1621" width="4.0094%" height="15" fill="rgb(216,29,3)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1631.50">toki..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (651 samples, 4.01%)</title><rect x="94.5125%" y="1605" width="4.0094%" height="15" fill="rgb(246,140,12)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1615.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (651 samples, 4.01%)</title><rect x="94.5125%" y="1589" width="4.0094%" height="15" fill="rgb(230,136,11)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1599.50">std:..</text></g><g><title>tokio::coop::with_budget::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1573" width="4.0094%" height="15" fill="rgb(247,22,47)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1583.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1557" width="4.0094%" height="15" fill="rgb(218,84,22)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1567.50">toki..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (651 samples, 4.01%)</title><rect x="94.5125%" y="1541" width="4.0094%" height="15" fill="rgb(216,87,39)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1551.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1525" width="4.0094%" height="15" fill="rgb(221,178,8)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1535.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1509" width="4.0094%" height="15" fill="rgb(230,42,11)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1519.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (651 samples, 4.01%)</title><rect x="94.5125%" y="1493" width="4.0094%" height="15" fill="rgb(237,229,4)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1503.50">toki..</text></g><g><title>tokio::runtime::task::harness::poll_future (651 samples, 4.01%)</title><rect x="94.5125%" y="1477" width="4.0094%" height="15" fill="rgb(222,31,33)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1487.50">toki..</text></g><g><title>std::panic::catch_unwind (651 samples, 4.01%)</title><rect x="94.5125%" y="1461" width="4.0094%" height="15" fill="rgb(210,17,39)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1471.50">std:..</text></g><g><title>std::panicking::try (651 samples, 4.01%)</title><rect x="94.5125%" y="1445" width="4.0094%" height="15" fill="rgb(244,93,20)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1455.50">std:..</text></g><g><title>std::panicking::try::do_call (651 samples, 4.01%)</title><rect x="94.5125%" y="1429" width="4.0094%" height="15" fill="rgb(210,40,47)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1439.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (651 samples, 4.01%)</title><rect x="94.5125%" y="1413" width="4.0094%" height="15" fill="rgb(239,211,47)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1423.50">&lt;cor..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1397" width="4.0094%" height="15" fill="rgb(251,223,49)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1407.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1381" width="4.0094%" height="15" fill="rgb(221,149,5)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1391.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (651 samples, 4.01%)</title><rect x="94.5125%" y="1365" width="4.0094%" height="15" fill="rgb(219,224,51)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1375.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1349" width="4.0094%" height="15" fill="rgb(223,7,8)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1359.50">toki..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1333" width="4.0094%" height="15" fill="rgb(241,217,22)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1343.50">&lt;cor..</text></g><g><title>latte::req_stream::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1317" width="4.0094%" height="15" fill="rgb(248,209,0)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1327.50">latt..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1301" width="4.0094%" height="15" fill="rgb(217,205,4)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1311.50">&lt;fut..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (651 samples, 4.01%)</title><rect x="94.5125%" y="1285" width="4.0094%" height="15" fill="rgb(228,124,39)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1295.50">futu..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (651 samples, 4.01%)</title><rect x="94.5125%" y="1269" width="4.0094%" height="15" fill="rgb(250,116,42)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1279.50">&lt;fut..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (651 samples, 4.01%)</title><rect x="94.5125%" y="1253" width="4.0094%" height="15" fill="rgb(223,202,9)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1263.50">futu..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (651 samples, 4.01%)</title><rect x="94.5125%" y="1237" width="4.0094%" height="15" fill="rgb(242,222,40)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1247.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1221" width="4.0094%" height="15" fill="rgb(229,99,46)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1231.50">&lt;cor..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1205" width="4.0094%" height="15" fill="rgb(225,56,46)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1215.50">latt..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1189" width="4.0094%" height="15" fill="rgb(227,94,5)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1199.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1173" width="4.0094%" height="15" fill="rgb(205,112,38)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1183.50">&lt;cor..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1157" width="4.0094%" height="15" fill="rgb(231,133,46)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1167.50">&lt;lat..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1141" width="4.0094%" height="15" fill="rgb(217,16,9)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1151.50">&lt;cor..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1125" width="4.0094%" height="15" fill="rgb(249,173,9)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1135.50">scyl..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (651 samples, 4.01%)</title><rect x="94.5125%" y="1109" width="4.0094%" height="15" fill="rgb(205,163,53)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1119.50">&lt;cor..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (651 samples, 4.01%)</title><rect x="94.5125%" y="1093" width="4.0094%" height="15" fill="rgb(217,54,41)" fg:x="15346" fg:w="651"/><text x="94.7625%" y="1103.50">scyl..</text></g><g><title>scylla::transport::session::calculate_token (23 samples, 0.14%)</title><rect x="98.3802%" y="1077" width="0.1417%" height="15" fill="rgb(228,216,12)" fg:x="15974" fg:w="23"/><text x="98.6302%" y="1087.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (23 samples, 0.14%)</title><rect x="98.3802%" y="1061" width="0.1417%" height="15" fill="rgb(244,228,15)" fg:x="15974" fg:w="23"/><text x="98.6302%" y="1071.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (11 samples, 0.07%)</title><rect x="98.4541%" y="1045" width="0.0677%" height="15" fill="rgb(221,176,53)" fg:x="15986" fg:w="11"/><text x="98.7041%" y="1055.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (11 samples, 0.07%)</title><rect x="98.4541%" y="1029" width="0.0677%" height="15" fill="rgb(205,94,34)" fg:x="15986" fg:w="11"/><text x="98.7041%" y="1039.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (11 samples, 0.07%)</title><rect x="98.4541%" y="1013" width="0.0677%" height="15" fill="rgb(213,110,48)" fg:x="15986" fg:w="11"/><text x="98.7041%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="98.5219%" y="1269" width="0.0246%" height="15" fill="rgb(236,142,28)" fg:x="15997" fg:w="4"/><text x="98.7719%" y="1279.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.05%)</title><rect x="98.5527%" y="1237" width="0.0493%" height="15" fill="rgb(225,135,29)" fg:x="16002" fg:w="8"/><text x="98.8027%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.6020%" y="1221" width="0.0185%" height="15" fill="rgb(252,45,31)" fg:x="16010" fg:w="3"/><text x="98.8520%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="98.6328%" y="1125" width="0.0308%" height="15" fill="rgb(211,187,50)" fg:x="16015" fg:w="5"/><text x="98.8828%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (5 samples, 0.03%)</title><rect x="98.6328%" y="1109" width="0.0308%" height="15" fill="rgb(229,109,7)" fg:x="16015" fg:w="5"/><text x="98.8828%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (20 samples, 0.12%)</title><rect x="98.5465%" y="1253" width="0.1232%" height="15" fill="rgb(251,131,51)" fg:x="16001" fg:w="20"/><text x="98.7965%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.07%)</title><rect x="98.6020%" y="1237" width="0.0677%" height="15" fill="rgb(251,180,35)" fg:x="16010" fg:w="11"/><text x="98.8520%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1221" width="0.0493%" height="15" fill="rgb(211,46,32)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1205" width="0.0493%" height="15" fill="rgb(248,123,17)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::UniqueBy&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1189" width="0.0493%" height="15" fill="rgb(227,141,18)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1173" width="0.0493%" height="15" fill="rgb(216,102,9)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1157" width="0.0493%" height="15" fill="rgb(253,47,13)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt;&gt; (8 samples, 0.05%)</title><rect x="98.6204%" y="1141" width="0.0493%" height="15" fill="rgb(226,93,23)" fg:x="16013" fg:w="8"/><text x="98.8704%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.07%)</title><rect x="98.6697%" y="1253" width="0.0739%" height="15" fill="rgb(247,104,17)" fg:x="16021" fg:w="12"/><text x="98.9197%" y="1263.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="98.7067%" y="1237" width="0.0370%" height="15" fill="rgb(233,203,26)" fg:x="16027" fg:w="6"/><text x="98.9567%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.04%)</title><rect x="98.7067%" y="1221" width="0.0370%" height="15" fill="rgb(244,98,49)" fg:x="16027" fg:w="6"/><text x="98.9567%" y="1231.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="98.7498%" y="1141" width="0.0246%" height="15" fill="rgb(235,134,22)" fg:x="16034" fg:w="4"/><text x="98.9998%" y="1151.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="98.7744%" y="1141" width="0.0123%" height="15" fill="rgb(221,70,32)" fg:x="16038" fg:w="2"/><text x="99.0244%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (41 samples, 0.25%)</title><rect x="98.5465%" y="1269" width="0.2525%" height="15" fill="rgb(238,15,50)" fg:x="16001" fg:w="41"/><text x="98.7965%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.06%)</title><rect x="98.7436%" y="1253" width="0.0554%" height="15" fill="rgb(215,221,48)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="98.7436%" y="1237" width="0.0554%" height="15" fill="rgb(236,73,3)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="98.7436%" y="1221" width="0.0554%" height="15" fill="rgb(250,107,11)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.06%)</title><rect x="98.7436%" y="1205" width="0.0554%" height="15" fill="rgb(242,39,14)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.06%)</title><rect x="98.7436%" y="1189" width="0.0554%" height="15" fill="rgb(248,164,37)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.06%)</title><rect x="98.7436%" y="1173" width="0.0554%" height="15" fill="rgb(217,60,12)" fg:x="16033" fg:w="9"/><text x="98.9936%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.05%)</title><rect x="98.7498%" y="1157" width="0.0493%" height="15" fill="rgb(240,125,29)" fg:x="16034" fg:w="8"/><text x="98.9998%" y="1167.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="98.7867%" y="1141" width="0.0123%" height="15" fill="rgb(208,207,28)" fg:x="16040" fg:w="2"/><text x="99.0367%" y="1151.50"></text></g><g><title>__memcpy_avx_unaligned (6 samples, 0.04%)</title><rect x="98.7990%" y="1269" width="0.0370%" height="15" fill="rgb(209,159,27)" fg:x="16042" fg:w="6"/><text x="99.0490%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (55 samples, 0.34%)</title><rect x="98.5219%" y="1925" width="0.3387%" height="15" fill="rgb(251,176,53)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (55 samples, 0.34%)</title><rect x="98.5219%" y="1909" width="0.3387%" height="15" fill="rgb(211,85,7)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1919.50"></text></g><g><title>tokio::coop::budget (55 samples, 0.34%)</title><rect x="98.5219%" y="1893" width="0.3387%" height="15" fill="rgb(216,64,54)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1903.50"></text></g><g><title>tokio::coop::with_budget (55 samples, 0.34%)</title><rect x="98.5219%" y="1877" width="0.3387%" height="15" fill="rgb(217,54,24)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (55 samples, 0.34%)</title><rect x="98.5219%" y="1861" width="0.3387%" height="15" fill="rgb(208,206,53)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.34%)</title><rect x="98.5219%" y="1845" width="0.3387%" height="15" fill="rgb(251,74,39)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1855.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1829" width="0.3387%" height="15" fill="rgb(226,47,5)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1813" width="0.3387%" height="15" fill="rgb(234,111,33)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1823.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (55 samples, 0.34%)</title><rect x="98.5219%" y="1797" width="0.3387%" height="15" fill="rgb(251,14,10)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1781" width="0.3387%" height="15" fill="rgb(232,43,0)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1765" width="0.3387%" height="15" fill="rgb(222,68,43)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (55 samples, 0.34%)</title><rect x="98.5219%" y="1749" width="0.3387%" height="15" fill="rgb(217,24,23)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (55 samples, 0.34%)</title><rect x="98.5219%" y="1733" width="0.3387%" height="15" fill="rgb(229,209,14)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 0.34%)</title><rect x="98.5219%" y="1717" width="0.3387%" height="15" fill="rgb(250,149,48)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1727.50"></text></g><g><title>std::panicking::try (55 samples, 0.34%)</title><rect x="98.5219%" y="1701" width="0.3387%" height="15" fill="rgb(210,120,37)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (55 samples, 0.34%)</title><rect x="98.5219%" y="1685" width="0.3387%" height="15" fill="rgb(210,21,8)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1695.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 0.34%)</title><rect x="98.5219%" y="1669" width="0.3387%" height="15" fill="rgb(243,145,7)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1653" width="0.3387%" height="15" fill="rgb(238,178,32)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1637" width="0.3387%" height="15" fill="rgb(222,4,10)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (55 samples, 0.34%)</title><rect x="98.5219%" y="1621" width="0.3387%" height="15" fill="rgb(239,7,37)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1605" width="0.3387%" height="15" fill="rgb(215,31,37)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1589" width="0.3387%" height="15" fill="rgb(224,83,33)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1599.50"></text></g><g><title>latte::req_stream::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1573" width="0.3387%" height="15" fill="rgb(239,55,3)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1557" width="0.3387%" height="15" fill="rgb(247,92,11)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1567.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (55 samples, 0.34%)</title><rect x="98.5219%" y="1541" width="0.3387%" height="15" fill="rgb(239,200,7)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (55 samples, 0.34%)</title><rect x="98.5219%" y="1525" width="0.3387%" height="15" fill="rgb(227,115,8)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1535.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (55 samples, 0.34%)</title><rect x="98.5219%" y="1509" width="0.3387%" height="15" fill="rgb(215,189,27)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (55 samples, 0.34%)</title><rect x="98.5219%" y="1493" width="0.3387%" height="15" fill="rgb(251,216,39)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1477" width="0.3387%" height="15" fill="rgb(207,29,47)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1487.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1461" width="0.3387%" height="15" fill="rgb(210,71,34)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1445" width="0.3387%" height="15" fill="rgb(253,217,51)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1429" width="0.3387%" height="15" fill="rgb(222,117,46)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1439.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1413" width="0.3387%" height="15" fill="rgb(226,132,6)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1397" width="0.3387%" height="15" fill="rgb(254,145,51)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1407.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1381" width="0.3387%" height="15" fill="rgb(231,199,27)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1365" width="0.3387%" height="15" fill="rgb(245,158,14)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1375.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1349" width="0.3387%" height="15" fill="rgb(240,113,14)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.34%)</title><rect x="98.5219%" y="1333" width="0.3387%" height="15" fill="rgb(210,20,13)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1343.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (55 samples, 0.34%)</title><rect x="98.5219%" y="1317" width="0.3387%" height="15" fill="rgb(241,144,13)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1327.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (55 samples, 0.34%)</title><rect x="98.5219%" y="1301" width="0.3387%" height="15" fill="rgb(235,43,34)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (55 samples, 0.34%)</title><rect x="98.5219%" y="1285" width="0.3387%" height="15" fill="rgb(208,36,20)" fg:x="15997" fg:w="55"/><text x="98.7719%" y="1295.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="98.8360%" y="1269" width="0.0246%" height="15" fill="rgb(239,204,10)" fg:x="16048" fg:w="4"/><text x="99.0860%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.8668%" y="1109" width="0.0185%" height="15" fill="rgb(217,84,43)" fg:x="16053" fg:w="3"/><text x="99.1168%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.8668%" y="1093" width="0.0185%" height="15" fill="rgb(241,170,50)" fg:x="16053" fg:w="3"/><text x="99.1168%" y="1103.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="98.8729%" y="1077" width="0.0123%" height="15" fill="rgb(226,205,29)" fg:x="16054" fg:w="2"/><text x="99.1229%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (9 samples, 0.06%)</title><rect x="98.8853%" y="1109" width="0.0554%" height="15" fill="rgb(233,113,1)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (9 samples, 0.06%)</title><rect x="98.8853%" y="1093" width="0.0554%" height="15" fill="rgb(253,98,13)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt; (9 samples, 0.06%)</title><rect x="98.8853%" y="1077" width="0.0554%" height="15" fill="rgb(211,115,12)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (9 samples, 0.06%)</title><rect x="98.8853%" y="1061" width="0.0554%" height="15" fill="rgb(208,12,16)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.06%)</title><rect x="98.8853%" y="1045" width="0.0554%" height="15" fill="rgb(237,193,54)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.06%)</title><rect x="98.8853%" y="1029" width="0.0554%" height="15" fill="rgb(243,22,42)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.06%)</title><rect x="98.8853%" y="1013" width="0.0554%" height="15" fill="rgb(233,151,36)" fg:x="16056" fg:w="9"/><text x="99.1353%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (16 samples, 0.10%)</title><rect x="98.8606%" y="1125" width="0.0985%" height="15" fill="rgb(237,57,45)" fg:x="16052" fg:w="16"/><text x="99.1106%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.02%)</title><rect x="98.9407%" y="1109" width="0.0185%" height="15" fill="rgb(221,88,17)" fg:x="16065" fg:w="3"/><text x="99.1907%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="98.9407%" y="1093" width="0.0185%" height="15" fill="rgb(230,79,15)" fg:x="16065" fg:w="3"/><text x="99.1907%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (2 samples, 0.01%)</title><rect x="98.9468%" y="1077" width="0.0123%" height="15" fill="rgb(213,57,13)" fg:x="16066" fg:w="2"/><text x="99.1968%" y="1087.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (2 samples, 0.01%)</title><rect x="98.9468%" y="1061" width="0.0123%" height="15" fill="rgb(222,116,39)" fg:x="16066" fg:w="2"/><text x="99.1968%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.10%)</title><rect x="98.8606%" y="1141" width="0.1047%" height="15" fill="rgb(245,107,2)" fg:x="16052" fg:w="17"/><text x="99.1106%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 0.29%)</title><rect x="98.8606%" y="1269" width="0.2895%" height="15" fill="rgb(238,1,10)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (47 samples, 0.29%)</title><rect x="98.8606%" y="1253" width="0.2895%" height="15" fill="rgb(249,4,48)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1237" width="0.2895%" height="15" fill="rgb(223,151,18)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1221" width="0.2895%" height="15" fill="rgb(227,65,43)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::UniqueBy&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1205" width="0.2895%" height="15" fill="rgb(218,40,45)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1189" width="0.2895%" height="15" fill="rgb(252,121,31)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1173" width="0.2895%" height="15" fill="rgb(219,158,43)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt;&gt; (47 samples, 0.29%)</title><rect x="98.8606%" y="1157" width="0.2895%" height="15" fill="rgb(231,162,42)" fg:x="16052" fg:w="47"/><text x="99.1106%" y="1167.50"></text></g><g><title>__GI___libc_free (30 samples, 0.18%)</title><rect x="98.9653%" y="1141" width="0.1848%" height="15" fill="rgb(217,179,25)" fg:x="16069" fg:w="30"/><text x="99.2153%" y="1151.50"></text></g><g><title>_int_free (9 samples, 0.06%)</title><rect x="99.0947%" y="1125" width="0.0554%" height="15" fill="rgb(206,212,31)" fg:x="16090" fg:w="9"/><text x="99.3447%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="99.2055%" y="1237" width="0.0431%" height="15" fill="rgb(235,144,12)" fg:x="16108" fg:w="7"/><text x="99.4555%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="99.2856%" y="1205" width="0.0123%" height="15" fill="rgb(213,51,10)" fg:x="16121" fg:w="2"/><text x="99.5356%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="99.2856%" y="1189" width="0.0123%" height="15" fill="rgb(231,145,14)" fg:x="16121" fg:w="2"/><text x="99.5356%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="99.2856%" y="1173" width="0.0123%" height="15" fill="rgb(235,15,28)" fg:x="16121" fg:w="2"/><text x="99.5356%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (2 samples, 0.01%)</title><rect x="99.2856%" y="1157" width="0.0123%" height="15" fill="rgb(237,206,10)" fg:x="16121" fg:w="2"/><text x="99.5356%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (2 samples, 0.01%)</title><rect x="99.3041%" y="1125" width="0.0123%" height="15" fill="rgb(236,227,27)" fg:x="16124" fg:w="2"/><text x="99.5541%" y="1135.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.03%)</title><rect x="99.3041%" y="1141" width="0.0308%" height="15" fill="rgb(246,83,35)" fg:x="16124" fg:w="5"/><text x="99.5541%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked::{{closure}} (3 samples, 0.02%)</title><rect x="99.3164%" y="1125" width="0.0185%" height="15" fill="rgb(220,136,24)" fg:x="16126" fg:w="3"/><text x="99.5664%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (3 samples, 0.02%)</title><rect x="99.3164%" y="1109" width="0.0185%" height="15" fill="rgb(217,3,25)" fg:x="16126" fg:w="3"/><text x="99.5664%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.02%)</title><rect x="99.3164%" y="1093" width="0.0185%" height="15" fill="rgb(239,24,14)" fg:x="16126" fg:w="3"/><text x="99.5664%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2 samples, 0.01%)</title><rect x="99.3225%" y="1077" width="0.0123%" height="15" fill="rgb(244,16,53)" fg:x="16127" fg:w="2"/><text x="99.5725%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="99.2979%" y="1189" width="0.0554%" height="15" fill="rgb(208,175,44)" fg:x="16123" fg:w="9"/><text x="99.5479%" y="1199.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_checked (9 samples, 0.06%)</title><rect x="99.2979%" y="1173" width="0.0554%" height="15" fill="rgb(252,18,48)" fg:x="16123" fg:w="9"/><text x="99.5479%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (9 samples, 0.06%)</title><rect x="99.2979%" y="1157" width="0.0554%" height="15" fill="rgb(234,199,32)" fg:x="16123" fg:w="9"/><text x="99.5479%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (3 samples, 0.02%)</title><rect x="99.3349%" y="1141" width="0.0185%" height="15" fill="rgb(225,77,54)" fg:x="16129" fg:w="3"/><text x="99.5849%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="99.3349%" y="1125" width="0.0185%" height="15" fill="rgb(225,42,25)" fg:x="16129" fg:w="3"/><text x="99.5849%" y="1135.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.47%)</title><rect x="99.3533%" y="1109" width="0.4742%" height="15" fill="rgb(242,227,46)" fg:x="16132" fg:w="77"/><text x="99.6033%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.60%)</title><rect x="99.2486%" y="1237" width="0.5974%" height="15" fill="rgb(246,197,35)" fg:x="16115" fg:w="97"/><text x="99.4986%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.58%)</title><rect x="99.2671%" y="1221" width="0.5789%" height="15" fill="rgb(215,159,26)" fg:x="16118" fg:w="94"/><text x="99.5171%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.55%)</title><rect x="99.2979%" y="1205" width="0.5481%" height="15" fill="rgb(212,194,50)" fg:x="16123" fg:w="89"/><text x="99.5479%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (80 samples, 0.49%)</title><rect x="99.3533%" y="1189" width="0.4927%" height="15" fill="rgb(246,132,1)" fg:x="16132" fg:w="80"/><text x="99.6033%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (80 samples, 0.49%)</title><rect x="99.3533%" y="1173" width="0.4927%" height="15" fill="rgb(217,71,7)" fg:x="16132" fg:w="80"/><text x="99.6033%" y="1183.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range::{{closure}} (80 samples, 0.49%)</title><rect x="99.3533%" y="1157" width="0.4927%" height="15" fill="rgb(252,59,32)" fg:x="16132" fg:w="80"/><text x="99.6033%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (80 samples, 0.49%)</title><rect x="99.3533%" y="1141" width="0.4927%" height="15" fill="rgb(253,204,25)" fg:x="16132" fg:w="80"/><text x="99.6033%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (80 samples, 0.49%)</title><rect x="99.3533%" y="1125" width="0.4927%" height="15" fill="rgb(232,21,16)" fg:x="16132" fg:w="80"/><text x="99.6033%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="99.8276%" y="1109" width="0.0185%" height="15" fill="rgb(248,90,29)" fg:x="16209" fg:w="3"/><text x="100.0776%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10 samples, 0.06%)</title><rect x="99.8522%" y="1237" width="0.0616%" height="15" fill="rgb(249,223,7)" fg:x="16213" fg:w="10"/><text x="100.1022%" y="1247.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.06%)</title><rect x="99.8583%" y="1221" width="0.0554%" height="15" fill="rgb(231,119,42)" fg:x="16214" fg:w="9"/><text x="100.1083%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.03%)</title><rect x="99.9261%" y="1173" width="0.0308%" height="15" fill="rgb(215,41,35)" fg:x="16225" fg:w="5"/><text x="100.1761%" y="1183.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.02%)</title><rect x="99.9384%" y="1157" width="0.0185%" height="15" fill="rgb(220,44,45)" fg:x="16227" fg:w="3"/><text x="100.1884%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.02%)</title><rect x="99.9384%" y="1141" width="0.0185%" height="15" fill="rgb(253,197,36)" fg:x="16227" fg:w="3"/><text x="100.1884%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (179 samples, 1.10%)</title><rect x="98.8606%" y="1925" width="1.1024%" height="15" fill="rgb(245,225,54)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1935.50"></text></g><g><title>tokio::coop::budget (179 samples, 1.10%)</title><rect x="98.8606%" y="1909" width="1.1024%" height="15" fill="rgb(239,94,37)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1919.50"></text></g><g><title>tokio::coop::with_budget (179 samples, 1.10%)</title><rect x="98.8606%" y="1893" width="1.1024%" height="15" fill="rgb(242,217,10)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1903.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (179 samples, 1.10%)</title><rect x="98.8606%" y="1877" width="1.1024%" height="15" fill="rgb(250,193,7)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (179 samples, 1.10%)</title><rect x="98.8606%" y="1861" width="1.1024%" height="15" fill="rgb(230,104,19)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1871.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1845" width="1.1024%" height="15" fill="rgb(230,181,4)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1855.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1829" width="1.1024%" height="15" fill="rgb(216,219,49)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1839.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (179 samples, 1.10%)</title><rect x="98.8606%" y="1813" width="1.1024%" height="15" fill="rgb(254,144,0)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1823.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1797" width="1.1024%" height="15" fill="rgb(205,209,38)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1781" width="1.1024%" height="15" fill="rgb(240,21,42)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (179 samples, 1.10%)</title><rect x="98.8606%" y="1765" width="1.1024%" height="15" fill="rgb(241,132,3)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (179 samples, 1.10%)</title><rect x="98.8606%" y="1749" width="1.1024%" height="15" fill="rgb(225,14,2)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (179 samples, 1.10%)</title><rect x="98.8606%" y="1733" width="1.1024%" height="15" fill="rgb(210,141,35)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1743.50"></text></g><g><title>std::panicking::try (179 samples, 1.10%)</title><rect x="98.8606%" y="1717" width="1.1024%" height="15" fill="rgb(251,14,44)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (179 samples, 1.10%)</title><rect x="98.8606%" y="1701" width="1.1024%" height="15" fill="rgb(247,48,18)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1711.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (179 samples, 1.10%)</title><rect x="98.8606%" y="1685" width="1.1024%" height="15" fill="rgb(225,0,40)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1669" width="1.1024%" height="15" fill="rgb(221,31,33)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1653" width="1.1024%" height="15" fill="rgb(237,42,40)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1663.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (179 samples, 1.10%)</title><rect x="98.8606%" y="1637" width="1.1024%" height="15" fill="rgb(233,51,29)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1621" width="1.1024%" height="15" fill="rgb(226,58,20)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1631.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1605" width="1.1024%" height="15" fill="rgb(208,98,7)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1615.50"></text></g><g><title>latte::req_stream::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1589" width="1.1024%" height="15" fill="rgb(228,143,44)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1599.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1573" width="1.1024%" height="15" fill="rgb(246,55,38)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1583.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (179 samples, 1.10%)</title><rect x="98.8606%" y="1557" width="1.1024%" height="15" fill="rgb(247,87,16)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (179 samples, 1.10%)</title><rect x="98.8606%" y="1541" width="1.1024%" height="15" fill="rgb(234,129,42)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1551.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (179 samples, 1.10%)</title><rect x="98.8606%" y="1525" width="1.1024%" height="15" fill="rgb(220,82,16)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (179 samples, 1.10%)</title><rect x="98.8606%" y="1509" width="1.1024%" height="15" fill="rgb(211,88,4)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1493" width="1.1024%" height="15" fill="rgb(248,151,21)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1503.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1477" width="1.1024%" height="15" fill="rgb(238,163,6)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1487.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1461" width="1.1024%" height="15" fill="rgb(209,183,11)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1445" width="1.1024%" height="15" fill="rgb(219,37,20)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1455.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1429" width="1.1024%" height="15" fill="rgb(210,158,4)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1413" width="1.1024%" height="15" fill="rgb(221,167,53)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1423.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1397" width="1.1024%" height="15" fill="rgb(237,151,45)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1381" width="1.1024%" height="15" fill="rgb(231,39,3)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1391.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1365" width="1.1024%" height="15" fill="rgb(212,167,28)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 1.10%)</title><rect x="98.8606%" y="1349" width="1.1024%" height="15" fill="rgb(232,178,8)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1359.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (179 samples, 1.10%)</title><rect x="98.8606%" y="1333" width="1.1024%" height="15" fill="rgb(225,151,20)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1343.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (179 samples, 1.10%)</title><rect x="98.8606%" y="1317" width="1.1024%" height="15" fill="rgb(238,3,37)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (179 samples, 1.10%)</title><rect x="98.8606%" y="1301" width="1.1024%" height="15" fill="rgb(251,147,42)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (179 samples, 1.10%)</title><rect x="98.8606%" y="1285" width="1.1024%" height="15" fill="rgb(208,173,10)" fg:x="16052" fg:w="179"/><text x="99.1106%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.81%)</title><rect x="99.1501%" y="1269" width="0.8130%" height="15" fill="rgb(246,225,4)" fg:x="16099" fg:w="132"/><text x="99.4001%" y="1279.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (132 samples, 0.81%)</title><rect x="99.1501%" y="1253" width="0.8130%" height="15" fill="rgb(248,102,6)" fg:x="16099" fg:w="132"/><text x="99.4001%" y="1263.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.05%)</title><rect x="99.9138%" y="1237" width="0.0493%" height="15" fill="rgb(232,6,21)" fg:x="16223" fg:w="8"/><text x="100.1638%" y="1247.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (8 samples, 0.05%)</title><rect x="99.9138%" y="1221" width="0.0493%" height="15" fill="rgb(221,179,22)" fg:x="16223" fg:w="8"/><text x="100.1638%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (8 samples, 0.05%)</title><rect x="99.9138%" y="1205" width="0.0493%" height="15" fill="rgb(252,50,20)" fg:x="16223" fg:w="8"/><text x="100.1638%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.04%)</title><rect x="99.9261%" y="1189" width="0.0370%" height="15" fill="rgb(222,56,38)" fg:x="16225" fg:w="6"/><text x="100.1761%" y="1199.50"></text></g><g><title>all (16,237 samples, 100%)</title><rect x="0.0000%" y="1957" width="100.0000%" height="15" fill="rgb(206,193,29)" fg:x="0" fg:w="16237"/><text x="0.2500%" y="1967.50"></text></g><g><title>tokio (16,050 samples, 98.85%)</title><rect x="1.1517%" y="1941" width="98.8483%" height="15" fill="rgb(239,192,45)" fg:x="187" fg:w="16050"/><text x="1.4017%" y="1951.50">tokio</text></g><g><title>tokio::runtime::thread_pool::worker::run (6 samples, 0.04%)</title><rect x="99.9630%" y="1925" width="0.0370%" height="15" fill="rgb(254,18,36)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1935.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 0.04%)</title><rect x="99.9630%" y="1909" width="0.0370%" height="15" fill="rgb(221,127,11)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1919.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1893" width="0.0370%" height="15" fill="rgb(234,146,35)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6 samples, 0.04%)</title><rect x="99.9630%" y="1877" width="0.0370%" height="15" fill="rgb(254,201,37)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6 samples, 0.04%)</title><rect x="99.9630%" y="1861" width="0.0370%" height="15" fill="rgb(211,202,23)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1871.50"></text></g><g><title>tokio::coop::budget (6 samples, 0.04%)</title><rect x="99.9630%" y="1845" width="0.0370%" height="15" fill="rgb(237,91,2)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1855.50"></text></g><g><title>tokio::coop::with_budget (6 samples, 0.04%)</title><rect x="99.9630%" y="1829" width="0.0370%" height="15" fill="rgb(226,228,36)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="99.9630%" y="1813" width="0.0370%" height="15" fill="rgb(213,63,50)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.04%)</title><rect x="99.9630%" y="1797" width="0.0370%" height="15" fill="rgb(235,194,19)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1807.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1781" width="0.0370%" height="15" fill="rgb(207,204,18)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1791.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1765" width="0.0370%" height="15" fill="rgb(248,8,7)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1775.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (6 samples, 0.04%)</title><rect x="99.9630%" y="1749" width="0.0370%" height="15" fill="rgb(223,145,47)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1759.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1733" width="0.0370%" height="15" fill="rgb(228,84,11)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1717" width="0.0370%" height="15" fill="rgb(218,76,45)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.04%)</title><rect x="99.9630%" y="1701" width="0.0370%" height="15" fill="rgb(223,80,15)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.04%)</title><rect x="99.9630%" y="1685" width="0.0370%" height="15" fill="rgb(219,218,33)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.04%)</title><rect x="99.9630%" y="1669" width="0.0370%" height="15" fill="rgb(208,51,11)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1679.50"></text></g><g><title>std::panicking::try (6 samples, 0.04%)</title><rect x="99.9630%" y="1653" width="0.0370%" height="15" fill="rgb(229,165,39)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.04%)</title><rect x="99.9630%" y="1637" width="0.0370%" height="15" fill="rgb(241,100,24)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1647.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.04%)</title><rect x="99.9630%" y="1621" width="0.0370%" height="15" fill="rgb(228,14,23)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1605" width="0.0370%" height="15" fill="rgb(247,116,52)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1589" width="0.0370%" height="15" fill="rgb(216,149,33)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1599.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.04%)</title><rect x="99.9630%" y="1573" width="0.0370%" height="15" fill="rgb(238,142,29)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1557" width="0.0370%" height="15" fill="rgb(224,83,40)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1567.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1541" width="0.0370%" height="15" fill="rgb(234,165,11)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1551.50"></text></g><g><title>latte::req_stream::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1525" width="0.0370%" height="15" fill="rgb(215,96,23)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1509" width="0.0370%" height="15" fill="rgb(233,179,26)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1519.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (6 samples, 0.04%)</title><rect x="99.9630%" y="1493" width="0.0370%" height="15" fill="rgb(225,129,33)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.04%)</title><rect x="99.9630%" y="1477" width="0.0370%" height="15" fill="rgb(237,49,13)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1487.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (6 samples, 0.04%)</title><rect x="99.9630%" y="1461" width="0.0370%" height="15" fill="rgb(211,3,31)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1471.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.04%)</title><rect x="99.9630%" y="1445" width="0.0370%" height="15" fill="rgb(216,152,19)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1429" width="0.0370%" height="15" fill="rgb(251,121,35)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1439.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1413" width="0.0370%" height="15" fill="rgb(210,217,47)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1397" width="0.0370%" height="15" fill="rgb(244,116,22)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1381" width="0.0370%" height="15" fill="rgb(228,17,21)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1391.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1365" width="0.0370%" height="15" fill="rgb(240,149,34)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1349" width="0.0370%" height="15" fill="rgb(208,125,47)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1359.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1333" width="0.0370%" height="15" fill="rgb(249,186,39)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="99.9630%" y="1317" width="0.0370%" height="15" fill="rgb(240,220,33)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1327.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (6 samples, 0.04%)</title><rect x="99.9630%" y="1301" width="0.0370%" height="15" fill="rgb(243,110,23)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1311.50"></text></g><g><title>scylla::transport::session::calculate_token (6 samples, 0.04%)</title><rect x="99.9630%" y="1285" width="0.0370%" height="15" fill="rgb(219,163,46)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1295.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (6 samples, 0.04%)</title><rect x="99.9630%" y="1269" width="0.0370%" height="15" fill="rgb(216,126,30)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1279.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6 samples, 0.04%)</title><rect x="99.9630%" y="1253" width="0.0370%" height="15" fill="rgb(208,139,11)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1263.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.04%)</title><rect x="99.9630%" y="1237" width="0.0370%" height="15" fill="rgb(213,118,36)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1247.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (6 samples, 0.04%)</title><rect x="99.9630%" y="1221" width="0.0370%" height="15" fill="rgb(226,43,17)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="99.9630%" y="1205" width="0.0370%" height="15" fill="rgb(254,217,4)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.04%)</title><rect x="99.9630%" y="1189" width="0.0370%" height="15" fill="rgb(210,134,47)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.04%)</title><rect x="99.9630%" y="1173" width="0.0370%" height="15" fill="rgb(237,24,49)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.04%)</title><rect x="99.9630%" y="1157" width="0.0370%" height="15" fill="rgb(251,39,46)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.04%)</title><rect x="99.9630%" y="1141" width="0.0370%" height="15" fill="rgb(251,220,3)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1151.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.04%)</title><rect x="99.9630%" y="1125" width="0.0370%" height="15" fill="rgb(228,105,12)" fg:x="16231" fg:w="6"/><text x="100.2130%" y="1135.50"></text></g></svg></svg>