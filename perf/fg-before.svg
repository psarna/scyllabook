<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1990" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1973.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1973.00"> </text><svg id="frames" x="10" width="1180" total_samples="32758"><g><title>calculate_sigpending (19 samples, 0.06%)</title><rect x="0.0031%" y="1877" width="0.0580%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="19"/><text x="0.2531%" y="1887.50"></text></g><g><title>schedule_tail (105 samples, 0.32%)</title><rect x="0.0611%" y="1877" width="0.3205%" height="15" fill="rgb(217,0,24)" fg:x="20" fg:w="105"/><text x="0.3111%" y="1887.50"></text></g><g><title>finish_task_switch.isra.0 (99 samples, 0.30%)</title><rect x="0.0794%" y="1861" width="0.3022%" height="15" fill="rgb(221,193,54)" fg:x="26" fg:w="99"/><text x="0.3294%" y="1871.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 0.06%)</title><rect x="0.3205%" y="1845" width="0.0611%" height="15" fill="rgb(248,212,6)" fg:x="105" fg:w="20"/><text x="0.5705%" y="1855.50"></text></g><g><title>ret_from_fork (125 samples, 0.38%)</title><rect x="0.0031%" y="1893" width="0.3816%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="125"/><text x="0.2531%" y="1903.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (4 samples, 0.01%)</title><rect x="0.3968%" y="1557" width="0.0122%" height="15" fill="rgb(232,128,0)" fg:x="130" fg:w="4"/><text x="0.6468%" y="1567.50"></text></g><g><title>indicatif::utils::expand_template::{{closure}} (4 samples, 0.01%)</title><rect x="0.3968%" y="1541" width="0.0122%" height="15" fill="rgb(207,160,47)" fg:x="130" fg:w="4"/><text x="0.6468%" y="1551.50"></text></g><g><title>indicatif::progress::ProgressBar::set_position (13 samples, 0.04%)</title><rect x="0.3877%" y="1685" width="0.0397%" height="15" fill="rgb(228,23,34)" fg:x="127" fg:w="13"/><text x="0.6377%" y="1695.50"></text></g><g><title>indicatif::progress::ProgressBar::update_and_draw (13 samples, 0.04%)</title><rect x="0.3877%" y="1669" width="0.0397%" height="15" fill="rgb(218,30,26)" fg:x="127" fg:w="13"/><text x="0.6377%" y="1679.50"></text></g><g><title>indicatif::progress::ProgressBar::draw (13 samples, 0.04%)</title><rect x="0.3877%" y="1653" width="0.0397%" height="15" fill="rgb(220,122,19)" fg:x="127" fg:w="13"/><text x="0.6377%" y="1663.50"></text></g><g><title>indicatif::progress::draw_state (13 samples, 0.04%)</title><rect x="0.3877%" y="1637" width="0.0397%" height="15" fill="rgb(250,228,42)" fg:x="127" fg:w="13"/><text x="0.6377%" y="1647.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (11 samples, 0.03%)</title><rect x="0.3938%" y="1621" width="0.0336%" height="15" fill="rgb(240,193,28)" fg:x="129" fg:w="11"/><text x="0.6438%" y="1631.50"></text></g><g><title>indicatif::utils::expand_template (10 samples, 0.03%)</title><rect x="0.3968%" y="1605" width="0.0305%" height="15" fill="rgb(216,20,37)" fg:x="130" fg:w="10"/><text x="0.6468%" y="1615.50"></text></g><g><title>regex::re_unicode::Regex::replace_all (10 samples, 0.03%)</title><rect x="0.3968%" y="1589" width="0.0305%" height="15" fill="rgb(206,188,39)" fg:x="130" fg:w="10"/><text x="0.6468%" y="1599.50"></text></g><g><title>regex::re_unicode::Regex::replacen (10 samples, 0.03%)</title><rect x="0.3968%" y="1573" width="0.0305%" height="15" fill="rgb(217,207,13)" fg:x="130" fg:w="10"/><text x="0.6468%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.07%)</title><rect x="0.3877%" y="1797" width="0.0702%" height="15" fill="rgb(231,73,38)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1807.50"></text></g><g><title>std::panicking::try (23 samples, 0.07%)</title><rect x="0.3877%" y="1781" width="0.0702%" height="15" fill="rgb(225,20,46)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.07%)</title><rect x="0.3877%" y="1765" width="0.0702%" height="15" fill="rgb(210,31,41)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1775.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="0.3877%" y="1749" width="0.0702%" height="15" fill="rgb(221,200,47)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1759.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (23 samples, 0.07%)</title><rect x="0.3877%" y="1733" width="0.0702%" height="15" fill="rgb(226,26,5)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1743.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 0.07%)</title><rect x="0.3877%" y="1717" width="0.0702%" height="15" fill="rgb(249,33,26)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1727.50"></text></g><g><title>latte::progress::FastProgressBar::wrap::{{closure}} (23 samples, 0.07%)</title><rect x="0.3877%" y="1701" width="0.0702%" height="15" fill="rgb(235,183,28)" fg:x="127" fg:w="23"/><text x="0.6377%" y="1711.50"></text></g><g><title>std::thread::sleep (10 samples, 0.03%)</title><rect x="0.4274%" y="1685" width="0.0305%" height="15" fill="rgb(221,5,38)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1695.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (10 samples, 0.03%)</title><rect x="0.4274%" y="1669" width="0.0305%" height="15" fill="rgb(247,18,42)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1679.50"></text></g><g><title>__GI___nanosleep (10 samples, 0.03%)</title><rect x="0.4274%" y="1653" width="0.0305%" height="15" fill="rgb(241,131,45)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1663.50"></text></g><g><title>__clock_nanosleep_2 (10 samples, 0.03%)</title><rect x="0.4274%" y="1637" width="0.0305%" height="15" fill="rgb(249,31,29)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1647.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="0.4274%" y="1621" width="0.0305%" height="15" fill="rgb(225,111,53)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1631.50"></text></g><g><title>do_syscall_64 (10 samples, 0.03%)</title><rect x="0.4274%" y="1605" width="0.0305%" height="15" fill="rgb(238,160,17)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1615.50"></text></g><g><title>__x64_sys_clock_nanosleep (10 samples, 0.03%)</title><rect x="0.4274%" y="1589" width="0.0305%" height="15" fill="rgb(214,148,48)" fg:x="140" fg:w="10"/><text x="0.6774%" y="1599.50"></text></g><g><title>common_nsleep (8 samples, 0.02%)</title><rect x="0.4335%" y="1573" width="0.0244%" height="15" fill="rgb(232,36,49)" fg:x="142" fg:w="8"/><text x="0.6835%" y="1583.50"></text></g><g><title>hrtimer_nanosleep (8 samples, 0.02%)</title><rect x="0.4335%" y="1557" width="0.0244%" height="15" fill="rgb(209,103,24)" fg:x="142" fg:w="8"/><text x="0.6835%" y="1567.50"></text></g><g><title>do_nanosleep (8 samples, 0.02%)</title><rect x="0.4335%" y="1541" width="0.0244%" height="15" fill="rgb(229,88,8)" fg:x="142" fg:w="8"/><text x="0.6835%" y="1551.50"></text></g><g><title>schedule (8 samples, 0.02%)</title><rect x="0.4335%" y="1525" width="0.0244%" height="15" fill="rgb(213,181,19)" fg:x="142" fg:w="8"/><text x="0.6835%" y="1535.50"></text></g><g><title>__schedule (8 samples, 0.02%)</title><rect x="0.4335%" y="1509" width="0.0244%" height="15" fill="rgb(254,191,54)" fg:x="142" fg:w="8"/><text x="0.6835%" y="1519.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="0.4365%" y="1493" width="0.0214%" height="15" fill="rgb(241,83,37)" fg:x="143" fg:w="7"/><text x="0.6865%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 0.07%)</title><rect x="0.3877%" y="1861" width="0.0733%" height="15" fill="rgb(233,36,39)" fg:x="127" fg:w="24"/><text x="0.6377%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (24 samples, 0.07%)</title><rect x="0.3877%" y="1845" width="0.0733%" height="15" fill="rgb(226,3,54)" fg:x="127" fg:w="24"/><text x="0.6377%" y="1855.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (24 samples, 0.07%)</title><rect x="0.3877%" y="1829" width="0.0733%" height="15" fill="rgb(245,192,40)" fg:x="127" fg:w="24"/><text x="0.6377%" y="1839.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (24 samples, 0.07%)</title><rect x="0.3877%" y="1813" width="0.0733%" height="15" fill="rgb(238,167,29)" fg:x="127" fg:w="24"/><text x="0.6377%" y="1823.50"></text></g><g><title>__GI___mmap64 (11 samples, 0.03%)</title><rect x="0.4610%" y="1797" width="0.0336%" height="15" fill="rgb(232,182,51)" fg:x="151" fg:w="11"/><text x="0.7110%" y="1807.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.03%)</title><rect x="0.4610%" y="1781" width="0.0336%" height="15" fill="rgb(231,60,39)" fg:x="151" fg:w="11"/><text x="0.7110%" y="1791.50"></text></g><g><title>do_syscall_64 (11 samples, 0.03%)</title><rect x="0.4610%" y="1765" width="0.0336%" height="15" fill="rgb(208,69,12)" fg:x="151" fg:w="11"/><text x="0.7110%" y="1775.50"></text></g><g><title>vm_mmap_pgoff (11 samples, 0.03%)</title><rect x="0.4610%" y="1749" width="0.0336%" height="15" fill="rgb(235,93,37)" fg:x="151" fg:w="11"/><text x="0.7110%" y="1759.50"></text></g><g><title>do_mmap (11 samples, 0.03%)</title><rect x="0.4610%" y="1733" width="0.0336%" height="15" fill="rgb(213,116,39)" fg:x="151" fg:w="11"/><text x="0.7110%" y="1743.50"></text></g><g><title>mmap_region (10 samples, 0.03%)</title><rect x="0.4640%" y="1717" width="0.0305%" height="15" fill="rgb(222,207,29)" fg:x="152" fg:w="10"/><text x="0.7140%" y="1727.50"></text></g><g><title>perf_event_mmap (9 samples, 0.03%)</title><rect x="0.4671%" y="1701" width="0.0275%" height="15" fill="rgb(206,96,30)" fg:x="153" fg:w="9"/><text x="0.7171%" y="1711.50"></text></g><g><title>perf_iterate_sb (8 samples, 0.02%)</title><rect x="0.4701%" y="1685" width="0.0244%" height="15" fill="rgb(218,138,4)" fg:x="154" fg:w="8"/><text x="0.7201%" y="1695.50"></text></g><g><title>perf_iterate_ctx (8 samples, 0.02%)</title><rect x="0.4701%" y="1669" width="0.0244%" height="15" fill="rgb(250,191,14)" fg:x="154" fg:w="8"/><text x="0.7201%" y="1679.50"></text></g><g><title>__GI___clone (163 samples, 0.50%)</title><rect x="0.0031%" y="1909" width="0.4976%" height="15" fill="rgb(239,60,40)" fg:x="1" fg:w="163"/><text x="0.2531%" y="1919.50"></text></g><g><title>start_thread (38 samples, 0.12%)</title><rect x="0.3846%" y="1893" width="0.1160%" height="15" fill="rgb(206,27,48)" fg:x="126" fg:w="38"/><text x="0.6346%" y="1903.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37 samples, 0.11%)</title><rect x="0.3877%" y="1877" width="0.1129%" height="15" fill="rgb(225,35,8)" fg:x="127" fg:w="37"/><text x="0.6377%" y="1887.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (13 samples, 0.04%)</title><rect x="0.4610%" y="1861" width="0.0397%" height="15" fill="rgb(250,213,24)" fg:x="151" fg:w="13"/><text x="0.7110%" y="1871.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (13 samples, 0.04%)</title><rect x="0.4610%" y="1845" width="0.0397%" height="15" fill="rgb(247,123,22)" fg:x="151" fg:w="13"/><text x="0.7110%" y="1855.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (13 samples, 0.04%)</title><rect x="0.4610%" y="1829" width="0.0397%" height="15" fill="rgb(231,138,38)" fg:x="151" fg:w="13"/><text x="0.7110%" y="1839.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (13 samples, 0.04%)</title><rect x="0.4610%" y="1813" width="0.0397%" height="15" fill="rgb(231,145,46)" fg:x="151" fg:w="13"/><text x="0.7110%" y="1823.50"></text></g><g><title>_start (8 samples, 0.02%)</title><rect x="0.5037%" y="1909" width="0.0244%" height="15" fill="rgb(251,118,11)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1919.50"></text></g><g><title>__libc_start_main (8 samples, 0.02%)</title><rect x="0.5037%" y="1893" width="0.0244%" height="15" fill="rgb(217,147,25)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1903.50"></text></g><g><title>main (8 samples, 0.02%)</title><rect x="0.5037%" y="1877" width="0.0244%" height="15" fill="rgb(247,81,37)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1887.50"></text></g><g><title>std::rt::lang_start_internal (8 samples, 0.02%)</title><rect x="0.5037%" y="1861" width="0.0244%" height="15" fill="rgb(209,12,38)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="0.5037%" y="1845" width="0.0244%" height="15" fill="rgb(227,1,9)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1855.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="0.5037%" y="1829" width="0.0244%" height="15" fill="rgb(248,47,43)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="0.5037%" y="1813" width="0.0244%" height="15" fill="rgb(221,10,30)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1823.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (8 samples, 0.02%)</title><rect x="0.5037%" y="1797" width="0.0244%" height="15" fill="rgb(210,229,1)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="0.5037%" y="1781" width="0.0244%" height="15" fill="rgb(222,148,37)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1791.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="0.5037%" y="1765" width="0.0244%" height="15" fill="rgb(234,67,33)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="0.5037%" y="1749" width="0.0244%" height="15" fill="rgb(247,98,35)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1759.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8 samples, 0.02%)</title><rect x="0.5037%" y="1733" width="0.0244%" height="15" fill="rgb(247,138,52)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1743.50"></text></g><g><title>std::rt::lang_start::{{closure}} (8 samples, 0.02%)</title><rect x="0.5037%" y="1717" width="0.0244%" height="15" fill="rgb(213,79,30)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1727.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.02%)</title><rect x="0.5037%" y="1701" width="0.0244%" height="15" fill="rgb(246,177,23)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="0.5037%" y="1685" width="0.0244%" height="15" fill="rgb(230,62,27)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1695.50"></text></g><g><title>latte::main (8 samples, 0.02%)</title><rect x="0.5037%" y="1669" width="0.0244%" height="15" fill="rgb(216,154,8)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::Runtime&gt; (8 samples, 0.02%)</title><rect x="0.5037%" y="1653" width="0.0244%" height="15" fill="rgb(244,35,45)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (8 samples, 0.02%)</title><rect x="0.5037%" y="1637" width="0.0244%" height="15" fill="rgb(251,115,12)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1647.50"></text></g><g><title>&lt;tokio::runtime::blocking::pool::BlockingPool as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="0.5037%" y="1621" width="0.0244%" height="15" fill="rgb(240,54,50)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1631.50"></text></g><g><title>tokio::runtime::blocking::pool::BlockingPool::shutdown (8 samples, 0.02%)</title><rect x="0.5037%" y="1605" width="0.0244%" height="15" fill="rgb(233,84,52)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1615.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (8 samples, 0.02%)</title><rect x="0.5037%" y="1589" width="0.0244%" height="15" fill="rgb(207,117,47)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1599.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (8 samples, 0.02%)</title><rect x="0.5037%" y="1573" width="0.0244%" height="15" fill="rgb(249,43,39)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1583.50"></text></g><g><title>std::sys::unix::thread::Thread::join (8 samples, 0.02%)</title><rect x="0.5037%" y="1557" width="0.0244%" height="15" fill="rgb(209,38,44)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1567.50"></text></g><g><title>__pthread_clockjoin_ex (8 samples, 0.02%)</title><rect x="0.5037%" y="1541" width="0.0244%" height="15" fill="rgb(236,212,23)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1551.50"></text></g><g><title>__futex_abstimed_wait_common64 (8 samples, 0.02%)</title><rect x="0.5037%" y="1525" width="0.0244%" height="15" fill="rgb(242,79,21)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1535.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.02%)</title><rect x="0.5037%" y="1509" width="0.0244%" height="15" fill="rgb(211,96,35)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1519.50"></text></g><g><title>do_syscall_64 (8 samples, 0.02%)</title><rect x="0.5037%" y="1493" width="0.0244%" height="15" fill="rgb(253,215,40)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1503.50"></text></g><g><title>__x64_sys_futex (8 samples, 0.02%)</title><rect x="0.5037%" y="1477" width="0.0244%" height="15" fill="rgb(211,81,21)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1487.50"></text></g><g><title>do_futex (8 samples, 0.02%)</title><rect x="0.5037%" y="1461" width="0.0244%" height="15" fill="rgb(208,190,38)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1471.50"></text></g><g><title>futex_wait (8 samples, 0.02%)</title><rect x="0.5037%" y="1445" width="0.0244%" height="15" fill="rgb(235,213,38)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1455.50"></text></g><g><title>futex_wait_queue_me (8 samples, 0.02%)</title><rect x="0.5037%" y="1429" width="0.0244%" height="15" fill="rgb(237,122,38)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1439.50"></text></g><g><title>schedule (8 samples, 0.02%)</title><rect x="0.5037%" y="1413" width="0.0244%" height="15" fill="rgb(244,218,35)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1423.50"></text></g><g><title>__schedule (8 samples, 0.02%)</title><rect x="0.5037%" y="1397" width="0.0244%" height="15" fill="rgb(240,68,47)" fg:x="165" fg:w="8"/><text x="0.7537%" y="1407.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="0.5067%" y="1381" width="0.0214%" height="15" fill="rgb(210,16,53)" fg:x="166" fg:w="7"/><text x="0.7567%" y="1391.50"></text></g><g><title>latte::stats::Recorder::finish (4 samples, 0.01%)</title><rect x="0.5464%" y="1861" width="0.0122%" height="15" fill="rgb(235,124,12)" fg:x="179" fg:w="4"/><text x="0.7964%" y="1871.50"></text></g><g><title>latte::stats::Recorder::stats (4 samples, 0.01%)</title><rect x="0.5464%" y="1845" width="0.0122%" height="15" fill="rgb(224,169,11)" fg:x="179" fg:w="4"/><text x="0.7964%" y="1855.50"></text></g><g><title>latte::stats::Log::throughput_percentiles (4 samples, 0.01%)</title><rect x="0.5464%" y="1829" width="0.0122%" height="15" fill="rgb(250,166,2)" fg:x="179" fg:w="4"/><text x="0.7964%" y="1839.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.04%)</title><rect x="0.5373%" y="1893" width="0.0427%" height="15" fill="rgb(242,216,29)" fg:x="176" fg:w="14"/><text x="0.7873%" y="1903.50"></text></g><g><title>latte::par_execute::{{closure}} (14 samples, 0.04%)</title><rect x="0.5373%" y="1877" width="0.0427%" height="15" fill="rgb(230,116,27)" fg:x="176" fg:w="14"/><text x="0.7873%" y="1887.50"></text></g><g><title>latte::stats::Recorder::record (7 samples, 0.02%)</title><rect x="0.5586%" y="1861" width="0.0214%" height="15" fill="rgb(228,99,48)" fg:x="183" fg:w="7"/><text x="0.8086%" y="1871.50"></text></g><g><title>latte::stats::SampleStats::aggregate (4 samples, 0.01%)</title><rect x="0.5678%" y="1845" width="0.0122%" height="15" fill="rgb(253,11,6)" fg:x="186" fg:w="4"/><text x="0.8178%" y="1855.50"></text></g><g><title>latte::stats::_::&lt;impl serde::ser::Serialize for latte::stats::BenchmarkStats&gt;::serialize (9 samples, 0.03%)</title><rect x="0.5800%" y="1781" width="0.0275%" height="15" fill="rgb(247,143,39)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1791.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.03%)</title><rect x="0.5800%" y="1765" width="0.0275%" height="15" fill="rgb(236,97,10)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1775.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (9 samples, 0.03%)</title><rect x="0.5800%" y="1749" width="0.0275%" height="15" fill="rgb(233,208,19)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1759.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.03%)</title><rect x="0.5800%" y="1733" width="0.0275%" height="15" fill="rgb(216,164,2)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1743.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (9 samples, 0.03%)</title><rect x="0.5800%" y="1717" width="0.0275%" height="15" fill="rgb(220,129,5)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1727.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.03%)</title><rect x="0.5800%" y="1701" width="0.0275%" height="15" fill="rgb(242,17,10)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1711.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (9 samples, 0.03%)</title><rect x="0.5800%" y="1685" width="0.0275%" height="15" fill="rgb(242,107,0)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1695.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.03%)</title><rect x="0.5800%" y="1669" width="0.0275%" height="15" fill="rgb(251,28,31)" fg:x="190" fg:w="9"/><text x="0.8300%" y="1679.50"></text></g><g><title>latte::stats::_::&lt;impl serde::ser::Serialize for latte::stats::SampleStats&gt;::serialize (6 samples, 0.02%)</title><rect x="0.5892%" y="1653" width="0.0183%" height="15" fill="rgb(233,223,10)" fg:x="193" fg:w="6"/><text x="0.8392%" y="1663.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="0.5892%" y="1637" width="0.0183%" height="15" fill="rgb(215,21,27)" fg:x="193" fg:w="6"/><text x="0.8392%" y="1647.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.02%)</title><rect x="0.5892%" y="1621" width="0.0183%" height="15" fill="rgb(232,23,21)" fg:x="193" fg:w="6"/><text x="0.8392%" y="1631.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.01%)</title><rect x="0.5953%" y="1605" width="0.0122%" height="15" fill="rgb(244,5,23)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T: 15]&gt;::serialize (4 samples, 0.01%)</title><rect x="0.5953%" y="1589" width="0.0122%" height="15" fill="rgb(226,81,46)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1599.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeTuple&gt;::serialize_element (4 samples, 0.01%)</title><rect x="0.5953%" y="1573" width="0.0122%" height="15" fill="rgb(247,70,30)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1583.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeSeq&gt;::serialize_element (4 samples, 0.01%)</title><rect x="0.5953%" y="1557" width="0.0122%" height="15" fill="rgb(212,68,19)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1567.50"></text></g><g><title>&lt;serde_json::ser::PrettyFormatter as serde_json::ser::Formatter&gt;::begin_array_value (4 samples, 0.01%)</title><rect x="0.5953%" y="1541" width="0.0122%" height="15" fill="rgb(240,187,13)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1551.50"></text></g><g><title>serde_json::ser::indent (4 samples, 0.01%)</title><rect x="0.5953%" y="1525" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1535.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="0.5953%" y="1509" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1519.50"></text></g><g><title>std::os::imp::unix::net::datagram::UnixDatagram::send (4 samples, 0.01%)</title><rect x="0.5953%" y="1493" width="0.0122%" height="15" fill="rgb(241,108,4)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1503.50"></text></g><g><title>std::sys::unix::net::Socket::write (4 samples, 0.01%)</title><rect x="0.5953%" y="1477" width="0.0122%" height="15" fill="rgb(247,173,49)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1487.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (4 samples, 0.01%)</title><rect x="0.5953%" y="1461" width="0.0122%" height="15" fill="rgb(224,114,35)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1471.50"></text></g><g><title>__GI___libc_write (4 samples, 0.01%)</title><rect x="0.5953%" y="1445" width="0.0122%" height="15" fill="rgb(245,159,27)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1455.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="0.5953%" y="1429" width="0.0122%" height="15" fill="rgb(245,172,44)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1439.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="0.5953%" y="1413" width="0.0122%" height="15" fill="rgb(236,23,11)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1423.50"></text></g><g><title>ksys_write (4 samples, 0.01%)</title><rect x="0.5953%" y="1397" width="0.0122%" height="15" fill="rgb(205,117,38)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1407.50"></text></g><g><title>vfs_write (4 samples, 0.01%)</title><rect x="0.5953%" y="1381" width="0.0122%" height="15" fill="rgb(237,72,25)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1391.50"></text></g><g><title>new_sync_write (4 samples, 0.01%)</title><rect x="0.5953%" y="1365" width="0.0122%" height="15" fill="rgb(244,70,9)" fg:x="195" fg:w="4"/><text x="0.8453%" y="1375.50"></text></g><g><title>latte::report::Report::save (10 samples, 0.03%)</title><rect x="0.5800%" y="1893" width="0.0305%" height="15" fill="rgb(217,125,39)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1903.50"></text></g><g><title>serde_json::ser::to_writer_pretty (10 samples, 0.03%)</title><rect x="0.5800%" y="1877" width="0.0305%" height="15" fill="rgb(235,36,10)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1887.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.03%)</title><rect x="0.5800%" y="1861" width="0.0305%" height="15" fill="rgb(251,123,47)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1871.50"></text></g><g><title>latte::report::_::&lt;impl serde::ser::Serialize for latte::report::Report&gt;::serialize (10 samples, 0.03%)</title><rect x="0.5800%" y="1845" width="0.0305%" height="15" fill="rgb(221,13,13)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1855.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.03%)</title><rect x="0.5800%" y="1829" width="0.0305%" height="15" fill="rgb(238,131,9)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1839.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (10 samples, 0.03%)</title><rect x="0.5800%" y="1813" width="0.0305%" height="15" fill="rgb(211,50,8)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1823.50"></text></g><g><title>&lt;serde_json::ser::Compound&lt;W,F&gt; as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.03%)</title><rect x="0.5800%" y="1797" width="0.0305%" height="15" fill="rgb(245,182,24)" fg:x="190" fg:w="10"/><text x="0.8300%" y="1807.50"></text></g><g><title>latte::run::{{closure}} (25 samples, 0.08%)</title><rect x="0.5373%" y="1909" width="0.0763%" height="15" fill="rgb(242,14,37)" fg:x="176" fg:w="25"/><text x="0.7873%" y="1919.50"></text></g><g><title>latte (222 samples, 0.68%)</title><rect x="0.0000%" y="1925" width="0.6777%" height="15" fill="rgb(246,228,12)" fg:x="0" fg:w="222"/><text x="0.2500%" y="1935.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (21 samples, 0.06%)</title><rect x="0.6136%" y="1909" width="0.0641%" height="15" fill="rgb(213,55,15)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1919.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (21 samples, 0.06%)</title><rect x="0.6136%" y="1893" width="0.0641%" height="15" fill="rgb(209,9,3)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1903.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (21 samples, 0.06%)</title><rect x="0.6136%" y="1877" width="0.0641%" height="15" fill="rgb(230,59,30)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1887.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (21 samples, 0.06%)</title><rect x="0.6136%" y="1861" width="0.0641%" height="15" fill="rgb(209,121,21)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1871.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current (21 samples, 0.06%)</title><rect x="0.6136%" y="1845" width="0.0641%" height="15" fill="rgb(220,109,13)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21 samples, 0.06%)</title><rect x="0.6136%" y="1829" width="0.0641%" height="15" fill="rgb(232,18,1)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1839.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (21 samples, 0.06%)</title><rect x="0.6136%" y="1813" width="0.0641%" height="15" fill="rgb(215,41,42)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1823.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (21 samples, 0.06%)</title><rect x="0.6136%" y="1797" width="0.0641%" height="15" fill="rgb(224,123,36)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1807.50"></text></g><g><title>tokio::park::thread::Inner::park (21 samples, 0.06%)</title><rect x="0.6136%" y="1781" width="0.0641%" height="15" fill="rgb(240,125,3)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1791.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (21 samples, 0.06%)</title><rect x="0.6136%" y="1765" width="0.0641%" height="15" fill="rgb(205,98,50)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1775.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (21 samples, 0.06%)</title><rect x="0.6136%" y="1749" width="0.0641%" height="15" fill="rgb(205,185,37)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1759.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (21 samples, 0.06%)</title><rect x="0.6136%" y="1733" width="0.0641%" height="15" fill="rgb(238,207,15)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1743.50"></text></g><g><title>parking_lot_core::parking_lot::park (21 samples, 0.06%)</title><rect x="0.6136%" y="1717" width="0.0641%" height="15" fill="rgb(213,199,42)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1727.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (21 samples, 0.06%)</title><rect x="0.6136%" y="1701" width="0.0641%" height="15" fill="rgb(235,201,11)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1711.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (21 samples, 0.06%)</title><rect x="0.6136%" y="1685" width="0.0641%" height="15" fill="rgb(207,46,11)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1695.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (21 samples, 0.06%)</title><rect x="0.6136%" y="1669" width="0.0641%" height="15" fill="rgb(241,35,35)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1679.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (21 samples, 0.06%)</title><rect x="0.6136%" y="1653" width="0.0641%" height="15" fill="rgb(243,32,47)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1663.50"></text></g><g><title>syscall (21 samples, 0.06%)</title><rect x="0.6136%" y="1637" width="0.0641%" height="15" fill="rgb(247,202,23)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1647.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.06%)</title><rect x="0.6136%" y="1621" width="0.0641%" height="15" fill="rgb(219,102,11)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1631.50"></text></g><g><title>do_syscall_64 (21 samples, 0.06%)</title><rect x="0.6136%" y="1605" width="0.0641%" height="15" fill="rgb(243,110,44)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1615.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.06%)</title><rect x="0.6136%" y="1589" width="0.0641%" height="15" fill="rgb(222,74,54)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1599.50"></text></g><g><title>do_futex (21 samples, 0.06%)</title><rect x="0.6136%" y="1573" width="0.0641%" height="15" fill="rgb(216,99,12)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1583.50"></text></g><g><title>futex_wait (21 samples, 0.06%)</title><rect x="0.6136%" y="1557" width="0.0641%" height="15" fill="rgb(226,22,26)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1567.50"></text></g><g><title>futex_wait_queue_me (21 samples, 0.06%)</title><rect x="0.6136%" y="1541" width="0.0641%" height="15" fill="rgb(217,163,10)" fg:x="201" fg:w="21"/><text x="0.8636%" y="1551.50"></text></g><g><title>schedule (14 samples, 0.04%)</title><rect x="0.6350%" y="1525" width="0.0427%" height="15" fill="rgb(213,25,53)" fg:x="208" fg:w="14"/><text x="0.8850%" y="1535.50"></text></g><g><title>__schedule (14 samples, 0.04%)</title><rect x="0.6350%" y="1509" width="0.0427%" height="15" fill="rgb(252,105,26)" fg:x="208" fg:w="14"/><text x="0.8850%" y="1519.50"></text></g><g><title>finish_task_switch.isra.0 (14 samples, 0.04%)</title><rect x="0.6350%" y="1493" width="0.0427%" height="15" fill="rgb(220,39,43)" fg:x="208" fg:w="14"/><text x="0.8850%" y="1503.50"></text></g><g><title>perf-exec (6 samples, 0.02%)</title><rect x="0.6777%" y="1925" width="0.0183%" height="15" fill="rgb(229,68,48)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1935.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="0.6777%" y="1909" width="0.0183%" height="15" fill="rgb(252,8,32)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1919.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="0.6777%" y="1893" width="0.0183%" height="15" fill="rgb(223,20,43)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1903.50"></text></g><g><title>__x64_sys_execve (6 samples, 0.02%)</title><rect x="0.6777%" y="1877" width="0.0183%" height="15" fill="rgb(229,81,49)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1887.50"></text></g><g><title>do_execveat_common.isra.0 (6 samples, 0.02%)</title><rect x="0.6777%" y="1861" width="0.0183%" height="15" fill="rgb(236,28,36)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1871.50"></text></g><g><title>bprm_execve (6 samples, 0.02%)</title><rect x="0.6777%" y="1845" width="0.0183%" height="15" fill="rgb(249,185,26)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1855.50"></text></g><g><title>load_elf_binary (6 samples, 0.02%)</title><rect x="0.6777%" y="1829" width="0.0183%" height="15" fill="rgb(249,174,33)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1839.50"></text></g><g><title>begin_new_exec (6 samples, 0.02%)</title><rect x="0.6777%" y="1813" width="0.0183%" height="15" fill="rgb(233,201,37)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1823.50"></text></g><g><title>perf_event_exec (6 samples, 0.02%)</title><rect x="0.6777%" y="1797" width="0.0183%" height="15" fill="rgb(221,78,26)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1807.50"></text></g><g><title>perf_lock_task_context (6 samples, 0.02%)</title><rect x="0.6777%" y="1781" width="0.0183%" height="15" fill="rgb(250,127,30)" fg:x="222" fg:w="6"/><text x="0.9277%" y="1791.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="0.7143%" y="1541" width="0.0183%" height="15" fill="rgb(230,49,44)" fg:x="234" fg:w="6"/><text x="0.9643%" y="1551.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (22 samples, 0.07%)</title><rect x="0.7510%" y="1429" width="0.0672%" height="15" fill="rgb(229,67,23)" fg:x="246" fg:w="22"/><text x="1.0010%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="0.8181%" y="1429" width="0.0366%" height="15" fill="rgb(249,83,47)" fg:x="268" fg:w="12"/><text x="1.0681%" y="1439.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="0.8181%" y="1413" width="0.0366%" height="15" fill="rgb(215,43,3)" fg:x="268" fg:w="12"/><text x="1.0681%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (10 samples, 0.03%)</title><rect x="0.8548%" y="1429" width="0.0305%" height="15" fill="rgb(238,154,13)" fg:x="280" fg:w="10"/><text x="1.1048%" y="1439.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (15 samples, 0.05%)</title><rect x="0.8853%" y="1429" width="0.0458%" height="15" fill="rgb(219,56,2)" fg:x="290" fg:w="15"/><text x="1.1353%" y="1439.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (13 samples, 0.04%)</title><rect x="0.8914%" y="1413" width="0.0397%" height="15" fill="rgb(233,0,4)" fg:x="292" fg:w="13"/><text x="1.1414%" y="1423.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.04%)</title><rect x="0.8944%" y="1397" width="0.0366%" height="15" fill="rgb(235,30,7)" fg:x="293" fg:w="12"/><text x="1.1444%" y="1407.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.04%)</title><rect x="0.8944%" y="1381" width="0.0366%" height="15" fill="rgb(250,79,13)" fg:x="293" fg:w="12"/><text x="1.1444%" y="1391.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (69 samples, 0.21%)</title><rect x="0.7449%" y="1477" width="0.2106%" height="15" fill="rgb(211,146,34)" fg:x="244" fg:w="69"/><text x="0.9949%" y="1487.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (69 samples, 0.21%)</title><rect x="0.7449%" y="1461" width="0.2106%" height="15" fill="rgb(228,22,38)" fg:x="244" fg:w="69"/><text x="0.9949%" y="1471.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (69 samples, 0.21%)</title><rect x="0.7449%" y="1445" width="0.2106%" height="15" fill="rgb(235,168,5)" fg:x="244" fg:w="69"/><text x="0.9949%" y="1455.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (8 samples, 0.02%)</title><rect x="0.9311%" y="1429" width="0.0244%" height="15" fill="rgb(221,155,16)" fg:x="305" fg:w="8"/><text x="1.1811%" y="1439.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (8 samples, 0.02%)</title><rect x="0.9311%" y="1413" width="0.0244%" height="15" fill="rgb(215,215,53)" fg:x="305" fg:w="8"/><text x="1.1811%" y="1423.50"></text></g><g><title>core::sync::atomic::atomic_store (8 samples, 0.02%)</title><rect x="0.9311%" y="1397" width="0.0244%" height="15" fill="rgb(223,4,10)" fg:x="305" fg:w="8"/><text x="1.1811%" y="1407.50"></text></g><g><title>tokio::coop::poll_proceed (74 samples, 0.23%)</title><rect x="0.7326%" y="1541" width="0.2259%" height="15" fill="rgb(234,103,6)" fg:x="240" fg:w="74"/><text x="0.9826%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (74 samples, 0.23%)</title><rect x="0.7326%" y="1525" width="0.2259%" height="15" fill="rgb(227,97,0)" fg:x="240" fg:w="74"/><text x="0.9826%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.23%)</title><rect x="0.7326%" y="1509" width="0.2259%" height="15" fill="rgb(234,150,53)" fg:x="240" fg:w="74"/><text x="0.9826%" y="1519.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (70 samples, 0.21%)</title><rect x="0.7449%" y="1493" width="0.2137%" height="15" fill="rgb(228,201,54)" fg:x="244" fg:w="70"/><text x="0.9949%" y="1503.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::project (39 samples, 0.12%)</title><rect x="0.9585%" y="1541" width="0.1191%" height="15" fill="rgb(222,22,37)" fg:x="314" fg:w="39"/><text x="1.2085%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (14 samples, 0.04%)</title><rect x="1.1448%" y="1525" width="0.0427%" height="15" fill="rgb(237,53,32)" fg:x="375" fg:w="14"/><text x="1.3948%" y="1535.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="1.1448%" y="1509" width="0.0427%" height="15" fill="rgb(233,25,53)" fg:x="375" fg:w="14"/><text x="1.3948%" y="1519.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14 samples, 0.04%)</title><rect x="1.1448%" y="1493" width="0.0427%" height="15" fill="rgb(210,40,34)" fg:x="375" fg:w="14"/><text x="1.3948%" y="1503.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (90 samples, 0.27%)</title><rect x="1.1905%" y="1509" width="0.2747%" height="15" fill="rgb(241,220,44)" fg:x="390" fg:w="90"/><text x="1.4405%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (91 samples, 0.28%)</title><rect x="1.1905%" y="1525" width="0.2778%" height="15" fill="rgb(235,28,35)" fg:x="390" fg:w="91"/><text x="1.4405%" y="1535.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 0.08%)</title><rect x="1.4683%" y="1493" width="0.0824%" height="15" fill="rgb(210,56,17)" fg:x="481" fg:w="27"/><text x="1.7183%" y="1503.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.02%)</title><rect x="1.5294%" y="1477" width="0.0214%" height="15" fill="rgb(224,130,29)" fg:x="501" fg:w="7"/><text x="1.7794%" y="1487.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (28 samples, 0.09%)</title><rect x="1.4683%" y="1525" width="0.0855%" height="15" fill="rgb(235,212,8)" fg:x="481" fg:w="28"/><text x="1.7183%" y="1535.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (28 samples, 0.09%)</title><rect x="1.4683%" y="1509" width="0.0855%" height="15" fill="rgb(223,33,50)" fg:x="481" fg:w="28"/><text x="1.7183%" y="1519.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (15 samples, 0.05%)</title><rect x="1.5538%" y="1525" width="0.0458%" height="15" fill="rgb(219,149,13)" fg:x="509" fg:w="15"/><text x="1.8038%" y="1535.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire::{{closure}} (15 samples, 0.05%)</title><rect x="1.5538%" y="1509" width="0.0458%" height="15" fill="rgb(250,156,29)" fg:x="509" fg:w="15"/><text x="1.8038%" y="1519.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="1.5538%" y="1493" width="0.0458%" height="15" fill="rgb(216,193,19)" fg:x="509" fg:w="15"/><text x="1.8038%" y="1503.50"></text></g><g><title>futures_task::waker::clone_arc_raw (13 samples, 0.04%)</title><rect x="1.5599%" y="1477" width="0.0397%" height="15" fill="rgb(216,135,14)" fg:x="511" fg:w="13"/><text x="1.8099%" y="1487.50"></text></g><g><title>futures_task::waker::increase_refcount (13 samples, 0.04%)</title><rect x="1.5599%" y="1461" width="0.0397%" height="15" fill="rgb(241,47,5)" fg:x="511" fg:w="13"/><text x="1.8099%" y="1471.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="1.5599%" y="1445" width="0.0397%" height="15" fill="rgb(233,42,35)" fg:x="511" fg:w="13"/><text x="1.8099%" y="1455.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="1.5599%" y="1429" width="0.0397%" height="15" fill="rgb(231,13,6)" fg:x="511" fg:w="13"/><text x="1.8099%" y="1439.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (8 samples, 0.02%)</title><rect x="1.5996%" y="1525" width="0.0244%" height="15" fill="rgb(207,181,40)" fg:x="524" fg:w="8"/><text x="1.8496%" y="1535.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (15 samples, 0.05%)</title><rect x="1.6240%" y="1525" width="0.0458%" height="15" fill="rgb(254,173,49)" fg:x="532" fg:w="15"/><text x="1.8740%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (323 samples, 0.99%)</title><rect x="0.6991%" y="1621" width="0.9860%" height="15" fill="rgb(221,1,38)" fg:x="229" fg:w="323"/><text x="0.9491%" y="1631.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (323 samples, 0.99%)</title><rect x="0.6991%" y="1605" width="0.9860%" height="15" fill="rgb(206,124,46)" fg:x="229" fg:w="323"/><text x="0.9491%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (323 samples, 0.99%)</title><rect x="0.6991%" y="1589" width="0.9860%" height="15" fill="rgb(249,21,11)" fg:x="229" fg:w="323"/><text x="0.9491%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (323 samples, 0.99%)</title><rect x="0.6991%" y="1573" width="0.9860%" height="15" fill="rgb(222,201,40)" fg:x="229" fg:w="323"/><text x="0.9491%" y="1583.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (323 samples, 0.99%)</title><rect x="0.6991%" y="1557" width="0.9860%" height="15" fill="rgb(235,61,29)" fg:x="229" fg:w="323"/><text x="0.9491%" y="1567.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (199 samples, 0.61%)</title><rect x="1.0776%" y="1541" width="0.6075%" height="15" fill="rgb(219,207,3)" fg:x="353" fg:w="199"/><text x="1.3276%" y="1551.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (5 samples, 0.02%)</title><rect x="1.6698%" y="1525" width="0.0153%" height="15" fill="rgb(222,56,46)" fg:x="547" fg:w="5"/><text x="1.9198%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (340 samples, 1.04%)</title><rect x="0.6991%" y="1653" width="1.0379%" height="15" fill="rgb(239,76,54)" fg:x="229" fg:w="340"/><text x="0.9491%" y="1663.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (340 samples, 1.04%)</title><rect x="0.6991%" y="1637" width="1.0379%" height="15" fill="rgb(231,124,27)" fg:x="229" fg:w="340"/><text x="0.9491%" y="1647.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (17 samples, 0.05%)</title><rect x="1.6851%" y="1621" width="0.0519%" height="15" fill="rgb(249,195,6)" fg:x="552" fg:w="17"/><text x="1.9351%" y="1631.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (17 samples, 0.05%)</title><rect x="1.6851%" y="1605" width="0.0519%" height="15" fill="rgb(237,174,47)" fg:x="552" fg:w="17"/><text x="1.9351%" y="1615.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (17 samples, 0.05%)</title><rect x="1.6851%" y="1589" width="0.0519%" height="15" fill="rgb(206,201,31)" fg:x="552" fg:w="17"/><text x="1.9351%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (17 samples, 0.05%)</title><rect x="1.6851%" y="1573" width="0.0519%" height="15" fill="rgb(231,57,52)" fg:x="552" fg:w="17"/><text x="1.9351%" y="1583.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (17 samples, 0.05%)</title><rect x="1.6851%" y="1557" width="0.0519%" height="15" fill="rgb(248,177,22)" fg:x="552" fg:w="17"/><text x="1.9351%" y="1567.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.10%)</title><rect x="1.8316%" y="1637" width="0.1038%" height="15" fill="rgb(215,211,37)" fg:x="600" fg:w="34"/><text x="2.0816%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.02%)</title><rect x="1.9415%" y="1637" width="0.0153%" height="15" fill="rgb(241,128,51)" fg:x="636" fg:w="5"/><text x="2.1915%" y="1647.50"></text></g><g><title>dequeue_entity (6 samples, 0.02%)</title><rect x="2.4605%" y="1397" width="0.0183%" height="15" fill="rgb(227,165,31)" fg:x="806" fg:w="6"/><text x="2.7105%" y="1407.50"></text></g><g><title>dequeue_task_fair (8 samples, 0.02%)</title><rect x="2.4574%" y="1413" width="0.0244%" height="15" fill="rgb(228,167,24)" fg:x="805" fg:w="8"/><text x="2.7074%" y="1423.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.07%)</title><rect x="2.4360%" y="1461" width="0.0672%" height="15" fill="rgb(228,143,12)" fg:x="798" fg:w="22"/><text x="2.6860%" y="1471.50"></text></g><g><title>schedule (20 samples, 0.06%)</title><rect x="2.4422%" y="1445" width="0.0611%" height="15" fill="rgb(249,149,8)" fg:x="800" fg:w="20"/><text x="2.6922%" y="1455.50"></text></g><g><title>__schedule (20 samples, 0.06%)</title><rect x="2.4422%" y="1429" width="0.0611%" height="15" fill="rgb(243,35,44)" fg:x="800" fg:w="20"/><text x="2.6922%" y="1439.50"></text></g><g><title>__lll_lock_wait_private (28 samples, 0.09%)</title><rect x="2.4238%" y="1557" width="0.0855%" height="15" fill="rgb(246,89,9)" fg:x="794" fg:w="28"/><text x="2.6738%" y="1567.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.08%)</title><rect x="2.4269%" y="1541" width="0.0824%" height="15" fill="rgb(233,213,13)" fg:x="795" fg:w="27"/><text x="2.6769%" y="1551.50"></text></g><g><title>do_syscall_64 (27 samples, 0.08%)</title><rect x="2.4269%" y="1525" width="0.0824%" height="15" fill="rgb(233,141,41)" fg:x="795" fg:w="27"/><text x="2.6769%" y="1535.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.08%)</title><rect x="2.4269%" y="1509" width="0.0824%" height="15" fill="rgb(239,167,4)" fg:x="795" fg:w="27"/><text x="2.6769%" y="1519.50"></text></g><g><title>do_futex (26 samples, 0.08%)</title><rect x="2.4299%" y="1493" width="0.0794%" height="15" fill="rgb(209,217,16)" fg:x="796" fg:w="26"/><text x="2.6799%" y="1503.50"></text></g><g><title>futex_wait (26 samples, 0.08%)</title><rect x="2.4299%" y="1477" width="0.0794%" height="15" fill="rgb(219,88,35)" fg:x="796" fg:w="26"/><text x="2.6799%" y="1487.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.03%)</title><rect x="2.5093%" y="1557" width="0.0305%" height="15" fill="rgb(220,193,23)" fg:x="822" fg:w="10"/><text x="2.7593%" y="1567.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="2.5124%" y="1541" width="0.0275%" height="15" fill="rgb(230,90,52)" fg:x="823" fg:w="9"/><text x="2.7624%" y="1551.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.03%)</title><rect x="2.5124%" y="1525" width="0.0275%" height="15" fill="rgb(252,106,19)" fg:x="823" fg:w="9"/><text x="2.7624%" y="1535.50"></text></g><g><title>do_futex (9 samples, 0.03%)</title><rect x="2.5124%" y="1509" width="0.0275%" height="15" fill="rgb(206,74,20)" fg:x="823" fg:w="9"/><text x="2.7624%" y="1519.50"></text></g><g><title>futex_wake (9 samples, 0.03%)</title><rect x="2.5124%" y="1493" width="0.0275%" height="15" fill="rgb(230,138,44)" fg:x="823" fg:w="9"/><text x="2.7624%" y="1503.50"></text></g><g><title>malloc_consolidate (6 samples, 0.02%)</title><rect x="2.5398%" y="1557" width="0.0183%" height="15" fill="rgb(235,182,43)" fg:x="832" fg:w="6"/><text x="2.7898%" y="1567.50"></text></g><g><title>__GI___libc_free (213 samples, 0.65%)</title><rect x="1.9781%" y="1589" width="0.6502%" height="15" fill="rgb(242,16,51)" fg:x="648" fg:w="213"/><text x="2.2281%" y="1599.50"></text></g><g><title>_int_free (187 samples, 0.57%)</title><rect x="2.0575%" y="1573" width="0.5709%" height="15" fill="rgb(248,9,4)" fg:x="674" fg:w="187"/><text x="2.3075%" y="1583.50"></text></g><g><title>unlink_chunk.constprop.0 (23 samples, 0.07%)</title><rect x="2.5582%" y="1557" width="0.0702%" height="15" fill="rgb(210,31,22)" fg:x="838" fg:w="23"/><text x="2.8082%" y="1567.50"></text></g><g><title>core::mem::drop (5 samples, 0.02%)</title><rect x="2.6406%" y="1573" width="0.0153%" height="15" fill="rgb(239,54,39)" fg:x="865" fg:w="5"/><text x="2.8906%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="2.6406%" y="1557" width="0.0153%" height="15" fill="rgb(230,99,41)" fg:x="865" fg:w="5"/><text x="2.8906%" y="1567.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="2.6406%" y="1541" width="0.0153%" height="15" fill="rgb(253,106,12)" fg:x="865" fg:w="5"/><text x="2.8906%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="2.6436%" y="1525" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="866" fg:w="4"/><text x="2.8936%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="2.6436%" y="1509" width="0.0122%" height="15" fill="rgb(215,133,35)" fg:x="866" fg:w="4"/><text x="2.8936%" y="1519.50"></text></g><g><title>futures_task::waker::drop_arc_raw (118 samples, 0.36%)</title><rect x="2.6619%" y="1541" width="0.3602%" height="15" fill="rgb(213,28,5)" fg:x="872" fg:w="118"/><text x="2.9119%" y="1551.50"></text></g><g><title>core::mem::drop (113 samples, 0.34%)</title><rect x="2.6772%" y="1525" width="0.3450%" height="15" fill="rgb(215,77,49)" fg:x="877" fg:w="113"/><text x="2.9272%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (113 samples, 0.34%)</title><rect x="2.6772%" y="1509" width="0.3450%" height="15" fill="rgb(248,100,22)" fg:x="877" fg:w="113"/><text x="2.9272%" y="1519.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.34%)</title><rect x="2.6772%" y="1493" width="0.3450%" height="15" fill="rgb(208,67,9)" fg:x="877" fg:w="113"/><text x="2.9272%" y="1503.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (22 samples, 0.07%)</title><rect x="3.0313%" y="1541" width="0.0672%" height="15" fill="rgb(219,133,21)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1551.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (22 samples, 0.07%)</title><rect x="3.0313%" y="1525" width="0.0672%" height="15" fill="rgb(246,46,29)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1535.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task::{{closure}} (22 samples, 0.07%)</title><rect x="3.0313%" y="1509" width="0.0672%" height="15" fill="rgb(246,185,52)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1519.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (22 samples, 0.07%)</title><rect x="3.0313%" y="1493" width="0.0672%" height="15" fill="rgb(252,136,11)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (22 samples, 0.07%)</title><rect x="3.0313%" y="1477" width="0.0672%" height="15" fill="rgb(219,138,53)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1487.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (22 samples, 0.07%)</title><rect x="3.0313%" y="1461" width="0.0672%" height="15" fill="rgb(211,51,23)" fg:x="993" fg:w="22"/><text x="3.2813%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt;&gt; (390 samples, 1.19%)</title><rect x="1.9568%" y="1637" width="1.1905%" height="15" fill="rgb(247,221,28)" fg:x="641" fg:w="390"/><text x="2.2068%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (390 samples, 1.19%)</title><rect x="1.9568%" y="1621" width="1.1905%" height="15" fill="rgb(251,222,45)" fg:x="641" fg:w="390"/><text x="2.2068%" y="1631.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (390 samples, 1.19%)</title><rect x="1.9568%" y="1605" width="1.1905%" height="15" fill="rgb(217,162,53)" fg:x="641" fg:w="390"/><text x="2.2068%" y="1615.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (170 samples, 0.52%)</title><rect x="2.6284%" y="1589" width="0.5190%" height="15" fill="rgb(229,93,14)" fg:x="861" fg:w="170"/><text x="2.8784%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt; (161 samples, 0.49%)</title><rect x="2.6558%" y="1573" width="0.4915%" height="15" fill="rgb(209,67,49)" fg:x="870" fg:w="161"/><text x="2.9058%" y="1583.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (161 samples, 0.49%)</title><rect x="2.6558%" y="1557" width="0.4915%" height="15" fill="rgb(213,87,29)" fg:x="870" fg:w="161"/><text x="2.9058%" y="1567.50"></text></g><g><title>tokio::sync::oneshot::mut_load (16 samples, 0.05%)</title><rect x="3.0985%" y="1541" width="0.0488%" height="15" fill="rgb(205,151,52)" fg:x="1015" fg:w="16"/><text x="3.3485%" y="1551.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::with_mut (10 samples, 0.03%)</title><rect x="3.1168%" y="1525" width="0.0305%" height="15" fill="rgb(253,215,39)" fg:x="1021" fg:w="10"/><text x="3.3668%" y="1535.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (4 samples, 0.01%)</title><rect x="3.1565%" y="1621" width="0.0122%" height="15" fill="rgb(221,220,41)" fg:x="1034" fg:w="4"/><text x="3.4065%" y="1631.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (9 samples, 0.03%)</title><rect x="3.2389%" y="1509" width="0.0275%" height="15" fill="rgb(218,133,21)" fg:x="1061" fg:w="9"/><text x="3.4889%" y="1519.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (6 samples, 0.02%)</title><rect x="3.2481%" y="1493" width="0.0183%" height="15" fill="rgb(221,193,43)" fg:x="1064" fg:w="6"/><text x="3.4981%" y="1503.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.02%)</title><rect x="3.2511%" y="1477" width="0.0153%" height="15" fill="rgb(240,128,52)" fg:x="1065" fg:w="5"/><text x="3.5011%" y="1487.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.02%)</title><rect x="3.2511%" y="1461" width="0.0153%" height="15" fill="rgb(253,114,12)" fg:x="1065" fg:w="5"/><text x="3.5011%" y="1471.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (22 samples, 0.07%)</title><rect x="3.2145%" y="1557" width="0.0672%" height="15" fill="rgb(215,223,47)" fg:x="1053" fg:w="22"/><text x="3.4645%" y="1567.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (21 samples, 0.06%)</title><rect x="3.2175%" y="1541" width="0.0641%" height="15" fill="rgb(248,225,23)" fg:x="1054" fg:w="21"/><text x="3.4675%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (21 samples, 0.06%)</title><rect x="3.2175%" y="1525" width="0.0641%" height="15" fill="rgb(250,108,0)" fg:x="1054" fg:w="21"/><text x="3.4675%" y="1535.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (5 samples, 0.02%)</title><rect x="3.2664%" y="1509" width="0.0153%" height="15" fill="rgb(228,208,7)" fg:x="1070" fg:w="5"/><text x="3.5164%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (5 samples, 0.02%)</title><rect x="3.2664%" y="1493" width="0.0153%" height="15" fill="rgb(244,45,10)" fg:x="1070" fg:w="5"/><text x="3.5164%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.02%)</title><rect x="3.2664%" y="1477" width="0.0153%" height="15" fill="rgb(207,125,25)" fg:x="1070" fg:w="5"/><text x="3.5164%" y="1487.50"></text></g><g><title>tokio::coop::poll_proceed (49 samples, 0.15%)</title><rect x="3.1687%" y="1621" width="0.1496%" height="15" fill="rgb(210,195,18)" fg:x="1038" fg:w="49"/><text x="3.4187%" y="1631.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (49 samples, 0.15%)</title><rect x="3.1687%" y="1605" width="0.1496%" height="15" fill="rgb(249,80,12)" fg:x="1038" fg:w="49"/><text x="3.4187%" y="1615.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.15%)</title><rect x="3.1687%" y="1589" width="0.1496%" height="15" fill="rgb(221,65,9)" fg:x="1038" fg:w="49"/><text x="3.4187%" y="1599.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (47 samples, 0.14%)</title><rect x="3.1748%" y="1573" width="0.1435%" height="15" fill="rgb(235,49,36)" fg:x="1040" fg:w="47"/><text x="3.4248%" y="1583.50"></text></g><g><title>tokio::coop::Budget::decrement (12 samples, 0.04%)</title><rect x="3.2816%" y="1557" width="0.0366%" height="15" fill="rgb(225,32,20)" fg:x="1075" fg:w="12"/><text x="3.5316%" y="1567.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (6 samples, 0.02%)</title><rect x="3.3213%" y="1621" width="0.0183%" height="15" fill="rgb(215,141,46)" fg:x="1088" fg:w="6"/><text x="3.5713%" y="1631.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (8 samples, 0.02%)</title><rect x="3.3396%" y="1621" width="0.0244%" height="15" fill="rgb(250,160,47)" fg:x="1094" fg:w="8"/><text x="3.5896%" y="1631.50"></text></g><g><title>tokio::sync::oneshot::State::load (277 samples, 0.85%)</title><rect x="3.3641%" y="1621" width="0.8456%" height="15" fill="rgb(216,222,40)" fg:x="1102" fg:w="277"/><text x="3.6141%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="4.1913%" y="1605" width="0.0183%" height="15" fill="rgb(234,217,39)" fg:x="1373" fg:w="6"/><text x="4.4413%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="4.1913%" y="1589" width="0.0183%" height="15" fill="rgb(207,178,40)" fg:x="1373" fg:w="6"/><text x="4.4413%" y="1599.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (28 samples, 0.09%)</title><rect x="4.2097%" y="1621" width="0.0855%" height="15" fill="rgb(221,136,13)" fg:x="1379" fg:w="28"/><text x="4.4597%" y="1631.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (28 samples, 0.09%)</title><rect x="4.2097%" y="1605" width="0.0855%" height="15" fill="rgb(249,199,10)" fg:x="1379" fg:w="28"/><text x="4.4597%" y="1615.50"></text></g><g><title>core::sync::atomic::atomic_or (28 samples, 0.09%)</title><rect x="4.2097%" y="1589" width="0.0855%" height="15" fill="rgb(249,222,13)" fg:x="1379" fg:w="28"/><text x="4.4597%" y="1599.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (879 samples, 2.68%)</title><rect x="1.7370%" y="1653" width="2.6833%" height="15" fill="rgb(244,185,38)" fg:x="569" fg:w="879"/><text x="1.9870%" y="1663.50">&lt;t..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (417 samples, 1.27%)</title><rect x="3.1473%" y="1637" width="1.2730%" height="15" fill="rgb(236,202,9)" fg:x="1031" fg:w="417"/><text x="3.3973%" y="1647.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (41 samples, 0.13%)</title><rect x="4.2951%" y="1621" width="0.1252%" height="15" fill="rgb(250,229,37)" fg:x="1407" fg:w="41"/><text x="4.5451%" y="1631.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (34 samples, 0.10%)</title><rect x="4.3165%" y="1605" width="0.1038%" height="15" fill="rgb(206,174,23)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1615.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (34 samples, 0.10%)</title><rect x="4.3165%" y="1589" width="0.1038%" height="15" fill="rgb(211,33,43)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1599.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="4.3165%" y="1573" width="0.1038%" height="15" fill="rgb(245,58,50)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1583.50"></text></g><g><title>futures_task::waker::clone_arc_raw (34 samples, 0.10%)</title><rect x="4.3165%" y="1557" width="0.1038%" height="15" fill="rgb(244,68,36)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1567.50"></text></g><g><title>futures_task::waker::increase_refcount (34 samples, 0.10%)</title><rect x="4.3165%" y="1541" width="0.1038%" height="15" fill="rgb(232,229,15)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1551.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="4.3165%" y="1525" width="0.1038%" height="15" fill="rgb(254,30,23)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1535.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="4.3165%" y="1509" width="0.1038%" height="15" fill="rgb(235,160,14)" fg:x="1414" fg:w="34"/><text x="4.5665%" y="1519.50"></text></g><g><title>scylla::frame::types::write_consistency (4 samples, 0.01%)</title><rect x="4.4905%" y="1605" width="0.0122%" height="15" fill="rgb(212,155,44)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1615.50"></text></g><g><title>scylla::frame::types::write_short (4 samples, 0.01%)</title><rect x="4.4905%" y="1589" width="0.0122%" height="15" fill="rgb(226,2,50)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1599.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i16 (4 samples, 0.01%)</title><rect x="4.4905%" y="1573" width="0.0122%" height="15" fill="rgb(234,177,6)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (4 samples, 0.01%)</title><rect x="4.4905%" y="1557" width="0.0122%" height="15" fill="rgb(217,24,9)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="4.4905%" y="1541" width="0.0122%" height="15" fill="rgb(220,13,46)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="4.4905%" y="1525" width="0.0122%" height="15" fill="rgb(239,221,27)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="4.4905%" y="1509" width="0.0122%" height="15" fill="rgb(222,198,25)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="4.4905%" y="1493" width="0.0122%" height="15" fill="rgb(211,99,13)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="4.4905%" y="1477" width="0.0122%" height="15" fill="rgb(232,111,31)" fg:x="1471" fg:w="4"/><text x="4.7405%" y="1487.50"></text></g><g><title>scylla::frame::types::write_serial_consistency (4 samples, 0.01%)</title><rect x="4.5027%" y="1605" width="0.0122%" height="15" fill="rgb(245,82,37)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1615.50"></text></g><g><title>scylla::frame::types::write_short (4 samples, 0.01%)</title><rect x="4.5027%" y="1589" width="0.0122%" height="15" fill="rgb(227,149,46)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1599.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i16 (4 samples, 0.01%)</title><rect x="4.5027%" y="1573" width="0.0122%" height="15" fill="rgb(218,36,50)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (4 samples, 0.01%)</title><rect x="4.5027%" y="1557" width="0.0122%" height="15" fill="rgb(226,80,48)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="4.5027%" y="1541" width="0.0122%" height="15" fill="rgb(238,224,15)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="4.5027%" y="1525" width="0.0122%" height="15" fill="rgb(241,136,10)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="4.5027%" y="1509" width="0.0122%" height="15" fill="rgb(208,32,45)" fg:x="1475" fg:w="4"/><text x="4.7527%" y="1519.50"></text></g><g><title>scylla::frame::value::SerializedValues::is_empty (10 samples, 0.03%)</title><rect x="4.5149%" y="1605" width="0.0305%" height="15" fill="rgb(207,135,9)" fg:x="1479" fg:w="10"/><text x="4.7649%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.05%)</title><rect x="4.5455%" y="1573" width="0.0519%" height="15" fill="rgb(206,86,44)" fg:x="1489" fg:w="17"/><text x="4.7955%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.05%)</title><rect x="4.5455%" y="1557" width="0.0519%" height="15" fill="rgb(245,177,15)" fg:x="1489" fg:w="17"/><text x="4.7955%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.05%)</title><rect x="4.5455%" y="1541" width="0.0519%" height="15" fill="rgb(206,64,50)" fg:x="1489" fg:w="17"/><text x="4.7955%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="4.5577%" y="1525" width="0.0397%" height="15" fill="rgb(234,36,40)" fg:x="1493" fg:w="13"/><text x="4.8077%" y="1535.50"></text></g><g><title>__memcpy_avx_unaligned (13 samples, 0.04%)</title><rect x="4.5577%" y="1509" width="0.0397%" height="15" fill="rgb(213,64,8)" fg:x="1493" fg:w="13"/><text x="4.8077%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (6 samples, 0.02%)</title><rect x="4.6096%" y="1509" width="0.0183%" height="15" fill="rgb(210,75,36)" fg:x="1510" fg:w="6"/><text x="4.8596%" y="1519.50"></text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.01%)</title><rect x="4.7744%" y="1413" width="0.0122%" height="15" fill="rgb(229,88,21)" fg:x="1564" fg:w="4"/><text x="5.0244%" y="1423.50"></text></g><g><title>_int_free (31 samples, 0.09%)</title><rect x="4.7866%" y="1413" width="0.0946%" height="15" fill="rgb(252,204,47)" fg:x="1568" fg:w="31"/><text x="5.0366%" y="1423.50"></text></g><g><title>_int_malloc (78 samples, 0.24%)</title><rect x="4.8813%" y="1413" width="0.2381%" height="15" fill="rgb(208,77,27)" fg:x="1599" fg:w="78"/><text x="5.1313%" y="1423.50"></text></g><g><title>unlink_chunk.constprop.0 (20 samples, 0.06%)</title><rect x="5.0583%" y="1397" width="0.0611%" height="15" fill="rgb(221,76,26)" fg:x="1657" fg:w="20"/><text x="5.3083%" y="1407.50"></text></g><g><title>_int_realloc (135 samples, 0.41%)</title><rect x="4.7103%" y="1429" width="0.4121%" height="15" fill="rgb(225,139,18)" fg:x="1543" fg:w="135"/><text x="4.9603%" y="1439.50"></text></g><g><title>__GI___libc_realloc (166 samples, 0.51%)</title><rect x="4.6309%" y="1445" width="0.5067%" height="15" fill="rgb(230,137,11)" fg:x="1517" fg:w="166"/><text x="4.8809%" y="1455.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="5.1224%" y="1429" width="0.0153%" height="15" fill="rgb(212,28,1)" fg:x="1678" fg:w="5"/><text x="5.3724%" y="1439.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="5.1255%" y="1413" width="0.0122%" height="15" fill="rgb(248,164,17)" fg:x="1679" fg:w="4"/><text x="5.3755%" y="1423.50"></text></g><g><title>__rdl_realloc (8 samples, 0.02%)</title><rect x="5.1377%" y="1445" width="0.0244%" height="15" fill="rgb(222,171,42)" fg:x="1683" fg:w="8"/><text x="5.3877%" y="1455.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.02%)</title><rect x="5.1438%" y="1429" width="0.0183%" height="15" fill="rgb(243,84,45)" fg:x="1685" fg:w="6"/><text x="5.3938%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (184 samples, 0.56%)</title><rect x="4.6035%" y="1525" width="0.5617%" height="15" fill="rgb(252,49,23)" fg:x="1508" fg:w="184"/><text x="4.8535%" y="1535.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 samples, 0.54%)</title><rect x="4.6279%" y="1509" width="0.5373%" height="15" fill="rgb(215,19,7)" fg:x="1516" fg:w="176"/><text x="4.8779%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (175 samples, 0.53%)</title><rect x="4.6309%" y="1493" width="0.5342%" height="15" fill="rgb(238,81,41)" fg:x="1517" fg:w="175"/><text x="4.8809%" y="1503.50"></text></g><g><title>alloc::alloc::Global::grow_impl (175 samples, 0.53%)</title><rect x="4.6309%" y="1477" width="0.5342%" height="15" fill="rgb(210,199,37)" fg:x="1517" fg:w="175"/><text x="4.8809%" y="1487.50"></text></g><g><title>alloc::alloc::realloc (175 samples, 0.53%)</title><rect x="4.6309%" y="1461" width="0.5342%" height="15" fill="rgb(244,192,49)" fg:x="1517" fg:w="175"/><text x="4.8809%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put (204 samples, 0.62%)</title><rect x="4.5455%" y="1589" width="0.6227%" height="15" fill="rgb(226,211,11)" fg:x="1489" fg:w="204"/><text x="4.7955%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (187 samples, 0.57%)</title><rect x="4.5974%" y="1573" width="0.5709%" height="15" fill="rgb(236,162,54)" fg:x="1506" fg:w="187"/><text x="4.8474%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (187 samples, 0.57%)</title><rect x="4.5974%" y="1557" width="0.5709%" height="15" fill="rgb(220,229,9)" fg:x="1506" fg:w="187"/><text x="4.8474%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (186 samples, 0.57%)</title><rect x="4.6004%" y="1541" width="0.5678%" height="15" fill="rgb(250,87,22)" fg:x="1507" fg:w="186"/><text x="4.8504%" y="1551.50"></text></g><g><title>scylla::frame::request::query::QueryParameters::serialize (242 samples, 0.74%)</title><rect x="4.4356%" y="1621" width="0.7388%" height="15" fill="rgb(239,43,17)" fg:x="1453" fg:w="242"/><text x="4.6856%" y="1631.50"></text></g><g><title>scylla::frame::value::SerializedValues::write_to_request (206 samples, 0.63%)</title><rect x="4.5455%" y="1605" width="0.6289%" height="15" fill="rgb(231,177,25)" fg:x="1489" fg:w="206"/><text x="4.7955%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.01%)</title><rect x="5.1896%" y="1477" width="0.0122%" height="15" fill="rgb(219,179,1)" fg:x="1700" fg:w="4"/><text x="5.4396%" y="1487.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.02%)</title><rect x="5.3880%" y="1381" width="0.0153%" height="15" fill="rgb(238,219,53)" fg:x="1765" fg:w="5"/><text x="5.6380%" y="1391.50"></text></g><g><title>_int_free (20 samples, 0.06%)</title><rect x="5.4033%" y="1381" width="0.0611%" height="15" fill="rgb(232,167,36)" fg:x="1770" fg:w="20"/><text x="5.6533%" y="1391.50"></text></g><g><title>_int_malloc (37 samples, 0.11%)</title><rect x="5.4643%" y="1381" width="0.1129%" height="15" fill="rgb(244,19,51)" fg:x="1790" fg:w="37"/><text x="5.7143%" y="1391.50"></text></g><g><title>unlink_chunk.constprop.0 (8 samples, 0.02%)</title><rect x="5.5528%" y="1365" width="0.0244%" height="15" fill="rgb(224,6,22)" fg:x="1819" fg:w="8"/><text x="5.8028%" y="1375.50"></text></g><g><title>_int_realloc (101 samples, 0.31%)</title><rect x="5.2903%" y="1397" width="0.3083%" height="15" fill="rgb(224,145,5)" fg:x="1733" fg:w="101"/><text x="5.5403%" y="1407.50"></text></g><g><title>unlink_chunk.constprop.0 (7 samples, 0.02%)</title><rect x="5.5773%" y="1381" width="0.0214%" height="15" fill="rgb(234,130,49)" fg:x="1827" fg:w="7"/><text x="5.8273%" y="1391.50"></text></g><g><title>__GI___libc_realloc (128 samples, 0.39%)</title><rect x="5.2140%" y="1413" width="0.3907%" height="15" fill="rgb(254,6,2)" fg:x="1708" fg:w="128"/><text x="5.4640%" y="1423.50"></text></g><g><title>__rdl_realloc (6 samples, 0.02%)</title><rect x="5.6047%" y="1413" width="0.0183%" height="15" fill="rgb(208,96,46)" fg:x="1836" fg:w="6"/><text x="5.8547%" y="1423.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.02%)</title><rect x="5.6047%" y="1397" width="0.0183%" height="15" fill="rgb(239,3,39)" fg:x="1836" fg:w="6"/><text x="5.8547%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 samples, 0.42%)</title><rect x="5.2018%" y="1477" width="0.4243%" height="15" fill="rgb(233,210,1)" fg:x="1704" fg:w="139"/><text x="5.4518%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (135 samples, 0.41%)</title><rect x="5.2140%" y="1461" width="0.4121%" height="15" fill="rgb(244,137,37)" fg:x="1708" fg:w="135"/><text x="5.4640%" y="1471.50"></text></g><g><title>alloc::alloc::Global::grow_impl (135 samples, 0.41%)</title><rect x="5.2140%" y="1445" width="0.4121%" height="15" fill="rgb(240,136,2)" fg:x="1708" fg:w="135"/><text x="5.4640%" y="1455.50"></text></g><g><title>alloc::alloc::realloc (135 samples, 0.41%)</title><rect x="5.2140%" y="1429" width="0.4121%" height="15" fill="rgb(239,18,37)" fg:x="1708" fg:w="135"/><text x="5.4640%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (149 samples, 0.45%)</title><rect x="5.1743%" y="1493" width="0.4549%" height="15" fill="rgb(218,185,22)" fg:x="1695" fg:w="149"/><text x="5.4243%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (150 samples, 0.46%)</title><rect x="5.1743%" y="1541" width="0.4579%" height="15" fill="rgb(225,218,4)" fg:x="1695" fg:w="150"/><text x="5.4243%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (150 samples, 0.46%)</title><rect x="5.1743%" y="1525" width="0.4579%" height="15" fill="rgb(230,182,32)" fg:x="1695" fg:w="150"/><text x="5.4243%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (150 samples, 0.46%)</title><rect x="5.1743%" y="1509" width="0.4579%" height="15" fill="rgb(242,56,43)" fg:x="1695" fg:w="150"/><text x="5.4243%" y="1519.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="5.6322%" y="1541" width="0.0244%" height="15" fill="rgb(233,99,24)" fg:x="1845" fg:w="8"/><text x="5.8822%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (159 samples, 0.49%)</title><rect x="5.1743%" y="1605" width="0.4854%" height="15" fill="rgb(234,209,42)" fg:x="1695" fg:w="159"/><text x="5.4243%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (159 samples, 0.49%)</title><rect x="5.1743%" y="1589" width="0.4854%" height="15" fill="rgb(227,7,12)" fg:x="1695" fg:w="159"/><text x="5.4243%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (159 samples, 0.49%)</title><rect x="5.1743%" y="1573" width="0.4854%" height="15" fill="rgb(245,203,43)" fg:x="1695" fg:w="159"/><text x="5.4243%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (159 samples, 0.49%)</title><rect x="5.1743%" y="1557" width="0.4854%" height="15" fill="rgb(238,205,33)" fg:x="1695" fg:w="159"/><text x="5.4243%" y="1567.50"></text></g><g><title>_int_realloc (12 samples, 0.04%)</title><rect x="5.8367%" y="1349" width="0.0366%" height="15" fill="rgb(231,56,7)" fg:x="1912" fg:w="12"/><text x="6.0867%" y="1359.50"></text></g><g><title>__GI___libc_realloc (46 samples, 0.14%)</title><rect x="5.7391%" y="1365" width="0.1404%" height="15" fill="rgb(244,186,29)" fg:x="1880" fg:w="46"/><text x="5.9891%" y="1375.50"></text></g><g><title>__rdl_realloc (7 samples, 0.02%)</title><rect x="5.8795%" y="1365" width="0.0214%" height="15" fill="rgb(234,111,31)" fg:x="1926" fg:w="7"/><text x="6.1295%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (56 samples, 0.17%)</title><rect x="5.7360%" y="1413" width="0.1710%" height="15" fill="rgb(241,149,10)" fg:x="1879" fg:w="56"/><text x="5.9860%" y="1423.50"></text></g><g><title>alloc::alloc::Global::grow_impl (56 samples, 0.17%)</title><rect x="5.7360%" y="1397" width="0.1710%" height="15" fill="rgb(249,206,44)" fg:x="1879" fg:w="56"/><text x="5.9860%" y="1407.50"></text></g><g><title>alloc::alloc::realloc (55 samples, 0.17%)</title><rect x="5.7391%" y="1381" width="0.1679%" height="15" fill="rgb(251,153,30)" fg:x="1880" fg:w="55"/><text x="5.9891%" y="1391.50"></text></g><g><title>alloc::raw_vec::finish_grow (64 samples, 0.20%)</title><rect x="5.7177%" y="1429" width="0.1954%" height="15" fill="rgb(239,152,38)" fg:x="1873" fg:w="64"/><text x="5.9677%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.26%)</title><rect x="5.6658%" y="1493" width="0.2564%" height="15" fill="rgb(249,139,47)" fg:x="1856" fg:w="84"/><text x="5.9158%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (81 samples, 0.25%)</title><rect x="5.6749%" y="1477" width="0.2473%" height="15" fill="rgb(244,64,35)" fg:x="1859" fg:w="81"/><text x="5.9249%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.24%)</title><rect x="5.6780%" y="1461" width="0.2442%" height="15" fill="rgb(216,46,15)" fg:x="1860" fg:w="80"/><text x="5.9280%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (75 samples, 0.23%)</title><rect x="5.6933%" y="1445" width="0.2290%" height="15" fill="rgb(250,74,19)" fg:x="1865" fg:w="75"/><text x="5.9433%" y="1455.50"></text></g><g><title>&lt;scylla::frame::request::execute::Execute as scylla::frame::request::Request&gt;::serialize (493 samples, 1.50%)</title><rect x="4.4203%" y="1637" width="1.5050%" height="15" fill="rgb(249,42,33)" fg:x="1448" fg:w="493"/><text x="4.6703%" y="1647.50"></text></g><g><title>scylla::frame::types::write_short_bytes (246 samples, 0.75%)</title><rect x="5.1743%" y="1621" width="0.7510%" height="15" fill="rgb(242,149,17)" fg:x="1695" fg:w="246"/><text x="5.4243%" y="1631.50"></text></g><g><title>scylla::frame::types::write_short_length (87 samples, 0.27%)</title><rect x="5.6597%" y="1605" width="0.2656%" height="15" fill="rgb(244,29,21)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1615.50"></text></g><g><title>scylla::frame::types::write_short (87 samples, 0.27%)</title><rect x="5.6597%" y="1589" width="0.2656%" height="15" fill="rgb(220,130,37)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1599.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i16 (87 samples, 0.27%)</title><rect x="5.6597%" y="1573" width="0.2656%" height="15" fill="rgb(211,67,2)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (87 samples, 0.27%)</title><rect x="5.6597%" y="1557" width="0.2656%" height="15" fill="rgb(235,68,52)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (87 samples, 0.27%)</title><rect x="5.6597%" y="1541" width="0.2656%" height="15" fill="rgb(246,142,3)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (87 samples, 0.27%)</title><rect x="5.6597%" y="1525" width="0.2656%" height="15" fill="rgb(241,25,7)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (87 samples, 0.27%)</title><rect x="5.6597%" y="1509" width="0.2656%" height="15" fill="rgb(242,119,39)" fg:x="1854" fg:w="87"/><text x="5.9097%" y="1519.50"></text></g><g><title>futex_wait_queue_me (6 samples, 0.02%)</title><rect x="6.0962%" y="1413" width="0.0183%" height="15" fill="rgb(241,98,45)" fg:x="1997" fg:w="6"/><text x="6.3462%" y="1423.50"></text></g><g><title>schedule (6 samples, 0.02%)</title><rect x="6.0962%" y="1397" width="0.0183%" height="15" fill="rgb(254,28,30)" fg:x="1997" fg:w="6"/><text x="6.3462%" y="1407.50"></text></g><g><title>__schedule (5 samples, 0.02%)</title><rect x="6.0993%" y="1381" width="0.0153%" height="15" fill="rgb(241,142,54)" fg:x="1998" fg:w="5"/><text x="6.3493%" y="1391.50"></text></g><g><title>__lll_lock_wait_private (9 samples, 0.03%)</title><rect x="6.0962%" y="1509" width="0.0275%" height="15" fill="rgb(222,85,15)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1519.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="6.0962%" y="1493" width="0.0275%" height="15" fill="rgb(210,85,47)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1503.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="6.0962%" y="1477" width="0.0275%" height="15" fill="rgb(224,206,25)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1487.50"></text></g><g><title>__x64_sys_futex (9 samples, 0.03%)</title><rect x="6.0962%" y="1461" width="0.0275%" height="15" fill="rgb(243,201,19)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1471.50"></text></g><g><title>do_futex (9 samples, 0.03%)</title><rect x="6.0962%" y="1445" width="0.0275%" height="15" fill="rgb(236,59,4)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1455.50"></text></g><g><title>futex_wait (9 samples, 0.03%)</title><rect x="6.0962%" y="1429" width="0.0275%" height="15" fill="rgb(254,179,45)" fg:x="1997" fg:w="9"/><text x="6.3462%" y="1439.50"></text></g><g><title>_int_malloc (90 samples, 0.27%)</title><rect x="6.1237%" y="1509" width="0.2747%" height="15" fill="rgb(226,14,10)" fg:x="2006" fg:w="90"/><text x="6.3737%" y="1519.50"></text></g><g><title>unlink_chunk.constprop.0 (9 samples, 0.03%)</title><rect x="6.3710%" y="1493" width="0.0275%" height="15" fill="rgb(244,27,41)" fg:x="2087" fg:w="9"/><text x="6.6210%" y="1503.50"></text></g><g><title>scylla::frame::SerializedRequest::make (652 samples, 1.99%)</title><rect x="4.4203%" y="1653" width="1.9904%" height="15" fill="rgb(235,35,32)" fg:x="1448" fg:w="652"/><text x="4.6703%" y="1663.50">s..</text></g><g><title>alloc::vec::from_elem (159 samples, 0.49%)</title><rect x="5.9253%" y="1637" width="0.4854%" height="15" fill="rgb(218,68,31)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1647.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (159 samples, 0.49%)</title><rect x="5.9253%" y="1621" width="0.4854%" height="15" fill="rgb(207,120,37)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (159 samples, 0.49%)</title><rect x="5.9253%" y="1605" width="0.4854%" height="15" fill="rgb(227,98,0)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (159 samples, 0.49%)</title><rect x="5.9253%" y="1589" width="0.4854%" height="15" fill="rgb(207,7,3)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (159 samples, 0.49%)</title><rect x="5.9253%" y="1573" width="0.4854%" height="15" fill="rgb(206,98,19)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.49%)</title><rect x="5.9253%" y="1557" width="0.4854%" height="15" fill="rgb(217,5,26)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1567.50"></text></g><g><title>alloc::alloc::alloc_zeroed (159 samples, 0.49%)</title><rect x="5.9253%" y="1541" width="0.4854%" height="15" fill="rgb(235,190,38)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1551.50"></text></g><g><title>__calloc (159 samples, 0.49%)</title><rect x="5.9253%" y="1525" width="0.4854%" height="15" fill="rgb(247,86,24)" fg:x="1941" fg:w="159"/><text x="6.1753%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.07%)</title><rect x="6.4503%" y="1637" width="0.0702%" height="15" fill="rgb(205,101,16)" fg:x="2113" fg:w="23"/><text x="6.7003%" y="1647.50"></text></g><g><title>__memmove_avx_unaligned_erms (7 samples, 0.02%)</title><rect x="6.4992%" y="1621" width="0.0214%" height="15" fill="rgb(246,168,33)" fg:x="2129" fg:w="7"/><text x="6.7492%" y="1631.50"></text></g><g><title>__memmove_avx_unaligned_erms (52 samples, 0.16%)</title><rect x="6.5297%" y="1637" width="0.1587%" height="15" fill="rgb(231,114,1)" fg:x="2139" fg:w="52"/><text x="6.7797%" y="1647.50"></text></g><g><title>__GI___libc_free (92 samples, 0.28%)</title><rect x="6.6945%" y="1605" width="0.2808%" height="15" fill="rgb(207,184,53)" fg:x="2193" fg:w="92"/><text x="6.9445%" y="1615.50"></text></g><g><title>_int_free (38 samples, 0.12%)</title><rect x="6.8594%" y="1589" width="0.1160%" height="15" fill="rgb(224,95,51)" fg:x="2247" fg:w="38"/><text x="7.1094%" y="1599.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (104 samples, 0.32%)</title><rect x="6.6915%" y="1621" width="0.3175%" height="15" fill="rgb(212,188,45)" fg:x="2192" fg:w="104"/><text x="6.9415%" y="1631.50"></text></g><g><title>bytes::bytes::promotable_even_drop (11 samples, 0.03%)</title><rect x="6.9754%" y="1605" width="0.0336%" height="15" fill="rgb(223,154,38)" fg:x="2285" fg:w="11"/><text x="7.2254%" y="1615.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (11 samples, 0.03%)</title><rect x="6.9754%" y="1589" width="0.0336%" height="15" fill="rgb(251,22,52)" fg:x="2285" fg:w="11"/><text x="7.2254%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (105 samples, 0.32%)</title><rect x="6.6915%" y="1637" width="0.3205%" height="15" fill="rgb(229,209,22)" fg:x="2192" fg:w="105"/><text x="6.9415%" y="1647.50"></text></g><g><title>scylla::frame::parse_response_body_extensions (27 samples, 0.08%)</title><rect x="7.0120%" y="1637" width="0.0824%" height="15" fill="rgb(234,138,34)" fg:x="2297" fg:w="27"/><text x="7.2620%" y="1647.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1893" width="6.4076%" height="15" fill="rgb(212,95,11)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1903.50">&lt;latte::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1877" width="6.4076%" height="15" fill="rgb(240,179,47)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1887.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1861" width="6.4076%" height="15" fill="rgb(240,163,11)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1871.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1845" width="6.4076%" height="15" fill="rgb(236,37,12)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1855.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1829" width="6.4076%" height="15" fill="rgb(232,164,16)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1839.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1813" width="6.4076%" height="15" fill="rgb(244,205,15)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1823.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1797" width="6.4076%" height="15" fill="rgb(223,117,47)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1807.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1781" width="6.4076%" height="15" fill="rgb(244,107,35)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1791.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1765" width="6.4076%" height="15" fill="rgb(205,140,8)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1775.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1749" width="6.4076%" height="15" fill="rgb(228,84,46)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1759.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1733" width="6.4076%" height="15" fill="rgb(254,188,9)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1743.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1717" width="6.4076%" height="15" fill="rgb(206,112,54)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1727.50">&lt;core::f..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1701" width="6.4076%" height="15" fill="rgb(216,84,49)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1711.50">scylla::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1685" width="6.4076%" height="15" fill="rgb(214,194,35)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1695.50">&lt;core::f..</text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (2,099 samples, 6.41%)</title><rect x="0.6991%" y="1669" width="6.4076%" height="15" fill="rgb(249,28,3)" fg:x="229" fg:w="2099"/><text x="0.9491%" y="1679.50">scylla::..</text></g><g><title>scylla::transport::connection::Connection::parse_response (228 samples, 0.70%)</title><rect x="6.4106%" y="1653" width="0.6960%" height="15" fill="rgb(222,56,52)" fg:x="2100" fg:w="228"/><text x="6.6606%" y="1663.50"></text></g><g><title>scylla::frame::response::Response::deserialize (4 samples, 0.01%)</title><rect x="7.0945%" y="1637" width="0.0122%" height="15" fill="rgb(245,217,50)" fg:x="2324" fg:w="4"/><text x="7.3445%" y="1647.50"></text></g><g><title>__memcpy_avx_unaligned (4 samples, 0.01%)</title><rect x="7.1402%" y="1621" width="0.0122%" height="15" fill="rgb(213,201,24)" fg:x="2339" fg:w="4"/><text x="7.3902%" y="1631.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.02%)</title><rect x="7.1525%" y="1621" width="0.0183%" height="15" fill="rgb(248,116,28)" fg:x="2343" fg:w="6"/><text x="7.4025%" y="1631.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="7.7569%" y="1589" width="0.0183%" height="15" fill="rgb(219,72,43)" fg:x="2541" fg:w="6"/><text x="8.0069%" y="1599.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (14 samples, 0.04%)</title><rect x="8.6880%" y="1509" width="0.0427%" height="15" fill="rgb(209,138,14)" fg:x="2846" fg:w="14"/><text x="8.9380%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (6 samples, 0.02%)</title><rect x="8.7307%" y="1509" width="0.0183%" height="15" fill="rgb(222,18,33)" fg:x="2860" fg:w="6"/><text x="8.9807%" y="1519.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="8.7307%" y="1493" width="0.0183%" height="15" fill="rgb(213,199,7)" fg:x="2860" fg:w="6"/><text x="8.9807%" y="1503.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (7 samples, 0.02%)</title><rect x="8.7490%" y="1509" width="0.0214%" height="15" fill="rgb(250,110,10)" fg:x="2866" fg:w="7"/><text x="8.9990%" y="1519.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::new (5 samples, 0.02%)</title><rect x="8.7551%" y="1493" width="0.0153%" height="15" fill="rgb(248,123,6)" fg:x="2868" fg:w="5"/><text x="9.0051%" y="1503.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::new (4 samples, 0.01%)</title><rect x="8.7582%" y="1477" width="0.0122%" height="15" fill="rgb(206,91,31)" fg:x="2869" fg:w="4"/><text x="9.0082%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 0.24%)</title><rect x="8.6391%" y="1541" width="0.2381%" height="15" fill="rgb(211,154,13)" fg:x="2830" fg:w="78"/><text x="8.8891%" y="1551.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve_inner::{{closure}} (78 samples, 0.24%)</title><rect x="8.6391%" y="1525" width="0.2381%" height="15" fill="rgb(225,148,7)" fg:x="2830" fg:w="78"/><text x="8.8891%" y="1535.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::semaphore (35 samples, 0.11%)</title><rect x="8.7704%" y="1509" width="0.1068%" height="15" fill="rgb(220,160,43)" fg:x="2873" fg:w="35"/><text x="9.0204%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.57%)</title><rect x="8.3155%" y="1573" width="0.5709%" height="15" fill="rgb(213,52,39)" fg:x="2724" fg:w="187"/><text x="8.5655%" y="1583.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (184 samples, 0.56%)</title><rect x="8.3247%" y="1557" width="0.5617%" height="15" fill="rgb(243,137,7)" fg:x="2727" fg:w="184"/><text x="8.5747%" y="1567.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.02%)</title><rect x="9.1703%" y="1493" width="0.0183%" height="15" fill="rgb(230,79,13)" fg:x="3004" fg:w="6"/><text x="9.4203%" y="1503.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="9.1886%" y="1477" width="0.0122%" height="15" fill="rgb(247,105,23)" fg:x="3010" fg:w="4"/><text x="9.4386%" y="1487.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (11 samples, 0.03%)</title><rect x="9.1703%" y="1509" width="0.0336%" height="15" fill="rgb(223,179,41)" fg:x="3004" fg:w="11"/><text x="9.4203%" y="1519.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (5 samples, 0.02%)</title><rect x="9.1886%" y="1493" width="0.0153%" height="15" fill="rgb(218,9,34)" fg:x="3010" fg:w="5"/><text x="9.4386%" y="1503.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (90 samples, 0.27%)</title><rect x="8.9322%" y="1525" width="0.2747%" height="15" fill="rgb(222,106,8)" fg:x="2926" fg:w="90"/><text x="9.1822%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (52 samples, 0.16%)</title><rect x="9.2252%" y="1493" width="0.1587%" height="15" fill="rgb(211,220,0)" fg:x="3022" fg:w="52"/><text x="9.4752%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_or (52 samples, 0.16%)</title><rect x="9.2252%" y="1477" width="0.1587%" height="15" fill="rgb(229,52,16)" fg:x="3022" fg:w="52"/><text x="9.4752%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (560 samples, 1.71%)</title><rect x="7.7111%" y="1605" width="1.7095%" height="15" fill="rgb(212,155,18)" fg:x="2526" fg:w="560"/><text x="7.9611%" y="1615.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (539 samples, 1.65%)</title><rect x="7.7752%" y="1589" width="1.6454%" height="15" fill="rgb(242,21,14)" fg:x="2547" fg:w="539"/><text x="8.0252%" y="1599.50"></text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (173 samples, 0.53%)</title><rect x="8.8925%" y="1573" width="0.5281%" height="15" fill="rgb(222,19,48)" fg:x="2913" fg:w="173"/><text x="9.1425%" y="1583.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (173 samples, 0.53%)</title><rect x="8.8925%" y="1557" width="0.5281%" height="15" fill="rgb(232,45,27)" fg:x="2913" fg:w="173"/><text x="9.1425%" y="1567.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (173 samples, 0.53%)</title><rect x="8.8925%" y="1541" width="0.5281%" height="15" fill="rgb(249,103,42)" fg:x="2913" fg:w="173"/><text x="9.1425%" y="1551.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (70 samples, 0.21%)</title><rect x="9.2069%" y="1525" width="0.2137%" height="15" fill="rgb(246,81,33)" fg:x="3016" fg:w="70"/><text x="9.4569%" y="1535.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (65 samples, 0.20%)</title><rect x="9.2222%" y="1509" width="0.1984%" height="15" fill="rgb(252,33,42)" fg:x="3021" fg:w="65"/><text x="9.4722%" y="1519.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (12 samples, 0.04%)</title><rect x="9.3840%" y="1493" width="0.0366%" height="15" fill="rgb(209,212,41)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1503.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker::{{closure}} (12 samples, 0.04%)</title><rect x="9.3840%" y="1477" width="0.0366%" height="15" fill="rgb(207,154,6)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.04%)</title><rect x="9.3840%" y="1461" width="0.0366%" height="15" fill="rgb(223,64,47)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1471.50"></text></g><g><title>core::mem::take (12 samples, 0.04%)</title><rect x="9.3840%" y="1445" width="0.0366%" height="15" fill="rgb(211,161,38)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1455.50"></text></g><g><title>core::mem::replace (12 samples, 0.04%)</title><rect x="9.3840%" y="1429" width="0.0366%" height="15" fill="rgb(219,138,40)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1439.50"></text></g><g><title>core::ptr::write (12 samples, 0.04%)</title><rect x="9.3840%" y="1413" width="0.0366%" height="15" fill="rgb(241,228,46)" fg:x="3074" fg:w="12"/><text x="9.6340%" y="1423.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="9.4206%" y="1605" width="0.0183%" height="15" fill="rgb(223,209,38)" fg:x="3086" fg:w="6"/><text x="9.6706%" y="1615.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="9.4389%" y="1605" width="0.0366%" height="15" fill="rgb(236,164,45)" fg:x="3092" fg:w="12"/><text x="9.6889%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.04%)</title><rect x="9.4389%" y="1589" width="0.0366%" height="15" fill="rgb(231,15,5)" fg:x="3092" fg:w="12"/><text x="9.6889%" y="1599.50"></text></g><g><title>__memcpy_avx_unaligned (5 samples, 0.02%)</title><rect x="9.4755%" y="1605" width="0.0153%" height="15" fill="rgb(252,35,15)" fg:x="3104" fg:w="5"/><text x="9.7255%" y="1615.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="9.4908%" y="1605" width="0.0244%" height="15" fill="rgb(248,181,18)" fg:x="3109" fg:w="8"/><text x="9.7408%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;tokio::sync::mpsc::bounded::Sender&lt;scylla::transport::connection::Task&gt;::send::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="9.5183%" y="1605" width="0.0122%" height="15" fill="rgb(233,39,42)" fg:x="3118" fg:w="4"/><text x="9.7683%" y="1615.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.02%)</title><rect x="9.5335%" y="1605" width="0.0244%" height="15" fill="rgb(238,110,33)" fg:x="3123" fg:w="8"/><text x="9.7835%" y="1615.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="9.6953%" y="1589" width="0.0122%" height="15" fill="rgb(233,195,10)" fg:x="3176" fg:w="4"/><text x="9.9453%" y="1599.50"></text></g><g><title>__rdl_alloc_zeroed (8 samples, 0.02%)</title><rect x="9.7686%" y="1477" width="0.0244%" height="15" fill="rgb(254,105,3)" fg:x="3200" fg:w="8"/><text x="10.0186%" y="1487.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (6 samples, 0.02%)</title><rect x="9.7747%" y="1461" width="0.0183%" height="15" fill="rgb(221,225,9)" fg:x="3202" fg:w="6"/><text x="10.0247%" y="1471.50"></text></g><g><title>alloc::vec::from_elem (28 samples, 0.09%)</title><rect x="9.7137%" y="1589" width="0.0855%" height="15" fill="rgb(224,227,45)" fg:x="3182" fg:w="28"/><text x="9.9637%" y="1599.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (28 samples, 0.09%)</title><rect x="9.7137%" y="1573" width="0.0855%" height="15" fill="rgb(229,198,43)" fg:x="3182" fg:w="28"/><text x="9.9637%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (16 samples, 0.05%)</title><rect x="9.7503%" y="1557" width="0.0488%" height="15" fill="rgb(206,209,35)" fg:x="3194" fg:w="16"/><text x="10.0003%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.05%)</title><rect x="9.7503%" y="1541" width="0.0488%" height="15" fill="rgb(245,195,53)" fg:x="3194" fg:w="16"/><text x="10.0003%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (16 samples, 0.05%)</title><rect x="9.7503%" y="1525" width="0.0488%" height="15" fill="rgb(240,92,26)" fg:x="3194" fg:w="16"/><text x="10.0003%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.05%)</title><rect x="9.7503%" y="1509" width="0.0488%" height="15" fill="rgb(207,40,23)" fg:x="3194" fg:w="16"/><text x="10.0003%" y="1519.50"></text></g><g><title>alloc::alloc::alloc_zeroed (14 samples, 0.04%)</title><rect x="9.7564%" y="1493" width="0.0427%" height="15" fill="rgb(223,111,35)" fg:x="3196" fg:w="14"/><text x="10.0064%" y="1503.50"></text></g><g><title>scylla::frame::SerializedRequest::make (81 samples, 0.25%)</title><rect x="9.5580%" y="1605" width="0.2473%" height="15" fill="rgb(229,147,28)" fg:x="3131" fg:w="81"/><text x="9.8080%" y="1615.50"></text></g><g><title>scylla::transport::connection::Connection::parse_response (9 samples, 0.03%)</title><rect x="9.8052%" y="1605" width="0.0275%" height="15" fill="rgb(211,29,28)" fg:x="3212" fg:w="9"/><text x="10.0552%" y="1615.50"></text></g><g><title>__GI___libc_malloc (124 samples, 0.38%)</title><rect x="9.9151%" y="1509" width="0.3785%" height="15" fill="rgb(228,72,33)" fg:x="3248" fg:w="124"/><text x="10.1651%" y="1519.50"></text></g><g><title>_int_malloc (85 samples, 0.26%)</title><rect x="10.0342%" y="1493" width="0.2595%" height="15" fill="rgb(205,214,31)" fg:x="3287" fg:w="85"/><text x="10.2842%" y="1503.50"></text></g><g><title>unlink_chunk.constprop.0 (30 samples, 0.09%)</title><rect x="10.2021%" y="1477" width="0.0916%" height="15" fill="rgb(224,111,15)" fg:x="3342" fg:w="30"/><text x="10.4521%" y="1487.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="10.2937%" y="1509" width="0.0122%" height="15" fill="rgb(253,21,26)" fg:x="3372" fg:w="4"/><text x="10.5437%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (155 samples, 0.47%)</title><rect x="9.8449%" y="1589" width="0.4732%" height="15" fill="rgb(245,139,43)" fg:x="3225" fg:w="155"/><text x="10.0949%" y="1599.50"></text></g><g><title>alloc::alloc::exchange_malloc (133 samples, 0.41%)</title><rect x="9.9121%" y="1573" width="0.4060%" height="15" fill="rgb(252,170,7)" fg:x="3247" fg:w="133"/><text x="10.1621%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.41%)</title><rect x="9.9121%" y="1557" width="0.4060%" height="15" fill="rgb(231,118,14)" fg:x="3247" fg:w="133"/><text x="10.1621%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.41%)</title><rect x="9.9121%" y="1541" width="0.4060%" height="15" fill="rgb(238,83,0)" fg:x="3247" fg:w="133"/><text x="10.1621%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.40%)</title><rect x="9.9151%" y="1525" width="0.4030%" height="15" fill="rgb(221,39,39)" fg:x="3248" fg:w="132"/><text x="10.1651%" y="1535.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="10.3059%" y="1509" width="0.0122%" height="15" fill="rgb(222,119,46)" fg:x="3376" fg:w="4"/><text x="10.5559%" y="1519.50"></text></g><g><title>tokio::io::driver::ready::Ready::as_usize (4 samples, 0.01%)</title><rect x="10.3181%" y="1589" width="0.0122%" height="15" fill="rgb(222,165,49)" fg:x="3380" fg:w="4"/><text x="10.5681%" y="1599.50"></text></g><g><title>tokio::sync::oneshot::State::as_usize (5 samples, 0.02%)</title><rect x="10.3303%" y="1589" width="0.0153%" height="15" fill="rgb(219,113,52)" fg:x="3384" fg:w="5"/><text x="10.5803%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1877" width="3.2511%" height="15" fill="rgb(214,7,15)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1887.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1861" width="3.2511%" height="15" fill="rgb(235,32,4)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1871.50">&lt;co..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1845" width="3.2511%" height="15" fill="rgb(238,90,54)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1855.50">&lt;la..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1829" width="3.2511%" height="15" fill="rgb(213,208,19)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1839.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1813" width="3.2511%" height="15" fill="rgb(233,156,4)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1823.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1797" width="3.2511%" height="15" fill="rgb(207,194,5)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1807.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1781" width="3.2511%" height="15" fill="rgb(206,111,30)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1791.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1765" width="3.2511%" height="15" fill="rgb(243,70,54)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1775.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1749" width="3.2511%" height="15" fill="rgb(242,28,8)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1759.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1733" width="3.2511%" height="15" fill="rgb(219,106,18)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1743.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1717" width="3.2511%" height="15" fill="rgb(244,222,10)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1727.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1701" width="3.2511%" height="15" fill="rgb(236,179,52)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1711.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1685" width="3.2511%" height="15" fill="rgb(213,23,39)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1695.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1669" width="3.2511%" height="15" fill="rgb(238,48,10)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1679.50">&lt;co..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1653" width="3.2511%" height="15" fill="rgb(251,196,23)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1663.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,065 samples, 3.25%)</title><rect x="7.1067%" y="1637" width="3.2511%" height="15" fill="rgb(250,152,24)" fg:x="2328" fg:w="1065"/><text x="7.3567%" y="1647.50">&lt;co..</text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (1,044 samples, 3.19%)</title><rect x="7.1708%" y="1621" width="3.1870%" height="15" fill="rgb(209,150,17)" fg:x="2349" fg:w="1044"/><text x="7.4208%" y="1631.50">scy..</text></g><g><title>tokio::sync::oneshot::channel (172 samples, 0.53%)</title><rect x="9.8327%" y="1605" width="0.5251%" height="15" fill="rgb(234,202,34)" fg:x="3221" fg:w="172"/><text x="10.0827%" y="1615.50"></text></g><g><title>tokio::sync::oneshot::State::new (4 samples, 0.01%)</title><rect x="10.3456%" y="1589" width="0.0122%" height="15" fill="rgb(253,148,53)" fg:x="3389" fg:w="4"/><text x="10.5956%" y="1599.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (1,066 samples, 3.25%)</title><rect x="7.1067%" y="1893" width="3.2542%" height="15" fill="rgb(218,129,16)" fg:x="2328" fg:w="1066"/><text x="7.3567%" y="1903.50">lat..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.07%)</title><rect x="10.3883%" y="1541" width="0.0672%" height="15" fill="rgb(216,85,19)" fg:x="3403" fg:w="22"/><text x="10.6383%" y="1551.50"></text></g><g><title>&lt;&amp;T as scylla::frame::value::ValueList&gt;::serialized (4 samples, 0.01%)</title><rect x="12.1344%" y="1525" width="0.0122%" height="15" fill="rgb(235,228,7)" fg:x="3975" fg:w="4"/><text x="12.3844%" y="1535.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (117 samples, 0.36%)</title><rect x="12.1467%" y="1525" width="0.3572%" height="15" fill="rgb(245,175,0)" fg:x="3979" fg:w="117"/><text x="12.3967%" y="1535.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (117 samples, 0.36%)</title><rect x="12.1467%" y="1509" width="0.3572%" height="15" fill="rgb(208,168,36)" fg:x="3979" fg:w="117"/><text x="12.3967%" y="1519.50"></text></g><g><title>bytes::bytes::promotable_even_clone (116 samples, 0.35%)</title><rect x="12.1497%" y="1493" width="0.3541%" height="15" fill="rgb(246,171,24)" fg:x="3980" fg:w="116"/><text x="12.3997%" y="1503.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (108 samples, 0.33%)</title><rect x="12.1741%" y="1477" width="0.3297%" height="15" fill="rgb(215,142,24)" fg:x="3988" fg:w="108"/><text x="12.4241%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (54 samples, 0.16%)</title><rect x="12.5038%" y="1525" width="0.1648%" height="15" fill="rgb(250,187,7)" fg:x="4096" fg:w="54"/><text x="12.7538%" y="1535.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.09%)</title><rect x="12.6687%" y="1525" width="0.0855%" height="15" fill="rgb(228,66,33)" fg:x="4150" fg:w="28"/><text x="12.9187%" y="1535.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="12.7541%" y="1525" width="0.0183%" height="15" fill="rgb(234,215,21)" fg:x="4178" fg:w="6"/><text x="13.0041%" y="1535.50"></text></g><g><title>sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="12.7541%" y="1509" width="0.0183%" height="15" fill="rgb(222,191,20)" fg:x="4178" fg:w="6"/><text x="13.0041%" y="1519.50"></text></g><g><title>__sysvec_apic_timer_interrupt (6 samples, 0.02%)</title><rect x="12.7541%" y="1493" width="0.0183%" height="15" fill="rgb(245,79,54)" fg:x="4178" fg:w="6"/><text x="13.0041%" y="1503.50"></text></g><g><title>hrtimer_interrupt (6 samples, 0.02%)</title><rect x="12.7541%" y="1477" width="0.0183%" height="15" fill="rgb(240,10,37)" fg:x="4178" fg:w="6"/><text x="13.0041%" y="1487.50"></text></g><g><title>__hrtimer_run_queues (5 samples, 0.02%)</title><rect x="12.7572%" y="1461" width="0.0153%" height="15" fill="rgb(214,192,32)" fg:x="4179" fg:w="5"/><text x="13.0072%" y="1471.50"></text></g><g><title>tick_sched_timer (4 samples, 0.01%)</title><rect x="12.7602%" y="1445" width="0.0122%" height="15" fill="rgb(209,36,54)" fg:x="4180" fg:w="4"/><text x="13.0102%" y="1455.50"></text></g><g><title>tick_sched_handle (4 samples, 0.01%)</title><rect x="12.7602%" y="1429" width="0.0122%" height="15" fill="rgb(220,10,11)" fg:x="4180" fg:w="4"/><text x="13.0102%" y="1439.50"></text></g><g><title>update_process_times (4 samples, 0.01%)</title><rect x="12.7602%" y="1413" width="0.0122%" height="15" fill="rgb(221,106,17)" fg:x="4180" fg:w="4"/><text x="13.0102%" y="1423.50"></text></g><g><title>scheduler_tick (4 samples, 0.01%)</title><rect x="12.7602%" y="1397" width="0.0122%" height="15" fill="rgb(251,142,44)" fg:x="4180" fg:w="4"/><text x="13.0102%" y="1407.50"></text></g><g><title>task_tick_fair (4 samples, 0.01%)</title><rect x="12.7602%" y="1381" width="0.0122%" height="15" fill="rgb(238,13,15)" fg:x="4180" fg:w="4"/><text x="13.0102%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt; (6 samples, 0.02%)</title><rect x="12.7725%" y="1525" width="0.0183%" height="15" fill="rgb(208,107,27)" fg:x="4184" fg:w="6"/><text x="13.0225%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::send_request&lt;scylla::frame::request::query::Query&gt;::{{closure}}&gt;&gt; (8 samples, 0.02%)</title><rect x="12.7908%" y="1525" width="0.0244%" height="15" fill="rgb(205,136,37)" fg:x="4190" fg:w="8"/><text x="13.0408%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (196 samples, 0.60%)</title><rect x="12.8152%" y="1509" width="0.5983%" height="15" fill="rgb(250,205,27)" fg:x="4198" fg:w="196"/><text x="13.0652%" y="1519.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (196 samples, 0.60%)</title><rect x="12.8152%" y="1493" width="0.5983%" height="15" fill="rgb(210,80,43)" fg:x="4198" fg:w="196"/><text x="13.0652%" y="1503.50"></text></g><g><title>bytes::bytes::shared_drop (68 samples, 0.21%)</title><rect x="13.2059%" y="1477" width="0.2076%" height="15" fill="rgb(247,160,36)" fg:x="4326" fg:w="68"/><text x="13.4559%" y="1487.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (68 samples, 0.21%)</title><rect x="13.2059%" y="1461" width="0.2076%" height="15" fill="rgb(234,13,49)" fg:x="4326" fg:w="68"/><text x="13.4559%" y="1471.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (68 samples, 0.21%)</title><rect x="13.2059%" y="1445" width="0.2076%" height="15" fill="rgb(234,122,0)" fg:x="4326" fg:w="68"/><text x="13.4559%" y="1455.50"></text></g><g><title>bytes::bytes::release_shared (60 samples, 0.18%)</title><rect x="13.2304%" y="1429" width="0.1832%" height="15" fill="rgb(207,146,38)" fg:x="4334" fg:w="60"/><text x="13.4804%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::request::execute::Execute&gt; (218 samples, 0.67%)</title><rect x="12.8152%" y="1525" width="0.6655%" height="15" fill="rgb(207,177,25)" fg:x="4198" fg:w="218"/><text x="13.0652%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::request::query::QueryParameters&gt; (22 samples, 0.07%)</title><rect x="13.4135%" y="1509" width="0.0672%" height="15" fill="rgb(211,178,42)" fg:x="4394" fg:w="22"/><text x="13.6635%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (22 samples, 0.07%)</title><rect x="13.4135%" y="1493" width="0.0672%" height="15" fill="rgb(230,69,54)" fg:x="4394" fg:w="22"/><text x="13.6635%" y="1503.50"></text></g><g><title>scylla::statement::StatementConfig::determine_consistency (7 samples, 0.02%)</title><rect x="13.4807%" y="1525" width="0.0214%" height="15" fill="rgb(214,135,41)" fg:x="4416" fg:w="7"/><text x="13.7307%" y="1535.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (7 samples, 0.02%)</title><rect x="13.4807%" y="1509" width="0.0214%" height="15" fill="rgb(237,67,25)" fg:x="4416" fg:w="7"/><text x="13.7307%" y="1519.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_id (6 samples, 0.02%)</title><rect x="13.5020%" y="1525" width="0.0183%" height="15" fill="rgb(222,189,50)" fg:x="4423" fg:w="6"/><text x="13.7520%" y="1535.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_serial_consistency (4 samples, 0.01%)</title><rect x="13.5234%" y="1525" width="0.0122%" height="15" fill="rgb(245,148,34)" fg:x="4430" fg:w="4"/><text x="13.7734%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,043 samples, 3.18%)</title><rect x="10.3608%" y="1621" width="3.1840%" height="15" fill="rgb(222,29,6)" fg:x="3394" fg:w="1043"/><text x="10.6108%" y="1631.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (1,043 samples, 3.18%)</title><rect x="10.3608%" y="1605" width="3.1840%" height="15" fill="rgb(221,189,43)" fg:x="3394" fg:w="1043"/><text x="10.6108%" y="1615.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,043 samples, 3.18%)</title><rect x="10.3608%" y="1589" width="3.1840%" height="15" fill="rgb(207,36,27)" fg:x="3394" fg:w="1043"/><text x="10.6108%" y="1599.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (1,043 samples, 3.18%)</title><rect x="10.3608%" y="1573" width="3.1840%" height="15" fill="rgb(217,90,24)" fg:x="3394" fg:w="1043"/><text x="10.6108%" y="1583.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,043 samples, 3.18%)</title><rect x="10.3608%" y="1557" width="3.1840%" height="15" fill="rgb(224,66,35)" fg:x="3394" fg:w="1043"/><text x="10.6108%" y="1567.50">&lt;co..</text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (1,012 samples, 3.09%)</title><rect x="10.4555%" y="1541" width="3.0893%" height="15" fill="rgb(221,13,50)" fg:x="3425" fg:w="1012"/><text x="10.7055%" y="1551.50">scy..</text></g><g><title>core::mem::swap (4 samples, 0.01%)</title><rect x="13.5753%" y="1445" width="0.0122%" height="15" fill="rgb(236,68,49)" fg:x="4447" fg:w="4"/><text x="13.8253%" y="1455.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.01%)</title><rect x="13.5753%" y="1429" width="0.0122%" height="15" fill="rgb(229,146,28)" fg:x="4447" fg:w="4"/><text x="13.8253%" y="1439.50"></text></g><g><title>core::ptr::swap_nonoverlapping (4 samples, 0.01%)</title><rect x="13.5753%" y="1413" width="0.0122%" height="15" fill="rgb(225,31,38)" fg:x="4447" fg:w="4"/><text x="13.8253%" y="1423.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (4 samples, 0.01%)</title><rect x="13.5753%" y="1397" width="0.0122%" height="15" fill="rgb(250,208,3)" fg:x="4447" fg:w="4"/><text x="13.8253%" y="1407.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="13.5753%" y="1381" width="0.0122%" height="15" fill="rgb(246,54,23)" fg:x="4447" fg:w="4"/><text x="13.8253%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (4 samples, 0.01%)</title><rect x="13.5997%" y="1413" width="0.0122%" height="15" fill="rgb(243,76,11)" fg:x="4455" fg:w="4"/><text x="13.8497%" y="1423.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.01%)</title><rect x="13.5997%" y="1397" width="0.0122%" height="15" fill="rgb(245,21,50)" fg:x="4455" fg:w="4"/><text x="13.8497%" y="1407.50"></text></g><g><title>__memset_avx2_unaligned (4 samples, 0.01%)</title><rect x="13.5997%" y="1381" width="0.0122%" height="15" fill="rgb(228,9,43)" fg:x="4455" fg:w="4"/><text x="13.8497%" y="1391.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (6 samples, 0.02%)</title><rect x="13.6119%" y="1397" width="0.0183%" height="15" fill="rgb(208,100,47)" fg:x="4459" fg:w="6"/><text x="13.8619%" y="1407.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.01%)</title><rect x="13.6180%" y="1381" width="0.0122%" height="15" fill="rgb(232,26,8)" fg:x="4461" fg:w="4"/><text x="13.8680%" y="1391.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.01%)</title><rect x="13.6180%" y="1365" width="0.0122%" height="15" fill="rgb(216,166,38)" fg:x="4461" fg:w="4"/><text x="13.8680%" y="1375.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.05%)</title><rect x="13.6333%" y="1333" width="0.0549%" height="15" fill="rgb(251,202,51)" fg:x="4466" fg:w="18"/><text x="13.8833%" y="1343.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="13.6883%" y="1333" width="0.0183%" height="15" fill="rgb(254,216,34)" fg:x="4484" fg:w="6"/><text x="13.9383%" y="1343.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.01%)</title><rect x="13.6944%" y="1317" width="0.0122%" height="15" fill="rgb(251,32,27)" fg:x="4486" fg:w="4"/><text x="13.9444%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (35 samples, 0.11%)</title><rect x="13.6119%" y="1413" width="0.1068%" height="15" fill="rgb(208,127,28)" fg:x="4459" fg:w="35"/><text x="13.8619%" y="1423.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (29 samples, 0.09%)</title><rect x="13.6303%" y="1397" width="0.0885%" height="15" fill="rgb(224,137,22)" fg:x="4465" fg:w="29"/><text x="13.8803%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.09%)</title><rect x="13.6303%" y="1381" width="0.0885%" height="15" fill="rgb(254,70,32)" fg:x="4465" fg:w="29"/><text x="13.8803%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.09%)</title><rect x="13.6303%" y="1365" width="0.0885%" height="15" fill="rgb(229,75,37)" fg:x="4465" fg:w="29"/><text x="13.8803%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.09%)</title><rect x="13.6333%" y="1349" width="0.0855%" height="15" fill="rgb(252,64,23)" fg:x="4466" fg:w="28"/><text x="13.8833%" y="1359.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="13.7066%" y="1333" width="0.0122%" height="15" fill="rgb(232,162,48)" fg:x="4490" fg:w="4"/><text x="13.9566%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (57 samples, 0.17%)</title><rect x="13.5509%" y="1461" width="0.1740%" height="15" fill="rgb(246,160,12)" fg:x="4439" fg:w="57"/><text x="13.8009%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (42 samples, 0.13%)</title><rect x="13.5967%" y="1445" width="0.1282%" height="15" fill="rgb(247,166,0)" fg:x="4454" fg:w="42"/><text x="13.8467%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (41 samples, 0.13%)</title><rect x="13.5997%" y="1429" width="0.1252%" height="15" fill="rgb(249,219,21)" fg:x="4455" fg:w="41"/><text x="13.8497%" y="1439.50"></text></g><g><title>latte::req_stream::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1893" width="3.3671%" height="15" fill="rgb(205,209,3)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1903.50">lat..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1877" width="3.3671%" height="15" fill="rgb(243,44,1)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1887.50">&lt;fu..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1861" width="3.3671%" height="15" fill="rgb(206,159,16)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1871.50">fut..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1845" width="3.3671%" height="15" fill="rgb(244,77,30)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1855.50">&lt;fu..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1829" width="3.3671%" height="15" fill="rgb(218,69,12)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1839.50">fut..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1813" width="3.3671%" height="15" fill="rgb(212,87,7)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1823.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1797" width="3.3671%" height="15" fill="rgb(245,114,25)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1807.50">&lt;co..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1781" width="3.3671%" height="15" fill="rgb(210,61,42)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1791.50">lat..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1765" width="3.3671%" height="15" fill="rgb(211,52,33)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1775.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1749" width="3.3671%" height="15" fill="rgb(234,58,33)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1759.50">&lt;co..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1733" width="3.3671%" height="15" fill="rgb(220,115,36)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1743.50">&lt;la..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1717" width="3.3671%" height="15" fill="rgb(243,153,54)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1727.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1701" width="3.3671%" height="15" fill="rgb(251,47,18)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1711.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1685" width="3.3671%" height="15" fill="rgb(242,102,42)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1695.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1669" width="3.3671%" height="15" fill="rgb(234,31,38)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1679.50">scy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1653" width="3.3671%" height="15" fill="rgb(221,117,51)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1663.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (1,103 samples, 3.37%)</title><rect x="10.3608%" y="1637" width="3.3671%" height="15" fill="rgb(212,20,18)" fg:x="3394" fg:w="1103"/><text x="10.6108%" y="1647.50">scy..</text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (60 samples, 0.18%)</title><rect x="13.5448%" y="1621" width="0.1832%" height="15" fill="rgb(245,133,36)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 0.18%)</title><rect x="13.5448%" y="1605" width="0.1832%" height="15" fill="rgb(212,6,19)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (60 samples, 0.18%)</title><rect x="13.5448%" y="1589" width="0.1832%" height="15" fill="rgb(218,1,36)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.18%)</title><rect x="13.5448%" y="1573" width="0.1832%" height="15" fill="rgb(246,84,54)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1583.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.18%)</title><rect x="13.5448%" y="1557" width="0.1832%" height="15" fill="rgb(242,110,6)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1567.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (60 samples, 0.18%)</title><rect x="13.5448%" y="1541" width="0.1832%" height="15" fill="rgb(214,47,5)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1551.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (60 samples, 0.18%)</title><rect x="13.5448%" y="1525" width="0.1832%" height="15" fill="rgb(218,159,25)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1535.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (60 samples, 0.18%)</title><rect x="13.5448%" y="1509" width="0.1832%" height="15" fill="rgb(215,211,28)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (60 samples, 0.18%)</title><rect x="13.5448%" y="1493" width="0.1832%" height="15" fill="rgb(238,59,32)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (60 samples, 0.18%)</title><rect x="13.5448%" y="1477" width="0.1832%" height="15" fill="rgb(226,82,3)" fg:x="4437" fg:w="60"/><text x="13.7948%" y="1487.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (20 samples, 0.06%)</title><rect x="13.7676%" y="1653" width="0.0611%" height="15" fill="rgb(240,164,32)" fg:x="4510" fg:w="20"/><text x="14.0176%" y="1663.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.53%)</title><rect x="13.7279%" y="1781" width="0.5281%" height="15" fill="rgb(232,46,7)" fg:x="4497" fg:w="173"/><text x="13.9779%" y="1791.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (171 samples, 0.52%)</title><rect x="13.7340%" y="1765" width="0.5220%" height="15" fill="rgb(229,129,53)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1775.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (171 samples, 0.52%)</title><rect x="13.7340%" y="1749" width="0.5220%" height="15" fill="rgb(234,188,29)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1759.50"></text></g><g><title>scylla::transport::connection::Connection::execute::{{closure}} (171 samples, 0.52%)</title><rect x="13.7340%" y="1733" width="0.5220%" height="15" fill="rgb(246,141,4)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1743.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (171 samples, 0.52%)</title><rect x="13.7340%" y="1717" width="0.5220%" height="15" fill="rgb(229,23,39)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1727.50"></text></g><g><title>scylla::transport::connection::Connection::send_request::{{closure}} (171 samples, 0.52%)</title><rect x="13.7340%" y="1701" width="0.5220%" height="15" fill="rgb(206,12,3)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1711.50"></text></g><g><title>scylla::transport::connection::Connection::parse_response (171 samples, 0.52%)</title><rect x="13.7340%" y="1685" width="0.5220%" height="15" fill="rgb(252,226,20)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1695.50"></text></g><g><title>scylla::frame::response::Response::deserialize (171 samples, 0.52%)</title><rect x="13.7340%" y="1669" width="0.5220%" height="15" fill="rgb(216,123,35)" fg:x="4499" fg:w="171"/><text x="13.9840%" y="1679.50"></text></g><g><title>scylla::frame::response::result::deserialize (140 samples, 0.43%)</title><rect x="13.8287%" y="1653" width="0.4274%" height="15" fill="rgb(212,68,40)" fg:x="4530" fg:w="140"/><text x="14.0787%" y="1663.50"></text></g><g><title>scylla::frame::types::read_int (124 samples, 0.38%)</title><rect x="13.8775%" y="1637" width="0.3785%" height="15" fill="rgb(254,125,32)" fg:x="4546" fg:w="124"/><text x="14.1275%" y="1647.50"></text></g><g><title>byteorder::io::ReadBytesExt::read_i32 (124 samples, 0.38%)</title><rect x="13.8775%" y="1621" width="0.3785%" height="15" fill="rgb(253,97,22)" fg:x="4546" fg:w="124"/><text x="14.1275%" y="1631.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read_exact (124 samples, 0.38%)</title><rect x="13.8775%" y="1605" width="0.3785%" height="15" fill="rgb(241,101,14)" fg:x="4546" fg:w="124"/><text x="14.1275%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (175 samples, 0.53%)</title><rect x="13.7279%" y="1845" width="0.5342%" height="15" fill="rgb(238,103,29)" fg:x="4497" fg:w="175"/><text x="13.9779%" y="1855.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (175 samples, 0.53%)</title><rect x="13.7279%" y="1829" width="0.5342%" height="15" fill="rgb(233,195,47)" fg:x="4497" fg:w="175"/><text x="13.9779%" y="1839.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (175 samples, 0.53%)</title><rect x="13.7279%" y="1813" width="0.5342%" height="15" fill="rgb(246,218,30)" fg:x="4497" fg:w="175"/><text x="13.9779%" y="1823.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (175 samples, 0.53%)</title><rect x="13.7279%" y="1797" width="0.5342%" height="15" fill="rgb(219,145,47)" fg:x="4497" fg:w="175"/><text x="13.9779%" y="1807.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,444 samples, 13.57%)</title><rect x="0.6991%" y="1909" width="13.5662%" height="15" fill="rgb(243,12,26)" fg:x="229" fg:w="4444"/><text x="0.9491%" y="1919.50">&lt;core::future::from_..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (176 samples, 0.54%)</title><rect x="13.7279%" y="1893" width="0.5373%" height="15" fill="rgb(214,87,16)" fg:x="4497" fg:w="176"/><text x="13.9779%" y="1903.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (176 samples, 0.54%)</title><rect x="13.7279%" y="1877" width="0.5373%" height="15" fill="rgb(208,99,42)" fg:x="4497" fg:w="176"/><text x="13.9779%" y="1887.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (176 samples, 0.54%)</title><rect x="13.7279%" y="1861" width="0.5373%" height="15" fill="rgb(253,99,2)" fg:x="4497" fg:w="176"/><text x="13.9779%" y="1871.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.2652%" y="1909" width="0.0122%" height="15" fill="rgb(220,168,23)" fg:x="4673" fg:w="4"/><text x="14.5152%" y="1919.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.02%)</title><rect x="14.2774%" y="1797" width="0.0214%" height="15" fill="rgb(242,38,24)" fg:x="4677" fg:w="7"/><text x="14.5274%" y="1807.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="14.2774%" y="1781" width="0.0214%" height="15" fill="rgb(225,182,9)" fg:x="4677" fg:w="7"/><text x="14.5274%" y="1791.50"></text></g><g><title>__schedule (7 samples, 0.02%)</title><rect x="14.2774%" y="1765" width="0.0214%" height="15" fill="rgb(243,178,37)" fg:x="4677" fg:w="7"/><text x="14.5274%" y="1775.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="14.2774%" y="1749" width="0.0214%" height="15" fill="rgb(232,139,19)" fg:x="4677" fg:w="7"/><text x="14.5274%" y="1759.50"></text></g><g><title>__GI_madvise (9 samples, 0.03%)</title><rect x="14.2774%" y="1877" width="0.0275%" height="15" fill="rgb(225,201,24)" fg:x="4677" fg:w="9"/><text x="14.5274%" y="1887.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.03%)</title><rect x="14.2774%" y="1861" width="0.0275%" height="15" fill="rgb(221,47,46)" fg:x="4677" fg:w="9"/><text x="14.5274%" y="1871.50"></text></g><g><title>do_syscall_64 (9 samples, 0.03%)</title><rect x="14.2774%" y="1845" width="0.0275%" height="15" fill="rgb(249,23,13)" fg:x="4677" fg:w="9"/><text x="14.5274%" y="1855.50"></text></g><g><title>__x64_sys_madvise (9 samples, 0.03%)</title><rect x="14.2774%" y="1829" width="0.0275%" height="15" fill="rgb(219,9,5)" fg:x="4677" fg:w="9"/><text x="14.5274%" y="1839.50"></text></g><g><title>do_madvise.part.0 (9 samples, 0.03%)</title><rect x="14.2774%" y="1813" width="0.0275%" height="15" fill="rgb(254,171,16)" fg:x="4677" fg:w="9"/><text x="14.5274%" y="1823.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="14.3110%" y="1877" width="0.0214%" height="15" fill="rgb(230,171,20)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1887.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="14.3110%" y="1861" width="0.0214%" height="15" fill="rgb(210,71,41)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1871.50"></text></g><g><title>__x64_sys_exit (7 samples, 0.02%)</title><rect x="14.3110%" y="1845" width="0.0214%" height="15" fill="rgb(206,173,20)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1855.50"></text></g><g><title>do_exit (7 samples, 0.02%)</title><rect x="14.3110%" y="1829" width="0.0214%" height="15" fill="rgb(233,88,34)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1839.50"></text></g><g><title>mmap_read_lock (7 samples, 0.02%)</title><rect x="14.3110%" y="1813" width="0.0214%" height="15" fill="rgb(223,209,46)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1823.50"></text></g><g><title>rwsem_down_read_slowpath (7 samples, 0.02%)</title><rect x="14.3110%" y="1797" width="0.0214%" height="15" fill="rgb(250,43,18)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1807.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="14.3110%" y="1781" width="0.0214%" height="15" fill="rgb(208,13,10)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1791.50"></text></g><g><title>__schedule (7 samples, 0.02%)</title><rect x="14.3110%" y="1765" width="0.0214%" height="15" fill="rgb(212,200,36)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1775.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="14.3110%" y="1749" width="0.0214%" height="15" fill="rgb(225,90,30)" fg:x="4688" fg:w="7"/><text x="14.5610%" y="1759.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (14 samples, 0.04%)</title><rect x="14.3385%" y="1669" width="0.0427%" height="15" fill="rgb(236,182,39)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1679.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (14 samples, 0.04%)</title><rect x="14.3385%" y="1653" width="0.0427%" height="15" fill="rgb(212,144,35)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1663.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (14 samples, 0.04%)</title><rect x="14.3385%" y="1637" width="0.0427%" height="15" fill="rgb(228,63,44)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1647.50"></text></g><g><title>parking_lot_core::parking_lot::park (14 samples, 0.04%)</title><rect x="14.3385%" y="1621" width="0.0427%" height="15" fill="rgb(228,109,6)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1631.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (14 samples, 0.04%)</title><rect x="14.3385%" y="1605" width="0.0427%" height="15" fill="rgb(238,117,24)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1615.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (14 samples, 0.04%)</title><rect x="14.3385%" y="1589" width="0.0427%" height="15" fill="rgb(242,26,26)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1599.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (14 samples, 0.04%)</title><rect x="14.3385%" y="1573" width="0.0427%" height="15" fill="rgb(221,92,48)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1583.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (14 samples, 0.04%)</title><rect x="14.3385%" y="1557" width="0.0427%" height="15" fill="rgb(209,209,32)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1567.50"></text></g><g><title>syscall (14 samples, 0.04%)</title><rect x="14.3385%" y="1541" width="0.0427%" height="15" fill="rgb(221,70,22)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1551.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 0.04%)</title><rect x="14.3385%" y="1525" width="0.0427%" height="15" fill="rgb(248,145,5)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1535.50"></text></g><g><title>do_syscall_64 (14 samples, 0.04%)</title><rect x="14.3385%" y="1509" width="0.0427%" height="15" fill="rgb(226,116,26)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1519.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.04%)</title><rect x="14.3385%" y="1493" width="0.0427%" height="15" fill="rgb(244,5,17)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1503.50"></text></g><g><title>do_futex (14 samples, 0.04%)</title><rect x="14.3385%" y="1477" width="0.0427%" height="15" fill="rgb(252,159,33)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1487.50"></text></g><g><title>futex_wait (14 samples, 0.04%)</title><rect x="14.3385%" y="1461" width="0.0427%" height="15" fill="rgb(206,71,0)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1471.50"></text></g><g><title>futex_wait_queue_me (14 samples, 0.04%)</title><rect x="14.3385%" y="1445" width="0.0427%" height="15" fill="rgb(233,118,54)" fg:x="4697" fg:w="14"/><text x="14.5885%" y="1455.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="14.3599%" y="1429" width="0.0214%" height="15" fill="rgb(234,83,48)" fg:x="4704" fg:w="7"/><text x="14.6099%" y="1439.50"></text></g><g><title>__schedule (7 samples, 0.02%)</title><rect x="14.3599%" y="1413" width="0.0214%" height="15" fill="rgb(228,3,54)" fg:x="4704" fg:w="7"/><text x="14.6099%" y="1423.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="14.3599%" y="1397" width="0.0214%" height="15" fill="rgb(226,155,13)" fg:x="4704" fg:w="7"/><text x="14.6099%" y="1407.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (48 samples, 0.15%)</title><rect x="14.3812%" y="1669" width="0.1465%" height="15" fill="rgb(241,28,37)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1679.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (48 samples, 0.15%)</title><rect x="14.3812%" y="1653" width="0.1465%" height="15" fill="rgb(233,93,10)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1663.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (48 samples, 0.15%)</title><rect x="14.3812%" y="1637" width="0.1465%" height="15" fill="rgb(225,113,19)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1647.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (48 samples, 0.15%)</title><rect x="14.3812%" y="1621" width="0.1465%" height="15" fill="rgb(241,2,18)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1631.50"></text></g><g><title>parking_lot_core::parking_lot::park (48 samples, 0.15%)</title><rect x="14.3812%" y="1605" width="0.1465%" height="15" fill="rgb(228,207,21)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1615.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (48 samples, 0.15%)</title><rect x="14.3812%" y="1589" width="0.1465%" height="15" fill="rgb(213,211,35)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1599.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (48 samples, 0.15%)</title><rect x="14.3812%" y="1573" width="0.1465%" height="15" fill="rgb(209,83,10)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1583.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (48 samples, 0.15%)</title><rect x="14.3812%" y="1557" width="0.1465%" height="15" fill="rgb(209,164,1)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1567.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (48 samples, 0.15%)</title><rect x="14.3812%" y="1541" width="0.1465%" height="15" fill="rgb(213,184,43)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1551.50"></text></g><g><title>syscall (48 samples, 0.15%)</title><rect x="14.3812%" y="1525" width="0.1465%" height="15" fill="rgb(231,61,34)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1535.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.15%)</title><rect x="14.3812%" y="1509" width="0.1465%" height="15" fill="rgb(235,75,3)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1519.50"></text></g><g><title>do_syscall_64 (48 samples, 0.15%)</title><rect x="14.3812%" y="1493" width="0.1465%" height="15" fill="rgb(220,106,47)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1503.50"></text></g><g><title>__x64_sys_futex (48 samples, 0.15%)</title><rect x="14.3812%" y="1477" width="0.1465%" height="15" fill="rgb(210,196,33)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1487.50"></text></g><g><title>do_futex (48 samples, 0.15%)</title><rect x="14.3812%" y="1461" width="0.1465%" height="15" fill="rgb(229,154,42)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1471.50"></text></g><g><title>futex_wait (48 samples, 0.15%)</title><rect x="14.3812%" y="1445" width="0.1465%" height="15" fill="rgb(228,114,26)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1455.50"></text></g><g><title>futex_wait_queue_me (48 samples, 0.15%)</title><rect x="14.3812%" y="1429" width="0.1465%" height="15" fill="rgb(208,144,1)" fg:x="4711" fg:w="48"/><text x="14.6312%" y="1439.50"></text></g><g><title>schedule (34 samples, 0.10%)</title><rect x="14.4240%" y="1413" width="0.1038%" height="15" fill="rgb(239,112,37)" fg:x="4725" fg:w="34"/><text x="14.6740%" y="1423.50"></text></g><g><title>__schedule (34 samples, 0.10%)</title><rect x="14.4240%" y="1397" width="0.1038%" height="15" fill="rgb(210,96,50)" fg:x="4725" fg:w="34"/><text x="14.6740%" y="1407.50"></text></g><g><title>finish_task_switch.isra.0 (34 samples, 0.10%)</title><rect x="14.4240%" y="1381" width="0.1038%" height="15" fill="rgb(222,178,2)" fg:x="4725" fg:w="34"/><text x="14.6740%" y="1391.50"></text></g><g><title>__perf_event_task_sched_in (14 samples, 0.04%)</title><rect x="14.4850%" y="1365" width="0.0427%" height="15" fill="rgb(226,74,18)" fg:x="4745" fg:w="14"/><text x="14.7350%" y="1375.50"></text></g><g><title>x86_pmu_enable_all (14 samples, 0.04%)</title><rect x="14.4850%" y="1349" width="0.0427%" height="15" fill="rgb(225,67,54)" fg:x="4745" fg:w="14"/><text x="14.7350%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (4 samples, 0.01%)</title><rect x="14.5583%" y="1365" width="0.0122%" height="15" fill="rgb(251,92,32)" fg:x="4769" fg:w="4"/><text x="14.8083%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (4 samples, 0.01%)</title><rect x="14.5583%" y="1349" width="0.0122%" height="15" fill="rgb(228,149,22)" fg:x="4769" fg:w="4"/><text x="14.8083%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (4 samples, 0.01%)</title><rect x="14.5583%" y="1333" width="0.0122%" height="15" fill="rgb(243,54,13)" fg:x="4769" fg:w="4"/><text x="14.8083%" y="1343.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (10 samples, 0.03%)</title><rect x="14.6163%" y="1317" width="0.0305%" height="15" fill="rgb(243,180,28)" fg:x="4788" fg:w="10"/><text x="14.8663%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="14.7018%" y="1301" width="0.0336%" height="15" fill="rgb(208,167,24)" fg:x="4816" fg:w="11"/><text x="14.9518%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.03%)</title><rect x="14.7353%" y="1301" width="0.0336%" height="15" fill="rgb(245,73,45)" fg:x="4827" fg:w="11"/><text x="14.9853%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="14.7353%" y="1285" width="0.0336%" height="15" fill="rgb(237,203,48)" fg:x="4827" fg:w="11"/><text x="14.9853%" y="1295.50"></text></g><g><title>tokio::loom::std::thread::yield_now (12 samples, 0.04%)</title><rect x="14.7689%" y="1301" width="0.0366%" height="15" fill="rgb(211,197,16)" fg:x="4838" fg:w="12"/><text x="15.0189%" y="1311.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (12 samples, 0.04%)</title><rect x="14.7689%" y="1285" width="0.0366%" height="15" fill="rgb(243,99,51)" fg:x="4838" fg:w="12"/><text x="15.0189%" y="1295.50"></text></g><g><title>core::hint::spin_loop (12 samples, 0.04%)</title><rect x="14.7689%" y="1269" width="0.0366%" height="15" fill="rgb(215,123,29)" fg:x="4838" fg:w="12"/><text x="15.0189%" y="1279.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (12 samples, 0.04%)</title><rect x="14.7689%" y="1253" width="0.0366%" height="15" fill="rgb(239,186,37)" fg:x="4838" fg:w="12"/><text x="15.0189%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="14.8269%" y="1237" width="0.0122%" height="15" fill="rgb(252,136,39)" fg:x="4857" fg:w="4"/><text x="15.0769%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.02%)</title><rect x="14.8422%" y="1205" width="0.0183%" height="15" fill="rgb(223,213,32)" fg:x="4862" fg:w="6"/><text x="15.0922%" y="1215.50"></text></g><g><title>__cond_resched (8 samples, 0.02%)</title><rect x="15.3337%" y="1045" width="0.0244%" height="15" fill="rgb(233,115,5)" fg:x="5023" fg:w="8"/><text x="15.5837%" y="1055.50"></text></g><g><title>amd_pmu_addr_offset (4 samples, 0.01%)</title><rect x="15.6908%" y="965" width="0.0122%" height="15" fill="rgb(207,226,44)" fg:x="5140" fg:w="4"/><text x="15.9408%" y="975.50"></text></g><g><title>native_read_msr (17 samples, 0.05%)</title><rect x="15.7030%" y="965" width="0.0519%" height="15" fill="rgb(208,126,0)" fg:x="5144" fg:w="17"/><text x="15.9530%" y="975.50"></text></g><g><title>amd_pmu_disable_all (60 samples, 0.18%)</title><rect x="15.6481%" y="997" width="0.1832%" height="15" fill="rgb(244,66,21)" fg:x="5126" fg:w="60"/><text x="15.8981%" y="1007.50"></text></g><g><title>x86_pmu_disable_all (56 samples, 0.17%)</title><rect x="15.6603%" y="981" width="0.1710%" height="15" fill="rgb(222,97,12)" fg:x="5130" fg:w="56"/><text x="15.9103%" y="991.50"></text></g><g><title>native_write_msr (25 samples, 0.08%)</title><rect x="15.7549%" y="965" width="0.0763%" height="15" fill="rgb(219,213,19)" fg:x="5161" fg:w="25"/><text x="16.0049%" y="975.50"></text></g><g><title>__perf_event_task_sched_out (63 samples, 0.19%)</title><rect x="15.6450%" y="1013" width="0.1923%" height="15" fill="rgb(252,169,30)" fg:x="5125" fg:w="63"/><text x="15.8950%" y="1023.50"></text></g><g><title>reweight_entity (4 samples, 0.01%)</title><rect x="15.8923%" y="981" width="0.0122%" height="15" fill="rgb(206,32,51)" fg:x="5206" fg:w="4"/><text x="16.1423%" y="991.50"></text></g><g><title>update_cfs_group (13 samples, 0.04%)</title><rect x="15.9045%" y="981" width="0.0397%" height="15" fill="rgb(250,172,42)" fg:x="5210" fg:w="13"/><text x="16.1545%" y="991.50"></text></g><g><title>__calc_delta (4 samples, 0.01%)</title><rect x="15.9656%" y="965" width="0.0122%" height="15" fill="rgb(209,34,43)" fg:x="5230" fg:w="4"/><text x="16.2156%" y="975.50"></text></g><g><title>update_curr (27 samples, 0.08%)</title><rect x="15.9442%" y="981" width="0.0824%" height="15" fill="rgb(223,11,35)" fg:x="5223" fg:w="27"/><text x="16.1942%" y="991.50"></text></g><g><title>cpuacct_charge (15 samples, 0.05%)</title><rect x="15.9808%" y="965" width="0.0458%" height="15" fill="rgb(251,219,26)" fg:x="5235" fg:w="15"/><text x="16.2308%" y="975.50"></text></g><g><title>__update_load_avg_cfs_rq (8 samples, 0.02%)</title><rect x="16.0388%" y="965" width="0.0244%" height="15" fill="rgb(231,119,3)" fg:x="5254" fg:w="8"/><text x="16.2888%" y="975.50"></text></g><g><title>__update_load_avg_se (12 samples, 0.04%)</title><rect x="16.0633%" y="965" width="0.0366%" height="15" fill="rgb(216,97,11)" fg:x="5262" fg:w="12"/><text x="16.3133%" y="975.50"></text></g><g><title>dequeue_entity (84 samples, 0.26%)</title><rect x="15.8740%" y="997" width="0.2564%" height="15" fill="rgb(223,59,9)" fg:x="5200" fg:w="84"/><text x="16.1240%" y="1007.50"></text></g><g><title>update_load_avg (34 samples, 0.10%)</title><rect x="16.0266%" y="981" width="0.1038%" height="15" fill="rgb(233,93,31)" fg:x="5250" fg:w="34"/><text x="16.2766%" y="991.50"></text></g><g><title>sugov_update_single_freq (10 samples, 0.03%)</title><rect x="16.0999%" y="965" width="0.0305%" height="15" fill="rgb(239,81,33)" fg:x="5274" fg:w="10"/><text x="16.3499%" y="975.50"></text></g><g><title>dequeue_task_fair (99 samples, 0.30%)</title><rect x="15.8496%" y="1013" width="0.3022%" height="15" fill="rgb(213,120,34)" fg:x="5192" fg:w="99"/><text x="16.0996%" y="1023.50"></text></g><g><title>__perf_event_task_sched_in (118 samples, 0.36%)</title><rect x="16.3685%" y="997" width="0.3602%" height="15" fill="rgb(243,49,53)" fg:x="5362" fg:w="118"/><text x="16.6185%" y="1007.50"></text></g><g><title>x86_pmu_enable_all (90 samples, 0.27%)</title><rect x="16.4540%" y="981" width="0.2747%" height="15" fill="rgb(247,216,33)" fg:x="5390" fg:w="90"/><text x="16.7040%" y="991.50"></text></g><g><title>native_write_msr (46 samples, 0.14%)</title><rect x="16.5883%" y="965" width="0.1404%" height="15" fill="rgb(226,26,14)" fg:x="5434" fg:w="46"/><text x="16.8383%" y="975.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.04%)</title><rect x="16.7287%" y="997" width="0.0366%" height="15" fill="rgb(215,49,53)" fg:x="5480" fg:w="12"/><text x="16.9787%" y="1007.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="16.7501%" y="981" width="0.0153%" height="15" fill="rgb(245,162,40)" fg:x="5487" fg:w="5"/><text x="17.0001%" y="991.50"></text></g><g><title>__sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="16.7501%" y="965" width="0.0153%" height="15" fill="rgb(229,68,17)" fg:x="5487" fg:w="5"/><text x="17.0001%" y="975.50"></text></g><g><title>hrtimer_interrupt (5 samples, 0.02%)</title><rect x="16.7501%" y="949" width="0.0153%" height="15" fill="rgb(213,182,10)" fg:x="5487" fg:w="5"/><text x="17.0001%" y="959.50"></text></g><g><title>__hrtimer_run_queues (5 samples, 0.02%)</title><rect x="16.7501%" y="933" width="0.0153%" height="15" fill="rgb(245,125,30)" fg:x="5487" fg:w="5"/><text x="17.0001%" y="943.50"></text></g><g><title>tick_sched_timer (4 samples, 0.01%)</title><rect x="16.7532%" y="917" width="0.0122%" height="15" fill="rgb(232,202,2)" fg:x="5488" fg:w="4"/><text x="17.0032%" y="927.50"></text></g><g><title>tick_sched_handle (4 samples, 0.01%)</title><rect x="16.7532%" y="901" width="0.0122%" height="15" fill="rgb(237,140,51)" fg:x="5488" fg:w="4"/><text x="17.0032%" y="911.50"></text></g><g><title>update_process_times (4 samples, 0.01%)</title><rect x="16.7532%" y="885" width="0.0122%" height="15" fill="rgb(236,157,25)" fg:x="5488" fg:w="4"/><text x="17.0032%" y="895.50"></text></g><g><title>scheduler_tick (4 samples, 0.01%)</title><rect x="16.7532%" y="869" width="0.0122%" height="15" fill="rgb(219,209,0)" fg:x="5488" fg:w="4"/><text x="17.0032%" y="879.50"></text></g><g><title>asm_sysvec_call_function (7 samples, 0.02%)</title><rect x="16.7654%" y="997" width="0.0214%" height="15" fill="rgb(240,116,54)" fg:x="5492" fg:w="7"/><text x="17.0154%" y="1007.50"></text></g><g><title>finish_task_switch.isra.0 (215 samples, 0.66%)</title><rect x="16.1518%" y="1013" width="0.6563%" height="15" fill="rgb(216,10,36)" fg:x="5291" fg:w="215"/><text x="16.4018%" y="1023.50"></text></g><g><title>asm_sysvec_call_function_single (7 samples, 0.02%)</title><rect x="16.7867%" y="997" width="0.0214%" height="15" fill="rgb(222,72,44)" fg:x="5499" fg:w="7"/><text x="17.0367%" y="1007.50"></text></g><g><title>load_balance (11 samples, 0.03%)</title><rect x="16.8325%" y="981" width="0.0336%" height="15" fill="rgb(232,159,9)" fg:x="5514" fg:w="11"/><text x="17.0825%" y="991.50"></text></g><g><title>find_busiest_group (6 samples, 0.02%)</title><rect x="16.8478%" y="965" width="0.0183%" height="15" fill="rgb(210,39,32)" fg:x="5519" fg:w="6"/><text x="17.0978%" y="975.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (4 samples, 0.01%)</title><rect x="16.8539%" y="949" width="0.0122%" height="15" fill="rgb(216,194,45)" fg:x="5521" fg:w="4"/><text x="17.1039%" y="959.50"></text></g><g><title>newidle_balance (19 samples, 0.06%)</title><rect x="16.8142%" y="997" width="0.0580%" height="15" fill="rgb(218,18,35)" fg:x="5508" fg:w="19"/><text x="17.0642%" y="1007.50"></text></g><g><title>pick_next_task_fair (23 samples, 0.07%)</title><rect x="16.8081%" y="1013" width="0.0702%" height="15" fill="rgb(207,83,51)" fg:x="5506" fg:w="23"/><text x="17.0581%" y="1023.50"></text></g><g><title>pick_next_task_idle (12 samples, 0.04%)</title><rect x="16.8783%" y="1013" width="0.0366%" height="15" fill="rgb(225,63,43)" fg:x="5529" fg:w="12"/><text x="17.1283%" y="1023.50"></text></g><g><title>__update_idle_core (12 samples, 0.04%)</title><rect x="16.8783%" y="997" width="0.0366%" height="15" fill="rgb(207,57,36)" fg:x="5529" fg:w="12"/><text x="17.1283%" y="1007.50"></text></g><g><title>psi_group_change (24 samples, 0.07%)</title><rect x="16.9516%" y="997" width="0.0733%" height="15" fill="rgb(216,99,33)" fg:x="5553" fg:w="24"/><text x="17.2016%" y="1007.50"></text></g><g><title>psi_task_switch (43 samples, 0.13%)</title><rect x="16.9150%" y="1013" width="0.1313%" height="15" fill="rgb(225,42,16)" fg:x="5541" fg:w="43"/><text x="17.1650%" y="1023.50"></text></g><g><title>sched_clock_cpu (7 samples, 0.02%)</title><rect x="17.0248%" y="997" width="0.0214%" height="15" fill="rgb(220,201,45)" fg:x="5577" fg:w="7"/><text x="17.2748%" y="1007.50"></text></g><g><title>native_sched_clock (7 samples, 0.02%)</title><rect x="17.0248%" y="981" width="0.0214%" height="15" fill="rgb(225,33,4)" fg:x="5577" fg:w="7"/><text x="17.2748%" y="991.50"></text></g><g><title>put_prev_task_fair (7 samples, 0.02%)</title><rect x="17.0462%" y="1013" width="0.0214%" height="15" fill="rgb(224,33,50)" fg:x="5584" fg:w="7"/><text x="17.2962%" y="1023.50"></text></g><g><title>put_prev_entity (5 samples, 0.02%)</title><rect x="17.0523%" y="997" width="0.0153%" height="15" fill="rgb(246,198,51)" fg:x="5586" fg:w="5"/><text x="17.3023%" y="1007.50"></text></g><g><title>futex_wait_queue_me (638 samples, 1.95%)</title><rect x="15.1444%" y="1061" width="1.9476%" height="15" fill="rgb(205,22,4)" fg:x="4961" fg:w="638"/><text x="15.3944%" y="1071.50">f..</text></g><g><title>schedule (565 samples, 1.72%)</title><rect x="15.3672%" y="1045" width="1.7248%" height="15" fill="rgb(206,3,8)" fg:x="5034" fg:w="565"/><text x="15.6172%" y="1055.50"></text></g><g><title>__schedule (497 samples, 1.52%)</title><rect x="15.5748%" y="1029" width="1.5172%" height="15" fill="rgb(251,23,15)" fg:x="5102" fg:w="497"/><text x="15.8248%" y="1039.50"></text></g><g><title>update_rq_clock (7 samples, 0.02%)</title><rect x="17.0706%" y="1013" width="0.0214%" height="15" fill="rgb(252,88,28)" fg:x="5592" fg:w="7"/><text x="17.3206%" y="1023.50"></text></g><g><title>update_irq_load_avg (6 samples, 0.02%)</title><rect x="17.0737%" y="997" width="0.0183%" height="15" fill="rgb(212,127,14)" fg:x="5593" fg:w="6"/><text x="17.3237%" y="1007.50"></text></g><g><title>__get_user_nocheck_4 (4 samples, 0.01%)</title><rect x="17.1531%" y="1045" width="0.0122%" height="15" fill="rgb(247,145,37)" fg:x="5619" fg:w="4"/><text x="17.4031%" y="1055.50"></text></g><g><title>__x64_sys_futex (719 samples, 2.19%)</title><rect x="14.9795%" y="1109" width="2.1949%" height="15" fill="rgb(209,117,53)" fg:x="4907" fg:w="719"/><text x="15.2295%" y="1119.50">_..</text></g><g><title>do_futex (719 samples, 2.19%)</title><rect x="14.9795%" y="1093" width="2.1949%" height="15" fill="rgb(212,90,42)" fg:x="4907" fg:w="719"/><text x="15.2295%" y="1103.50">d..</text></g><g><title>futex_wait (716 samples, 2.19%)</title><rect x="14.9887%" y="1077" width="2.1857%" height="15" fill="rgb(218,164,37)" fg:x="4910" fg:w="716"/><text x="15.2387%" y="1087.50">f..</text></g><g><title>futex_wait_setup (27 samples, 0.08%)</title><rect x="17.0920%" y="1061" width="0.0824%" height="15" fill="rgb(246,65,34)" fg:x="5599" fg:w="27"/><text x="17.3420%" y="1071.50"></text></g><g><title>exit_to_user_mode_prepare (6 samples, 0.02%)</title><rect x="17.1836%" y="1093" width="0.0183%" height="15" fill="rgb(231,100,33)" fg:x="5629" fg:w="6"/><text x="17.4336%" y="1103.50"></text></g><g><title>switch_fpu_return (6 samples, 0.02%)</title><rect x="17.1836%" y="1077" width="0.0183%" height="15" fill="rgb(228,126,14)" fg:x="5629" fg:w="6"/><text x="17.4336%" y="1087.50"></text></g><g><title>copy_kernel_to_fpregs (5 samples, 0.02%)</title><rect x="17.1866%" y="1061" width="0.0153%" height="15" fill="rgb(215,173,21)" fg:x="5630" fg:w="5"/><text x="17.4366%" y="1071.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (739 samples, 2.26%)</title><rect x="14.9490%" y="1141" width="2.2559%" height="15" fill="rgb(210,6,40)" fg:x="4897" fg:w="739"/><text x="15.1990%" y="1151.50">e..</text></g><g><title>do_syscall_64 (733 samples, 2.24%)</title><rect x="14.9673%" y="1125" width="2.2376%" height="15" fill="rgb(212,48,18)" fg:x="4903" fg:w="733"/><text x="15.2173%" y="1135.50">d..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 0.02%)</title><rect x="17.1836%" y="1109" width="0.0214%" height="15" fill="rgb(230,214,11)" fg:x="5629" fg:w="7"/><text x="17.4336%" y="1119.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (769 samples, 2.35%)</title><rect x="14.8605%" y="1189" width="2.3475%" height="15" fill="rgb(254,105,39)" fg:x="4868" fg:w="769"/><text x="15.1105%" y="1199.50">&lt;..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (744 samples, 2.27%)</title><rect x="14.9368%" y="1173" width="2.2712%" height="15" fill="rgb(245,158,5)" fg:x="4893" fg:w="744"/><text x="15.1868%" y="1183.50">p..</text></g><g><title>syscall (744 samples, 2.27%)</title><rect x="14.9368%" y="1157" width="2.2712%" height="15" fill="rgb(249,208,11)" fg:x="4893" fg:w="744"/><text x="15.1868%" y="1167.50">s..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket (18 samples, 0.05%)</title><rect x="17.2111%" y="1189" width="0.0549%" height="15" fill="rgb(210,39,28)" fg:x="5638" fg:w="18"/><text x="17.4611%" y="1199.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (14 samples, 0.04%)</title><rect x="17.2233%" y="1173" width="0.0427%" height="15" fill="rgb(211,56,53)" fg:x="5642" fg:w="14"/><text x="17.4733%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (789 samples, 2.41%)</title><rect x="14.8605%" y="1205" width="2.4086%" height="15" fill="rgb(226,201,30)" fg:x="4868" fg:w="789"/><text x="15.1105%" y="1215.50">pa..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (805 samples, 2.46%)</title><rect x="14.8147%" y="1285" width="2.4574%" height="15" fill="rgb(239,101,34)" fg:x="4853" fg:w="805"/><text x="15.0647%" y="1295.50">to..</text></g><g><title>parking_lot::condvar::Condvar::wait (805 samples, 2.46%)</title><rect x="14.8147%" y="1269" width="2.4574%" height="15" fill="rgb(226,209,5)" fg:x="4853" fg:w="805"/><text x="15.0647%" y="1279.50">pa..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (805 samples, 2.46%)</title><rect x="14.8147%" y="1253" width="2.4574%" height="15" fill="rgb(250,105,47)" fg:x="4853" fg:w="805"/><text x="15.0647%" y="1263.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park (797 samples, 2.43%)</title><rect x="14.8391%" y="1237" width="2.4330%" height="15" fill="rgb(230,72,3)" fg:x="4861" fg:w="797"/><text x="15.0891%" y="1247.50">pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (796 samples, 2.43%)</title><rect x="14.8422%" y="1221" width="2.4299%" height="15" fill="rgb(232,218,39)" fg:x="4862" fg:w="796"/><text x="15.0922%" y="1231.50">pa..</text></g><g><title>tokio::runtime::park::Inner::park_condvar (810 samples, 2.47%)</title><rect x="14.8055%" y="1301" width="2.4727%" height="15" fill="rgb(248,166,6)" fg:x="4850" fg:w="810"/><text x="15.0555%" y="1311.50">to..</text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="17.5163%" y="1205" width="0.0122%" height="15" fill="rgb(247,89,20)" fg:x="5738" fg:w="4"/><text x="17.7663%" y="1215.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="17.5346%" y="1205" width="0.0122%" height="15" fill="rgb(248,130,54)" fg:x="5744" fg:w="4"/><text x="17.7846%" y="1215.50"></text></g><g><title>mio::event::event::Event::token (5 samples, 0.02%)</title><rect x="17.5499%" y="1205" width="0.0153%" height="15" fill="rgb(234,196,4)" fg:x="5749" fg:w="5"/><text x="17.7999%" y="1215.50"></text></g><g><title>mio::event::events::Events::iter (4 samples, 0.01%)</title><rect x="17.5652%" y="1205" width="0.0122%" height="15" fill="rgb(250,143,31)" fg:x="5754" fg:w="4"/><text x="17.8152%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="17.6079%" y="1173" width="0.0122%" height="15" fill="rgb(211,110,34)" fg:x="5768" fg:w="4"/><text x="17.8579%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.02%)</title><rect x="17.6201%" y="1173" width="0.0214%" height="15" fill="rgb(215,124,48)" fg:x="5772" fg:w="7"/><text x="17.8701%" y="1183.50"></text></g><g><title>__entry_text_start (9 samples, 0.03%)</title><rect x="17.6720%" y="1157" width="0.0275%" height="15" fill="rgb(216,46,13)" fg:x="5789" fg:w="9"/><text x="17.9220%" y="1167.50"></text></g><g><title>__libc_disable_asynccancel (8 samples, 0.02%)</title><rect x="17.6995%" y="1157" width="0.0244%" height="15" fill="rgb(205,184,25)" fg:x="5798" fg:w="8"/><text x="17.9495%" y="1167.50"></text></g><g><title>__fget_light (16 samples, 0.05%)</title><rect x="18.1727%" y="1093" width="0.0488%" height="15" fill="rgb(228,1,10)" fg:x="5953" fg:w="16"/><text x="18.4227%" y="1103.50"></text></g><g><title>__fget_files (10 samples, 0.03%)</title><rect x="18.1910%" y="1077" width="0.0305%" height="15" fill="rgb(213,116,27)" fg:x="5959" fg:w="10"/><text x="18.4410%" y="1087.50"></text></g><g><title>__put_user_nocheck_4 (17 samples, 0.05%)</title><rect x="18.2276%" y="1093" width="0.0519%" height="15" fill="rgb(241,95,50)" fg:x="5971" fg:w="17"/><text x="18.4776%" y="1103.50"></text></g><g><title>__put_user_nocheck_8 (26 samples, 0.08%)</title><rect x="18.2795%" y="1093" width="0.0794%" height="15" fill="rgb(238,48,32)" fg:x="5988" fg:w="26"/><text x="18.5295%" y="1103.50"></text></g><g><title>_raw_write_lock_irq (5 samples, 0.02%)</title><rect x="18.3589%" y="1093" width="0.0153%" height="15" fill="rgb(235,113,49)" fg:x="6014" fg:w="5"/><text x="18.6089%" y="1103.50"></text></g><g><title>ep_done_scan (5 samples, 0.02%)</title><rect x="18.3772%" y="1093" width="0.0153%" height="15" fill="rgb(205,127,43)" fg:x="6020" fg:w="5"/><text x="18.6272%" y="1103.50"></text></g><g><title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="18.5451%" y="1077" width="0.0153%" height="15" fill="rgb(250,162,2)" fg:x="6075" fg:w="5"/><text x="18.7951%" y="1087.50"></text></g><g><title>eventfd_poll (13 samples, 0.04%)</title><rect x="18.5604%" y="1077" width="0.0397%" height="15" fill="rgb(220,13,41)" fg:x="6080" fg:w="13"/><text x="18.8104%" y="1087.50"></text></g><g><title>ep_item_poll.isra.0 (159 samples, 0.49%)</title><rect x="18.3925%" y="1093" width="0.4854%" height="15" fill="rgb(249,221,25)" fg:x="6025" fg:w="159"/><text x="18.6425%" y="1103.50"></text></g><g><title>sock_poll (91 samples, 0.28%)</title><rect x="18.6000%" y="1077" width="0.2778%" height="15" fill="rgb(215,208,19)" fg:x="6093" fg:w="91"/><text x="18.8500%" y="1087.50"></text></g><g><title>tcp_poll (45 samples, 0.14%)</title><rect x="18.7405%" y="1061" width="0.1374%" height="15" fill="rgb(236,175,2)" fg:x="6139" fg:w="45"/><text x="18.9905%" y="1071.50"></text></g><g><title>fput_many (7 samples, 0.02%)</title><rect x="18.8778%" y="1093" width="0.0214%" height="15" fill="rgb(241,52,2)" fg:x="6184" fg:w="7"/><text x="19.1278%" y="1103.50"></text></g><g><title>mutex_lock (20 samples, 0.06%)</title><rect x="18.8992%" y="1093" width="0.0611%" height="15" fill="rgb(248,140,14)" fg:x="6191" fg:w="20"/><text x="19.1492%" y="1103.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="19.1495%" y="1077" width="0.0183%" height="15" fill="rgb(253,22,42)" fg:x="6273" fg:w="6"/><text x="19.3995%" y="1087.50"></text></g><g><title>hrtimer_active (26 samples, 0.08%)</title><rect x="19.1709%" y="1077" width="0.0794%" height="15" fill="rgb(234,61,47)" fg:x="6280" fg:w="26"/><text x="19.4209%" y="1087.50"></text></g><g><title>hrtimer_init_sleeper (14 samples, 0.04%)</title><rect x="19.2503%" y="1077" width="0.0427%" height="15" fill="rgb(208,226,15)" fg:x="6306" fg:w="14"/><text x="19.5003%" y="1087.50"></text></g><g><title>__hrtimer_init (14 samples, 0.04%)</title><rect x="19.2503%" y="1061" width="0.0427%" height="15" fill="rgb(217,221,4)" fg:x="6306" fg:w="14"/><text x="19.5003%" y="1071.50"></text></g><g><title>enqueue_hrtimer (15 samples, 0.05%)</title><rect x="19.3052%" y="1061" width="0.0458%" height="15" fill="rgb(212,174,34)" fg:x="6324" fg:w="15"/><text x="19.5552%" y="1071.50"></text></g><g><title>timerqueue_add (15 samples, 0.05%)</title><rect x="19.3052%" y="1045" width="0.0458%" height="15" fill="rgb(253,83,4)" fg:x="6324" fg:w="15"/><text x="19.5552%" y="1055.50"></text></g><g><title>hrtimer_start_range_ns (25 samples, 0.08%)</title><rect x="19.2930%" y="1077" width="0.0763%" height="15" fill="rgb(250,195,49)" fg:x="6320" fg:w="25"/><text x="19.5430%" y="1087.50"></text></g><g><title>get_nohz_timer_target (6 samples, 0.02%)</title><rect x="19.3510%" y="1061" width="0.0183%" height="15" fill="rgb(241,192,25)" fg:x="6339" fg:w="6"/><text x="19.6010%" y="1071.50"></text></g><g><title>__remove_hrtimer (7 samples, 0.02%)</title><rect x="19.3815%" y="1061" width="0.0214%" height="15" fill="rgb(208,124,10)" fg:x="6349" fg:w="7"/><text x="19.6315%" y="1071.50"></text></g><g><title>timerqueue_del (6 samples, 0.02%)</title><rect x="19.3846%" y="1045" width="0.0183%" height="15" fill="rgb(222,33,0)" fg:x="6350" fg:w="6"/><text x="19.6346%" y="1055.50"></text></g><g><title>rb_erase (4 samples, 0.01%)</title><rect x="19.3907%" y="1029" width="0.0122%" height="15" fill="rgb(234,209,28)" fg:x="6352" fg:w="4"/><text x="19.6407%" y="1039.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="19.4029%" y="1061" width="0.0122%" height="15" fill="rgb(224,11,23)" fg:x="6356" fg:w="4"/><text x="19.6529%" y="1071.50"></text></g><g><title>hrtimer_try_to_cancel.part.0 (17 samples, 0.05%)</title><rect x="19.3693%" y="1077" width="0.0519%" height="15" fill="rgb(232,99,1)" fg:x="6345" fg:w="17"/><text x="19.6193%" y="1087.50"></text></g><g><title>amd_pmu_wait_on_overflow (17 samples, 0.05%)</title><rect x="19.9005%" y="1013" width="0.0519%" height="15" fill="rgb(237,95,45)" fg:x="6519" fg:w="17"/><text x="20.1505%" y="1023.50"></text></g><g><title>native_read_msr (15 samples, 0.05%)</title><rect x="19.9066%" y="997" width="0.0458%" height="15" fill="rgb(208,109,11)" fg:x="6521" fg:w="15"/><text x="20.1566%" y="1007.50"></text></g><g><title>__x86_indirect_thunk_rax (6 samples, 0.02%)</title><rect x="20.0470%" y="997" width="0.0183%" height="15" fill="rgb(216,190,48)" fg:x="6567" fg:w="6"/><text x="20.2970%" y="1007.50"></text></g><g><title>__x86_indirect_thunk_rdx (8 samples, 0.02%)</title><rect x="20.0653%" y="997" width="0.0244%" height="15" fill="rgb(251,171,36)" fg:x="6573" fg:w="8"/><text x="20.3153%" y="1007.50"></text></g><g><title>amd_pmu_addr_offset (12 samples, 0.04%)</title><rect x="20.0897%" y="997" width="0.0366%" height="15" fill="rgb(230,62,22)" fg:x="6581" fg:w="12"/><text x="20.3397%" y="1007.50"></text></g><g><title>native_read_msr (80 samples, 0.24%)</title><rect x="20.1264%" y="997" width="0.2442%" height="15" fill="rgb(225,114,35)" fg:x="6593" fg:w="80"/><text x="20.3764%" y="1007.50"></text></g><g><title>amd_pmu_disable_all (289 samples, 0.88%)</title><rect x="19.8974%" y="1029" width="0.8822%" height="15" fill="rgb(215,118,42)" fg:x="6518" fg:w="289"/><text x="20.1474%" y="1039.50"></text></g><g><title>x86_pmu_disable_all (271 samples, 0.83%)</title><rect x="19.9524%" y="1013" width="0.8273%" height="15" fill="rgb(243,119,21)" fg:x="6536" fg:w="271"/><text x="20.2024%" y="1023.50"></text></g><g><title>native_write_msr (134 samples, 0.41%)</title><rect x="20.3706%" y="997" width="0.4091%" height="15" fill="rgb(252,177,53)" fg:x="6673" fg:w="134"/><text x="20.6206%" y="1007.50"></text></g><g><title>__perf_event_task_sched_out (326 samples, 1.00%)</title><rect x="19.8242%" y="1045" width="0.9952%" height="15" fill="rgb(237,209,29)" fg:x="6494" fg:w="326"/><text x="20.0742%" y="1055.50"></text></g><g><title>x86_pmu_disable (12 samples, 0.04%)</title><rect x="20.7827%" y="1029" width="0.0366%" height="15" fill="rgb(212,65,23)" fg:x="6808" fg:w="12"/><text x="21.0327%" y="1039.50"></text></g><g><title>__x86_indirect_thunk_rax (4 samples, 0.01%)</title><rect x="20.8193%" y="1045" width="0.0122%" height="15" fill="rgb(230,222,46)" fg:x="6820" fg:w="4"/><text x="21.0693%" y="1055.50"></text></g><g><title>reweight_entity (12 samples, 0.04%)</title><rect x="20.9933%" y="1013" width="0.0366%" height="15" fill="rgb(215,135,32)" fg:x="6877" fg:w="12"/><text x="21.2433%" y="1023.50"></text></g><g><title>update_cfs_group (29 samples, 0.09%)</title><rect x="21.0300%" y="1013" width="0.0885%" height="15" fill="rgb(246,101,22)" fg:x="6889" fg:w="29"/><text x="21.2800%" y="1023.50"></text></g><g><title>__calc_delta (10 samples, 0.03%)</title><rect x="21.2070%" y="997" width="0.0305%" height="15" fill="rgb(206,107,13)" fg:x="6947" fg:w="10"/><text x="21.4570%" y="1007.50"></text></g><g><title>cpuacct_charge (43 samples, 0.13%)</title><rect x="21.2406%" y="997" width="0.1313%" height="15" fill="rgb(250,100,44)" fg:x="6958" fg:w="43"/><text x="21.4906%" y="1007.50"></text></g><g><title>update_curr (88 samples, 0.27%)</title><rect x="21.1185%" y="1013" width="0.2686%" height="15" fill="rgb(231,147,38)" fg:x="6918" fg:w="88"/><text x="21.3685%" y="1023.50"></text></g><g><title>update_min_vruntime (5 samples, 0.02%)</title><rect x="21.3719%" y="997" width="0.0153%" height="15" fill="rgb(229,8,40)" fg:x="7001" fg:w="5"/><text x="21.6219%" y="1007.50"></text></g><g><title>__update_load_avg_cfs_rq (16 samples, 0.05%)</title><rect x="21.4421%" y="997" width="0.0488%" height="15" fill="rgb(221,135,30)" fg:x="7024" fg:w="16"/><text x="21.6921%" y="1007.50"></text></g><g><title>__update_load_avg_se (61 samples, 0.19%)</title><rect x="21.4909%" y="997" width="0.1862%" height="15" fill="rgb(249,193,18)" fg:x="7040" fg:w="61"/><text x="21.7409%" y="1007.50"></text></g><g><title>dequeue_entity (251 samples, 0.77%)</title><rect x="20.9170%" y="1029" width="0.7662%" height="15" fill="rgb(209,133,39)" fg:x="6852" fg:w="251"/><text x="21.1670%" y="1039.50"></text></g><g><title>update_load_avg (97 samples, 0.30%)</title><rect x="21.3871%" y="1013" width="0.2961%" height="15" fill="rgb(232,100,14)" fg:x="7006" fg:w="97"/><text x="21.6371%" y="1023.50"></text></g><g><title>update_load_avg (4 samples, 0.01%)</title><rect x="21.6985%" y="1029" width="0.0122%" height="15" fill="rgb(224,185,1)" fg:x="7108" fg:w="4"/><text x="21.9485%" y="1039.50"></text></g><g><title>dequeue_task_fair (289 samples, 0.88%)</title><rect x="20.8346%" y="1045" width="0.8822%" height="15" fill="rgb(223,139,8)" fg:x="6825" fg:w="289"/><text x="21.0846%" y="1055.50"></text></g><g><title>__perf_event_task_sched_in (122 samples, 0.37%)</title><rect x="21.9824%" y="1029" width="0.3724%" height="15" fill="rgb(232,213,38)" fg:x="7201" fg:w="122"/><text x="22.2324%" y="1039.50"></text></g><g><title>x86_pmu_enable_all (109 samples, 0.33%)</title><rect x="22.0221%" y="1013" width="0.3327%" height="15" fill="rgb(207,94,22)" fg:x="7214" fg:w="109"/><text x="22.2721%" y="1023.50"></text></g><g><title>native_write_msr (72 samples, 0.22%)</title><rect x="22.1351%" y="997" width="0.2198%" height="15" fill="rgb(219,183,54)" fg:x="7251" fg:w="72"/><text x="22.3851%" y="1007.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="22.3548%" y="1029" width="0.0153%" height="15" fill="rgb(216,185,54)" fg:x="7323" fg:w="5"/><text x="22.6048%" y="1039.50"></text></g><g><title>sysvec_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="22.3579%" y="1013" width="0.0122%" height="15" fill="rgb(254,217,39)" fg:x="7324" fg:w="4"/><text x="22.6079%" y="1023.50"></text></g><g><title>finish_task_switch.isra.0 (215 samples, 0.66%)</title><rect x="21.7168%" y="1045" width="0.6563%" height="15" fill="rgb(240,178,23)" fg:x="7114" fg:w="215"/><text x="21.9668%" y="1055.50"></text></g><g><title>newidle_balance (24 samples, 0.07%)</title><rect x="22.3915%" y="1029" width="0.0733%" height="15" fill="rgb(218,11,47)" fg:x="7335" fg:w="24"/><text x="22.6415%" y="1039.50"></text></g><g><title>load_balance (8 samples, 0.02%)</title><rect x="22.4403%" y="1013" width="0.0244%" height="15" fill="rgb(218,51,51)" fg:x="7351" fg:w="8"/><text x="22.6903%" y="1023.50"></text></g><g><title>find_busiest_group (7 samples, 0.02%)</title><rect x="22.4434%" y="997" width="0.0214%" height="15" fill="rgb(238,126,27)" fg:x="7352" fg:w="7"/><text x="22.6934%" y="1007.50"></text></g><g><title>update_sd_lb_stats.constprop.0 (7 samples, 0.02%)</title><rect x="22.4434%" y="981" width="0.0214%" height="15" fill="rgb(249,202,22)" fg:x="7352" fg:w="7"/><text x="22.6934%" y="991.50"></text></g><g><title>pick_next_task_fair (34 samples, 0.10%)</title><rect x="22.3732%" y="1045" width="0.1038%" height="15" fill="rgb(254,195,49)" fg:x="7329" fg:w="34"/><text x="22.6232%" y="1055.50"></text></g><g><title>set_next_entity (4 samples, 0.01%)</title><rect x="22.4647%" y="1029" width="0.0122%" height="15" fill="rgb(208,123,14)" fg:x="7359" fg:w="4"/><text x="22.7147%" y="1039.50"></text></g><g><title>available_idle_cpu (5 samples, 0.02%)</title><rect x="22.5014%" y="1013" width="0.0153%" height="15" fill="rgb(224,200,8)" fg:x="7371" fg:w="5"/><text x="22.7514%" y="1023.50"></text></g><g><title>pick_next_task_idle (16 samples, 0.05%)</title><rect x="22.4770%" y="1045" width="0.0488%" height="15" fill="rgb(217,61,36)" fg:x="7363" fg:w="16"/><text x="22.7270%" y="1055.50"></text></g><g><title>__update_idle_core (14 samples, 0.04%)</title><rect x="22.4831%" y="1029" width="0.0427%" height="15" fill="rgb(206,35,45)" fg:x="7365" fg:w="14"/><text x="22.7331%" y="1039.50"></text></g><g><title>psi_group_change (59 samples, 0.18%)</title><rect x="22.6052%" y="1029" width="0.1801%" height="15" fill="rgb(217,65,33)" fg:x="7405" fg:w="59"/><text x="22.8552%" y="1039.50"></text></g><g><title>psi_task_switch (90 samples, 0.27%)</title><rect x="22.5258%" y="1045" width="0.2747%" height="15" fill="rgb(222,158,48)" fg:x="7379" fg:w="90"/><text x="22.7758%" y="1055.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.02%)</title><rect x="22.7853%" y="1029" width="0.0153%" height="15" fill="rgb(254,2,54)" fg:x="7464" fg:w="5"/><text x="23.0353%" y="1039.50"></text></g><g><title>native_sched_clock (5 samples, 0.02%)</title><rect x="22.7853%" y="1013" width="0.0153%" height="15" fill="rgb(250,143,38)" fg:x="7464" fg:w="5"/><text x="23.0353%" y="1023.50"></text></g><g><title>put_prev_task_fair (12 samples, 0.04%)</title><rect x="22.8005%" y="1045" width="0.0366%" height="15" fill="rgb(248,25,0)" fg:x="7469" fg:w="12"/><text x="23.0505%" y="1055.50"></text></g><g><title>put_prev_entity (10 samples, 0.03%)</title><rect x="22.8066%" y="1029" width="0.0305%" height="15" fill="rgb(206,152,27)" fg:x="7471" fg:w="10"/><text x="23.0566%" y="1039.50"></text></g><g><title>sched_clock_cpu (5 samples, 0.02%)</title><rect x="22.8677%" y="1029" width="0.0153%" height="15" fill="rgb(240,77,30)" fg:x="7491" fg:w="5"/><text x="23.1177%" y="1039.50"></text></g><g><title>native_sched_clock (5 samples, 0.02%)</title><rect x="22.8677%" y="1013" width="0.0153%" height="15" fill="rgb(231,5,3)" fg:x="7491" fg:w="5"/><text x="23.1177%" y="1023.50"></text></g><g><title>schedule_hrtimeout_range_clock (1,289 samples, 3.93%)</title><rect x="18.9694%" y="1093" width="3.9349%" height="15" fill="rgb(207,226,32)" fg:x="6214" fg:w="1289"/><text x="19.2194%" y="1103.50">sche..</text></g><g><title>schedule (1,141 samples, 3.48%)</title><rect x="19.4212%" y="1077" width="3.4831%" height="15" fill="rgb(222,207,47)" fg:x="6362" fg:w="1141"/><text x="19.6712%" y="1087.50">sch..</text></g><g><title>__schedule (1,067 samples, 3.26%)</title><rect x="19.6471%" y="1061" width="3.2572%" height="15" fill="rgb(229,115,45)" fg:x="6436" fg:w="1067"/><text x="19.8971%" y="1071.50">__s..</text></g><g><title>update_rq_clock (22 samples, 0.07%)</title><rect x="22.8372%" y="1045" width="0.0672%" height="15" fill="rgb(224,191,6)" fg:x="7481" fg:w="22"/><text x="23.0872%" y="1055.50"></text></g><g><title>update_irq_load_avg (7 samples, 0.02%)</title><rect x="22.8830%" y="1029" width="0.0214%" height="15" fill="rgb(230,227,24)" fg:x="7496" fg:w="7"/><text x="23.1330%" y="1039.50"></text></g><g><title>do_epoll_wait (1,687 samples, 5.15%)</title><rect x="17.8308%" y="1109" width="5.1499%" height="15" fill="rgb(228,80,19)" fg:x="5841" fg:w="1687"/><text x="18.0808%" y="1119.50">do_epo..</text></g><g><title>select_estimate_accuracy (25 samples, 0.08%)</title><rect x="22.9043%" y="1093" width="0.0763%" height="15" fill="rgb(247,229,0)" fg:x="7503" fg:w="25"/><text x="23.1543%" y="1103.50"></text></g><g><title>ktime_get_ts64 (15 samples, 0.05%)</title><rect x="22.9349%" y="1077" width="0.0458%" height="15" fill="rgb(237,194,15)" fg:x="7513" fg:w="15"/><text x="23.1849%" y="1087.50"></text></g><g><title>read_tsc (13 samples, 0.04%)</title><rect x="22.9410%" y="1061" width="0.0397%" height="15" fill="rgb(219,203,20)" fg:x="7515" fg:w="13"/><text x="23.1910%" y="1071.50"></text></g><g><title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="23.0173%" y="1093" width="0.0153%" height="15" fill="rgb(234,128,8)" fg:x="7540" fg:w="5"/><text x="23.2673%" y="1103.50"></text></g><g><title>ktime_get_ts64 (27 samples, 0.08%)</title><rect x="22.9806%" y="1109" width="0.0824%" height="15" fill="rgb(248,202,8)" fg:x="7528" fg:w="27"/><text x="23.2306%" y="1119.50"></text></g><g><title>read_tsc (10 samples, 0.03%)</title><rect x="23.0325%" y="1093" width="0.0305%" height="15" fill="rgb(206,104,37)" fg:x="7545" fg:w="10"/><text x="23.2825%" y="1103.50"></text></g><g><title>__x64_sys_epoll_wait (1,730 samples, 5.28%)</title><rect x="17.7850%" y="1125" width="5.2812%" height="15" fill="rgb(223,8,27)" fg:x="5826" fg:w="1730"/><text x="18.0350%" y="1135.50">__x64_..</text></g><g><title>syscall_enter_from_user_mode (4 samples, 0.01%)</title><rect x="23.0692%" y="1125" width="0.0122%" height="15" fill="rgb(216,217,28)" fg:x="7557" fg:w="4"/><text x="23.3192%" y="1135.50"></text></g><g><title>exit_to_user_mode_prepare (9 samples, 0.03%)</title><rect x="23.0875%" y="1109" width="0.0275%" height="15" fill="rgb(249,199,1)" fg:x="7563" fg:w="9"/><text x="23.3375%" y="1119.50"></text></g><g><title>switch_fpu_return (7 samples, 0.02%)</title><rect x="23.0936%" y="1093" width="0.0214%" height="15" fill="rgb(240,85,17)" fg:x="7565" fg:w="7"/><text x="23.3436%" y="1103.50"></text></g><g><title>copy_kernel_to_fpregs (5 samples, 0.02%)</title><rect x="23.0997%" y="1077" width="0.0153%" height="15" fill="rgb(206,108,45)" fg:x="7567" fg:w="5"/><text x="23.3497%" y="1087.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,766 samples, 5.39%)</title><rect x="17.7300%" y="1157" width="5.3910%" height="15" fill="rgb(245,210,41)" fg:x="5808" fg:w="1766"/><text x="17.9800%" y="1167.50">entry_S..</text></g><g><title>do_syscall_64 (1,756 samples, 5.36%)</title><rect x="17.7605%" y="1141" width="5.3605%" height="15" fill="rgb(206,13,37)" fg:x="5818" fg:w="1756"/><text x="18.0105%" y="1151.50">do_sysc..</text></g><g><title>syscall_exit_to_user_mode (13 samples, 0.04%)</title><rect x="23.0814%" y="1125" width="0.0397%" height="15" fill="rgb(250,61,18)" fg:x="7561" fg:w="13"/><text x="23.3314%" y="1135.50"></text></g><g><title>mio::poll::Poll::poll (1,823 samples, 5.57%)</title><rect x="17.5774%" y="1205" width="5.5651%" height="15" fill="rgb(235,172,48)" fg:x="5758" fg:w="1823"/><text x="17.8274%" y="1215.50">mio::po..</text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (1,821 samples, 5.56%)</title><rect x="17.5835%" y="1189" width="5.5589%" height="15" fill="rgb(249,201,17)" fg:x="5760" fg:w="1821"/><text x="17.8335%" y="1199.50">mio::sy..</text></g><g><title>epoll_wait (1,802 samples, 5.50%)</title><rect x="17.6415%" y="1173" width="5.5009%" height="15" fill="rgb(219,208,6)" fg:x="5779" fg:w="1802"/><text x="17.8915%" y="1183.50">epoll_w..</text></g><g><title>syscall_return_via_sysret (7 samples, 0.02%)</title><rect x="23.1211%" y="1157" width="0.0214%" height="15" fill="rgb(248,31,23)" fg:x="7574" fg:w="7"/><text x="23.3711%" y="1167.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::set_readiness (69 samples, 0.21%)</title><rect x="23.1485%" y="1189" width="0.2106%" height="15" fill="rgb(245,15,42)" fg:x="7583" fg:w="69"/><text x="23.3985%" y="1199.50"></text></g><g><title>tokio::util::bit::Pack::unpack (35 samples, 0.11%)</title><rect x="23.2523%" y="1173" width="0.1068%" height="15" fill="rgb(222,217,39)" fg:x="7617" fg:w="35"/><text x="23.5023%" y="1183.50"></text></g><g><title>tokio::util::bit::unpack (35 samples, 0.11%)</title><rect x="23.2523%" y="1157" width="0.1068%" height="15" fill="rgb(210,219,27)" fg:x="7617" fg:w="35"/><text x="23.5023%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (4 samples, 0.01%)</title><rect x="23.3744%" y="1125" width="0.0122%" height="15" fill="rgb(252,166,36)" fg:x="7657" fg:w="4"/><text x="23.6244%" y="1135.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake (10 samples, 0.03%)</title><rect x="23.3592%" y="1189" width="0.0305%" height="15" fill="rgb(245,132,34)" fg:x="7652" fg:w="10"/><text x="23.6092%" y="1199.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::wake0 (10 samples, 0.03%)</title><rect x="23.3592%" y="1173" width="0.0305%" height="15" fill="rgb(236,54,3)" fg:x="7652" fg:w="10"/><text x="23.6092%" y="1183.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (6 samples, 0.02%)</title><rect x="23.3714%" y="1157" width="0.0183%" height="15" fill="rgb(241,173,43)" fg:x="7656" fg:w="6"/><text x="23.6214%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (6 samples, 0.02%)</title><rect x="23.3714%" y="1141" width="0.0183%" height="15" fill="rgb(215,190,9)" fg:x="7656" fg:w="6"/><text x="23.6214%" y="1151.50"></text></g><g><title>tokio::io::driver::Driver::dispatch (83 samples, 0.25%)</title><rect x="23.1424%" y="1205" width="0.2534%" height="15" fill="rgb(242,101,16)" fg:x="7581" fg:w="83"/><text x="23.3924%" y="1215.50"></text></g><g><title>tokio::io::driver::ready::Ready::from_mio (4 samples, 0.01%)</title><rect x="23.3989%" y="1205" width="0.0122%" height="15" fill="rgb(223,190,21)" fg:x="7665" fg:w="4"/><text x="23.6489%" y="1215.50"></text></g><g><title>tokio::io::driver::Driver::turn (1,974 samples, 6.03%)</title><rect x="17.3912%" y="1221" width="6.0260%" height="15" fill="rgb(215,228,25)" fg:x="5697" fg:w="1974"/><text x="17.6412%" y="1231.50">tokio::i..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="23.4172%" y="1221" width="0.0244%" height="15" fill="rgb(225,36,22)" fg:x="7671" fg:w="8"/><text x="23.6672%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.02%)</title><rect x="23.4172%" y="1205" width="0.0244%" height="15" fill="rgb(251,106,46)" fg:x="7671" fg:w="8"/><text x="23.6672%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.02%)</title><rect x="23.4172%" y="1189" width="0.0244%" height="15" fill="rgb(208,90,1)" fg:x="7671" fg:w="8"/><text x="23.6672%" y="1199.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (9 samples, 0.03%)</title><rect x="23.4416%" y="1221" width="0.0275%" height="15" fill="rgb(243,10,4)" fg:x="7679" fg:w="9"/><text x="23.6916%" y="1231.50"></text></g><g><title>tokio::coop::poll_proceed (4 samples, 0.01%)</title><rect x="23.5271%" y="1173" width="0.0122%" height="15" fill="rgb(212,137,27)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="23.5271%" y="1157" width="0.0122%" height="15" fill="rgb(231,220,49)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="23.5271%" y="1141" width="0.0122%" height="15" fill="rgb(237,96,20)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1151.50"></text></g><g><title>tokio::coop::CURRENT::__getit (4 samples, 0.01%)</title><rect x="23.5271%" y="1125" width="0.0122%" height="15" fill="rgb(239,229,30)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1135.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="23.5271%" y="1109" width="0.0122%" height="15" fill="rgb(219,65,33)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1119.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="23.5271%" y="1093" width="0.0122%" height="15" fill="rgb(243,134,7)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="23.5271%" y="1077" width="0.0122%" height="15" fill="rgb(216,177,54)" fg:x="7707" fg:w="4"/><text x="23.7771%" y="1087.50"></text></g><g><title>core::task::wake::Waker::will_wake (4 samples, 0.01%)</title><rect x="23.5576%" y="1157" width="0.0122%" height="15" fill="rgb(211,160,20)" fg:x="7717" fg:w="4"/><text x="23.8076%" y="1167.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="23.5576%" y="1141" width="0.0122%" height="15" fill="rgb(239,85,39)" fg:x="7717" fg:w="4"/><text x="23.8076%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="23.5576%" y="1125" width="0.0122%" height="15" fill="rgb(232,125,22)" fg:x="7717" fg:w="4"/><text x="23.8076%" y="1135.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="23.5576%" y="1109" width="0.0122%" height="15" fill="rgb(244,57,34)" fg:x="7717" fg:w="4"/><text x="23.8076%" y="1119.50"></text></g><g><title>tokio::io::driver::Direction::mask (8 samples, 0.02%)</title><rect x="23.5698%" y="1157" width="0.0244%" height="15" fill="rgb(214,203,32)" fg:x="7721" fg:w="8"/><text x="23.8198%" y="1167.50"></text></g><g><title>tokio::signal::unix::driver::Driver::process (43 samples, 0.13%)</title><rect x="23.4691%" y="1221" width="0.1313%" height="15" fill="rgb(207,58,43)" fg:x="7688" fg:w="43"/><text x="23.7191%" y="1231.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_ready (36 samples, 0.11%)</title><rect x="23.4904%" y="1205" width="0.1099%" height="15" fill="rgb(215,193,15)" fg:x="7695" fg:w="36"/><text x="23.7404%" y="1215.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (36 samples, 0.11%)</title><rect x="23.4904%" y="1189" width="0.1099%" height="15" fill="rgb(232,15,44)" fg:x="7695" fg:w="36"/><text x="23.7404%" y="1199.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (20 samples, 0.06%)</title><rect x="23.5393%" y="1173" width="0.0611%" height="15" fill="rgb(212,3,48)" fg:x="7711" fg:w="20"/><text x="23.7893%" y="1183.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (10 samples, 0.03%)</title><rect x="23.6126%" y="1189" width="0.0305%" height="15" fill="rgb(218,128,7)" fg:x="7735" fg:w="10"/><text x="23.8626%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (29 samples, 0.09%)</title><rect x="23.6431%" y="1189" width="0.0885%" height="15" fill="rgb(226,216,39)" fg:x="7745" fg:w="29"/><text x="23.8931%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (26 samples, 0.08%)</title><rect x="23.6522%" y="1173" width="0.0794%" height="15" fill="rgb(243,47,51)" fg:x="7748" fg:w="26"/><text x="23.9022%" y="1183.50"></text></g><g><title>tokio::time::driver::Inner::lock (11 samples, 0.03%)</title><rect x="23.7316%" y="1189" width="0.0336%" height="15" fill="rgb(241,183,40)" fg:x="7774" fg:w="11"/><text x="23.9816%" y="1199.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.03%)</title><rect x="23.7316%" y="1173" width="0.0336%" height="15" fill="rgb(231,217,32)" fg:x="7774" fg:w="11"/><text x="23.9816%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.03%)</title><rect x="23.7316%" y="1157" width="0.0336%" height="15" fill="rgb(229,61,38)" fg:x="7774" fg:w="11"/><text x="23.9816%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.03%)</title><rect x="23.7316%" y="1141" width="0.0336%" height="15" fill="rgb(225,210,5)" fg:x="7774" fg:w="11"/><text x="23.9816%" y="1151.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (7 samples, 0.02%)</title><rect x="23.7713%" y="1157" width="0.0214%" height="15" fill="rgb(231,79,45)" fg:x="7787" fg:w="7"/><text x="24.0213%" y="1167.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (5 samples, 0.02%)</title><rect x="23.7774%" y="1141" width="0.0153%" height="15" fill="rgb(224,100,7)" fg:x="7789" fg:w="5"/><text x="24.0274%" y="1151.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (10 samples, 0.03%)</title><rect x="23.7652%" y="1173" width="0.0305%" height="15" fill="rgb(241,198,18)" fg:x="7785" fg:w="10"/><text x="24.0152%" y="1183.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll (14 samples, 0.04%)</title><rect x="23.7652%" y="1189" width="0.0427%" height="15" fill="rgb(252,97,53)" fg:x="7785" fg:w="14"/><text x="24.0152%" y="1199.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (4 samples, 0.01%)</title><rect x="23.8415%" y="1141" width="0.0122%" height="15" fill="rgb(220,88,7)" fg:x="7810" fg:w="4"/><text x="24.0915%" y="1151.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (10 samples, 0.03%)</title><rect x="23.8293%" y="1157" width="0.0305%" height="15" fill="rgb(213,176,14)" fg:x="7806" fg:w="10"/><text x="24.0793%" y="1167.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (86 samples, 0.26%)</title><rect x="23.6003%" y="1205" width="0.2625%" height="15" fill="rgb(246,73,7)" fg:x="7731" fg:w="86"/><text x="23.8503%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::poll_at (18 samples, 0.05%)</title><rect x="23.8079%" y="1189" width="0.0549%" height="15" fill="rgb(245,64,36)" fg:x="7799" fg:w="18"/><text x="24.0579%" y="1199.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (18 samples, 0.05%)</title><rect x="23.8079%" y="1173" width="0.0549%" height="15" fill="rgb(245,80,10)" fg:x="7799" fg:w="18"/><text x="24.0579%" y="1183.50"></text></g><g><title>tokio::time::clock::Clock::now (17 samples, 0.05%)</title><rect x="23.8629%" y="1189" width="0.0519%" height="15" fill="rgb(232,107,50)" fg:x="7817" fg:w="17"/><text x="24.1129%" y="1199.50"></text></g><g><title>tokio::time::clock::now (17 samples, 0.05%)</title><rect x="23.8629%" y="1173" width="0.0519%" height="15" fill="rgb(253,3,0)" fg:x="7817" fg:w="17"/><text x="24.1129%" y="1183.50"></text></g><g><title>std::time::Instant::now (17 samples, 0.05%)</title><rect x="23.8629%" y="1157" width="0.0519%" height="15" fill="rgb(212,99,53)" fg:x="7817" fg:w="17"/><text x="24.1129%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (16 samples, 0.05%)</title><rect x="23.8659%" y="1141" width="0.0488%" height="15" fill="rgb(249,111,54)" fg:x="7818" fg:w="16"/><text x="24.1159%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::now (16 samples, 0.05%)</title><rect x="23.8659%" y="1125" width="0.0488%" height="15" fill="rgb(249,55,30)" fg:x="7818" fg:w="16"/><text x="24.1159%" y="1135.50"></text></g><g><title>__clock_gettime_2 (16 samples, 0.05%)</title><rect x="23.8659%" y="1109" width="0.0488%" height="15" fill="rgb(237,47,42)" fg:x="7818" fg:w="16"/><text x="24.1159%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.03%)</title><rect x="23.8873%" y="1093" width="0.0275%" height="15" fill="rgb(211,20,18)" fg:x="7825" fg:w="9"/><text x="24.1373%" y="1103.50"></text></g><g><title>[[vdso]] (6 samples, 0.02%)</title><rect x="23.8965%" y="1077" width="0.0183%" height="15" fill="rgb(231,203,46)" fg:x="7828" fg:w="6"/><text x="24.1465%" y="1087.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (109 samples, 0.33%)</title><rect x="23.6003%" y="1221" width="0.3327%" height="15" fill="rgb(237,142,3)" fg:x="7731" fg:w="109"/><text x="23.8503%" y="1231.50"></text></g><g><title>tokio::time::driver::ClockTime::now (23 samples, 0.07%)</title><rect x="23.8629%" y="1205" width="0.0702%" height="15" fill="rgb(241,107,1)" fg:x="7817" fg:w="23"/><text x="24.1129%" y="1215.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (6 samples, 0.02%)</title><rect x="23.9148%" y="1189" width="0.0183%" height="15" fill="rgb(229,83,13)" fg:x="7834" fg:w="6"/><text x="24.1648%" y="1199.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (5 samples, 0.02%)</title><rect x="23.9178%" y="1173" width="0.0153%" height="15" fill="rgb(241,91,40)" fg:x="7835" fg:w="5"/><text x="24.1678%" y="1183.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.02%)</title><rect x="23.9178%" y="1157" width="0.0153%" height="15" fill="rgb(225,3,45)" fg:x="7835" fg:w="5"/><text x="24.1678%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.02%)</title><rect x="23.9178%" y="1141" width="0.0153%" height="15" fill="rgb(244,223,14)" fg:x="7835" fg:w="5"/><text x="24.1678%" y="1151.50"></text></g><g><title>tokio::time::clock::Clock::now (15 samples, 0.05%)</title><rect x="23.9331%" y="1205" width="0.0458%" height="15" fill="rgb(224,124,37)" fg:x="7840" fg:w="15"/><text x="24.1831%" y="1215.50"></text></g><g><title>tokio::time::clock::now (15 samples, 0.05%)</title><rect x="23.9331%" y="1189" width="0.0458%" height="15" fill="rgb(251,171,30)" fg:x="7840" fg:w="15"/><text x="24.1831%" y="1199.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.05%)</title><rect x="23.9331%" y="1173" width="0.0458%" height="15" fill="rgb(236,46,54)" fg:x="7840" fg:w="15"/><text x="24.1831%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.04%)</title><rect x="23.9361%" y="1157" width="0.0427%" height="15" fill="rgb(245,213,5)" fg:x="7841" fg:w="14"/><text x="24.1861%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.04%)</title><rect x="23.9361%" y="1141" width="0.0427%" height="15" fill="rgb(230,144,27)" fg:x="7841" fg:w="14"/><text x="24.1861%" y="1151.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.04%)</title><rect x="23.9422%" y="1125" width="0.0366%" height="15" fill="rgb(220,86,6)" fg:x="7843" fg:w="12"/><text x="24.1922%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.03%)</title><rect x="23.9514%" y="1109" width="0.0275%" height="15" fill="rgb(240,20,13)" fg:x="7846" fg:w="9"/><text x="24.2014%" y="1119.50"></text></g><g><title>[[vdso]] (8 samples, 0.02%)</title><rect x="23.9545%" y="1093" width="0.0244%" height="15" fill="rgb(217,89,34)" fg:x="7847" fg:w="8"/><text x="24.2045%" y="1103.50"></text></g><g><title>tokio::time::driver::ClockTime::now (22 samples, 0.07%)</title><rect x="23.9331%" y="1221" width="0.0672%" height="15" fill="rgb(229,13,5)" fg:x="7840" fg:w="22"/><text x="24.1831%" y="1231.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (7 samples, 0.02%)</title><rect x="23.9789%" y="1205" width="0.0214%" height="15" fill="rgb(244,67,35)" fg:x="7855" fg:w="7"/><text x="24.2289%" y="1215.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="23.9819%" y="1189" width="0.0183%" height="15" fill="rgb(221,40,2)" fg:x="7856" fg:w="6"/><text x="24.2319%" y="1199.50"></text></g><g><title>std::time::Instant::checked_duration_since (6 samples, 0.02%)</title><rect x="23.9819%" y="1173" width="0.0183%" height="15" fill="rgb(237,157,21)" fg:x="7856" fg:w="6"/><text x="24.2319%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.02%)</title><rect x="23.9850%" y="1157" width="0.0153%" height="15" fill="rgb(222,94,11)" fg:x="7857" fg:w="5"/><text x="24.2350%" y="1167.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (5 samples, 0.02%)</title><rect x="23.9850%" y="1141" width="0.0153%" height="15" fill="rgb(249,113,6)" fg:x="7857" fg:w="5"/><text x="24.2350%" y="1151.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_timeout (5 samples, 0.02%)</title><rect x="24.0063%" y="1221" width="0.0153%" height="15" fill="rgb(238,137,36)" fg:x="7864" fg:w="5"/><text x="24.2563%" y="1231.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (5 samples, 0.02%)</title><rect x="24.0063%" y="1205" width="0.0153%" height="15" fill="rgb(210,102,26)" fg:x="7864" fg:w="5"/><text x="24.2563%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_occupied_slot (5 samples, 0.02%)</title><rect x="24.0521%" y="1173" width="0.0153%" height="15" fill="rgb(218,30,30)" fg:x="7879" fg:w="5"/><text x="24.3021%" y="1183.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (2,205 samples, 6.73%)</title><rect x="17.3393%" y="1253" width="6.7312%" height="15" fill="rgb(214,67,26)" fg:x="5680" fg:w="2205"/><text x="17.5893%" y="1263.50">&lt;tokio::t..</text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (2,205 samples, 6.73%)</title><rect x="17.3393%" y="1237" width="6.7312%" height="15" fill="rgb(251,9,53)" fg:x="5680" fg:w="2205"/><text x="17.5893%" y="1247.50">tokio::ti..</text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration_time (16 samples, 0.05%)</title><rect x="24.0216%" y="1221" width="0.0488%" height="15" fill="rgb(228,204,25)" fg:x="7869" fg:w="16"/><text x="24.2716%" y="1231.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (16 samples, 0.05%)</title><rect x="24.0216%" y="1205" width="0.0488%" height="15" fill="rgb(207,153,8)" fg:x="7869" fg:w="16"/><text x="24.2716%" y="1215.50"></text></g><g><title>tokio::time::driver::wheel::level::Level::next_expiration (9 samples, 0.03%)</title><rect x="24.0430%" y="1189" width="0.0275%" height="15" fill="rgb(242,9,16)" fg:x="7876" fg:w="9"/><text x="24.2930%" y="1199.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (2,210 samples, 6.75%)</title><rect x="17.3271%" y="1285" width="6.7464%" height="15" fill="rgb(217,211,10)" fg:x="5676" fg:w="2210"/><text x="17.5771%" y="1295.50">&lt;tokio::r..</text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (2,210 samples, 6.75%)</title><rect x="17.3271%" y="1269" width="6.7464%" height="15" fill="rgb(219,228,52)" fg:x="5676" fg:w="2210"/><text x="17.5771%" y="1279.50">&lt;tokio::p..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.01%)</title><rect x="24.0766%" y="1285" width="0.0122%" height="15" fill="rgb(231,92,29)" fg:x="7887" fg:w="4"/><text x="24.3266%" y="1295.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (3,116 samples, 9.51%)</title><rect x="14.5888%" y="1333" width="9.5122%" height="15" fill="rgb(232,8,23)" fg:x="4779" fg:w="3116"/><text x="14.8388%" y="1343.50">&lt;tokio::runtim..</text></g><g><title>tokio::runtime::park::Inner::park (3,097 samples, 9.45%)</title><rect x="14.6468%" y="1317" width="9.4542%" height="15" fill="rgb(216,211,34)" fg:x="4798" fg:w="3097"/><text x="14.8968%" y="1327.50">tokio::runtime..</text></g><g><title>tokio::runtime::park::Inner::park_driver (2,235 samples, 6.82%)</title><rect x="17.2782%" y="1301" width="6.8228%" height="15" fill="rgb(236,151,0)" fg:x="5660" fg:w="2235"/><text x="17.5282%" y="1311.50">tokio::ru..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (3,126 samples, 9.54%)</title><rect x="14.5888%" y="1349" width="9.5427%" height="15" fill="rgb(209,168,3)" fg:x="4779" fg:w="3126"/><text x="14.8388%" y="1359.50">tokio::runtime..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::task::inject::Pointers&gt;&gt; (10 samples, 0.03%)</title><rect x="24.1376%" y="1317" width="0.0305%" height="15" fill="rgb(208,129,28)" fg:x="7907" fg:w="10"/><text x="24.3876%" y="1327.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="24.1376%" y="1301" width="0.0305%" height="15" fill="rgb(229,78,22)" fg:x="7907" fg:w="10"/><text x="24.3876%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.03%)</title><rect x="24.1376%" y="1285" width="0.0305%" height="15" fill="rgb(228,187,13)" fg:x="7907" fg:w="10"/><text x="24.3876%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.02%)</title><rect x="24.1498%" y="1269" width="0.0183%" height="15" fill="rgb(240,119,24)" fg:x="7911" fg:w="6"/><text x="24.3998%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="24.1498%" y="1253" width="0.0183%" height="15" fill="rgb(209,194,42)" fg:x="7911" fg:w="6"/><text x="24.3998%" y="1263.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (31 samples, 0.09%)</title><rect x="24.1376%" y="1333" width="0.0946%" height="15" fill="rgb(247,200,46)" fg:x="7907" fg:w="31"/><text x="24.3876%" y="1343.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (21 samples, 0.06%)</title><rect x="24.1681%" y="1317" width="0.0641%" height="15" fill="rgb(218,76,16)" fg:x="7917" fg:w="21"/><text x="24.4181%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.06%)</title><rect x="24.1681%" y="1301" width="0.0641%" height="15" fill="rgb(225,21,48)" fg:x="7917" fg:w="21"/><text x="24.4181%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.06%)</title><rect x="24.1681%" y="1285" width="0.0641%" height="15" fill="rgb(239,223,50)" fg:x="7917" fg:w="21"/><text x="24.4181%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (34 samples, 0.10%)</title><rect x="24.1315%" y="1349" width="0.1038%" height="15" fill="rgb(244,45,21)" fg:x="7905" fg:w="34"/><text x="24.3815%" y="1359.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (11 samples, 0.03%)</title><rect x="24.2384%" y="1317" width="0.0336%" height="15" fill="rgb(232,33,43)" fg:x="7940" fg:w="11"/><text x="24.4884%" y="1327.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (11 samples, 0.03%)</title><rect x="24.2384%" y="1301" width="0.0336%" height="15" fill="rgb(209,8,3)" fg:x="7940" fg:w="11"/><text x="24.4884%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (11 samples, 0.03%)</title><rect x="24.2384%" y="1285" width="0.0336%" height="15" fill="rgb(214,25,53)" fg:x="7940" fg:w="11"/><text x="24.4884%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (22 samples, 0.07%)</title><rect x="24.2353%" y="1333" width="0.0672%" height="15" fill="rgb(254,186,54)" fg:x="7939" fg:w="22"/><text x="24.4853%" y="1343.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10 samples, 0.03%)</title><rect x="24.2719%" y="1317" width="0.0305%" height="15" fill="rgb(208,174,49)" fg:x="7951" fg:w="10"/><text x="24.5219%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.03%)</title><rect x="24.2719%" y="1301" width="0.0305%" height="15" fill="rgb(233,191,51)" fg:x="7951" fg:w="10"/><text x="24.5219%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.03%)</title><rect x="24.2719%" y="1285" width="0.0305%" height="15" fill="rgb(222,134,10)" fg:x="7951" fg:w="10"/><text x="24.5219%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (23 samples, 0.07%)</title><rect x="24.2353%" y="1349" width="0.0702%" height="15" fill="rgb(230,226,20)" fg:x="7939" fg:w="23"/><text x="24.4853%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (13 samples, 0.04%)</title><rect x="24.3055%" y="1317" width="0.0397%" height="15" fill="rgb(251,111,25)" fg:x="7962" fg:w="13"/><text x="24.5555%" y="1327.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="24.3055%" y="1301" width="0.0397%" height="15" fill="rgb(224,40,46)" fg:x="7962" fg:w="13"/><text x="24.5555%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (13 samples, 0.04%)</title><rect x="24.3055%" y="1285" width="0.0397%" height="15" fill="rgb(236,108,47)" fg:x="7962" fg:w="13"/><text x="24.5555%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (17 samples, 0.05%)</title><rect x="24.3055%" y="1333" width="0.0519%" height="15" fill="rgb(234,93,0)" fg:x="7962" fg:w="17"/><text x="24.5555%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (3,212 samples, 9.81%)</title><rect x="14.5705%" y="1365" width="9.8052%" height="15" fill="rgb(224,213,32)" fg:x="4773" fg:w="3212"/><text x="14.8205%" y="1375.50">tokio::runtime..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (23 samples, 0.07%)</title><rect x="24.3055%" y="1349" width="0.0702%" height="15" fill="rgb(251,11,48)" fg:x="7962" fg:w="23"/><text x="24.5555%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (6 samples, 0.02%)</title><rect x="24.3574%" y="1333" width="0.0183%" height="15" fill="rgb(236,173,5)" fg:x="7979" fg:w="6"/><text x="24.6074%" y="1343.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.02%)</title><rect x="24.4185%" y="1253" width="0.0214%" height="15" fill="rgb(230,95,12)" fg:x="7999" fg:w="7"/><text x="24.6685%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (11 samples, 0.03%)</title><rect x="24.4124%" y="1317" width="0.0336%" height="15" fill="rgb(232,209,1)" fg:x="7997" fg:w="11"/><text x="24.6624%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (11 samples, 0.03%)</title><rect x="24.4124%" y="1301" width="0.0336%" height="15" fill="rgb(232,6,1)" fg:x="7997" fg:w="11"/><text x="24.6624%" y="1311.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (11 samples, 0.03%)</title><rect x="24.4124%" y="1285" width="0.0336%" height="15" fill="rgb(210,224,50)" fg:x="7997" fg:w="11"/><text x="24.6624%" y="1295.50"></text></g><g><title>syscall (11 samples, 0.03%)</title><rect x="24.4124%" y="1269" width="0.0336%" height="15" fill="rgb(228,127,35)" fg:x="7997" fg:w="11"/><text x="24.6624%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (5 samples, 0.02%)</title><rect x="24.4643%" y="1269" width="0.0153%" height="15" fill="rgb(245,102,45)" fg:x="8014" fg:w="5"/><text x="24.7143%" y="1279.50"></text></g><g><title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="24.4643%" y="1253" width="0.0153%" height="15" fill="rgb(214,1,49)" fg:x="8014" fg:w="5"/><text x="24.7143%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::get_new_task (4 samples, 0.01%)</title><rect x="24.5223%" y="1205" width="0.0122%" height="15" fill="rgb(226,163,40)" fg:x="8033" fg:w="4"/><text x="24.7723%" y="1215.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (4 samples, 0.01%)</title><rect x="24.5223%" y="1189" width="0.0122%" height="15" fill="rgb(239,212,28)" fg:x="8033" fg:w="4"/><text x="24.7723%" y="1199.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="24.7878%" y="885" width="0.0183%" height="15" fill="rgb(220,20,13)" fg:x="8120" fg:w="6"/><text x="25.0378%" y="895.50"></text></g><g><title>tokio::coop::CURRENT::__getit (4 samples, 0.01%)</title><rect x="24.8580%" y="773" width="0.0122%" height="15" fill="rgb(210,164,35)" fg:x="8143" fg:w="4"/><text x="25.1080%" y="783.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="24.8580%" y="757" width="0.0122%" height="15" fill="rgb(248,109,41)" fg:x="8143" fg:w="4"/><text x="25.1080%" y="767.50"></text></g><g><title>tokio::coop::poll_proceed (6 samples, 0.02%)</title><rect x="24.8580%" y="821" width="0.0183%" height="15" fill="rgb(238,23,50)" fg:x="8143" fg:w="6"/><text x="25.1080%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="24.8580%" y="805" width="0.0183%" height="15" fill="rgb(211,48,49)" fg:x="8143" fg:w="6"/><text x="25.1080%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="24.8580%" y="789" width="0.0183%" height="15" fill="rgb(223,36,21)" fg:x="8143" fg:w="6"/><text x="25.1080%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.01%)</title><rect x="24.8977%" y="757" width="0.0122%" height="15" fill="rgb(207,123,46)" fg:x="8156" fg:w="4"/><text x="25.1477%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="24.8977%" y="741" width="0.0122%" height="15" fill="rgb(240,218,32)" fg:x="8156" fg:w="4"/><text x="25.1477%" y="751.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (58 samples, 0.18%)</title><rect x="24.8764%" y="789" width="0.1771%" height="15" fill="rgb(252,5,43)" fg:x="8149" fg:w="58"/><text x="25.1264%" y="799.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (54 samples, 0.16%)</title><rect x="24.8886%" y="773" width="0.1648%" height="15" fill="rgb(252,84,19)" fg:x="8153" fg:w="54"/><text x="25.1386%" y="783.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::catch_unwind (47 samples, 0.14%)</title><rect x="24.9099%" y="757" width="0.1435%" height="15" fill="rgb(243,152,39)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="767.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.14%)</title><rect x="24.9099%" y="741" width="0.1435%" height="15" fill="rgb(234,160,15)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="751.50"></text></g><g><title>std::panicking::try (47 samples, 0.14%)</title><rect x="24.9099%" y="725" width="0.1435%" height="15" fill="rgb(237,34,20)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="735.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.14%)</title><rect x="24.9099%" y="709" width="0.1435%" height="15" fill="rgb(229,97,13)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.14%)</title><rect x="24.9099%" y="693" width="0.1435%" height="15" fill="rgb(234,71,50)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="703.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (47 samples, 0.14%)</title><rect x="24.9099%" y="677" width="0.1435%" height="15" fill="rgb(253,155,4)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="687.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (47 samples, 0.14%)</title><rect x="24.9099%" y="661" width="0.1435%" height="15" fill="rgb(222,185,37)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="671.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (47 samples, 0.14%)</title><rect x="24.9099%" y="645" width="0.1435%" height="15" fill="rgb(251,177,13)" fg:x="8160" fg:w="47"/><text x="25.1599%" y="655.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (46 samples, 0.14%)</title><rect x="24.9130%" y="629" width="0.1404%" height="15" fill="rgb(250,179,40)" fg:x="8161" fg:w="46"/><text x="25.1630%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (42 samples, 0.13%)</title><rect x="24.9252%" y="613" width="0.1282%" height="15" fill="rgb(242,44,2)" fg:x="8165" fg:w="42"/><text x="25.1752%" y="623.50"></text></g><g><title>tokio::time::driver::entry::StateCell::poll (60 samples, 0.18%)</title><rect x="24.8764%" y="805" width="0.1832%" height="15" fill="rgb(216,177,13)" fg:x="8149" fg:w="60"/><text x="25.1264%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (80 samples, 0.24%)</title><rect x="24.8367%" y="869" width="0.2442%" height="15" fill="rgb(216,106,43)" fg:x="8136" fg:w="80"/><text x="25.0867%" y="879.50"></text></g><g><title>&lt;tokio::time::driver::sleep::Sleep as core::future::future::Future&gt;::poll (80 samples, 0.24%)</title><rect x="24.8367%" y="853" width="0.2442%" height="15" fill="rgb(216,183,2)" fg:x="8136" fg:w="80"/><text x="25.0867%" y="863.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::poll_elapsed (73 samples, 0.22%)</title><rect x="24.8580%" y="837" width="0.2228%" height="15" fill="rgb(249,75,3)" fg:x="8143" fg:w="73"/><text x="25.1080%" y="847.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::poll_elapsed (67 samples, 0.20%)</title><rect x="24.8764%" y="821" width="0.2045%" height="15" fill="rgb(219,67,39)" fg:x="8149" fg:w="67"/><text x="25.1264%" y="831.50"></text></g><g><title>tokio::time::driver::handle::Handle::is_shutdown (7 samples, 0.02%)</title><rect x="25.0595%" y="805" width="0.0214%" height="15" fill="rgb(253,228,2)" fg:x="8209" fg:w="7"/><text x="25.3095%" y="815.50"></text></g><g><title>tokio::time::driver::Inner::is_shutdown (6 samples, 0.02%)</title><rect x="25.0626%" y="789" width="0.0183%" height="15" fill="rgb(235,138,27)" fg:x="8210" fg:w="6"/><text x="25.3126%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (6 samples, 0.02%)</title><rect x="25.0626%" y="773" width="0.0183%" height="15" fill="rgb(236,97,51)" fg:x="8210" fg:w="6"/><text x="25.3126%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.02%)</title><rect x="25.0656%" y="757" width="0.0153%" height="15" fill="rgb(240,80,30)" fg:x="8211" fg:w="5"/><text x="25.3156%" y="767.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (9 samples, 0.03%)</title><rect x="25.0901%" y="869" width="0.0275%" height="15" fill="rgb(230,178,19)" fg:x="8219" fg:w="9"/><text x="25.3401%" y="879.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (6 samples, 0.02%)</title><rect x="25.0992%" y="853" width="0.0183%" height="15" fill="rgb(210,190,27)" fg:x="8222" fg:w="6"/><text x="25.3492%" y="863.50"></text></g><g><title>std::time::Instant::checked_add (5 samples, 0.02%)</title><rect x="25.1023%" y="837" width="0.0153%" height="15" fill="rgb(222,107,31)" fg:x="8223" fg:w="5"/><text x="25.3523%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (5 samples, 0.02%)</title><rect x="25.1023%" y="821" width="0.0153%" height="15" fill="rgb(216,127,34)" fg:x="8223" fg:w="5"/><text x="25.3523%" y="831.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (5 samples, 0.02%)</title><rect x="25.1023%" y="805" width="0.0153%" height="15" fill="rgb(234,116,52)" fg:x="8223" fg:w="5"/><text x="25.3523%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.02%)</title><rect x="25.1023%" y="789" width="0.0153%" height="15" fill="rgb(222,124,15)" fg:x="8223" fg:w="5"/><text x="25.3523%" y="799.50"></text></g><g><title>core::cmp::PartialOrd::gt (8 samples, 0.02%)</title><rect x="25.1175%" y="869" width="0.0244%" height="15" fill="rgb(231,179,28)" fg:x="8228" fg:w="8"/><text x="25.3675%" y="879.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="25.1175%" y="853" width="0.0244%" height="15" fill="rgb(226,93,45)" fg:x="8228" fg:w="8"/><text x="25.3675%" y="863.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="25.1175%" y="837" width="0.0244%" height="15" fill="rgb(215,8,51)" fg:x="8228" fg:w="8"/><text x="25.3675%" y="847.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="25.1175%" y="821" width="0.0244%" height="15" fill="rgb(223,106,5)" fg:x="8228" fg:w="8"/><text x="25.3675%" y="831.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.02%)</title><rect x="25.1175%" y="805" width="0.0244%" height="15" fill="rgb(250,191,5)" fg:x="8228" fg:w="8"/><text x="25.3675%" y="815.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (7 samples, 0.02%)</title><rect x="25.1206%" y="789" width="0.0214%" height="15" fill="rgb(242,132,44)" fg:x="8229" fg:w="7"/><text x="25.3706%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::time::driver::InnerState&gt;&gt; (6 samples, 0.02%)</title><rect x="25.1603%" y="805" width="0.0183%" height="15" fill="rgb(251,152,29)" fg:x="8242" fg:w="6"/><text x="25.4103%" y="815.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="25.1603%" y="789" width="0.0183%" height="15" fill="rgb(218,179,5)" fg:x="8242" fg:w="6"/><text x="25.4103%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.02%)</title><rect x="25.1603%" y="773" width="0.0183%" height="15" fill="rgb(227,67,19)" fg:x="8242" fg:w="6"/><text x="25.4103%" y="783.50"></text></g><g><title>core::task::wake::Waker::wake (11 samples, 0.03%)</title><rect x="25.1786%" y="805" width="0.0336%" height="15" fill="rgb(233,119,31)" fg:x="8248" fg:w="11"/><text x="25.4286%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (11 samples, 0.03%)</title><rect x="25.1786%" y="789" width="0.0336%" height="15" fill="rgb(241,120,22)" fg:x="8248" fg:w="11"/><text x="25.4286%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (7 samples, 0.02%)</title><rect x="25.1908%" y="773" width="0.0214%" height="15" fill="rgb(224,102,30)" fg:x="8252" fg:w="7"/><text x="25.4408%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (6 samples, 0.02%)</title><rect x="25.1938%" y="757" width="0.0183%" height="15" fill="rgb(210,164,37)" fg:x="8253" fg:w="6"/><text x="25.4438%" y="767.50"></text></g><g><title>tokio::time::driver::Inner::lock (40 samples, 0.12%)</title><rect x="25.2122%" y="805" width="0.1221%" height="15" fill="rgb(226,191,16)" fg:x="8259" fg:w="40"/><text x="25.4622%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (40 samples, 0.12%)</title><rect x="25.2122%" y="789" width="0.1221%" height="15" fill="rgb(214,40,45)" fg:x="8259" fg:w="40"/><text x="25.4622%" y="799.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (40 samples, 0.12%)</title><rect x="25.2122%" y="773" width="0.1221%" height="15" fill="rgb(244,29,26)" fg:x="8259" fg:w="40"/><text x="25.4622%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (40 samples, 0.12%)</title><rect x="25.2122%" y="757" width="0.1221%" height="15" fill="rgb(216,16,5)" fg:x="8259" fg:w="40"/><text x="25.4622%" y="767.50"></text></g><g><title>tokio::time::driver::entry::TimerHandle::fire (14 samples, 0.04%)</title><rect x="25.3343%" y="805" width="0.0427%" height="15" fill="rgb(249,76,35)" fg:x="8299" fg:w="14"/><text x="25.5843%" y="815.50"></text></g><g><title>tokio::time::driver::entry::StateCell::fire (14 samples, 0.04%)</title><rect x="25.3343%" y="789" width="0.0427%" height="15" fill="rgb(207,11,44)" fg:x="8299" fg:w="14"/><text x="25.5843%" y="799.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (13 samples, 0.04%)</title><rect x="25.3373%" y="773" width="0.0397%" height="15" fill="rgb(228,190,49)" fg:x="8300" fg:w="13"/><text x="25.5873%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (13 samples, 0.04%)</title><rect x="25.3373%" y="757" width="0.0397%" height="15" fill="rgb(214,173,12)" fg:x="8300" fg:w="13"/><text x="25.5873%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (13 samples, 0.04%)</title><rect x="25.3373%" y="741" width="0.0397%" height="15" fill="rgb(218,26,35)" fg:x="8300" fg:w="13"/><text x="25.5873%" y="751.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::reregister (72 samples, 0.22%)</title><rect x="25.1603%" y="821" width="0.2198%" height="15" fill="rgb(220,200,19)" fg:x="8242" fg:w="72"/><text x="25.4103%" y="831.50"></text></g><g><title>&lt;tokio::time::instant::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (4 samples, 0.01%)</title><rect x="25.3801%" y="805" width="0.0122%" height="15" fill="rgb(239,95,49)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (4 samples, 0.01%)</title><rect x="25.3801%" y="789" width="0.0122%" height="15" fill="rgb(235,85,53)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="799.50"></text></g><g><title>std::time::Instant::checked_add (4 samples, 0.01%)</title><rect x="25.3801%" y="773" width="0.0122%" height="15" fill="rgb(233,133,31)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (4 samples, 0.01%)</title><rect x="25.3801%" y="757" width="0.0122%" height="15" fill="rgb(218,25,20)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="767.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (4 samples, 0.01%)</title><rect x="25.3801%" y="741" width="0.0122%" height="15" fill="rgb(252,210,38)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.01%)</title><rect x="25.3801%" y="725" width="0.0122%" height="15" fill="rgb(242,134,21)" fg:x="8314" fg:w="4"/><text x="25.6301%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (7 samples, 0.02%)</title><rect x="25.3923%" y="789" width="0.0214%" height="15" fill="rgb(213,28,48)" fg:x="8318" fg:w="7"/><text x="25.6423%" y="799.50"></text></g><g><title>core::time::Duration::as_millis (4 samples, 0.01%)</title><rect x="25.4136%" y="789" width="0.0122%" height="15" fill="rgb(250,196,2)" fg:x="8325" fg:w="4"/><text x="25.6636%" y="799.50"></text></g><g><title>tokio::time::driver::ClockTime::instant_to_tick (32 samples, 0.10%)</title><rect x="25.3923%" y="805" width="0.0977%" height="15" fill="rgb(227,5,17)" fg:x="8318" fg:w="32"/><text x="25.6423%" y="815.50"></text></g><g><title>tokio::time::instant::Instant::checked_duration_since (21 samples, 0.06%)</title><rect x="25.4259%" y="789" width="0.0641%" height="15" fill="rgb(221,226,24)" fg:x="8329" fg:w="21"/><text x="25.6759%" y="799.50"></text></g><g><title>std::time::Instant::checked_duration_since (21 samples, 0.06%)</title><rect x="25.4259%" y="773" width="0.0641%" height="15" fill="rgb(211,5,48)" fg:x="8329" fg:w="21"/><text x="25.6759%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (12 samples, 0.04%)</title><rect x="25.4533%" y="757" width="0.0366%" height="15" fill="rgb(219,150,6)" fg:x="8338" fg:w="12"/><text x="25.7033%" y="767.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (9 samples, 0.03%)</title><rect x="25.4625%" y="741" width="0.0275%" height="15" fill="rgb(251,46,16)" fg:x="8341" fg:w="9"/><text x="25.7125%" y="751.50"></text></g><g><title>tokio::time::driver::ClockTime::deadline_to_tick (38 samples, 0.12%)</title><rect x="25.3801%" y="821" width="0.1160%" height="15" fill="rgb(220,204,40)" fg:x="8314" fg:w="38"/><text x="25.6301%" y="831.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (14 samples, 0.04%)</title><rect x="25.4961%" y="821" width="0.0427%" height="15" fill="rgb(211,85,2)" fg:x="8352" fg:w="14"/><text x="25.7461%" y="831.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::reset (130 samples, 0.40%)</title><rect x="25.1481%" y="869" width="0.3968%" height="15" fill="rgb(229,17,7)" fg:x="8238" fg:w="130"/><text x="25.3981%" y="879.50"></text></g><g><title>tokio::time::driver::sleep::Sleep::reset_inner (130 samples, 0.40%)</title><rect x="25.1481%" y="853" width="0.3968%" height="15" fill="rgb(239,72,28)" fg:x="8238" fg:w="130"/><text x="25.3981%" y="863.50"></text></g><g><title>tokio::time::driver::entry::TimerEntry::reset (130 samples, 0.40%)</title><rect x="25.1481%" y="837" width="0.3968%" height="15" fill="rgb(230,47,54)" fg:x="8238" fg:w="130"/><text x="25.3981%" y="847.50"></text></g><g><title>__clock_gettime_2 (41 samples, 0.13%)</title><rect x="25.5693%" y="789" width="0.1252%" height="15" fill="rgb(214,50,8)" fg:x="8376" fg:w="41"/><text x="25.8193%" y="799.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.11%)</title><rect x="25.5815%" y="773" width="0.1129%" height="15" fill="rgb(216,198,43)" fg:x="8380" fg:w="37"/><text x="25.8315%" y="783.50"></text></g><g><title>[[vdso]] (30 samples, 0.09%)</title><rect x="25.6029%" y="757" width="0.0916%" height="15" fill="rgb(234,20,35)" fg:x="8387" fg:w="30"/><text x="25.8529%" y="767.50"></text></g><g><title>tokio::time::instant::Instant::now (51 samples, 0.16%)</title><rect x="25.5449%" y="869" width="0.1557%" height="15" fill="rgb(254,45,19)" fg:x="8368" fg:w="51"/><text x="25.7949%" y="879.50"></text></g><g><title>tokio::time::instant::variant::now (51 samples, 0.16%)</title><rect x="25.5449%" y="853" width="0.1557%" height="15" fill="rgb(219,14,44)" fg:x="8368" fg:w="51"/><text x="25.7949%" y="863.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.16%)</title><rect x="25.5449%" y="837" width="0.1557%" height="15" fill="rgb(217,220,26)" fg:x="8368" fg:w="51"/><text x="25.7949%" y="847.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (48 samples, 0.15%)</title><rect x="25.5541%" y="821" width="0.1465%" height="15" fill="rgb(213,158,28)" fg:x="8371" fg:w="48"/><text x="25.8041%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::now (48 samples, 0.15%)</title><rect x="25.5541%" y="805" width="0.1465%" height="15" fill="rgb(252,51,52)" fg:x="8371" fg:w="48"/><text x="25.8041%" y="815.50"></text></g><g><title>&lt;tokio_stream::wrappers::interval::IntervalStream as futures_core::stream::Stream&gt;::poll_next (307 samples, 0.94%)</title><rect x="24.7665%" y="901" width="0.9372%" height="15" fill="rgb(246,89,16)" fg:x="8113" fg:w="307"/><text x="25.0165%" y="911.50"></text></g><g><title>tokio::time::interval::Interval::poll_tick (294 samples, 0.90%)</title><rect x="24.8062%" y="885" width="0.8975%" height="15" fill="rgb(216,158,49)" fg:x="8126" fg:w="294"/><text x="25.0562%" y="895.50"></text></g><g><title>&lt;futures_util::stream::stream::enumerate::Enumerate&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (323 samples, 0.99%)</title><rect x="24.7298%" y="933" width="0.9860%" height="15" fill="rgb(236,107,19)" fg:x="8101" fg:w="323"/><text x="24.9798%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::take_while::TakeWhile&lt;St,Fut,F&gt; as futures_core::stream::Stream&gt;::poll_next (323 samples, 0.99%)</title><rect x="24.7298%" y="917" width="0.9860%" height="15" fill="rgb(228,185,30)" fg:x="8101" fg:w="323"/><text x="24.9798%" y="927.50"></text></g><g><title>&lt;futures_util::stream::stream::fuse::Fuse&lt;S&gt; as futures_core::stream::Stream&gt;::poll_next (337 samples, 1.03%)</title><rect x="24.7237%" y="965" width="1.0288%" height="15" fill="rgb(246,134,8)" fg:x="8099" fg:w="337"/><text x="24.9737%" y="975.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next (335 samples, 1.02%)</title><rect x="24.7298%" y="949" width="1.0227%" height="15" fill="rgb(214,143,50)" fg:x="8101" fg:w="335"/><text x="24.9798%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.04%)</title><rect x="25.7159%" y="933" width="0.0366%" height="15" fill="rgb(228,75,8)" fg:x="8424" fg:w="12"/><text x="25.9659%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::map::Map&lt;St,F&gt; as futures_core::stream::Stream&gt;::poll_next::{{closure}} (12 samples, 0.04%)</title><rect x="25.7159%" y="917" width="0.0366%" height="15" fill="rgb(207,175,4)" fg:x="8424" fg:w="12"/><text x="25.9659%" y="927.50"></text></g><g><title>&lt;T as futures_util::fns::FnMut1&lt;A&gt;&gt;::call_mut (12 samples, 0.04%)</title><rect x="25.7159%" y="901" width="0.0366%" height="15" fill="rgb(205,108,24)" fg:x="8424" fg:w="12"/><text x="25.9659%" y="911.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}} (11 samples, 0.03%)</title><rect x="25.7189%" y="885" width="0.0336%" height="15" fill="rgb(244,120,49)" fg:x="8425" fg:w="11"/><text x="25.9689%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="25.7220%" y="869" width="0.0305%" height="15" fill="rgb(223,47,38)" fg:x="8426" fg:w="10"/><text x="25.9720%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (10 samples, 0.03%)</title><rect x="25.7586%" y="933" width="0.0305%" height="15" fill="rgb(229,179,11)" fg:x="8438" fg:w="10"/><text x="26.0086%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="25.7586%" y="917" width="0.0305%" height="15" fill="rgb(231,122,1)" fg:x="8438" fg:w="10"/><text x="26.0086%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (49 samples, 0.15%)</title><rect x="25.7891%" y="933" width="0.1496%" height="15" fill="rgb(245,119,9)" fg:x="8448" fg:w="49"/><text x="26.0391%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.15%)</title><rect x="25.7922%" y="917" width="0.1465%" height="15" fill="rgb(241,163,25)" fg:x="8449" fg:w="48"/><text x="26.0422%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::atomic_load_head_and_len_all (64 samples, 0.20%)</title><rect x="25.7525%" y="949" width="0.1954%" height="15" fill="rgb(217,214,3)" fg:x="8436" fg:w="64"/><text x="26.0025%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::len (66 samples, 0.20%)</title><rect x="25.7525%" y="965" width="0.2015%" height="15" fill="rgb(240,86,28)" fg:x="8436" fg:w="66"/><text x="26.0025%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::downgrade (5 samples, 0.02%)</title><rect x="25.9937%" y="949" width="0.0153%" height="15" fill="rgb(215,47,9)" fg:x="8515" fg:w="5"/><text x="26.2437%" y="959.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.05%)</title><rect x="26.0333%" y="869" width="0.0458%" height="15" fill="rgb(252,25,45)" fg:x="8528" fg:w="15"/><text x="26.2833%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (26 samples, 0.08%)</title><rect x="26.0089%" y="949" width="0.0794%" height="15" fill="rgb(251,164,9)" fg:x="8520" fg:w="26"/><text x="26.2589%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.06%)</title><rect x="26.0272%" y="933" width="0.0611%" height="15" fill="rgb(233,194,0)" fg:x="8526" fg:w="20"/><text x="26.2772%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.06%)</title><rect x="26.0272%" y="917" width="0.0611%" height="15" fill="rgb(249,111,24)" fg:x="8526" fg:w="20"/><text x="26.2772%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.06%)</title><rect x="26.0272%" y="901" width="0.0611%" height="15" fill="rgb(250,223,3)" fg:x="8526" fg:w="20"/><text x="26.2772%" y="911.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.05%)</title><rect x="26.0333%" y="885" width="0.0549%" height="15" fill="rgb(236,178,37)" fg:x="8528" fg:w="18"/><text x="26.2833%" y="895.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (6 samples, 0.02%)</title><rect x="26.0883%" y="949" width="0.0183%" height="15" fill="rgb(241,158,50)" fg:x="8546" fg:w="6"/><text x="26.3383%" y="959.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (18 samples, 0.05%)</title><rect x="26.1066%" y="949" width="0.0549%" height="15" fill="rgb(213,121,41)" fg:x="8552" fg:w="18"/><text x="26.3566%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (18 samples, 0.05%)</title><rect x="26.1066%" y="933" width="0.0549%" height="15" fill="rgb(240,92,3)" fg:x="8552" fg:w="18"/><text x="26.3566%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_store (18 samples, 0.05%)</title><rect x="26.1066%" y="917" width="0.0549%" height="15" fill="rgb(205,123,3)" fg:x="8552" fg:w="18"/><text x="26.3566%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (78 samples, 0.24%)</title><rect x="25.9540%" y="965" width="0.2381%" height="15" fill="rgb(205,97,47)" fg:x="8502" fg:w="78"/><text x="26.2040%" y="975.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (10 samples, 0.03%)</title><rect x="26.1615%" y="949" width="0.0305%" height="15" fill="rgb(247,152,14)" fg:x="8570" fg:w="10"/><text x="26.4115%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="26.5401%" y="917" width="0.0153%" height="15" fill="rgb(248,195,53)" fg:x="8694" fg:w="5"/><text x="26.7901%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.11%)</title><rect x="28.8235%" y="853" width="0.1099%" height="15" fill="rgb(226,201,16)" fg:x="9442" fg:w="36"/><text x="29.0735%" y="863.50"></text></g><g><title>__rust_probestack (13 samples, 0.04%)</title><rect x="28.8937%" y="837" width="0.0397%" height="15" fill="rgb(205,98,0)" fg:x="9465" fg:w="13"/><text x="29.1437%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;latte::workload::write::Write&lt;alloc::boxed::Box&lt;scylla::transport::session::Session&gt;&gt;&gt;&gt; (32 samples, 0.10%)</title><rect x="28.9517%" y="853" width="0.0977%" height="15" fill="rgb(214,191,48)" fg:x="9484" fg:w="32"/><text x="29.2017%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.10%)</title><rect x="28.9517%" y="837" width="0.0977%" height="15" fill="rgb(237,112,39)" fg:x="9484" fg:w="32"/><text x="29.2017%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.09%)</title><rect x="28.9548%" y="821" width="0.0946%" height="15" fill="rgb(247,203,27)" fg:x="9485" fg:w="31"/><text x="29.2048%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.09%)</title><rect x="28.9548%" y="805" width="0.0946%" height="15" fill="rgb(235,124,28)" fg:x="9485" fg:w="31"/><text x="29.2048%" y="815.50"></text></g><g><title>__GI___libc_free (21 samples, 0.06%)</title><rect x="29.0524%" y="773" width="0.0641%" height="15" fill="rgb(208,207,46)" fg:x="9517" fg:w="21"/><text x="29.3024%" y="783.50"></text></g><g><title>_int_free (7 samples, 0.02%)</title><rect x="29.0952%" y="757" width="0.0214%" height="15" fill="rgb(234,176,4)" fg:x="9531" fg:w="7"/><text x="29.3452%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.08%)</title><rect x="29.0494%" y="805" width="0.0824%" height="15" fill="rgb(230,133,28)" fg:x="9516" fg:w="27"/><text x="29.2994%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.08%)</title><rect x="29.0524%" y="789" width="0.0794%" height="15" fill="rgb(211,137,40)" fg:x="9517" fg:w="26"/><text x="29.3024%" y="799.50"></text></g><g><title>__rust_dealloc (5 samples, 0.02%)</title><rect x="29.1166%" y="773" width="0.0153%" height="15" fill="rgb(254,35,13)" fg:x="9538" fg:w="5"/><text x="29.3666%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.09%)</title><rect x="29.0494%" y="853" width="0.0855%" height="15" fill="rgb(225,49,51)" fg:x="9516" fg:w="28"/><text x="29.2994%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.09%)</title><rect x="29.0494%" y="837" width="0.0855%" height="15" fill="rgb(251,10,15)" fg:x="9516" fg:w="28"/><text x="29.2994%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.09%)</title><rect x="29.0494%" y="821" width="0.0855%" height="15" fill="rgb(228,207,15)" fg:x="9516" fg:w="28"/><text x="29.2994%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scylla::frame::response::result::ColumnSpec&gt;&gt; (6 samples, 0.02%)</title><rect x="29.1654%" y="837" width="0.0183%" height="15" fill="rgb(241,99,19)" fg:x="9554" fg:w="6"/><text x="29.4154%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="29.1654%" y="821" width="0.0183%" height="15" fill="rgb(207,104,49)" fg:x="9554" fg:w="6"/><text x="29.4154%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::connection::QueryResult&gt; (17 samples, 0.05%)</title><rect x="29.1349%" y="853" width="0.0519%" height="15" fill="rgb(234,99,18)" fg:x="9544" fg:w="17"/><text x="29.3849%" y="863.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::u32x4_sse2&lt;S3,S4,NI&gt; as core::ops::arith::Add&gt;::add (5 samples, 0.02%)</title><rect x="29.4310%" y="661" width="0.0153%" height="15" fill="rgb(213,191,49)" fg:x="9641" fg:w="5"/><text x="29.6810%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (5 samples, 0.02%)</title><rect x="29.4310%" y="645" width="0.0153%" height="15" fill="rgb(210,226,19)" fg:x="9641" fg:w="5"/><text x="29.6810%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (8 samples, 0.02%)</title><rect x="29.4646%" y="645" width="0.0244%" height="15" fill="rgb(229,97,18)" fg:x="9652" fg:w="8"/><text x="29.7146%" y="655.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (8 samples, 0.02%)</title><rect x="29.4646%" y="629" width="0.0244%" height="15" fill="rgb(211,167,15)" fg:x="9652" fg:w="8"/><text x="29.7146%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.02%)</title><rect x="29.4646%" y="613" width="0.0244%" height="15" fill="rgb(210,169,34)" fg:x="9652" fg:w="8"/><text x="29.7146%" y="623.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as core::ops::bit::BitXor&gt;::bitxor (8 samples, 0.02%)</title><rect x="29.4890%" y="645" width="0.0244%" height="15" fill="rgb(241,121,31)" fg:x="9660" fg:w="8"/><text x="29.7390%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (8 samples, 0.02%)</title><rect x="29.4890%" y="629" width="0.0244%" height="15" fill="rgb(232,40,11)" fg:x="9660" fg:w="8"/><text x="29.7390%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (8 samples, 0.02%)</title><rect x="29.5134%" y="645" width="0.0244%" height="15" fill="rgb(205,86,26)" fg:x="9668" fg:w="8"/><text x="29.7634%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.02%)</title><rect x="29.5134%" y="629" width="0.0244%" height="15" fill="rgb(231,126,28)" fg:x="9668" fg:w="8"/><text x="29.7634%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right20 (12 samples, 0.04%)</title><rect x="29.5378%" y="645" width="0.0366%" height="15" fill="rgb(219,221,18)" fg:x="9676" fg:w="12"/><text x="29.7878%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (12 samples, 0.04%)</title><rect x="29.5378%" y="629" width="0.0366%" height="15" fill="rgb(211,40,0)" fg:x="9676" fg:w="12"/><text x="29.7878%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right24 (7 samples, 0.02%)</title><rect x="29.5745%" y="645" width="0.0214%" height="15" fill="rgb(239,85,43)" fg:x="9688" fg:w="7"/><text x="29.8245%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (7 samples, 0.02%)</title><rect x="29.5745%" y="629" width="0.0214%" height="15" fill="rgb(231,55,21)" fg:x="9688" fg:w="7"/><text x="29.8245%" y="639.50"></text></g><g><title>rand_chacha::guts::round (62 samples, 0.19%)</title><rect x="29.4646%" y="661" width="0.1893%" height="15" fill="rgb(225,184,43)" fg:x="9652" fg:w="62"/><text x="29.7146%" y="671.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right25 (19 samples, 0.06%)</title><rect x="29.5958%" y="645" width="0.0580%" height="15" fill="rgb(251,158,41)" fg:x="9695" fg:w="19"/><text x="29.8458%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (19 samples, 0.06%)</title><rect x="29.5958%" y="629" width="0.0580%" height="15" fill="rgb(234,159,37)" fg:x="9695" fg:w="19"/><text x="29.8458%" y="639.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words1230 (5 samples, 0.02%)</title><rect x="29.6538%" y="645" width="0.0153%" height="15" fill="rgb(216,204,22)" fg:x="9714" fg:w="5"/><text x="29.9038%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.02%)</title><rect x="29.6538%" y="629" width="0.0153%" height="15" fill="rgb(214,17,3)" fg:x="9714" fg:w="5"/><text x="29.9038%" y="639.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (88 samples, 0.27%)</title><rect x="29.4127%" y="709" width="0.2686%" height="15" fill="rgb(212,111,17)" fg:x="9635" fg:w="88"/><text x="29.6627%" y="719.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (88 samples, 0.27%)</title><rect x="29.4127%" y="693" width="0.2686%" height="15" fill="rgb(221,157,24)" fg:x="9635" fg:w="88"/><text x="29.6627%" y="703.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (87 samples, 0.27%)</title><rect x="29.4157%" y="677" width="0.2656%" height="15" fill="rgb(252,16,13)" fg:x="9636" fg:w="87"/><text x="29.6657%" y="687.50"></text></g><g><title>rand_chacha::guts::undiagonalize (9 samples, 0.03%)</title><rect x="29.6538%" y="661" width="0.0275%" height="15" fill="rgb(221,62,2)" fg:x="9714" fg:w="9"/><text x="29.9038%" y="671.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x4_avx2&lt;NI&gt; as ppv_lite86::types::LaneWords4&gt;::shuffle_lane_words3012 (4 samples, 0.01%)</title><rect x="29.6691%" y="645" width="0.0122%" height="15" fill="rgb(247,87,22)" fg:x="9719" fg:w="4"/><text x="29.9191%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.01%)</title><rect x="29.6691%" y="629" width="0.0122%" height="15" fill="rgb(215,73,9)" fg:x="9719" fg:w="4"/><text x="29.9191%" y="639.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha20Core as rand_core::block::BlockRngCore&gt;::generate (98 samples, 0.30%)</title><rect x="29.3913%" y="757" width="0.2992%" height="15" fill="rgb(207,175,33)" fg:x="9628" fg:w="98"/><text x="29.6413%" y="767.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (98 samples, 0.30%)</title><rect x="29.3913%" y="741" width="0.2992%" height="15" fill="rgb(243,129,54)" fg:x="9628" fg:w="98"/><text x="29.6413%" y="751.50"></text></g><g><title>rand_chacha::guts::refill_wide (95 samples, 0.29%)</title><rect x="29.4005%" y="725" width="0.2900%" height="15" fill="rgb(227,119,45)" fg:x="9631" fg:w="95"/><text x="29.6505%" y="735.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (6 samples, 0.02%)</title><rect x="29.6905%" y="757" width="0.0183%" height="15" fill="rgb(205,109,36)" fg:x="9726" fg:w="6"/><text x="29.9405%" y="767.50"></text></g><g><title>rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed (5 samples, 0.02%)</title><rect x="29.6935%" y="741" width="0.0153%" height="15" fill="rgb(205,6,39)" fg:x="9727" fg:w="5"/><text x="29.9435%" y="751.50"></text></g><g><title>rand_core::SeedableRng::from_rng (5 samples, 0.02%)</title><rect x="29.6935%" y="725" width="0.0153%" height="15" fill="rgb(221,32,16)" fg:x="9727" fg:w="5"/><text x="29.9435%" y="735.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u32 (156 samples, 0.48%)</title><rect x="29.2478%" y="837" width="0.4762%" height="15" fill="rgb(228,144,50)" fg:x="9581" fg:w="156"/><text x="29.4978%" y="847.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u32 (156 samples, 0.48%)</title><rect x="29.2478%" y="821" width="0.4762%" height="15" fill="rgb(229,201,53)" fg:x="9581" fg:w="156"/><text x="29.4978%" y="831.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u32 (156 samples, 0.48%)</title><rect x="29.2478%" y="805" width="0.4762%" height="15" fill="rgb(249,153,27)" fg:x="9581" fg:w="156"/><text x="29.4978%" y="815.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (111 samples, 0.34%)</title><rect x="29.3852%" y="789" width="0.3388%" height="15" fill="rgb(227,106,25)" fg:x="9626" fg:w="111"/><text x="29.6352%" y="799.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (110 samples, 0.34%)</title><rect x="29.3882%" y="773" width="0.3358%" height="15" fill="rgb(230,65,29)" fg:x="9627" fg:w="110"/><text x="29.6382%" y="783.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (5 samples, 0.02%)</title><rect x="29.7088%" y="757" width="0.0153%" height="15" fill="rgb(221,57,46)" fg:x="9732" fg:w="5"/><text x="29.9588%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.03%)</title><rect x="29.7240%" y="837" width="0.0275%" height="15" fill="rgb(229,161,17)" fg:x="9737" fg:w="9"/><text x="29.9740%" y="847.50"></text></g><g><title>__lll_lock_wait_private (7 samples, 0.02%)</title><rect x="29.8400%" y="709" width="0.0214%" height="15" fill="rgb(222,213,11)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="29.8400%" y="693" width="0.0214%" height="15" fill="rgb(235,35,13)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="703.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="29.8400%" y="677" width="0.0214%" height="15" fill="rgb(233,158,34)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="687.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.02%)</title><rect x="29.8400%" y="661" width="0.0214%" height="15" fill="rgb(215,151,48)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="671.50"></text></g><g><title>do_futex (7 samples, 0.02%)</title><rect x="29.8400%" y="645" width="0.0214%" height="15" fill="rgb(229,84,14)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="655.50"></text></g><g><title>futex_wait (7 samples, 0.02%)</title><rect x="29.8400%" y="629" width="0.0214%" height="15" fill="rgb(229,68,14)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="639.50"></text></g><g><title>futex_wait_queue_me (7 samples, 0.02%)</title><rect x="29.8400%" y="613" width="0.0214%" height="15" fill="rgb(243,106,26)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="623.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="29.8400%" y="597" width="0.0214%" height="15" fill="rgb(206,45,38)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="607.50"></text></g><g><title>__schedule (7 samples, 0.02%)</title><rect x="29.8400%" y="581" width="0.0214%" height="15" fill="rgb(226,6,15)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="591.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="29.8400%" y="565" width="0.0214%" height="15" fill="rgb(232,22,54)" fg:x="9775" fg:w="7"/><text x="30.0900%" y="575.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.21%)</title><rect x="29.7576%" y="725" width="0.2076%" height="15" fill="rgb(229,222,32)" fg:x="9748" fg:w="68"/><text x="30.0076%" y="735.50"></text></g><g><title>_int_malloc (34 samples, 0.10%)</title><rect x="29.8614%" y="709" width="0.1038%" height="15" fill="rgb(228,62,29)" fg:x="9782" fg:w="34"/><text x="30.1114%" y="719.50"></text></g><g><title>unlink_chunk.constprop.0 (4 samples, 0.01%)</title><rect x="29.9530%" y="693" width="0.0122%" height="15" fill="rgb(251,103,34)" fg:x="9812" fg:w="4"/><text x="30.2030%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (73 samples, 0.22%)</title><rect x="29.7515%" y="837" width="0.2228%" height="15" fill="rgb(233,12,30)" fg:x="9746" fg:w="73"/><text x="30.0015%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (73 samples, 0.22%)</title><rect x="29.7515%" y="821" width="0.2228%" height="15" fill="rgb(238,52,0)" fg:x="9746" fg:w="73"/><text x="30.0015%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.22%)</title><rect x="29.7546%" y="805" width="0.2198%" height="15" fill="rgb(223,98,5)" fg:x="9747" fg:w="72"/><text x="30.0046%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 0.22%)</title><rect x="29.7546%" y="789" width="0.2198%" height="15" fill="rgb(228,75,37)" fg:x="9747" fg:w="72"/><text x="30.0046%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.22%)</title><rect x="29.7546%" y="773" width="0.2198%" height="15" fill="rgb(205,115,49)" fg:x="9747" fg:w="72"/><text x="30.0046%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.22%)</title><rect x="29.7546%" y="757" width="0.2198%" height="15" fill="rgb(250,154,43)" fg:x="9747" fg:w="72"/><text x="30.0046%" y="767.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.22%)</title><rect x="29.7576%" y="741" width="0.2167%" height="15" fill="rgb(226,43,29)" fg:x="9748" fg:w="71"/><text x="30.0076%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.02%)</title><rect x="29.9744%" y="837" width="0.0153%" height="15" fill="rgb(249,228,39)" fg:x="9819" fg:w="5"/><text x="30.2244%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.02%)</title><rect x="29.9744%" y="821" width="0.0153%" height="15" fill="rgb(216,79,43)" fg:x="9819" fg:w="5"/><text x="30.2244%" y="831.50"></text></g><g><title>latte::workload::gen_random_blob (270 samples, 0.82%)</title><rect x="29.1868%" y="853" width="0.8242%" height="15" fill="rgb(228,95,12)" fg:x="9561" fg:w="270"/><text x="29.4368%" y="863.50"></text></g><g><title>rand::rngs::thread::thread_rng (7 samples, 0.02%)</title><rect x="29.9896%" y="837" width="0.0214%" height="15" fill="rgb(249,221,15)" fg:x="9824" fg:w="7"/><text x="30.2396%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (6 samples, 0.02%)</title><rect x="30.0690%" y="709" width="0.0183%" height="15" fill="rgb(233,34,13)" fg:x="9850" fg:w="6"/><text x="30.3190%" y="719.50"></text></g><g><title>__cond_resched (7 samples, 0.02%)</title><rect x="30.1636%" y="517" width="0.0214%" height="15" fill="rgb(214,103,39)" fg:x="9881" fg:w="7"/><text x="30.4136%" y="527.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="30.1972%" y="485" width="0.0214%" height="15" fill="rgb(251,126,39)" fg:x="9892" fg:w="7"/><text x="30.4472%" y="495.50"></text></g><g><title>__lll_lock_wait_private (22 samples, 0.07%)</title><rect x="30.1606%" y="629" width="0.0672%" height="15" fill="rgb(214,216,36)" fg:x="9880" fg:w="22"/><text x="30.4106%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.06%)</title><rect x="30.1636%" y="613" width="0.0641%" height="15" fill="rgb(220,221,8)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="623.50"></text></g><g><title>do_syscall_64 (21 samples, 0.06%)</title><rect x="30.1636%" y="597" width="0.0641%" height="15" fill="rgb(240,216,3)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="607.50"></text></g><g><title>__x64_sys_futex (21 samples, 0.06%)</title><rect x="30.1636%" y="581" width="0.0641%" height="15" fill="rgb(232,218,17)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="591.50"></text></g><g><title>do_futex (21 samples, 0.06%)</title><rect x="30.1636%" y="565" width="0.0641%" height="15" fill="rgb(229,163,45)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="575.50"></text></g><g><title>futex_wait (21 samples, 0.06%)</title><rect x="30.1636%" y="549" width="0.0641%" height="15" fill="rgb(231,110,42)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="559.50"></text></g><g><title>futex_wait_queue_me (21 samples, 0.06%)</title><rect x="30.1636%" y="533" width="0.0641%" height="15" fill="rgb(208,170,48)" fg:x="9881" fg:w="21"/><text x="30.4136%" y="543.50"></text></g><g><title>schedule (14 samples, 0.04%)</title><rect x="30.1850%" y="517" width="0.0427%" height="15" fill="rgb(239,116,25)" fg:x="9888" fg:w="14"/><text x="30.4350%" y="527.50"></text></g><g><title>__schedule (14 samples, 0.04%)</title><rect x="30.1850%" y="501" width="0.0427%" height="15" fill="rgb(219,200,50)" fg:x="9888" fg:w="14"/><text x="30.4350%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (6 samples, 0.02%)</title><rect x="30.3315%" y="613" width="0.0183%" height="15" fill="rgb(245,200,0)" fg:x="9936" fg:w="6"/><text x="30.5815%" y="623.50"></text></g><g><title>_int_free (32 samples, 0.10%)</title><rect x="30.3498%" y="613" width="0.0977%" height="15" fill="rgb(245,119,33)" fg:x="9942" fg:w="32"/><text x="30.5998%" y="623.50"></text></g><g><title>_int_malloc (74 samples, 0.23%)</title><rect x="30.4475%" y="613" width="0.2259%" height="15" fill="rgb(231,125,12)" fg:x="9974" fg:w="74"/><text x="30.6975%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.03%)</title><rect x="30.6429%" y="597" width="0.0305%" height="15" fill="rgb(216,96,41)" fg:x="10038" fg:w="10"/><text x="30.8929%" y="607.50"></text></g><g><title>_int_realloc (163 samples, 0.50%)</title><rect x="30.2277%" y="629" width="0.4976%" height="15" fill="rgb(248,43,45)" fg:x="9902" fg:w="163"/><text x="30.4777%" y="639.50"></text></g><g><title>unlink_chunk.constprop.0 (16 samples, 0.05%)</title><rect x="30.6765%" y="613" width="0.0488%" height="15" fill="rgb(217,222,7)" fg:x="10049" fg:w="16"/><text x="30.9265%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 0.02%)</title><rect x="30.7253%" y="629" width="0.0214%" height="15" fill="rgb(233,28,6)" fg:x="10065" fg:w="7"/><text x="30.9753%" y="639.50"></text></g><g><title>do_syscall_64 (7 samples, 0.02%)</title><rect x="30.7253%" y="613" width="0.0214%" height="15" fill="rgb(231,218,15)" fg:x="10065" fg:w="7"/><text x="30.9753%" y="623.50"></text></g><g><title>__x64_sys_futex (7 samples, 0.02%)</title><rect x="30.7253%" y="597" width="0.0214%" height="15" fill="rgb(226,171,48)" fg:x="10065" fg:w="7"/><text x="30.9753%" y="607.50"></text></g><g><title>do_futex (7 samples, 0.02%)</title><rect x="30.7253%" y="581" width="0.0214%" height="15" fill="rgb(235,201,9)" fg:x="10065" fg:w="7"/><text x="30.9753%" y="591.50"></text></g><g><title>futex_wake (6 samples, 0.02%)</title><rect x="30.7284%" y="565" width="0.0183%" height="15" fill="rgb(217,80,15)" fg:x="10066" fg:w="6"/><text x="30.9784%" y="575.50"></text></g><g><title>__GI___libc_realloc (215 samples, 0.66%)</title><rect x="30.0934%" y="645" width="0.6563%" height="15" fill="rgb(219,152,8)" fg:x="9858" fg:w="215"/><text x="30.3434%" y="655.50"></text></g><g><title>__rdl_realloc (6 samples, 0.02%)</title><rect x="30.7497%" y="645" width="0.0183%" height="15" fill="rgb(243,107,38)" fg:x="10073" fg:w="6"/><text x="30.9997%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.02%)</title><rect x="30.7528%" y="629" width="0.0153%" height="15" fill="rgb(231,17,5)" fg:x="10074" fg:w="5"/><text x="31.0028%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (223 samples, 0.68%)</title><rect x="30.0934%" y="693" width="0.6807%" height="15" fill="rgb(209,25,54)" fg:x="9858" fg:w="223"/><text x="30.3434%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (223 samples, 0.68%)</title><rect x="30.0934%" y="677" width="0.6807%" height="15" fill="rgb(219,0,2)" fg:x="9858" fg:w="223"/><text x="30.3434%" y="687.50"></text></g><g><title>alloc::alloc::realloc (223 samples, 0.68%)</title><rect x="30.0934%" y="661" width="0.6807%" height="15" fill="rgb(246,9,5)" fg:x="9858" fg:w="223"/><text x="30.3434%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (226 samples, 0.69%)</title><rect x="30.0873%" y="709" width="0.6899%" height="15" fill="rgb(226,159,4)" fg:x="9856" fg:w="226"/><text x="30.3373%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (240 samples, 0.73%)</title><rect x="30.0537%" y="773" width="0.7326%" height="15" fill="rgb(219,175,34)" fg:x="9845" fg:w="240"/><text x="30.3037%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (240 samples, 0.73%)</title><rect x="30.0537%" y="757" width="0.7326%" height="15" fill="rgb(236,10,46)" fg:x="9845" fg:w="240"/><text x="30.3037%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (240 samples, 0.73%)</title><rect x="30.0537%" y="741" width="0.7326%" height="15" fill="rgb(240,211,16)" fg:x="9845" fg:w="240"/><text x="30.3037%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (240 samples, 0.73%)</title><rect x="30.0537%" y="725" width="0.7326%" height="15" fill="rgb(205,3,43)" fg:x="9845" fg:w="240"/><text x="30.3037%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (249 samples, 0.76%)</title><rect x="30.0324%" y="821" width="0.7601%" height="15" fill="rgb(245,7,22)" fg:x="9838" fg:w="249"/><text x="30.2824%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (249 samples, 0.76%)</title><rect x="30.0324%" y="805" width="0.7601%" height="15" fill="rgb(239,132,32)" fg:x="9838" fg:w="249"/><text x="30.2824%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (249 samples, 0.76%)</title><rect x="30.0324%" y="789" width="0.7601%" height="15" fill="rgb(228,202,34)" fg:x="9838" fg:w="249"/><text x="30.2824%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as scylla::frame::value::Value&gt;::serialize (252 samples, 0.77%)</title><rect x="30.0263%" y="837" width="0.7693%" height="15" fill="rgb(254,200,22)" fg:x="9836" fg:w="252"/><text x="30.2763%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (4 samples, 0.01%)</title><rect x="30.8169%" y="677" width="0.0122%" height="15" fill="rgb(219,10,39)" fg:x="10095" fg:w="4"/><text x="31.0669%" y="687.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.13%)</title><rect x="30.8474%" y="661" width="0.1313%" height="15" fill="rgb(226,210,39)" fg:x="10105" fg:w="43"/><text x="31.0974%" y="671.50"></text></g><g><title>_int_malloc (15 samples, 0.05%)</title><rect x="30.9329%" y="645" width="0.0458%" height="15" fill="rgb(208,219,16)" fg:x="10133" fg:w="15"/><text x="31.1829%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (4 samples, 0.01%)</title><rect x="30.9665%" y="629" width="0.0122%" height="15" fill="rgb(216,158,51)" fg:x="10144" fg:w="4"/><text x="31.2165%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.16%)</title><rect x="30.8291%" y="677" width="0.1648%" height="15" fill="rgb(233,14,44)" fg:x="10099" fg:w="54"/><text x="31.0791%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (65 samples, 0.20%)</title><rect x="30.8047%" y="741" width="0.1984%" height="15" fill="rgb(237,97,39)" fg:x="10091" fg:w="65"/><text x="31.0547%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (65 samples, 0.20%)</title><rect x="30.8047%" y="725" width="0.1984%" height="15" fill="rgb(218,198,43)" fg:x="10091" fg:w="65"/><text x="31.0547%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (65 samples, 0.20%)</title><rect x="30.8047%" y="709" width="0.1984%" height="15" fill="rgb(231,104,20)" fg:x="10091" fg:w="65"/><text x="31.0547%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (61 samples, 0.19%)</title><rect x="30.8169%" y="693" width="0.1862%" height="15" fill="rgb(254,36,13)" fg:x="10095" fg:w="61"/><text x="31.0669%" y="703.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i32 (69 samples, 0.21%)</title><rect x="30.8016%" y="821" width="0.2106%" height="15" fill="rgb(248,14,50)" fg:x="10090" fg:w="69"/><text x="31.0516%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (69 samples, 0.21%)</title><rect x="30.8016%" y="805" width="0.2106%" height="15" fill="rgb(217,107,29)" fg:x="10090" fg:w="69"/><text x="31.0516%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (69 samples, 0.21%)</title><rect x="30.8016%" y="789" width="0.2106%" height="15" fill="rgb(251,169,33)" fg:x="10090" fg:w="69"/><text x="31.0516%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (69 samples, 0.21%)</title><rect x="30.8016%" y="773" width="0.2106%" height="15" fill="rgb(217,108,32)" fg:x="10090" fg:w="69"/><text x="31.0516%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (69 samples, 0.21%)</title><rect x="30.8016%" y="757" width="0.2106%" height="15" fill="rgb(219,66,42)" fg:x="10090" fg:w="69"/><text x="31.0516%" y="767.50"></text></g><g><title>__perf_event_task_sched_out (4 samples, 0.01%)</title><rect x="31.1924%" y="453" width="0.0122%" height="15" fill="rgb(206,180,7)" fg:x="10218" fg:w="4"/><text x="31.4424%" y="463.50"></text></g><g><title>futex_wait_queue_me (9 samples, 0.03%)</title><rect x="31.1893%" y="501" width="0.0275%" height="15" fill="rgb(208,226,31)" fg:x="10217" fg:w="9"/><text x="31.4393%" y="511.50"></text></g><g><title>schedule (9 samples, 0.03%)</title><rect x="31.1893%" y="485" width="0.0275%" height="15" fill="rgb(218,26,49)" fg:x="10217" fg:w="9"/><text x="31.4393%" y="495.50"></text></g><g><title>__schedule (9 samples, 0.03%)</title><rect x="31.1893%" y="469" width="0.0275%" height="15" fill="rgb(233,197,48)" fg:x="10217" fg:w="9"/><text x="31.4393%" y="479.50"></text></g><g><title>__lll_lock_wait_private (11 samples, 0.03%)</title><rect x="31.1893%" y="597" width="0.0336%" height="15" fill="rgb(252,181,51)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.03%)</title><rect x="31.1893%" y="581" width="0.0336%" height="15" fill="rgb(253,90,19)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="591.50"></text></g><g><title>do_syscall_64 (11 samples, 0.03%)</title><rect x="31.1893%" y="565" width="0.0336%" height="15" fill="rgb(215,171,30)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="575.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.03%)</title><rect x="31.1893%" y="549" width="0.0336%" height="15" fill="rgb(214,222,9)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="559.50"></text></g><g><title>do_futex (11 samples, 0.03%)</title><rect x="31.1893%" y="533" width="0.0336%" height="15" fill="rgb(223,3,22)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="543.50"></text></g><g><title>futex_wait (11 samples, 0.03%)</title><rect x="31.1893%" y="517" width="0.0336%" height="15" fill="rgb(225,196,46)" fg:x="10217" fg:w="11"/><text x="31.4393%" y="527.50"></text></g><g><title>_int_realloc (8 samples, 0.02%)</title><rect x="31.2229%" y="597" width="0.0244%" height="15" fill="rgb(209,110,37)" fg:x="10228" fg:w="8"/><text x="31.4729%" y="607.50"></text></g><g><title>__GI___libc_realloc (57 samples, 0.17%)</title><rect x="31.0794%" y="613" width="0.1740%" height="15" fill="rgb(249,89,12)" fg:x="10181" fg:w="57"/><text x="31.3294%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (61 samples, 0.19%)</title><rect x="31.0764%" y="661" width="0.1862%" height="15" fill="rgb(226,27,33)" fg:x="10180" fg:w="61"/><text x="31.3264%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (61 samples, 0.19%)</title><rect x="31.0764%" y="645" width="0.1862%" height="15" fill="rgb(213,82,22)" fg:x="10180" fg:w="61"/><text x="31.3264%" y="655.50"></text></g><g><title>alloc::alloc::realloc (60 samples, 0.18%)</title><rect x="31.0794%" y="629" width="0.1832%" height="15" fill="rgb(248,140,0)" fg:x="10181" fg:w="60"/><text x="31.3294%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (72 samples, 0.22%)</title><rect x="31.0459%" y="677" width="0.2198%" height="15" fill="rgb(228,106,3)" fg:x="10170" fg:w="72"/><text x="31.2959%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.26%)</title><rect x="31.0184%" y="741" width="0.2564%" height="15" fill="rgb(209,23,37)" fg:x="10161" fg:w="84"/><text x="31.2684%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (84 samples, 0.26%)</title><rect x="31.0184%" y="725" width="0.2564%" height="15" fill="rgb(241,93,50)" fg:x="10161" fg:w="84"/><text x="31.2684%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (82 samples, 0.25%)</title><rect x="31.0245%" y="709" width="0.2503%" height="15" fill="rgb(253,46,43)" fg:x="10163" fg:w="82"/><text x="31.2745%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.24%)</title><rect x="31.0306%" y="693" width="0.2442%" height="15" fill="rgb(226,206,43)" fg:x="10165" fg:w="80"/><text x="31.2806%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::put_slice (89 samples, 0.27%)</title><rect x="31.0123%" y="805" width="0.2717%" height="15" fill="rgb(217,54,7)" fg:x="10159" fg:w="89"/><text x="31.2623%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (89 samples, 0.27%)</title><rect x="31.0123%" y="789" width="0.2717%" height="15" fill="rgb(223,5,52)" fg:x="10159" fg:w="89"/><text x="31.2623%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (89 samples, 0.27%)</title><rect x="31.0123%" y="773" width="0.2717%" height="15" fill="rgb(206,52,46)" fg:x="10159" fg:w="89"/><text x="31.2623%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (89 samples, 0.27%)</title><rect x="31.0123%" y="757" width="0.2717%" height="15" fill="rgb(253,136,11)" fg:x="10159" fg:w="89"/><text x="31.2623%" y="767.50"></text></g><g><title>scylla::frame::value::SerializedValues::add_value (418 samples, 1.28%)</title><rect x="30.0110%" y="853" width="1.2760%" height="15" fill="rgb(208,106,33)" fg:x="9831" fg:w="418"/><text x="30.2610%" y="863.50"></text></g><g><title>&lt;i64 as scylla::frame::value::Value&gt;::serialize (161 samples, 0.49%)</title><rect x="30.7955%" y="837" width="0.4915%" height="15" fill="rgb(206,54,4)" fg:x="10088" fg:w="161"/><text x="31.0455%" y="847.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_i64 (90 samples, 0.27%)</title><rect x="31.0123%" y="821" width="0.2747%" height="15" fill="rgb(213,3,15)" fg:x="10159" fg:w="90"/><text x="31.2623%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,486 samples, 4.54%)</title><rect x="26.7599%" y="885" width="4.5363%" height="15" fill="rgb(252,211,39)" fg:x="8766" fg:w="1486"/><text x="27.0099%" y="895.50">&lt;core..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (1,269 samples, 3.87%)</title><rect x="27.4223%" y="869" width="3.8739%" height="15" fill="rgb(223,6,36)" fg:x="8983" fg:w="1269"/><text x="27.6723%" y="879.50">&lt;lat..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,524 samples, 4.65%)</title><rect x="26.7507%" y="901" width="4.6523%" height="15" fill="rgb(252,169,45)" fg:x="8763" fg:w="1524"/><text x="27.0007%" y="911.50">&lt;core..</text></g><g><title>core::pin::Pin&lt;&amp;mut core::pin::Pin&lt;P&gt;&gt;::as_deref_mut (35 samples, 0.11%)</title><rect x="31.2962%" y="885" width="0.1068%" height="15" fill="rgb(212,48,26)" fg:x="10252" fg:w="35"/><text x="31.5462%" y="895.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (35 samples, 0.11%)</title><rect x="31.2962%" y="869" width="0.1068%" height="15" fill="rgb(251,102,48)" fg:x="10252" fg:w="35"/><text x="31.5462%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (35 samples, 0.11%)</title><rect x="31.2962%" y="853" width="0.1068%" height="15" fill="rgb(243,208,16)" fg:x="10252" fg:w="35"/><text x="31.5462%" y="863.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.02%)</title><rect x="31.4030%" y="901" width="0.0153%" height="15" fill="rgb(219,96,24)" fg:x="10287" fg:w="5"/><text x="31.6530%" y="911.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.02%)</title><rect x="31.4030%" y="885" width="0.0153%" height="15" fill="rgb(219,33,29)" fg:x="10287" fg:w="5"/><text x="31.6530%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.02%)</title><rect x="31.4030%" y="869" width="0.0153%" height="15" fill="rgb(223,176,5)" fg:x="10287" fg:w="5"/><text x="31.6530%" y="879.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="31.4061%" y="853" width="0.0122%" height="15" fill="rgb(228,140,14)" fg:x="10288" fg:w="4"/><text x="31.6561%" y="863.50"></text></g><g><title>__entry_text_start (4 samples, 0.01%)</title><rect x="32.3097%" y="773" width="0.0122%" height="15" fill="rgb(217,179,31)" fg:x="10584" fg:w="4"/><text x="32.5597%" y="783.50"></text></g><g><title>amd_pmu_disable_all (6 samples, 0.02%)</title><rect x="32.4196%" y="629" width="0.0183%" height="15" fill="rgb(230,9,30)" fg:x="10620" fg:w="6"/><text x="32.6696%" y="639.50"></text></g><g><title>x86_pmu_disable_all (5 samples, 0.02%)</title><rect x="32.4226%" y="613" width="0.0153%" height="15" fill="rgb(230,136,20)" fg:x="10621" fg:w="5"/><text x="32.6726%" y="623.50"></text></g><g><title>__perf_event_task_sched_out (7 samples, 0.02%)</title><rect x="32.4196%" y="645" width="0.0214%" height="15" fill="rgb(215,210,22)" fg:x="10620" fg:w="7"/><text x="32.6696%" y="655.50"></text></g><g><title>update_curr (5 samples, 0.02%)</title><rect x="32.4531%" y="613" width="0.0153%" height="15" fill="rgb(218,43,5)" fg:x="10631" fg:w="5"/><text x="32.7031%" y="623.50"></text></g><g><title>dequeue_entity (12 samples, 0.04%)</title><rect x="32.4440%" y="629" width="0.0366%" height="15" fill="rgb(216,11,5)" fg:x="10628" fg:w="12"/><text x="32.6940%" y="639.50"></text></g><g><title>update_load_avg (4 samples, 0.01%)</title><rect x="32.4684%" y="613" width="0.0122%" height="15" fill="rgb(209,82,29)" fg:x="10636" fg:w="4"/><text x="32.7184%" y="623.50"></text></g><g><title>dequeue_task_fair (14 samples, 0.04%)</title><rect x="32.4409%" y="645" width="0.0427%" height="15" fill="rgb(244,115,12)" fg:x="10627" fg:w="14"/><text x="32.6909%" y="655.50"></text></g><g><title>pick_next_task_fair (4 samples, 0.01%)</title><rect x="32.4837%" y="645" width="0.0122%" height="15" fill="rgb(222,82,18)" fg:x="10641" fg:w="4"/><text x="32.7337%" y="655.50"></text></g><g><title>psi_task_switch (11 samples, 0.03%)</title><rect x="32.5020%" y="645" width="0.0336%" height="15" fill="rgb(249,227,8)" fg:x="10647" fg:w="11"/><text x="32.7520%" y="655.50"></text></g><g><title>psi_group_change (7 samples, 0.02%)</title><rect x="32.5142%" y="629" width="0.0214%" height="15" fill="rgb(253,141,45)" fg:x="10651" fg:w="7"/><text x="32.7642%" y="639.50"></text></g><g><title>futex_wait_queue_me (70 samples, 0.21%)</title><rect x="32.3310%" y="693" width="0.2137%" height="15" fill="rgb(234,184,4)" fg:x="10591" fg:w="70"/><text x="32.5810%" y="703.50"></text></g><g><title>schedule (55 samples, 0.17%)</title><rect x="32.3768%" y="677" width="0.1679%" height="15" fill="rgb(218,194,23)" fg:x="10606" fg:w="55"/><text x="32.6268%" y="687.50"></text></g><g><title>__schedule (53 samples, 0.16%)</title><rect x="32.3829%" y="661" width="0.1618%" height="15" fill="rgb(235,66,41)" fg:x="10608" fg:w="53"/><text x="32.6329%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (77 samples, 0.24%)</title><rect x="32.3219%" y="773" width="0.2351%" height="15" fill="rgb(245,217,1)" fg:x="10588" fg:w="77"/><text x="32.5719%" y="783.50"></text></g><g><title>do_syscall_64 (77 samples, 0.24%)</title><rect x="32.3219%" y="757" width="0.2351%" height="15" fill="rgb(229,91,1)" fg:x="10588" fg:w="77"/><text x="32.5719%" y="767.50"></text></g><g><title>__x64_sys_futex (77 samples, 0.24%)</title><rect x="32.3219%" y="741" width="0.2351%" height="15" fill="rgb(207,101,30)" fg:x="10588" fg:w="77"/><text x="32.5719%" y="751.50"></text></g><g><title>do_futex (77 samples, 0.24%)</title><rect x="32.3219%" y="725" width="0.2351%" height="15" fill="rgb(223,82,49)" fg:x="10588" fg:w="77"/><text x="32.5719%" y="735.50"></text></g><g><title>futex_wait (77 samples, 0.24%)</title><rect x="32.3219%" y="709" width="0.2351%" height="15" fill="rgb(218,167,17)" fg:x="10588" fg:w="77"/><text x="32.5719%" y="719.50"></text></g><g><title>futex_wait_setup (4 samples, 0.01%)</title><rect x="32.5447%" y="693" width="0.0122%" height="15" fill="rgb(208,103,14)" fg:x="10661" fg:w="4"/><text x="32.7947%" y="703.50"></text></g><g><title>__lll_lock_wait_private (85 samples, 0.26%)</title><rect x="32.3005%" y="789" width="0.2595%" height="15" fill="rgb(238,20,8)" fg:x="10581" fg:w="85"/><text x="32.5505%" y="799.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.03%)</title><rect x="32.5630%" y="757" width="0.0336%" height="15" fill="rgb(218,80,54)" fg:x="10667" fg:w="11"/><text x="32.8130%" y="767.50"></text></g><g><title>do_futex (11 samples, 0.03%)</title><rect x="32.5630%" y="741" width="0.0336%" height="15" fill="rgb(240,144,17)" fg:x="10667" fg:w="11"/><text x="32.8130%" y="751.50"></text></g><g><title>futex_wake (10 samples, 0.03%)</title><rect x="32.5661%" y="725" width="0.0305%" height="15" fill="rgb(245,27,50)" fg:x="10668" fg:w="10"/><text x="32.8161%" y="735.50"></text></g><g><title>wake_up_q (4 samples, 0.01%)</title><rect x="32.5844%" y="709" width="0.0122%" height="15" fill="rgb(251,51,7)" fg:x="10674" fg:w="4"/><text x="32.8344%" y="719.50"></text></g><g><title>try_to_wake_up (4 samples, 0.01%)</title><rect x="32.5844%" y="693" width="0.0122%" height="15" fill="rgb(245,217,29)" fg:x="10674" fg:w="4"/><text x="32.8344%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.04%)</title><rect x="32.5630%" y="789" width="0.0366%" height="15" fill="rgb(221,176,29)" fg:x="10667" fg:w="12"/><text x="32.8130%" y="799.50"></text></g><g><title>do_syscall_64 (12 samples, 0.04%)</title><rect x="32.5630%" y="773" width="0.0366%" height="15" fill="rgb(212,180,24)" fg:x="10667" fg:w="12"/><text x="32.8130%" y="783.50"></text></g><g><title>malloc_consolidate (35 samples, 0.11%)</title><rect x="32.5997%" y="789" width="0.1068%" height="15" fill="rgb(254,24,2)" fg:x="10679" fg:w="35"/><text x="32.8497%" y="799.50"></text></g><g><title>unlink_chunk.constprop.0 (6 samples, 0.02%)</title><rect x="32.6882%" y="773" width="0.0183%" height="15" fill="rgb(230,100,2)" fg:x="10708" fg:w="6"/><text x="32.9382%" y="783.50"></text></g><g><title>__GI___libc_free (454 samples, 1.39%)</title><rect x="31.4244%" y="821" width="1.3859%" height="15" fill="rgb(219,142,25)" fg:x="10294" fg:w="454"/><text x="31.6744%" y="831.50"></text></g><g><title>_int_free (362 samples, 1.11%)</title><rect x="31.7052%" y="805" width="1.1051%" height="15" fill="rgb(240,73,43)" fg:x="10386" fg:w="362"/><text x="31.9552%" y="815.50"></text></g><g><title>unlink_chunk.constprop.0 (34 samples, 0.10%)</title><rect x="32.7065%" y="789" width="0.1038%" height="15" fill="rgb(214,114,15)" fg:x="10714" fg:w="34"/><text x="32.9565%" y="799.50"></text></g><g><title>alloc::alloc::box_free (458 samples, 1.40%)</title><rect x="31.4183%" y="869" width="1.3981%" height="15" fill="rgb(207,130,4)" fg:x="10292" fg:w="458"/><text x="31.6683%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (458 samples, 1.40%)</title><rect x="31.4183%" y="853" width="1.3981%" height="15" fill="rgb(221,25,40)" fg:x="10292" fg:w="458"/><text x="31.6683%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (458 samples, 1.40%)</title><rect x="31.4183%" y="837" width="1.3981%" height="15" fill="rgb(241,184,7)" fg:x="10292" fg:w="458"/><text x="31.6683%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;&gt; (469 samples, 1.43%)</title><rect x="31.4183%" y="901" width="1.4317%" height="15" fill="rgb(235,159,4)" fg:x="10292" fg:w="469"/><text x="31.6683%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt; (469 samples, 1.43%)</title><rect x="31.4183%" y="885" width="1.4317%" height="15" fill="rgb(214,87,48)" fg:x="10292" fg:w="469"/><text x="31.6683%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;latte::workload::write::Write&lt;alloc::boxed::Box&lt;scylla::transport::session::Session&gt;&gt; as latte::workload::Workload&gt;::run::{{closure}}&gt;&gt; (11 samples, 0.03%)</title><rect x="32.8164%" y="869" width="0.0336%" height="15" fill="rgb(246,198,24)" fg:x="10750" fg:w="11"/><text x="33.0664%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.05%)</title><rect x="32.8500%" y="901" width="0.0519%" height="15" fill="rgb(209,66,40)" fg:x="10761" fg:w="17"/><text x="33.1000%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.05%)</title><rect x="32.8500%" y="885" width="0.0519%" height="15" fill="rgb(233,147,39)" fg:x="10761" fg:w="17"/><text x="33.1000%" y="895.50"></text></g><g><title>latte::progress::FastProgressBar::tick (37 samples, 0.11%)</title><rect x="32.9049%" y="885" width="0.1129%" height="15" fill="rgb(231,145,52)" fg:x="10779" fg:w="37"/><text x="33.1549%" y="895.50"></text></g><g><title>&lt;atomic_counter::RelaxedCounter as atomic_counter::AtomicCounter&gt;::inc (37 samples, 0.11%)</title><rect x="32.9049%" y="869" width="0.1129%" height="15" fill="rgb(206,20,26)" fg:x="10779" fg:w="37"/><text x="33.1549%" y="879.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.02%)</title><rect x="33.2102%" y="693" width="0.0183%" height="15" fill="rgb(238,220,4)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="33.2102%" y="677" width="0.0183%" height="15" fill="rgb(252,195,42)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="687.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="33.2102%" y="661" width="0.0183%" height="15" fill="rgb(209,10,6)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="671.50"></text></g><g><title>__x64_sys_futex (6 samples, 0.02%)</title><rect x="33.2102%" y="645" width="0.0183%" height="15" fill="rgb(229,3,52)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="655.50"></text></g><g><title>do_futex (6 samples, 0.02%)</title><rect x="33.2102%" y="629" width="0.0183%" height="15" fill="rgb(253,49,37)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="639.50"></text></g><g><title>futex_wait (6 samples, 0.02%)</title><rect x="33.2102%" y="613" width="0.0183%" height="15" fill="rgb(240,103,49)" fg:x="10879" fg:w="6"/><text x="33.4602%" y="623.50"></text></g><g><title>_int_free (142 samples, 0.43%)</title><rect x="33.4972%" y="677" width="0.4335%" height="15" fill="rgb(250,182,30)" fg:x="10973" fg:w="142"/><text x="33.7472%" y="687.50"></text></g><g><title>malloc_consolidate (702 samples, 2.14%)</title><rect x="34.9594%" y="661" width="2.1430%" height="15" fill="rgb(248,8,30)" fg:x="11452" fg:w="702"/><text x="35.2094%" y="671.50">m..</text></g><g><title>unlink_chunk.constprop.0 (148 samples, 0.45%)</title><rect x="36.6506%" y="645" width="0.4518%" height="15" fill="rgb(237,120,30)" fg:x="12006" fg:w="148"/><text x="36.9006%" y="655.50"></text></g><g><title>__GI___mprotect (5 samples, 0.02%)</title><rect x="37.1024%" y="645" width="0.0153%" height="15" fill="rgb(221,146,34)" fg:x="12154" fg:w="5"/><text x="37.3524%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="37.1054%" y="629" width="0.0122%" height="15" fill="rgb(242,55,13)" fg:x="12155" fg:w="4"/><text x="37.3554%" y="639.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="37.1054%" y="613" width="0.0122%" height="15" fill="rgb(242,112,31)" fg:x="12155" fg:w="4"/><text x="37.3554%" y="623.50"></text></g><g><title>sysmalloc (9 samples, 0.03%)</title><rect x="37.1024%" y="661" width="0.0275%" height="15" fill="rgb(249,192,27)" fg:x="12154" fg:w="9"/><text x="37.3524%" y="671.50"></text></g><g><title>asm_exc_page_fault (4 samples, 0.01%)</title><rect x="37.1177%" y="645" width="0.0122%" height="15" fill="rgb(208,204,44)" fg:x="12159" fg:w="4"/><text x="37.3677%" y="655.50"></text></g><g><title>exc_page_fault (4 samples, 0.01%)</title><rect x="37.1177%" y="629" width="0.0122%" height="15" fill="rgb(208,93,54)" fg:x="12159" fg:w="4"/><text x="37.3677%" y="639.50"></text></g><g><title>do_user_addr_fault (4 samples, 0.01%)</title><rect x="37.1177%" y="613" width="0.0122%" height="15" fill="rgb(242,1,31)" fg:x="12159" fg:w="4"/><text x="37.3677%" y="623.50"></text></g><g><title>handle_mm_fault (4 samples, 0.01%)</title><rect x="37.1177%" y="597" width="0.0122%" height="15" fill="rgb(241,83,25)" fg:x="12159" fg:w="4"/><text x="37.3677%" y="607.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.01%)</title><rect x="37.1177%" y="581" width="0.0122%" height="15" fill="rgb(205,169,50)" fg:x="12159" fg:w="4"/><text x="37.3677%" y="591.50"></text></g><g><title>_int_malloc (1,082 samples, 3.30%)</title><rect x="33.9306%" y="677" width="3.3030%" height="15" fill="rgb(239,186,37)" fg:x="11115" fg:w="1082"/><text x="34.1806%" y="687.50">_in..</text></g><g><title>unlink_chunk.constprop.0 (34 samples, 0.10%)</title><rect x="37.1299%" y="661" width="0.1038%" height="15" fill="rgb(205,221,10)" fg:x="12163" fg:w="34"/><text x="37.3799%" y="671.50"></text></g><g><title>_int_memalign (1,313 samples, 4.01%)</title><rect x="33.2285%" y="693" width="4.0082%" height="15" fill="rgb(218,196,15)" fg:x="10885" fg:w="1313"/><text x="33.4785%" y="703.50">_int..</text></g><g><title>__x64_sys_futex (25 samples, 0.08%)</title><rect x="37.2428%" y="661" width="0.0763%" height="15" fill="rgb(218,196,35)" fg:x="12200" fg:w="25"/><text x="37.4928%" y="671.50"></text></g><g><title>do_futex (24 samples, 0.07%)</title><rect x="37.2459%" y="645" width="0.0733%" height="15" fill="rgb(233,63,24)" fg:x="12201" fg:w="24"/><text x="37.4959%" y="655.50"></text></g><g><title>futex_wake (24 samples, 0.07%)</title><rect x="37.2459%" y="629" width="0.0733%" height="15" fill="rgb(225,8,4)" fg:x="12201" fg:w="24"/><text x="37.4959%" y="639.50"></text></g><g><title>wake_up_q (18 samples, 0.05%)</title><rect x="37.2642%" y="613" width="0.0549%" height="15" fill="rgb(234,105,35)" fg:x="12207" fg:w="18"/><text x="37.5142%" y="623.50"></text></g><g><title>try_to_wake_up (15 samples, 0.05%)</title><rect x="37.2733%" y="597" width="0.0458%" height="15" fill="rgb(236,21,32)" fg:x="12210" fg:w="15"/><text x="37.5233%" y="607.50"></text></g><g><title>ttwu_queue_wakelist (6 samples, 0.02%)</title><rect x="37.3008%" y="581" width="0.0183%" height="15" fill="rgb(228,109,6)" fg:x="12219" fg:w="6"/><text x="37.5508%" y="591.50"></text></g><g><title>latte::par_execute::{{closure}}::{{closure}} (1,448 samples, 4.42%)</title><rect x="32.9019%" y="901" width="4.4203%" height="15" fill="rgb(229,215,31)" fg:x="10778" fg:w="1448"/><text x="33.1519%" y="911.50">latte..</text></g><g><title>latte::run::{{closure}}::{{closure}} (1,410 samples, 4.30%)</title><rect x="33.0179%" y="885" width="4.3043%" height="15" fill="rgb(221,52,54)" fg:x="10816" fg:w="1410"/><text x="33.2679%" y="895.50">latte..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run (1,410 samples, 4.30%)</title><rect x="33.0179%" y="869" width="4.3043%" height="15" fill="rgb(252,129,43)" fg:x="10816" fg:w="1410"/><text x="33.2679%" y="879.50">&lt;latt..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,398 samples, 4.27%)</title><rect x="33.0545%" y="853" width="4.2677%" height="15" fill="rgb(248,183,27)" fg:x="10828" fg:w="1398"/><text x="33.3045%" y="863.50">alloc..</text></g><g><title>alloc::alloc::exchange_malloc (1,397 samples, 4.26%)</title><rect x="33.0576%" y="837" width="4.2646%" height="15" fill="rgb(250,0,22)" fg:x="10829" fg:w="1397"/><text x="33.3076%" y="847.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,397 samples, 4.26%)</title><rect x="33.0576%" y="821" width="4.2646%" height="15" fill="rgb(213,166,10)" fg:x="10829" fg:w="1397"/><text x="33.3076%" y="831.50">&lt;allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (1,397 samples, 4.26%)</title><rect x="33.0576%" y="805" width="4.2646%" height="15" fill="rgb(207,163,36)" fg:x="10829" fg:w="1397"/><text x="33.3076%" y="815.50">alloc..</text></g><g><title>alloc::alloc::alloc (1,395 samples, 4.26%)</title><rect x="33.0637%" y="789" width="4.2585%" height="15" fill="rgb(208,122,22)" fg:x="10831" fg:w="1395"/><text x="33.3137%" y="799.50">alloc..</text></g><g><title>__rdl_alloc (1,395 samples, 4.26%)</title><rect x="33.0637%" y="773" width="4.2585%" height="15" fill="rgb(207,104,49)" fg:x="10831" fg:w="1395"/><text x="33.3137%" y="783.50">__rdl..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,395 samples, 4.26%)</title><rect x="33.0637%" y="757" width="4.2585%" height="15" fill="rgb(248,211,50)" fg:x="10831" fg:w="1395"/><text x="33.3137%" y="767.50">std::..</text></g><g><title>std::sys::unix::alloc::aligned_malloc (1,395 samples, 4.26%)</title><rect x="33.0637%" y="741" width="4.2585%" height="15" fill="rgb(217,13,45)" fg:x="10831" fg:w="1395"/><text x="33.3137%" y="751.50">std::..</text></g><g><title>__posix_memalign (1,392 samples, 4.25%)</title><rect x="33.0728%" y="725" width="4.2493%" height="15" fill="rgb(211,216,49)" fg:x="10834" fg:w="1392"/><text x="33.3228%" y="735.50">__pos..</text></g><g><title>_mid_memalign (1,384 samples, 4.22%)</title><rect x="33.0973%" y="709" width="4.2249%" height="15" fill="rgb(221,58,53)" fg:x="10842" fg:w="1384"/><text x="33.3473%" y="719.50">_mid_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.08%)</title><rect x="37.2398%" y="693" width="0.0824%" height="15" fill="rgb(220,112,41)" fg:x="12199" fg:w="27"/><text x="37.4898%" y="703.50"></text></g><g><title>do_syscall_64 (26 samples, 0.08%)</title><rect x="37.2428%" y="677" width="0.0794%" height="15" fill="rgb(236,38,28)" fg:x="12200" fg:w="26"/><text x="37.4928%" y="687.50"></text></g><g><title>__clock_gettime_2 (89 samples, 0.27%)</title><rect x="37.4870%" y="853" width="0.2717%" height="15" fill="rgb(227,195,22)" fg:x="12280" fg:w="89"/><text x="37.7370%" y="863.50"></text></g><g><title>__vdso_clock_gettime (81 samples, 0.25%)</title><rect x="37.5114%" y="837" width="0.2473%" height="15" fill="rgb(214,55,33)" fg:x="12288" fg:w="81"/><text x="37.7614%" y="847.50"></text></g><g><title>[[vdso]] (58 samples, 0.18%)</title><rect x="37.5817%" y="821" width="0.1771%" height="15" fill="rgb(248,80,13)" fg:x="12311" fg:w="58"/><text x="37.8317%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,712 samples, 11.33%)</title><rect x="26.4332%" y="933" width="11.3316%" height="15" fill="rgb(238,52,6)" fg:x="8659" fg:w="3712"/><text x="26.6832%" y="943.50">&lt;core::future::fr..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (3,672 samples, 11.21%)</title><rect x="26.5553%" y="917" width="11.2095%" height="15" fill="rgb(224,198,47)" fg:x="8699" fg:w="3672"/><text x="26.8053%" y="927.50">latte::req_strea..</text></g><g><title>std::time::Instant::now (144 samples, 0.44%)</title><rect x="37.3252%" y="901" width="0.4396%" height="15" fill="rgb(233,171,20)" fg:x="12227" fg:w="144"/><text x="37.5752%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (139 samples, 0.42%)</title><rect x="37.3405%" y="885" width="0.4243%" height="15" fill="rgb(241,30,25)" fg:x="12232" fg:w="139"/><text x="37.5905%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::now (139 samples, 0.42%)</title><rect x="37.3405%" y="869" width="0.4243%" height="15" fill="rgb(207,171,38)" fg:x="12232" fg:w="139"/><text x="37.5905%" y="879.50"></text></g><g><title>&lt;futures_task::waker_ref::WakerRef as core::ops::deref::Deref&gt;::deref (12 samples, 0.04%)</title><rect x="37.7648%" y="933" width="0.0366%" height="15" fill="rgb(234,70,1)" fg:x="12371" fg:w="12"/><text x="38.0148%" y="943.50"></text></g><g><title>core::ptr::read (8 samples, 0.02%)</title><rect x="37.8381%" y="853" width="0.0244%" height="15" fill="rgb(232,178,18)" fg:x="12395" fg:w="8"/><text x="38.0881%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.03%)</title><rect x="37.8381%" y="901" width="0.0275%" height="15" fill="rgb(241,78,40)" fg:x="12395" fg:w="9"/><text x="38.0881%" y="911.50"></text></g><g><title>core::mem::take (9 samples, 0.03%)</title><rect x="37.8381%" y="885" width="0.0275%" height="15" fill="rgb(222,35,25)" fg:x="12395" fg:w="9"/><text x="38.0881%" y="895.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="37.8381%" y="869" width="0.0275%" height="15" fill="rgb(207,92,16)" fg:x="12395" fg:w="9"/><text x="38.0881%" y="879.50"></text></g><g><title>__GI___libc_free (40 samples, 0.12%)</title><rect x="37.8869%" y="853" width="0.1221%" height="15" fill="rgb(216,59,51)" fg:x="12411" fg:w="40"/><text x="38.1369%" y="863.50"></text></g><g><title>_int_free (8 samples, 0.02%)</title><rect x="37.9846%" y="837" width="0.0244%" height="15" fill="rgb(213,80,28)" fg:x="12443" fg:w="8"/><text x="38.2346%" y="847.50"></text></g><g><title>core::mem::drop (9 samples, 0.03%)</title><rect x="38.0090%" y="837" width="0.0275%" height="15" fill="rgb(220,93,7)" fg:x="12451" fg:w="9"/><text x="38.2590%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="38.0090%" y="821" width="0.0275%" height="15" fill="rgb(225,24,44)" fg:x="12451" fg:w="9"/><text x="38.2590%" y="831.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="38.0090%" y="805" width="0.0275%" height="15" fill="rgb(243,74,40)" fg:x="12451" fg:w="9"/><text x="38.2590%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (90 samples, 0.27%)</title><rect x="37.8656%" y="885" width="0.2747%" height="15" fill="rgb(228,39,7)" fg:x="12404" fg:w="90"/><text x="38.1156%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.27%)</title><rect x="37.8656%" y="869" width="0.2747%" height="15" fill="rgb(227,79,8)" fg:x="12404" fg:w="90"/><text x="38.1156%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.13%)</title><rect x="38.0090%" y="853" width="0.1313%" height="15" fill="rgb(236,58,11)" fg:x="12451" fg:w="43"/><text x="38.2590%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (34 samples, 0.10%)</title><rect x="38.0365%" y="837" width="0.1038%" height="15" fill="rgb(249,63,35)" fg:x="12460" fg:w="34"/><text x="38.2865%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (33 samples, 0.10%)</title><rect x="38.0396%" y="821" width="0.1007%" height="15" fill="rgb(252,114,16)" fg:x="12461" fg:w="33"/><text x="38.2896%" y="831.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.10%)</title><rect x="38.0396%" y="805" width="0.1007%" height="15" fill="rgb(254,151,24)" fg:x="12461" fg:w="33"/><text x="38.2896%" y="815.50"></text></g><g><title>&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.31%)</title><rect x="37.8289%" y="917" width="0.3144%" height="15" fill="rgb(253,54,39)" fg:x="12392" fg:w="103"/><text x="38.0789%" y="927.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (91 samples, 0.28%)</title><rect x="37.8656%" y="901" width="0.2778%" height="15" fill="rgb(243,25,45)" fg:x="12404" fg:w="91"/><text x="38.1156%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt; (115 samples, 0.35%)</title><rect x="37.8106%" y="933" width="0.3511%" height="15" fill="rgb(234,134,9)" fg:x="12386" fg:w="115"/><text x="38.0606%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="38.1495%" y="917" width="0.0122%" height="15" fill="rgb(227,166,31)" fg:x="12497" fg:w="4"/><text x="38.3995%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (46 samples, 0.14%)</title><rect x="38.1617%" y="933" width="0.1404%" height="15" fill="rgb(245,143,41)" fg:x="12501" fg:w="46"/><text x="38.4117%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (37 samples, 0.11%)</title><rect x="38.3937%" y="917" width="0.1129%" height="15" fill="rgb(238,181,32)" fg:x="12577" fg:w="37"/><text x="38.6437%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (34 samples, 0.10%)</title><rect x="38.4028%" y="901" width="0.1038%" height="15" fill="rgb(224,113,18)" fg:x="12580" fg:w="34"/><text x="38.6528%" y="911.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (33 samples, 0.10%)</title><rect x="38.4059%" y="885" width="0.1007%" height="15" fill="rgb(240,229,28)" fg:x="12581" fg:w="33"/><text x="38.6559%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (10 samples, 0.03%)</title><rect x="38.5066%" y="869" width="0.0305%" height="15" fill="rgb(250,185,3)" fg:x="12614" fg:w="10"/><text x="38.7566%" y="879.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (5 samples, 0.02%)</title><rect x="38.5219%" y="853" width="0.0153%" height="15" fill="rgb(212,59,25)" fg:x="12619" fg:w="5"/><text x="38.7719%" y="863.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (78 samples, 0.24%)</title><rect x="38.3051%" y="933" width="0.2381%" height="15" fill="rgb(221,87,20)" fg:x="12548" fg:w="78"/><text x="38.5551%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (12 samples, 0.04%)</title><rect x="38.5066%" y="917" width="0.0366%" height="15" fill="rgb(213,74,28)" fg:x="12614" fg:w="12"/><text x="38.7566%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (12 samples, 0.04%)</title><rect x="38.5066%" y="901" width="0.0366%" height="15" fill="rgb(224,132,34)" fg:x="12614" fg:w="12"/><text x="38.7566%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="38.5066%" y="885" width="0.0366%" height="15" fill="rgb(222,101,24)" fg:x="12614" fg:w="12"/><text x="38.7566%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (17 samples, 0.05%)</title><rect x="38.5677%" y="917" width="0.0519%" height="15" fill="rgb(254,142,4)" fg:x="12634" fg:w="17"/><text x="38.8177%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.05%)</title><rect x="38.5677%" y="901" width="0.0519%" height="15" fill="rgb(230,229,49)" fg:x="12634" fg:w="17"/><text x="38.8177%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (43 samples, 0.13%)</title><rect x="38.6226%" y="917" width="0.1313%" height="15" fill="rgb(238,70,47)" fg:x="12652" fg:w="43"/><text x="38.8726%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.13%)</title><rect x="38.6257%" y="901" width="0.1282%" height="15" fill="rgb(231,160,17)" fg:x="12653" fg:w="42"/><text x="38.8757%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (77 samples, 0.24%)</title><rect x="38.5494%" y="933" width="0.2351%" height="15" fill="rgb(218,68,53)" fg:x="12628" fg:w="77"/><text x="38.7994%" y="943.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::spin_next_all (10 samples, 0.03%)</title><rect x="38.7539%" y="917" width="0.0305%" height="15" fill="rgb(236,111,10)" fg:x="12695" fg:w="10"/><text x="39.0039%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (10 samples, 0.03%)</title><rect x="38.8302%" y="917" width="0.0305%" height="15" fill="rgb(224,34,41)" fg:x="12720" fg:w="10"/><text x="39.0802%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.03%)</title><rect x="38.8302%" y="901" width="0.0305%" height="15" fill="rgb(241,118,19)" fg:x="12720" fg:w="10"/><text x="39.0802%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::unlink (31 samples, 0.09%)</title><rect x="38.7844%" y="933" width="0.0946%" height="15" fill="rgb(238,129,25)" fg:x="12705" fg:w="31"/><text x="39.0344%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.05%)</title><rect x="39.3095%" y="917" width="0.0488%" height="15" fill="rgb(238,22,31)" fg:x="12877" fg:w="16"/><text x="39.5595%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (16 samples, 0.05%)</title><rect x="39.3095%" y="901" width="0.0488%" height="15" fill="rgb(222,174,48)" fg:x="12877" fg:w="16"/><text x="39.5595%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.02%)</title><rect x="39.3583%" y="917" width="0.0183%" height="15" fill="rgb(206,152,40)" fg:x="12893" fg:w="6"/><text x="39.6083%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="39.3583%" y="901" width="0.0183%" height="15" fill="rgb(218,99,54)" fg:x="12893" fg:w="6"/><text x="39.6083%" y="911.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (167 samples, 0.51%)</title><rect x="38.8791%" y="933" width="0.5098%" height="15" fill="rgb(220,174,26)" fg:x="12736" fg:w="167"/><text x="39.1291%" y="943.50"></text></g><g><title>futures_util::stream::futures_unordered::task::Task&lt;Fut&gt;::waker_ref (16 samples, 0.05%)</title><rect x="39.3889%" y="933" width="0.0488%" height="15" fill="rgb(245,116,9)" fg:x="12903" fg:w="16"/><text x="39.6389%" y="943.50"></text></g><g><title>futures_task::waker_ref::waker_ref (16 samples, 0.05%)</title><rect x="39.3889%" y="917" width="0.0488%" height="15" fill="rgb(209,72,35)" fg:x="12903" fg:w="16"/><text x="39.6389%" y="927.50"></text></g><g><title>futures_task::waker_ref::WakerRef::new_unowned (15 samples, 0.05%)</title><rect x="39.3919%" y="901" width="0.0458%" height="15" fill="rgb(226,126,21)" fg:x="12904" fg:w="15"/><text x="39.6419%" y="911.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (4,883 samples, 14.91%)</title><rect x="24.6932%" y="981" width="14.9063%" height="15" fill="rgb(227,192,1)" fg:x="8089" fg:w="4883"/><text x="24.9432%" y="991.50">&lt;futures_util::stream::..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (4,392 samples, 13.41%)</title><rect x="26.1921%" y="965" width="13.4074%" height="15" fill="rgb(237,180,29)" fg:x="8580" fg:w="4392"/><text x="26.4421%" y="975.50">futures_util::stream..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (4,382 samples, 13.38%)</title><rect x="26.2226%" y="949" width="13.3769%" height="15" fill="rgb(230,197,35)" fg:x="8590" fg:w="4382"/><text x="26.4726%" y="959.50">&lt;futures_util::strea..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (53 samples, 0.16%)</title><rect x="39.4377%" y="933" width="0.1618%" height="15" fill="rgb(246,193,31)" fg:x="12919" fg:w="53"/><text x="39.6877%" y="943.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (4,893 samples, 14.94%)</title><rect x="24.6657%" y="1013" width="14.9368%" height="15" fill="rgb(241,36,4)" fg:x="8080" fg:w="4893"/><text x="24.9157%" y="1023.50">&lt;futures_util::stream::..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (4,893 samples, 14.94%)</title><rect x="24.6657%" y="997" width="14.9368%" height="15" fill="rgb(241,130,17)" fg:x="8080" fg:w="4893"/><text x="24.9157%" y="1007.50">futures_util::stream::s..</text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (17 samples, 0.05%)</title><rect x="39.6025%" y="1013" width="0.0519%" height="15" fill="rgb(206,137,32)" fg:x="12973" fg:w="17"/><text x="39.8525%" y="1023.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.03%)</title><rect x="39.6270%" y="997" width="0.0275%" height="15" fill="rgb(237,228,51)" fg:x="12981" fg:w="9"/><text x="39.8770%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (9 samples, 0.03%)</title><rect x="39.6270%" y="981" width="0.0275%" height="15" fill="rgb(243,6,42)" fg:x="12981" fg:w="9"/><text x="39.8770%" y="991.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (7 samples, 0.02%)</title><rect x="39.6331%" y="965" width="0.0214%" height="15" fill="rgb(251,74,28)" fg:x="12983" fg:w="7"/><text x="39.8831%" y="975.50"></text></g><g><title>core::cmp::PartialOrd::gt (7 samples, 0.02%)</title><rect x="39.6544%" y="1013" width="0.0214%" height="15" fill="rgb(218,20,49)" fg:x="12990" fg:w="7"/><text x="39.9044%" y="1023.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.02%)</title><rect x="39.6605%" y="997" width="0.0153%" height="15" fill="rgb(238,28,14)" fg:x="12992" fg:w="5"/><text x="39.9105%" y="1007.50"></text></g><g><title>&lt;u64 as num_traits::ops::saturating::Saturating&gt;::saturating_add (35 samples, 0.11%)</title><rect x="39.7430%" y="949" width="0.1068%" height="15" fill="rgb(229,40,46)" fg:x="13019" fg:w="35"/><text x="39.9930%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (35 samples, 0.11%)</title><rect x="39.7430%" y="933" width="0.1068%" height="15" fill="rgb(244,195,20)" fg:x="13019" fg:w="35"/><text x="39.9930%" y="943.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::index_for (4 samples, 0.01%)</title><rect x="39.8498%" y="933" width="0.0122%" height="15" fill="rgb(253,56,35)" fg:x="13054" fg:w="4"/><text x="40.0998%" y="943.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::mut_at (5 samples, 0.02%)</title><rect x="39.8498%" y="949" width="0.0153%" height="15" fill="rgb(210,149,44)" fg:x="13054" fg:w="5"/><text x="40.0998%" y="959.50"></text></g><g><title>latte::stats::Sample::record (66 samples, 0.20%)</title><rect x="39.6758%" y="1013" width="0.2015%" height="15" fill="rgb(240,135,12)" fg:x="12997" fg:w="66"/><text x="39.9258%" y="1023.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record (50 samples, 0.15%)</title><rect x="39.7246%" y="997" width="0.1526%" height="15" fill="rgb(251,24,50)" fg:x="13013" fg:w="50"/><text x="39.9746%" y="1007.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n (49 samples, 0.15%)</title><rect x="39.7277%" y="981" width="0.1496%" height="15" fill="rgb(243,200,47)" fg:x="13014" fg:w="49"/><text x="39.9777%" y="991.50"></text></g><g><title>hdrhistogram::Histogram&lt;T&gt;::record_n_inner (44 samples, 0.13%)</title><rect x="39.7430%" y="965" width="0.1343%" height="15" fill="rgb(224,166,26)" fg:x="13019" fg:w="44"/><text x="39.9930%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,054 samples, 15.43%)</title><rect x="24.5833%" y="1045" width="15.4283%" height="15" fill="rgb(233,0,47)" fg:x="8053" fg:w="5054"/><text x="24.8333%" y="1055.50">&lt;core::future::from_gene..</text></g><g><title>latte::req_stream::{{closure}} (5,050 samples, 15.42%)</title><rect x="24.5955%" y="1029" width="15.4161%" height="15" fill="rgb(253,80,5)" fg:x="8057" fg:w="5050"/><text x="24.8455%" y="1039.50">latte::req_stream::{{clo..</text></g><g><title>std::time::Instant::now (44 samples, 0.13%)</title><rect x="39.8773%" y="1013" width="0.1343%" height="15" fill="rgb(214,133,25)" fg:x="13063" fg:w="44"/><text x="40.1273%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (40 samples, 0.12%)</title><rect x="39.8895%" y="997" width="0.1221%" height="15" fill="rgb(209,27,14)" fg:x="13067" fg:w="40"/><text x="40.1395%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::now (40 samples, 0.12%)</title><rect x="39.8895%" y="981" width="0.1221%" height="15" fill="rgb(219,102,51)" fg:x="13067" fg:w="40"/><text x="40.1395%" y="991.50"></text></g><g><title>__clock_gettime_2 (39 samples, 0.12%)</title><rect x="39.8925%" y="965" width="0.1191%" height="15" fill="rgb(237,18,16)" fg:x="13068" fg:w="39"/><text x="40.1425%" y="975.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.11%)</title><rect x="39.8987%" y="949" width="0.1129%" height="15" fill="rgb(241,85,17)" fg:x="13070" fg:w="37"/><text x="40.1487%" y="959.50"></text></g><g><title>[[vdso]] (33 samples, 0.10%)</title><rect x="39.9109%" y="933" width="0.1007%" height="15" fill="rgb(236,90,42)" fg:x="13074" fg:w="33"/><text x="40.1609%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="40.0696%" y="789" width="0.0214%" height="15" fill="rgb(249,57,21)" fg:x="13126" fg:w="7"/><text x="40.3196%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.02%)</title><rect x="40.2161%" y="773" width="0.0183%" height="15" fill="rgb(243,12,36)" fg:x="13174" fg:w="6"/><text x="40.4661%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (6 samples, 0.02%)</title><rect x="40.2161%" y="757" width="0.0183%" height="15" fill="rgb(253,128,47)" fg:x="13174" fg:w="6"/><text x="40.4661%" y="767.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (6 samples, 0.02%)</title><rect x="40.2863%" y="757" width="0.0183%" height="15" fill="rgb(207,33,20)" fg:x="13197" fg:w="6"/><text x="40.5363%" y="767.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::advance_mut (6 samples, 0.02%)</title><rect x="40.2863%" y="741" width="0.0183%" height="15" fill="rgb(233,215,35)" fg:x="13197" fg:w="6"/><text x="40.5363%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (6 samples, 0.02%)</title><rect x="40.3077%" y="725" width="0.0183%" height="15" fill="rgb(249,188,52)" fg:x="13204" fg:w="6"/><text x="40.5577%" y="735.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (14 samples, 0.04%)</title><rect x="40.3047%" y="757" width="0.0427%" height="15" fill="rgb(225,12,32)" fg:x="13203" fg:w="14"/><text x="40.5547%" y="767.50"></text></g><g><title>&lt;bytes::buf::limit::Limit&lt;T&gt; as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (14 samples, 0.04%)</title><rect x="40.3047%" y="741" width="0.0427%" height="15" fill="rgb(247,98,14)" fg:x="13203" fg:w="14"/><text x="40.5547%" y="751.50"></text></g><g><title>bytes::buf::uninit_slice::UninitSlice::len (6 samples, 0.02%)</title><rect x="40.3291%" y="725" width="0.0183%" height="15" fill="rgb(247,219,48)" fg:x="13211" fg:w="6"/><text x="40.5791%" y="735.50"></text></g><g><title>__libc_recv (18 samples, 0.05%)</title><rect x="40.4054%" y="677" width="0.0549%" height="15" fill="rgb(253,60,48)" fg:x="13236" fg:w="18"/><text x="40.6554%" y="687.50"></text></g><g><title>__entry_text_start (18 samples, 0.05%)</title><rect x="40.4054%" y="661" width="0.0549%" height="15" fill="rgb(245,15,52)" fg:x="13236" fg:w="18"/><text x="40.6554%" y="671.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="40.5458%" y="645" width="0.0153%" height="15" fill="rgb(220,133,28)" fg:x="13282" fg:w="5"/><text x="40.7958%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="40.5794%" y="629" width="0.0183%" height="15" fill="rgb(217,180,4)" fg:x="13293" fg:w="6"/><text x="40.8294%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt; (6 samples, 0.02%)</title><rect x="40.5794%" y="613" width="0.0183%" height="15" fill="rgb(251,24,1)" fg:x="13293" fg:w="6"/><text x="40.8294%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="40.5794%" y="597" width="0.0183%" height="15" fill="rgb(212,185,49)" fg:x="13293" fg:w="6"/><text x="40.8294%" y="607.50"></text></g><g><title>tokio::io::driver::Handle::inner (9 samples, 0.03%)</title><rect x="40.6038%" y="629" width="0.0275%" height="15" fill="rgb(215,175,22)" fg:x="13301" fg:w="9"/><text x="40.8538%" y="639.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (9 samples, 0.03%)</title><rect x="40.6038%" y="613" width="0.0275%" height="15" fill="rgb(250,205,14)" fg:x="13301" fg:w="9"/><text x="40.8538%" y="623.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (34 samples, 0.10%)</title><rect x="40.5611%" y="645" width="0.1038%" height="15" fill="rgb(225,211,22)" fg:x="13287" fg:w="34"/><text x="40.8111%" y="655.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (11 samples, 0.03%)</title><rect x="40.6313%" y="629" width="0.0336%" height="15" fill="rgb(251,179,42)" fg:x="13310" fg:w="11"/><text x="40.8813%" y="639.50"></text></g><g><title>tokio::io::driver::Direction::mask (5 samples, 0.02%)</title><rect x="40.6496%" y="613" width="0.0153%" height="15" fill="rgb(208,216,51)" fg:x="13316" fg:w="5"/><text x="40.8996%" y="623.50"></text></g><g><title>__libc_disable_asynccancel (15 samples, 0.05%)</title><rect x="40.7595%" y="485" width="0.0458%" height="15" fill="rgb(235,36,11)" fg:x="13352" fg:w="15"/><text x="41.0095%" y="495.50"></text></g><g><title>fput (5 samples, 0.02%)</title><rect x="40.9427%" y="421" width="0.0153%" height="15" fill="rgb(213,189,28)" fg:x="13412" fg:w="5"/><text x="41.1927%" y="431.50"></text></g><g><title>fput_many (8 samples, 0.02%)</title><rect x="40.9579%" y="421" width="0.0244%" height="15" fill="rgb(227,203,42)" fg:x="13417" fg:w="8"/><text x="41.2079%" y="431.50"></text></g><g><title>import_single_range (7 samples, 0.02%)</title><rect x="40.9824%" y="421" width="0.0214%" height="15" fill="rgb(244,72,36)" fg:x="13425" fg:w="7"/><text x="41.2324%" y="431.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.03%)</title><rect x="41.0739%" y="389" width="0.0275%" height="15" fill="rgb(213,53,17)" fg:x="13455" fg:w="9"/><text x="41.3239%" y="399.50"></text></g><g><title>__cond_resched (8 samples, 0.02%)</title><rect x="41.1136%" y="373" width="0.0244%" height="15" fill="rgb(207,167,3)" fg:x="13468" fg:w="8"/><text x="41.3636%" y="383.50"></text></g><g><title>lock_sock_nested (96 samples, 0.29%)</title><rect x="41.1045%" y="389" width="0.2931%" height="15" fill="rgb(216,98,30)" fg:x="13465" fg:w="96"/><text x="41.3545%" y="399.50"></text></g><g><title>_raw_spin_lock_bh (85 samples, 0.26%)</title><rect x="41.1380%" y="373" width="0.2595%" height="15" fill="rgb(236,123,15)" fg:x="13476" fg:w="85"/><text x="41.3880%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (71 samples, 0.22%)</title><rect x="41.1808%" y="357" width="0.2167%" height="15" fill="rgb(248,81,50)" fg:x="13490" fg:w="71"/><text x="41.4308%" y="367.50"></text></g><g><title>ttwu_queue_wakelist (4 samples, 0.01%)</title><rect x="41.4922%" y="197" width="0.0122%" height="15" fill="rgb(214,120,4)" fg:x="13592" fg:w="4"/><text x="41.7422%" y="207.50"></text></g><g><title>__wake_up_common (14 samples, 0.04%)</title><rect x="41.4647%" y="245" width="0.0427%" height="15" fill="rgb(208,179,34)" fg:x="13583" fg:w="14"/><text x="41.7147%" y="255.50"></text></g><g><title>autoremove_wake_function (13 samples, 0.04%)</title><rect x="41.4677%" y="229" width="0.0397%" height="15" fill="rgb(227,140,7)" fg:x="13584" fg:w="13"/><text x="41.7177%" y="239.50"></text></g><g><title>try_to_wake_up (13 samples, 0.04%)</title><rect x="41.4677%" y="213" width="0.0397%" height="15" fill="rgb(214,22,6)" fg:x="13584" fg:w="13"/><text x="41.7177%" y="223.50"></text></g><g><title>__wake_up_common_lock (15 samples, 0.05%)</title><rect x="41.4647%" y="261" width="0.0458%" height="15" fill="rgb(207,137,27)" fg:x="13583" fg:w="15"/><text x="41.7147%" y="271.50"></text></g><g><title>sock_def_readable (18 samples, 0.05%)</title><rect x="41.4586%" y="325" width="0.0549%" height="15" fill="rgb(210,8,46)" fg:x="13581" fg:w="18"/><text x="41.7086%" y="335.50"></text></g><g><title>__wake_up_common_lock (18 samples, 0.05%)</title><rect x="41.4586%" y="309" width="0.0549%" height="15" fill="rgb(240,16,54)" fg:x="13581" fg:w="18"/><text x="41.7086%" y="319.50"></text></g><g><title>__wake_up_common (18 samples, 0.05%)</title><rect x="41.4586%" y="293" width="0.0549%" height="15" fill="rgb(211,209,29)" fg:x="13581" fg:w="18"/><text x="41.7086%" y="303.50"></text></g><g><title>ep_poll_callback (16 samples, 0.05%)</title><rect x="41.4647%" y="277" width="0.0488%" height="15" fill="rgb(226,228,24)" fg:x="13583" fg:w="16"/><text x="41.7147%" y="287.50"></text></g><g><title>tcp_ack (8 samples, 0.02%)</title><rect x="41.5135%" y="325" width="0.0244%" height="15" fill="rgb(222,84,9)" fg:x="13599" fg:w="8"/><text x="41.7635%" y="335.50"></text></g><g><title>__release_sock (42 samples, 0.13%)</title><rect x="41.4189%" y="373" width="0.1282%" height="15" fill="rgb(234,203,30)" fg:x="13568" fg:w="42"/><text x="41.6689%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (38 samples, 0.12%)</title><rect x="41.4311%" y="357" width="0.1160%" height="15" fill="rgb(238,109,14)" fg:x="13572" fg:w="38"/><text x="41.6811%" y="367.50"></text></g><g><title>tcp_rcv_established (34 samples, 0.10%)</title><rect x="41.4433%" y="341" width="0.1038%" height="15" fill="rgb(233,206,34)" fg:x="13576" fg:w="34"/><text x="41.6933%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (8 samples, 0.02%)</title><rect x="41.5471%" y="373" width="0.0244%" height="15" fill="rgb(220,167,47)" fg:x="13610" fg:w="8"/><text x="41.7971%" y="383.50"></text></g><g><title>_raw_spin_lock_bh (6 samples, 0.02%)</title><rect x="41.5715%" y="373" width="0.0183%" height="15" fill="rgb(238,105,10)" fg:x="13618" fg:w="6"/><text x="41.8215%" y="383.50"></text></g><g><title>release_sock (68 samples, 0.21%)</title><rect x="41.3975%" y="389" width="0.2076%" height="15" fill="rgb(213,227,17)" fg:x="13561" fg:w="68"/><text x="41.6475%" y="399.50"></text></g><g><title>tcp_release_cb (5 samples, 0.02%)</title><rect x="41.5898%" y="373" width="0.0153%" height="15" fill="rgb(217,132,38)" fg:x="13624" fg:w="5"/><text x="41.8398%" y="383.50"></text></g><g><title>kfree (9 samples, 0.03%)</title><rect x="41.7150%" y="357" width="0.0275%" height="15" fill="rgb(242,146,4)" fg:x="13665" fg:w="9"/><text x="41.9650%" y="367.50"></text></g><g><title>skb_release_data (4 samples, 0.01%)</title><rect x="41.7425%" y="357" width="0.0122%" height="15" fill="rgb(212,61,9)" fg:x="13674" fg:w="4"/><text x="41.9925%" y="367.50"></text></g><g><title>__kfree_skb (16 samples, 0.05%)</title><rect x="41.7150%" y="373" width="0.0488%" height="15" fill="rgb(247,126,22)" fg:x="13665" fg:w="16"/><text x="41.9650%" y="383.50"></text></g><g><title>__tcp_send_ack.part.0 (9 samples, 0.03%)</title><rect x="41.7638%" y="373" width="0.0275%" height="15" fill="rgb(220,196,2)" fg:x="13681" fg:w="9"/><text x="42.0138%" y="383.50"></text></g><g><title>__alloc_skb (8 samples, 0.02%)</title><rect x="41.7669%" y="357" width="0.0244%" height="15" fill="rgb(208,46,4)" fg:x="13682" fg:w="8"/><text x="42.0169%" y="367.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.01%)</title><rect x="41.7791%" y="341" width="0.0122%" height="15" fill="rgb(252,104,46)" fg:x="13686" fg:w="4"/><text x="42.0291%" y="351.50"></text></g><g><title>dev_hard_start_xmit (6 samples, 0.02%)</title><rect x="41.8676%" y="309" width="0.0183%" height="15" fill="rgb(237,152,48)" fg:x="13715" fg:w="6"/><text x="42.1176%" y="319.50"></text></g><g><title>loopback_xmit (5 samples, 0.02%)</title><rect x="41.8707%" y="293" width="0.0153%" height="15" fill="rgb(221,59,37)" fg:x="13716" fg:w="5"/><text x="42.1207%" y="303.50"></text></g><g><title>__dev_queue_xmit (12 samples, 0.04%)</title><rect x="41.8554%" y="325" width="0.0366%" height="15" fill="rgb(209,202,51)" fg:x="13711" fg:w="12"/><text x="42.1054%" y="335.50"></text></g><g><title>ipt_do_table (4 samples, 0.01%)</title><rect x="41.9165%" y="181" width="0.0122%" height="15" fill="rgb(228,81,30)" fg:x="13731" fg:w="4"/><text x="42.1665%" y="191.50"></text></g><g><title>ip_local_deliver (24 samples, 0.07%)</title><rect x="41.9104%" y="213" width="0.0733%" height="15" fill="rgb(227,42,39)" fg:x="13729" fg:w="24"/><text x="42.1604%" y="223.50"></text></g><g><title>nf_hook_slow (23 samples, 0.07%)</title><rect x="41.9134%" y="197" width="0.0702%" height="15" fill="rgb(221,26,2)" fg:x="13730" fg:w="23"/><text x="42.1634%" y="207.50"></text></g><g><title>nft_do_chain_inet (15 samples, 0.05%)</title><rect x="41.9378%" y="181" width="0.0458%" height="15" fill="rgb(254,61,31)" fg:x="13738" fg:w="15"/><text x="42.1878%" y="191.50"></text></g><g><title>nft_do_chain (15 samples, 0.05%)</title><rect x="41.9378%" y="165" width="0.0458%" height="15" fill="rgb(222,173,38)" fg:x="13738" fg:w="15"/><text x="42.1878%" y="175.50"></text></g><g><title>nft_lookup_eval (12 samples, 0.04%)</title><rect x="41.9470%" y="149" width="0.0366%" height="15" fill="rgb(218,50,12)" fg:x="13741" fg:w="12"/><text x="42.1970%" y="159.50"></text></g><g><title>nft_rhash_lookup (7 samples, 0.02%)</title><rect x="41.9623%" y="133" width="0.0214%" height="15" fill="rgb(223,88,40)" fg:x="13746" fg:w="7"/><text x="42.2123%" y="143.50"></text></g><g><title>__inet_lookup_established (7 samples, 0.02%)</title><rect x="41.9928%" y="165" width="0.0214%" height="15" fill="rgb(237,54,19)" fg:x="13756" fg:w="7"/><text x="42.2428%" y="175.50"></text></g><g><title>sk_filter_trim_cap (5 samples, 0.02%)</title><rect x="42.0203%" y="165" width="0.0153%" height="15" fill="rgb(251,129,25)" fg:x="13765" fg:w="5"/><text x="42.2703%" y="175.50"></text></g><g><title>kmem_cache_free (7 samples, 0.02%)</title><rect x="42.0477%" y="133" width="0.0214%" height="15" fill="rgb(238,97,19)" fg:x="13774" fg:w="7"/><text x="42.2977%" y="143.50"></text></g><g><title>__slab_free (12 samples, 0.04%)</title><rect x="42.1057%" y="85" width="0.0366%" height="15" fill="rgb(240,169,18)" fg:x="13793" fg:w="12"/><text x="42.3557%" y="95.50"></text></g><g><title>kfree (22 samples, 0.07%)</title><rect x="42.0966%" y="101" width="0.0672%" height="15" fill="rgb(230,187,49)" fg:x="13790" fg:w="22"/><text x="42.3466%" y="111.50"></text></g><g><title>slab_free_freelist_hook (7 samples, 0.02%)</title><rect x="42.1424%" y="85" width="0.0214%" height="15" fill="rgb(209,44,26)" fg:x="13805" fg:w="7"/><text x="42.3924%" y="95.50"></text></g><g><title>__kfree_skb (25 samples, 0.08%)</title><rect x="42.0966%" y="117" width="0.0763%" height="15" fill="rgb(244,0,6)" fg:x="13790" fg:w="25"/><text x="42.3466%" y="127.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="42.1729%" y="117" width="0.0122%" height="15" fill="rgb(248,18,21)" fg:x="13815" fg:w="4"/><text x="42.4229%" y="127.50"></text></g><g><title>kmem_cache_free (6 samples, 0.02%)</title><rect x="42.1851%" y="117" width="0.0183%" height="15" fill="rgb(245,180,19)" fg:x="13819" fg:w="6"/><text x="42.4351%" y="127.50"></text></g><g><title>__slab_free (4 samples, 0.01%)</title><rect x="42.1912%" y="101" width="0.0122%" height="15" fill="rgb(252,118,36)" fg:x="13821" fg:w="4"/><text x="42.4412%" y="111.50"></text></g><g><title>tcp_ack (55 samples, 0.17%)</title><rect x="42.0691%" y="133" width="0.1679%" height="15" fill="rgb(210,224,19)" fg:x="13781" fg:w="55"/><text x="42.3191%" y="143.50"></text></g><g><title>tcp_mstamp_refresh (4 samples, 0.01%)</title><rect x="42.2431%" y="133" width="0.0122%" height="15" fill="rgb(218,30,24)" fg:x="13838" fg:w="4"/><text x="42.4931%" y="143.50"></text></g><g><title>ktime_get (4 samples, 0.01%)</title><rect x="42.2431%" y="117" width="0.0122%" height="15" fill="rgb(219,75,50)" fg:x="13838" fg:w="4"/><text x="42.4931%" y="127.50"></text></g><g><title>ip_local_deliver_finish (91 samples, 0.28%)</title><rect x="41.9836%" y="213" width="0.2778%" height="15" fill="rgb(234,72,50)" fg:x="13753" fg:w="91"/><text x="42.2336%" y="223.50"></text></g><g><title>ip_protocol_deliver_rcu (91 samples, 0.28%)</title><rect x="41.9836%" y="197" width="0.2778%" height="15" fill="rgb(219,100,48)" fg:x="13753" fg:w="91"/><text x="42.2336%" y="207.50"></text></g><g><title>tcp_v4_rcv (89 samples, 0.27%)</title><rect x="41.9897%" y="181" width="0.2717%" height="15" fill="rgb(253,5,41)" fg:x="13755" fg:w="89"/><text x="42.2397%" y="191.50"></text></g><g><title>tcp_v4_do_rcv (71 samples, 0.22%)</title><rect x="42.0447%" y="165" width="0.2167%" height="15" fill="rgb(247,181,11)" fg:x="13773" fg:w="71"/><text x="42.2947%" y="175.50"></text></g><g><title>tcp_rcv_established (71 samples, 0.22%)</title><rect x="42.0447%" y="149" width="0.2167%" height="15" fill="rgb(222,223,25)" fg:x="13773" fg:w="71"/><text x="42.2947%" y="159.50"></text></g><g><title>__netif_receive_skb_one_core (144 samples, 0.44%)</title><rect x="41.9104%" y="229" width="0.4396%" height="15" fill="rgb(214,198,28)" fg:x="13729" fg:w="144"/><text x="42.1604%" y="239.50"></text></g><g><title>ip_rcv (29 samples, 0.09%)</title><rect x="42.2614%" y="213" width="0.0885%" height="15" fill="rgb(230,46,43)" fg:x="13844" fg:w="29"/><text x="42.5114%" y="223.50"></text></g><g><title>nf_hook_slow (26 samples, 0.08%)</title><rect x="42.2706%" y="197" width="0.0794%" height="15" fill="rgb(233,65,53)" fg:x="13847" fg:w="26"/><text x="42.5206%" y="207.50"></text></g><g><title>nft_do_chain_inet (23 samples, 0.07%)</title><rect x="42.2797%" y="181" width="0.0702%" height="15" fill="rgb(221,121,27)" fg:x="13850" fg:w="23"/><text x="42.5297%" y="191.50"></text></g><g><title>nft_do_chain (22 samples, 0.07%)</title><rect x="42.2828%" y="165" width="0.0672%" height="15" fill="rgb(247,70,47)" fg:x="13851" fg:w="22"/><text x="42.5328%" y="175.50"></text></g><g><title>ip_finish_output2 (168 samples, 0.51%)</title><rect x="41.8432%" y="341" width="0.5129%" height="15" fill="rgb(228,85,35)" fg:x="13707" fg:w="168"/><text x="42.0932%" y="351.50"></text></g><g><title>__local_bh_enable_ip (152 samples, 0.46%)</title><rect x="41.8921%" y="325" width="0.4640%" height="15" fill="rgb(209,50,18)" fg:x="13723" fg:w="152"/><text x="42.1421%" y="335.50"></text></g><g><title>do_softirq (152 samples, 0.46%)</title><rect x="41.8921%" y="309" width="0.4640%" height="15" fill="rgb(250,19,35)" fg:x="13723" fg:w="152"/><text x="42.1421%" y="319.50"></text></g><g><title>__softirqentry_text_start (152 samples, 0.46%)</title><rect x="41.8921%" y="293" width="0.4640%" height="15" fill="rgb(253,107,29)" fg:x="13723" fg:w="152"/><text x="42.1421%" y="303.50"></text></g><g><title>net_rx_action (151 samples, 0.46%)</title><rect x="41.8951%" y="277" width="0.4610%" height="15" fill="rgb(252,179,29)" fg:x="13724" fg:w="151"/><text x="42.1451%" y="287.50"></text></g><g><title>__napi_poll (148 samples, 0.45%)</title><rect x="41.9043%" y="261" width="0.4518%" height="15" fill="rgb(238,194,6)" fg:x="13727" fg:w="148"/><text x="42.1543%" y="271.50"></text></g><g><title>process_backlog (148 samples, 0.45%)</title><rect x="41.9043%" y="245" width="0.4518%" height="15" fill="rgb(238,164,29)" fg:x="13727" fg:w="148"/><text x="42.1543%" y="255.50"></text></g><g><title>ipt_do_table (9 samples, 0.03%)</title><rect x="42.3713%" y="293" width="0.0275%" height="15" fill="rgb(224,25,9)" fg:x="13880" fg:w="9"/><text x="42.6213%" y="303.50"></text></g><g><title>iptable_mangle_hook (4 samples, 0.01%)</title><rect x="42.3988%" y="293" width="0.0122%" height="15" fill="rgb(244,153,23)" fg:x="13889" fg:w="4"/><text x="42.6488%" y="303.50"></text></g><g><title>ipt_do_table (4 samples, 0.01%)</title><rect x="42.3988%" y="277" width="0.0122%" height="15" fill="rgb(212,203,14)" fg:x="13889" fg:w="4"/><text x="42.6488%" y="287.50"></text></g><g><title>ipv4_conntrack_defrag (4 samples, 0.01%)</title><rect x="42.4110%" y="293" width="0.0122%" height="15" fill="rgb(220,164,20)" fg:x="13893" fg:w="4"/><text x="42.6610%" y="303.50"></text></g><g><title>__nf_conntrack_find_get (8 samples, 0.02%)</title><rect x="42.4293%" y="277" width="0.0244%" height="15" fill="rgb(222,203,48)" fg:x="13899" fg:w="8"/><text x="42.6793%" y="287.50"></text></g><g><title>nf_conntrack_in (15 samples, 0.05%)</title><rect x="42.4263%" y="293" width="0.0458%" height="15" fill="rgb(215,159,22)" fg:x="13898" fg:w="15"/><text x="42.6763%" y="303.50"></text></g><g><title>nf_conntrack_tcp_packet (4 samples, 0.01%)</title><rect x="42.4599%" y="277" width="0.0122%" height="15" fill="rgb(216,183,47)" fg:x="13909" fg:w="4"/><text x="42.7099%" y="287.50"></text></g><g><title>nft_do_chain_inet (5 samples, 0.02%)</title><rect x="42.4721%" y="293" width="0.0153%" height="15" fill="rgb(229,195,25)" fg:x="13913" fg:w="5"/><text x="42.7221%" y="303.50"></text></g><g><title>nft_do_chain (5 samples, 0.02%)</title><rect x="42.4721%" y="277" width="0.0153%" height="15" fill="rgb(224,132,51)" fg:x="13913" fg:w="5"/><text x="42.7221%" y="287.50"></text></g><g><title>ip_local_out (42 samples, 0.13%)</title><rect x="42.3652%" y="341" width="0.1282%" height="15" fill="rgb(240,63,7)" fg:x="13878" fg:w="42"/><text x="42.6152%" y="351.50"></text></g><g><title>__ip_local_out (42 samples, 0.13%)</title><rect x="42.3652%" y="325" width="0.1282%" height="15" fill="rgb(249,182,41)" fg:x="13878" fg:w="42"/><text x="42.6152%" y="335.50"></text></g><g><title>nf_hook_slow (42 samples, 0.13%)</title><rect x="42.3652%" y="309" width="0.1282%" height="15" fill="rgb(243,47,26)" fg:x="13878" fg:w="42"/><text x="42.6152%" y="319.50"></text></g><g><title>__ip_queue_xmit (222 samples, 0.68%)</title><rect x="41.8341%" y="357" width="0.6777%" height="15" fill="rgb(233,48,2)" fg:x="13704" fg:w="222"/><text x="42.0841%" y="367.50"></text></g><g><title>ip_output (6 samples, 0.02%)</title><rect x="42.4934%" y="341" width="0.0183%" height="15" fill="rgb(244,165,34)" fg:x="13920" fg:w="6"/><text x="42.7434%" y="351.50"></text></g><g><title>nf_hook_slow (4 samples, 0.01%)</title><rect x="42.4995%" y="325" width="0.0122%" height="15" fill="rgb(207,89,7)" fg:x="13922" fg:w="4"/><text x="42.7495%" y="335.50"></text></g><g><title>__tcp_transmit_skb (239 samples, 0.73%)</title><rect x="41.7913%" y="373" width="0.7296%" height="15" fill="rgb(244,117,36)" fg:x="13690" fg:w="239"/><text x="42.0413%" y="383.50"></text></g><g><title>__cond_resched (8 samples, 0.02%)</title><rect x="42.6674%" y="341" width="0.0244%" height="15" fill="rgb(226,144,34)" fg:x="13977" fg:w="8"/><text x="42.9174%" y="351.50"></text></g><g><title>_copy_to_iter (102 samples, 0.31%)</title><rect x="42.6919%" y="341" width="0.3114%" height="15" fill="rgb(213,23,19)" fg:x="13985" fg:w="102"/><text x="42.9419%" y="351.50"></text></g><g><title>copy_user_generic_string (81 samples, 0.25%)</title><rect x="42.7560%" y="325" width="0.2473%" height="15" fill="rgb(217,75,12)" fg:x="14006" fg:w="81"/><text x="43.0060%" y="335.50"></text></g><g><title>__virt_addr_valid (15 samples, 0.05%)</title><rect x="43.0582%" y="309" width="0.0458%" height="15" fill="rgb(224,159,17)" fg:x="14105" fg:w="15"/><text x="43.3082%" y="319.50"></text></g><g><title>skb_copy_datagram_iter (193 samples, 0.59%)</title><rect x="42.5362%" y="373" width="0.5892%" height="15" fill="rgb(217,118,1)" fg:x="13934" fg:w="193"/><text x="42.7862%" y="383.50"></text></g><g><title>__skb_datagram_iter (192 samples, 0.59%)</title><rect x="42.5392%" y="357" width="0.5861%" height="15" fill="rgb(232,180,48)" fg:x="13935" fg:w="192"/><text x="42.7892%" y="367.50"></text></g><g><title>simple_copy_to_iter (40 samples, 0.12%)</title><rect x="43.0032%" y="341" width="0.1221%" height="15" fill="rgb(230,27,33)" fg:x="14087" fg:w="40"/><text x="43.2532%" y="351.50"></text></g><g><title>__check_object_size (38 samples, 0.12%)</title><rect x="43.0093%" y="325" width="0.1160%" height="15" fill="rgb(205,31,21)" fg:x="14089" fg:w="38"/><text x="43.2593%" y="335.50"></text></g><g><title>check_stack_object (7 samples, 0.02%)</title><rect x="43.1040%" y="309" width="0.0214%" height="15" fill="rgb(253,59,4)" fg:x="14120" fg:w="7"/><text x="43.3540%" y="319.50"></text></g><g><title>tcp_cleanup_rbuf (8 samples, 0.02%)</title><rect x="43.1253%" y="373" width="0.0244%" height="15" fill="rgb(224,201,9)" fg:x="14127" fg:w="8"/><text x="43.3753%" y="383.50"></text></g><g><title>__x86_indirect_thunk_rax (4 samples, 0.01%)</title><rect x="43.2108%" y="325" width="0.0122%" height="15" fill="rgb(229,206,30)" fg:x="14155" fg:w="4"/><text x="43.4608%" y="335.50"></text></g><g><title>inet_recvmsg (754 samples, 2.30%)</title><rect x="41.0037%" y="421" width="2.3017%" height="15" fill="rgb(212,67,47)" fg:x="13432" fg:w="754"/><text x="41.2537%" y="431.50">i..</text></g><g><title>tcp_recvmsg (749 samples, 2.29%)</title><rect x="41.0190%" y="405" width="2.2865%" height="15" fill="rgb(211,96,50)" fg:x="13437" fg:w="749"/><text x="41.2690%" y="415.50">t..</text></g><g><title>tcp_recvmsg_locked (557 samples, 1.70%)</title><rect x="41.6051%" y="389" width="1.7003%" height="15" fill="rgb(252,114,18)" fg:x="13629" fg:w="557"/><text x="41.8551%" y="399.50"></text></g><g><title>tcp_rcv_space_adjust (51 samples, 0.16%)</title><rect x="43.1498%" y="373" width="0.1557%" height="15" fill="rgb(223,58,37)" fg:x="14135" fg:w="51"/><text x="43.3998%" y="383.50"></text></g><g><title>tcp_mstamp_refresh (46 samples, 0.14%)</title><rect x="43.1650%" y="357" width="0.1404%" height="15" fill="rgb(237,70,4)" fg:x="14140" fg:w="46"/><text x="43.4150%" y="367.50"></text></g><g><title>ktime_get (45 samples, 0.14%)</title><rect x="43.1681%" y="341" width="0.1374%" height="15" fill="rgb(244,85,46)" fg:x="14141" fg:w="45"/><text x="43.4181%" y="351.50"></text></g><g><title>read_tsc (27 samples, 0.08%)</title><rect x="43.2230%" y="325" width="0.0824%" height="15" fill="rgb(223,39,52)" fg:x="14159" fg:w="27"/><text x="43.4730%" y="335.50"></text></g><g><title>__x86_indirect_thunk_rax (9 samples, 0.03%)</title><rect x="43.3726%" y="389" width="0.0275%" height="15" fill="rgb(218,200,14)" fg:x="14208" fg:w="9"/><text x="43.6226%" y="399.50"></text></g><g><title>sock_recvmsg (99 samples, 0.30%)</title><rect x="43.3055%" y="421" width="0.3022%" height="15" fill="rgb(208,171,16)" fg:x="14186" fg:w="99"/><text x="43.5555%" y="431.50"></text></g><g><title>security_socket_recvmsg (90 samples, 0.27%)</title><rect x="43.3329%" y="405" width="0.2747%" height="15" fill="rgb(234,200,18)" fg:x="14195" fg:w="90"/><text x="43.5829%" y="415.50"></text></g><g><title>selinux_socket_recvmsg (66 samples, 0.20%)</title><rect x="43.4062%" y="389" width="0.2015%" height="15" fill="rgb(228,45,11)" fg:x="14219" fg:w="66"/><text x="43.6562%" y="399.50"></text></g><g><title>avc_has_perm (33 samples, 0.10%)</title><rect x="43.5069%" y="373" width="0.1007%" height="15" fill="rgb(237,182,11)" fg:x="14252" fg:w="33"/><text x="43.7569%" y="383.50"></text></g><g><title>avc_lookup (20 samples, 0.06%)</title><rect x="43.5466%" y="357" width="0.0611%" height="15" fill="rgb(241,175,49)" fg:x="14265" fg:w="20"/><text x="43.7966%" y="367.50"></text></g><g><title>__x64_sys_recvfrom (919 samples, 2.81%)</title><rect x="40.8633%" y="453" width="2.8054%" height="15" fill="rgb(247,38,35)" fg:x="13386" fg:w="919"/><text x="41.1133%" y="463.50">__..</text></g><g><title>__sys_recvfrom (913 samples, 2.79%)</title><rect x="40.8816%" y="437" width="2.7871%" height="15" fill="rgb(228,39,49)" fg:x="13392" fg:w="913"/><text x="41.1316%" y="447.50">__..</text></g><g><title>sockfd_lookup_light (20 samples, 0.06%)</title><rect x="43.6077%" y="421" width="0.0611%" height="15" fill="rgb(226,101,26)" fg:x="14285" fg:w="20"/><text x="43.8577%" y="431.50"></text></g><g><title>__fget_light (17 samples, 0.05%)</title><rect x="43.6168%" y="405" width="0.0519%" height="15" fill="rgb(206,141,19)" fg:x="14288" fg:w="17"/><text x="43.8668%" y="415.50"></text></g><g><title>__fget_files (12 samples, 0.04%)</title><rect x="43.6321%" y="389" width="0.0366%" height="15" fill="rgb(211,200,13)" fg:x="14293" fg:w="12"/><text x="43.8821%" y="399.50"></text></g><g><title>__x86_indirect_thunk_rax (8 samples, 0.02%)</title><rect x="43.6687%" y="453" width="0.0244%" height="15" fill="rgb(241,121,6)" fg:x="14305" fg:w="8"/><text x="43.9187%" y="463.50"></text></g><g><title>syscall_enter_from_user_mode (5 samples, 0.02%)</title><rect x="43.6931%" y="453" width="0.0153%" height="15" fill="rgb(234,221,29)" fg:x="14313" fg:w="5"/><text x="43.9431%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="43.7176%" y="437" width="0.0305%" height="15" fill="rgb(229,136,5)" fg:x="14321" fg:w="10"/><text x="43.9676%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (967 samples, 2.95%)</title><rect x="40.8114%" y="485" width="2.9520%" height="15" fill="rgb(238,36,11)" fg:x="13369" fg:w="967"/><text x="41.0614%" y="495.50">ent..</text></g><g><title>do_syscall_64 (957 samples, 2.92%)</title><rect x="40.8419%" y="469" width="2.9214%" height="15" fill="rgb(251,55,41)" fg:x="13379" fg:w="957"/><text x="41.0919%" y="479.50">do..</text></g><g><title>syscall_exit_to_user_mode (18 samples, 0.05%)</title><rect x="43.7084%" y="453" width="0.0549%" height="15" fill="rgb(242,34,40)" fg:x="14318" fg:w="18"/><text x="43.9584%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="43.7481%" y="437" width="0.0153%" height="15" fill="rgb(215,42,17)" fg:x="14331" fg:w="5"/><text x="43.9981%" y="447.50"></text></g><g><title>__libc_recv (1,011 samples, 3.09%)</title><rect x="40.7046%" y="501" width="3.0863%" height="15" fill="rgb(207,44,46)" fg:x="13334" fg:w="1011"/><text x="40.9546%" y="511.50">__l..</text></g><g><title>syscall_return_via_sysret (9 samples, 0.03%)</title><rect x="43.7634%" y="485" width="0.0275%" height="15" fill="rgb(211,206,28)" fg:x="14336" fg:w="9"/><text x="44.0134%" y="495.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,025 samples, 3.13%)</title><rect x="40.6679%" y="629" width="3.1290%" height="15" fill="rgb(237,167,16)" fg:x="13322" fg:w="1025"/><text x="40.9179%" y="639.50">&lt;&amp;m..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,015 samples, 3.10%)</title><rect x="40.6985%" y="613" width="3.0985%" height="15" fill="rgb(233,66,6)" fg:x="13332" fg:w="1015"/><text x="40.9485%" y="623.50">mio..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (1,015 samples, 3.10%)</title><rect x="40.6985%" y="597" width="3.0985%" height="15" fill="rgb(246,123,29)" fg:x="13332" fg:w="1015"/><text x="40.9485%" y="607.50">mio..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (1,015 samples, 3.10%)</title><rect x="40.6985%" y="581" width="3.0985%" height="15" fill="rgb(209,62,40)" fg:x="13332" fg:w="1015"/><text x="40.9485%" y="591.50">&lt;&amp;m..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,015 samples, 3.10%)</title><rect x="40.6985%" y="565" width="3.0985%" height="15" fill="rgb(218,4,25)" fg:x="13332" fg:w="1015"/><text x="40.9485%" y="575.50">&lt;&amp;s..</text></g><g><title>std::sys_common::net::TcpStream::read (1,013 samples, 3.09%)</title><rect x="40.7046%" y="549" width="3.0924%" height="15" fill="rgb(253,91,49)" fg:x="13334" fg:w="1013"/><text x="40.9546%" y="559.50">std..</text></g><g><title>std::sys::unix::net::Socket::read (1,013 samples, 3.09%)</title><rect x="40.7046%" y="533" width="3.0924%" height="15" fill="rgb(228,155,29)" fg:x="13334" fg:w="1013"/><text x="40.9546%" y="543.50">std..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1,013 samples, 3.09%)</title><rect x="40.7046%" y="517" width="3.0924%" height="15" fill="rgb(243,57,37)" fg:x="13334" fg:w="1013"/><text x="40.9546%" y="527.50">std..</text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (1,094 samples, 3.34%)</title><rect x="40.4603%" y="677" width="3.3396%" height="15" fill="rgb(244,167,17)" fg:x="13254" fg:w="1094"/><text x="40.7103%" y="687.50">tok..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1,086 samples, 3.32%)</title><rect x="40.4848%" y="661" width="3.3152%" height="15" fill="rgb(207,181,38)" fg:x="13262" fg:w="1086"/><text x="40.7348%" y="671.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (1,027 samples, 3.14%)</title><rect x="40.6649%" y="645" width="3.1351%" height="15" fill="rgb(211,8,23)" fg:x="13321" fg:w="1027"/><text x="40.9149%" y="655.50">tok..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,146 samples, 3.50%)</title><rect x="40.3474%" y="725" width="3.4984%" height="15" fill="rgb(235,11,44)" fg:x="13217" fg:w="1146"/><text x="40.5974%" y="735.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,142 samples, 3.49%)</title><rect x="40.3596%" y="709" width="3.4862%" height="15" fill="rgb(248,18,52)" fg:x="13221" fg:w="1142"/><text x="40.6096%" y="719.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,142 samples, 3.49%)</title><rect x="40.3596%" y="693" width="3.4862%" height="15" fill="rgb(208,4,7)" fg:x="13221" fg:w="1142"/><text x="40.6096%" y="703.50">tok..</text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (13 samples, 0.04%)</title><rect x="43.8061%" y="677" width="0.0397%" height="15" fill="rgb(240,17,39)" fg:x="14350" fg:w="13"/><text x="44.0561%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::split::Guard&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (5 samples, 0.02%)</title><rect x="43.8458%" y="725" width="0.0153%" height="15" fill="rgb(207,170,3)" fg:x="14363" fg:w="5"/><text x="44.0958%" y="735.50"></text></g><g><title>&lt;tokio::io::split::Guard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="43.8458%" y="709" width="0.0153%" height="15" fill="rgb(236,100,52)" fg:x="14363" fg:w="5"/><text x="44.0958%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (5 samples, 0.02%)</title><rect x="43.8458%" y="693" width="0.0153%" height="15" fill="rgb(246,78,51)" fg:x="14363" fg:w="5"/><text x="44.0958%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.02%)</title><rect x="43.8458%" y="677" width="0.0153%" height="15" fill="rgb(211,17,15)" fg:x="14363" fg:w="5"/><text x="44.0958%" y="687.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,152 samples, 3.52%)</title><rect x="40.3474%" y="757" width="3.5167%" height="15" fill="rgb(209,59,46)" fg:x="13217" fg:w="1152"/><text x="40.5974%" y="767.50">&lt;&amp;m..</text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,152 samples, 3.52%)</title><rect x="40.3474%" y="741" width="3.5167%" height="15" fill="rgb(210,92,25)" fg:x="13217" fg:w="1152"/><text x="40.5974%" y="751.50">&lt;to..</text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.03%)</title><rect x="43.8641%" y="757" width="0.0336%" height="15" fill="rgb(238,174,52)" fg:x="14369" fg:w="11"/><text x="44.1141%" y="767.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (1,201 samples, 3.67%)</title><rect x="40.2344%" y="773" width="3.6663%" height="15" fill="rgb(230,73,7)" fg:x="13180" fg:w="1201"/><text x="40.4844%" y="783.50">&lt;tok..</text></g><g><title>std::io::error::Error::kind (7 samples, 0.02%)</title><rect x="44.0106%" y="645" width="0.0214%" height="15" fill="rgb(243,124,40)" fg:x="14417" fg:w="7"/><text x="44.2606%" y="655.50"></text></g><g><title>std::sys::unix::decode_error_kind (5 samples, 0.02%)</title><rect x="44.0167%" y="629" width="0.0153%" height="15" fill="rgb(244,170,11)" fg:x="14419" fg:w="5"/><text x="44.2667%" y="639.50"></text></g><g><title>tokio::coop::poll_proceed (6 samples, 0.02%)</title><rect x="44.0717%" y="629" width="0.0183%" height="15" fill="rgb(207,114,54)" fg:x="14437" fg:w="6"/><text x="44.3217%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="44.0717%" y="613" width="0.0183%" height="15" fill="rgb(205,42,20)" fg:x="14437" fg:w="6"/><text x="44.3217%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="44.0717%" y="597" width="0.0183%" height="15" fill="rgb(230,30,28)" fg:x="14437" fg:w="6"/><text x="44.3217%" y="607.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (5 samples, 0.02%)</title><rect x="44.0747%" y="581" width="0.0153%" height="15" fill="rgb(205,73,54)" fg:x="14438" fg:w="5"/><text x="44.3247%" y="591.50"></text></g><g><title>tokio::coop::Budget::decrement (4 samples, 0.01%)</title><rect x="44.0778%" y="565" width="0.0122%" height="15" fill="rgb(254,227,23)" fg:x="14439" fg:w="4"/><text x="44.3278%" y="575.50"></text></g><g><title>tokio::io::driver::Handle::inner (11 samples, 0.03%)</title><rect x="44.0900%" y="629" width="0.0336%" height="15" fill="rgb(228,202,34)" fg:x="14443" fg:w="11"/><text x="44.3400%" y="639.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (11 samples, 0.03%)</title><rect x="44.0900%" y="613" width="0.0336%" height="15" fill="rgb(222,225,37)" fg:x="14443" fg:w="11"/><text x="44.3400%" y="623.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (49 samples, 0.15%)</title><rect x="44.0350%" y="645" width="0.1496%" height="15" fill="rgb(221,14,54)" fg:x="14425" fg:w="49"/><text x="44.2850%" y="655.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (20 samples, 0.06%)</title><rect x="44.1236%" y="629" width="0.0611%" height="15" fill="rgb(254,102,2)" fg:x="14454" fg:w="20"/><text x="44.3736%" y="639.50"></text></g><g><title>tokio::io::driver::Direction::mask (8 samples, 0.02%)</title><rect x="44.1602%" y="613" width="0.0244%" height="15" fill="rgb(232,104,17)" fg:x="14466" fg:w="8"/><text x="44.4102%" y="623.50"></text></g><g><title>__libc_disable_asynccancel (5 samples, 0.02%)</title><rect x="44.3037%" y="485" width="0.0153%" height="15" fill="rgb(250,220,14)" fg:x="14513" fg:w="5"/><text x="44.5537%" y="495.50"></text></g><g><title>__libc_enable_asynccancel (7 samples, 0.02%)</title><rect x="44.3189%" y="485" width="0.0214%" height="15" fill="rgb(241,158,9)" fg:x="14518" fg:w="7"/><text x="44.5689%" y="495.50"></text></g><g><title>fput_many (10 samples, 0.03%)</title><rect x="44.4777%" y="421" width="0.0305%" height="15" fill="rgb(246,9,43)" fg:x="14570" fg:w="10"/><text x="44.7277%" y="431.50"></text></g><g><title>import_single_range (4 samples, 0.01%)</title><rect x="44.5082%" y="421" width="0.0122%" height="15" fill="rgb(206,73,33)" fg:x="14580" fg:w="4"/><text x="44.7582%" y="431.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.04%)</title><rect x="44.5998%" y="389" width="0.0366%" height="15" fill="rgb(222,79,8)" fg:x="14610" fg:w="12"/><text x="44.8498%" y="399.50"></text></g><g><title>__cond_resched (5 samples, 0.02%)</title><rect x="44.6517%" y="373" width="0.0153%" height="15" fill="rgb(234,8,54)" fg:x="14627" fg:w="5"/><text x="44.9017%" y="383.50"></text></g><g><title>lock_sock_nested (155 samples, 0.47%)</title><rect x="44.6364%" y="389" width="0.4732%" height="15" fill="rgb(209,134,38)" fg:x="14622" fg:w="155"/><text x="44.8864%" y="399.50"></text></g><g><title>_raw_spin_lock_bh (145 samples, 0.44%)</title><rect x="44.6670%" y="373" width="0.4426%" height="15" fill="rgb(230,127,29)" fg:x="14632" fg:w="145"/><text x="44.9170%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (126 samples, 0.38%)</title><rect x="44.7250%" y="357" width="0.3846%" height="15" fill="rgb(242,44,41)" fg:x="14651" fg:w="126"/><text x="44.9750%" y="367.50"></text></g><g><title>__wake_up_common (8 samples, 0.02%)</title><rect x="45.1798%" y="245" width="0.0244%" height="15" fill="rgb(222,56,43)" fg:x="14800" fg:w="8"/><text x="45.4298%" y="255.50"></text></g><g><title>autoremove_wake_function (7 samples, 0.02%)</title><rect x="45.1829%" y="229" width="0.0214%" height="15" fill="rgb(238,39,47)" fg:x="14801" fg:w="7"/><text x="45.4329%" y="239.50"></text></g><g><title>try_to_wake_up (7 samples, 0.02%)</title><rect x="45.1829%" y="213" width="0.0214%" height="15" fill="rgb(226,79,43)" fg:x="14801" fg:w="7"/><text x="45.4329%" y="223.50"></text></g><g><title>sock_def_readable (12 samples, 0.04%)</title><rect x="45.1706%" y="325" width="0.0366%" height="15" fill="rgb(242,105,53)" fg:x="14797" fg:w="12"/><text x="45.4206%" y="335.50"></text></g><g><title>__wake_up_common_lock (11 samples, 0.03%)</title><rect x="45.1737%" y="309" width="0.0336%" height="15" fill="rgb(251,132,46)" fg:x="14798" fg:w="11"/><text x="45.4237%" y="319.50"></text></g><g><title>__wake_up_common (11 samples, 0.03%)</title><rect x="45.1737%" y="293" width="0.0336%" height="15" fill="rgb(231,77,14)" fg:x="14798" fg:w="11"/><text x="45.4237%" y="303.50"></text></g><g><title>ep_poll_callback (11 samples, 0.03%)</title><rect x="45.1737%" y="277" width="0.0336%" height="15" fill="rgb(240,135,9)" fg:x="14798" fg:w="11"/><text x="45.4237%" y="287.50"></text></g><g><title>__wake_up_common_lock (9 samples, 0.03%)</title><rect x="45.1798%" y="261" width="0.0275%" height="15" fill="rgb(248,109,14)" fg:x="14800" fg:w="9"/><text x="45.4298%" y="271.50"></text></g><g><title>tcp_ack (6 samples, 0.02%)</title><rect x="45.2073%" y="325" width="0.0183%" height="15" fill="rgb(227,146,52)" fg:x="14809" fg:w="6"/><text x="45.4573%" y="335.50"></text></g><g><title>__release_sock (31 samples, 0.09%)</title><rect x="45.1371%" y="373" width="0.0946%" height="15" fill="rgb(232,54,3)" fg:x="14786" fg:w="31"/><text x="45.3871%" y="383.50"></text></g><g><title>tcp_v4_do_rcv (27 samples, 0.08%)</title><rect x="45.1493%" y="357" width="0.0824%" height="15" fill="rgb(229,201,43)" fg:x="14790" fg:w="27"/><text x="45.3993%" y="367.50"></text></g><g><title>tcp_rcv_established (24 samples, 0.07%)</title><rect x="45.1584%" y="341" width="0.0733%" height="15" fill="rgb(252,161,33)" fg:x="14793" fg:w="24"/><text x="45.4084%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (11 samples, 0.03%)</title><rect x="45.2317%" y="373" width="0.0336%" height="15" fill="rgb(226,146,40)" fg:x="14817" fg:w="11"/><text x="45.4817%" y="383.50"></text></g><g><title>_raw_spin_lock_bh (7 samples, 0.02%)</title><rect x="45.2653%" y="373" width="0.0214%" height="15" fill="rgb(219,47,25)" fg:x="14828" fg:w="7"/><text x="45.5153%" y="383.50"></text></g><g><title>release_sock (71 samples, 0.22%)</title><rect x="45.1096%" y="389" width="0.2167%" height="15" fill="rgb(250,135,13)" fg:x="14777" fg:w="71"/><text x="45.3596%" y="399.50"></text></g><g><title>tcp_release_cb (12 samples, 0.04%)</title><rect x="45.2897%" y="373" width="0.0366%" height="15" fill="rgb(219,229,18)" fg:x="14836" fg:w="12"/><text x="45.5397%" y="383.50"></text></g><g><title>__cond_resched (4 samples, 0.01%)</title><rect x="45.6530%" y="341" width="0.0122%" height="15" fill="rgb(217,152,27)" fg:x="14955" fg:w="4"/><text x="45.9030%" y="351.50"></text></g><g><title>_copy_to_iter (103 samples, 0.31%)</title><rect x="45.6652%" y="341" width="0.3144%" height="15" fill="rgb(225,71,47)" fg:x="14959" fg:w="103"/><text x="45.9152%" y="351.50"></text></g><g><title>copy_user_generic_string (83 samples, 0.25%)</title><rect x="45.7262%" y="325" width="0.2534%" height="15" fill="rgb(220,139,14)" fg:x="14979" fg:w="83"/><text x="45.9762%" y="335.50"></text></g><g><title>__virt_addr_valid (11 samples, 0.03%)</title><rect x="46.0620%" y="309" width="0.0336%" height="15" fill="rgb(247,54,32)" fg:x="15089" fg:w="11"/><text x="46.3120%" y="319.50"></text></g><g><title>skb_copy_datagram_iter (216 samples, 0.66%)</title><rect x="45.4454%" y="373" width="0.6594%" height="15" fill="rgb(252,131,39)" fg:x="14887" fg:w="216"/><text x="45.6954%" y="383.50"></text></g><g><title>__skb_datagram_iter (210 samples, 0.64%)</title><rect x="45.4637%" y="357" width="0.6411%" height="15" fill="rgb(210,108,39)" fg:x="14893" fg:w="210"/><text x="45.7137%" y="367.50"></text></g><g><title>simple_copy_to_iter (41 samples, 0.13%)</title><rect x="45.9796%" y="341" width="0.1252%" height="15" fill="rgb(205,23,29)" fg:x="15062" fg:w="41"/><text x="46.2296%" y="351.50"></text></g><g><title>__check_object_size (40 samples, 0.12%)</title><rect x="45.9827%" y="325" width="0.1221%" height="15" fill="rgb(246,139,46)" fg:x="15063" fg:w="40"/><text x="46.2327%" y="335.50"></text></g><g><title>tcp_cleanup_rbuf (14 samples, 0.04%)</title><rect x="46.1048%" y="373" width="0.0427%" height="15" fill="rgb(250,81,26)" fg:x="15103" fg:w="14"/><text x="46.3548%" y="383.50"></text></g><g><title>tcp_rcv_space_adjust (59 samples, 0.18%)</title><rect x="46.1475%" y="373" width="0.1801%" height="15" fill="rgb(214,104,7)" fg:x="15117" fg:w="59"/><text x="46.3975%" y="383.50"></text></g><g><title>tcp_mstamp_refresh (46 samples, 0.14%)</title><rect x="46.1872%" y="357" width="0.1404%" height="15" fill="rgb(233,189,8)" fg:x="15130" fg:w="46"/><text x="46.4372%" y="367.50"></text></g><g><title>ktime_get (43 samples, 0.13%)</title><rect x="46.1963%" y="341" width="0.1313%" height="15" fill="rgb(228,141,17)" fg:x="15133" fg:w="43"/><text x="46.4463%" y="351.50"></text></g><g><title>read_tsc (29 samples, 0.09%)</title><rect x="46.2391%" y="325" width="0.0885%" height="15" fill="rgb(247,157,1)" fg:x="15147" fg:w="29"/><text x="46.4891%" y="335.50"></text></g><g><title>inet_recvmsg (593 samples, 1.81%)</title><rect x="44.5204%" y="421" width="1.8102%" height="15" fill="rgb(249,225,5)" fg:x="14584" fg:w="593"/><text x="44.7704%" y="431.50">i..</text></g><g><title>tcp_recvmsg (586 samples, 1.79%)</title><rect x="44.5418%" y="405" width="1.7889%" height="15" fill="rgb(242,55,13)" fg:x="14591" fg:w="586"/><text x="44.7918%" y="415.50">t..</text></g><g><title>tcp_recvmsg_locked (329 samples, 1.00%)</title><rect x="45.3263%" y="389" width="1.0043%" height="15" fill="rgb(230,49,50)" fg:x="14848" fg:w="329"/><text x="45.5763%" y="399.50"></text></g><g><title>__x86_indirect_thunk_rax (13 samples, 0.04%)</title><rect x="46.3887%" y="389" width="0.0397%" height="15" fill="rgb(241,111,38)" fg:x="15196" fg:w="13"/><text x="46.6387%" y="399.50"></text></g><g><title>sock_recvmsg (93 samples, 0.28%)</title><rect x="46.3307%" y="421" width="0.2839%" height="15" fill="rgb(252,155,4)" fg:x="15177" fg:w="93"/><text x="46.5807%" y="431.50"></text></g><g><title>security_socket_recvmsg (87 samples, 0.27%)</title><rect x="46.3490%" y="405" width="0.2656%" height="15" fill="rgb(212,69,32)" fg:x="15183" fg:w="87"/><text x="46.5990%" y="415.50"></text></g><g><title>selinux_socket_recvmsg (60 samples, 0.18%)</title><rect x="46.4314%" y="389" width="0.1832%" height="15" fill="rgb(243,107,47)" fg:x="15210" fg:w="60"/><text x="46.6814%" y="399.50"></text></g><g><title>avc_has_perm (26 samples, 0.08%)</title><rect x="46.5352%" y="373" width="0.0794%" height="15" fill="rgb(247,130,12)" fg:x="15244" fg:w="26"/><text x="46.7852%" y="383.50"></text></g><g><title>avc_lookup (15 samples, 0.05%)</title><rect x="46.5688%" y="357" width="0.0458%" height="15" fill="rgb(233,74,16)" fg:x="15255" fg:w="15"/><text x="46.8188%" y="367.50"></text></g><g><title>__x64_sys_recvfrom (753 samples, 2.30%)</title><rect x="44.3892%" y="453" width="2.2987%" height="15" fill="rgb(208,58,18)" fg:x="14541" fg:w="753"/><text x="44.6392%" y="463.50">_..</text></g><g><title>__sys_recvfrom (745 samples, 2.27%)</title><rect x="44.4136%" y="437" width="2.2743%" height="15" fill="rgb(242,225,1)" fg:x="14549" fg:w="745"/><text x="44.6636%" y="447.50">_..</text></g><g><title>sockfd_lookup_light (24 samples, 0.07%)</title><rect x="46.6146%" y="421" width="0.0733%" height="15" fill="rgb(249,39,40)" fg:x="15270" fg:w="24"/><text x="46.8646%" y="431.50"></text></g><g><title>__fget_light (21 samples, 0.06%)</title><rect x="46.6237%" y="405" width="0.0641%" height="15" fill="rgb(207,72,44)" fg:x="15273" fg:w="21"/><text x="46.8737%" y="415.50"></text></g><g><title>__fget_files (15 samples, 0.05%)</title><rect x="46.6420%" y="389" width="0.0458%" height="15" fill="rgb(215,193,12)" fg:x="15279" fg:w="15"/><text x="46.8920%" y="399.50"></text></g><g><title>__x86_indirect_thunk_rax (5 samples, 0.02%)</title><rect x="46.6878%" y="453" width="0.0153%" height="15" fill="rgb(248,41,39)" fg:x="15294" fg:w="5"/><text x="46.9378%" y="463.50"></text></g><g><title>syscall_enter_from_user_mode (6 samples, 0.02%)</title><rect x="46.7031%" y="453" width="0.0183%" height="15" fill="rgb(253,85,4)" fg:x="15299" fg:w="6"/><text x="46.9531%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="46.7458%" y="437" width="0.0153%" height="15" fill="rgb(243,70,31)" fg:x="15313" fg:w="5"/><text x="46.9958%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (803 samples, 2.45%)</title><rect x="44.3403%" y="485" width="2.4513%" height="15" fill="rgb(253,195,26)" fg:x="14525" fg:w="803"/><text x="44.5903%" y="495.50">en..</text></g><g><title>do_syscall_64 (795 samples, 2.43%)</title><rect x="44.3647%" y="469" width="2.4269%" height="15" fill="rgb(243,42,11)" fg:x="14533" fg:w="795"/><text x="44.6147%" y="479.50">do..</text></g><g><title>syscall_exit_to_user_mode (23 samples, 0.07%)</title><rect x="46.7214%" y="453" width="0.0702%" height="15" fill="rgb(239,66,17)" fg:x="15305" fg:w="23"/><text x="46.9714%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (10 samples, 0.03%)</title><rect x="46.7611%" y="437" width="0.0305%" height="15" fill="rgb(217,132,21)" fg:x="15318" fg:w="10"/><text x="47.0111%" y="447.50"></text></g><g><title>__libc_recv (850 samples, 2.59%)</title><rect x="44.2274%" y="501" width="2.5948%" height="15" fill="rgb(252,202,21)" fg:x="14488" fg:w="850"/><text x="44.4774%" y="511.50">__..</text></g><g><title>syscall_return_via_sysret (10 samples, 0.03%)</title><rect x="46.7916%" y="485" width="0.0305%" height="15" fill="rgb(233,98,36)" fg:x="15328" fg:w="10"/><text x="47.0416%" y="495.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (963 samples, 2.94%)</title><rect x="43.9526%" y="677" width="2.9397%" height="15" fill="rgb(216,153,54)" fg:x="14398" fg:w="963"/><text x="44.2026%" y="687.50">to..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (957 samples, 2.92%)</title><rect x="43.9709%" y="661" width="2.9214%" height="15" fill="rgb(250,99,7)" fg:x="14404" fg:w="957"/><text x="44.2209%" y="671.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (887 samples, 2.71%)</title><rect x="44.1846%" y="645" width="2.7077%" height="15" fill="rgb(207,56,50)" fg:x="14474" fg:w="887"/><text x="44.4346%" y="655.50">to..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (887 samples, 2.71%)</title><rect x="44.1846%" y="629" width="2.7077%" height="15" fill="rgb(244,61,34)" fg:x="14474" fg:w="887"/><text x="44.4346%" y="639.50">&lt;&amp;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (875 samples, 2.67%)</title><rect x="44.2213%" y="613" width="2.6711%" height="15" fill="rgb(241,50,38)" fg:x="14486" fg:w="875"/><text x="44.4713%" y="623.50">mi..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (875 samples, 2.67%)</title><rect x="44.2213%" y="597" width="2.6711%" height="15" fill="rgb(212,166,30)" fg:x="14486" fg:w="875"/><text x="44.4713%" y="607.50">mi..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (875 samples, 2.67%)</title><rect x="44.2213%" y="581" width="2.6711%" height="15" fill="rgb(249,127,32)" fg:x="14486" fg:w="875"/><text x="44.4713%" y="591.50">&lt;&amp;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (875 samples, 2.67%)</title><rect x="44.2213%" y="565" width="2.6711%" height="15" fill="rgb(209,103,0)" fg:x="14486" fg:w="875"/><text x="44.4713%" y="575.50">&lt;&amp;..</text></g><g><title>std::sys_common::net::TcpStream::read (873 samples, 2.66%)</title><rect x="44.2274%" y="549" width="2.6650%" height="15" fill="rgb(238,209,51)" fg:x="14488" fg:w="873"/><text x="44.4774%" y="559.50">st..</text></g><g><title>std::sys::unix::net::Socket::read (873 samples, 2.66%)</title><rect x="44.2274%" y="533" width="2.6650%" height="15" fill="rgb(237,56,23)" fg:x="14488" fg:w="873"/><text x="44.4774%" y="543.50">st..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (873 samples, 2.66%)</title><rect x="44.2274%" y="517" width="2.6650%" height="15" fill="rgb(215,153,46)" fg:x="14488" fg:w="873"/><text x="44.4774%" y="527.50">st..</text></g><g><title>tokio::io::driver::registration::Registration::poll_read_io (23 samples, 0.07%)</title><rect x="46.8222%" y="501" width="0.0702%" height="15" fill="rgb(224,49,31)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="511.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (23 samples, 0.07%)</title><rect x="46.8222%" y="485" width="0.0702%" height="15" fill="rgb(250,18,42)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="495.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read::{{closure}} (23 samples, 0.07%)</title><rect x="46.8222%" y="469" width="0.0702%" height="15" fill="rgb(215,176,39)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="479.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (23 samples, 0.07%)</title><rect x="46.8222%" y="453" width="0.0702%" height="15" fill="rgb(223,77,29)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="463.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (23 samples, 0.07%)</title><rect x="46.8222%" y="437" width="0.0702%" height="15" fill="rgb(234,94,52)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="447.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (23 samples, 0.07%)</title><rect x="46.8222%" y="421" width="0.0702%" height="15" fill="rgb(220,154,50)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (23 samples, 0.07%)</title><rect x="46.8222%" y="405" width="0.0702%" height="15" fill="rgb(212,11,10)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="415.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (23 samples, 0.07%)</title><rect x="46.8222%" y="389" width="0.0702%" height="15" fill="rgb(205,166,19)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="399.50"></text></g><g><title>std::sys_common::net::TcpStream::read (23 samples, 0.07%)</title><rect x="46.8222%" y="373" width="0.0702%" height="15" fill="rgb(244,198,16)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="383.50"></text></g><g><title>std::sys::unix::net::Socket::read (23 samples, 0.07%)</title><rect x="46.8222%" y="357" width="0.0702%" height="15" fill="rgb(219,69,12)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="367.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (23 samples, 0.07%)</title><rect x="46.8222%" y="341" width="0.0702%" height="15" fill="rgb(245,30,7)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="351.50"></text></g><g><title>__libc_recv (23 samples, 0.07%)</title><rect x="46.8222%" y="325" width="0.0702%" height="15" fill="rgb(218,221,48)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="335.50"></text></g><g><title>__entry_text_start (23 samples, 0.07%)</title><rect x="46.8222%" y="309" width="0.0702%" height="15" fill="rgb(216,66,15)" fg:x="15338" fg:w="23"/><text x="47.0722%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (9 samples, 0.03%)</title><rect x="46.8924%" y="661" width="0.0275%" height="15" fill="rgb(226,122,50)" fg:x="15361" fg:w="9"/><text x="47.1424%" y="671.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (13 samples, 0.04%)</title><rect x="46.8924%" y="677" width="0.0397%" height="15" fill="rgb(239,156,16)" fg:x="15361" fg:w="13"/><text x="47.1424%" y="687.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (4 samples, 0.01%)</title><rect x="46.9198%" y="661" width="0.0122%" height="15" fill="rgb(224,27,38)" fg:x="15370" fg:w="4"/><text x="47.1698%" y="671.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (992 samples, 3.03%)</title><rect x="43.9190%" y="725" width="3.0283%" height="15" fill="rgb(224,39,27)" fg:x="14387" fg:w="992"/><text x="44.1690%" y="735.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (989 samples, 3.02%)</title><rect x="43.9282%" y="709" width="3.0191%" height="15" fill="rgb(215,92,29)" fg:x="14390" fg:w="989"/><text x="44.1782%" y="719.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (989 samples, 3.02%)</title><rect x="43.9282%" y="693" width="3.0191%" height="15" fill="rgb(207,159,16)" fg:x="14390" fg:w="989"/><text x="44.1782%" y="703.50">tok..</text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (5 samples, 0.02%)</title><rect x="46.9320%" y="677" width="0.0153%" height="15" fill="rgb(238,163,47)" fg:x="15374" fg:w="5"/><text x="47.1820%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::io::split::Guard&lt;tokio::net::tcp::stream::TcpStream&gt;&gt; (6 samples, 0.02%)</title><rect x="46.9473%" y="725" width="0.0183%" height="15" fill="rgb(219,91,49)" fg:x="15379" fg:w="6"/><text x="47.1973%" y="735.50"></text></g><g><title>&lt;tokio::io::split::Guard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="46.9473%" y="709" width="0.0183%" height="15" fill="rgb(227,167,31)" fg:x="15379" fg:w="6"/><text x="47.1973%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::store (6 samples, 0.02%)</title><rect x="46.9473%" y="693" width="0.0183%" height="15" fill="rgb(234,80,54)" fg:x="15379" fg:w="6"/><text x="47.1973%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_store (6 samples, 0.02%)</title><rect x="46.9473%" y="677" width="0.0183%" height="15" fill="rgb(212,114,2)" fg:x="15379" fg:w="6"/><text x="47.1973%" y="687.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (1,008 samples, 3.08%)</title><rect x="43.9068%" y="757" width="3.0771%" height="15" fill="rgb(234,50,24)" fg:x="14383" fg:w="1008"/><text x="44.1568%" y="767.50">&lt;&amp;m..</text></g><g><title>&lt;tokio::io::split::ReadHalf&lt;T&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (1,005 samples, 3.07%)</title><rect x="43.9160%" y="741" width="3.0680%" height="15" fill="rgb(221,68,8)" fg:x="14386" fg:w="1005"/><text x="44.1660%" y="751.50">&lt;to..</text></g><g><title>tokio::io::split::Inner&lt;T&gt;::poll_lock (6 samples, 0.02%)</title><rect x="46.9656%" y="725" width="0.0183%" height="15" fill="rgb(254,180,31)" fg:x="15385" fg:w="6"/><text x="47.2156%" y="735.50"></text></g><g><title>&lt;tokio::io::util::read_exact::ReadExact&lt;A&gt; as core::future::future::Future&gt;::poll (1,012 samples, 3.09%)</title><rect x="43.9007%" y="773" width="3.0893%" height="15" fill="rgb(247,130,50)" fg:x="14381" fg:w="1012"/><text x="44.1507%" y="783.50">&lt;to..</text></g><g><title>_int_malloc (160 samples, 0.49%)</title><rect x="47.1488%" y="645" width="0.4884%" height="15" fill="rgb(211,109,4)" fg:x="15445" fg:w="160"/><text x="47.3988%" y="655.50"></text></g><g><title>__GI___libc_malloc (213 samples, 0.65%)</title><rect x="46.9992%" y="661" width="0.6502%" height="15" fill="rgb(238,50,21)" fg:x="15396" fg:w="213"/><text x="47.2492%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.01%)</title><rect x="47.6372%" y="645" width="0.0122%" height="15" fill="rgb(225,57,45)" fg:x="15605" fg:w="4"/><text x="47.8872%" y="655.50"></text></g><g><title>do_syscall_64 (4 samples, 0.01%)</title><rect x="47.6372%" y="629" width="0.0122%" height="15" fill="rgb(209,196,50)" fg:x="15605" fg:w="4"/><text x="47.8872%" y="639.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.01%)</title><rect x="47.6372%" y="613" width="0.0122%" height="15" fill="rgb(242,140,13)" fg:x="15605" fg:w="4"/><text x="47.8872%" y="623.50"></text></g><g><title>do_futex (4 samples, 0.01%)</title><rect x="47.6372%" y="597" width="0.0122%" height="15" fill="rgb(217,111,7)" fg:x="15605" fg:w="4"/><text x="47.8872%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (221 samples, 0.67%)</title><rect x="46.9900%" y="773" width="0.6746%" height="15" fill="rgb(253,193,51)" fg:x="15393" fg:w="221"/><text x="47.2400%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (221 samples, 0.67%)</title><rect x="46.9900%" y="757" width="0.6746%" height="15" fill="rgb(252,70,29)" fg:x="15393" fg:w="221"/><text x="47.2400%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (221 samples, 0.67%)</title><rect x="46.9900%" y="741" width="0.6746%" height="15" fill="rgb(232,127,12)" fg:x="15393" fg:w="221"/><text x="47.2400%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (219 samples, 0.67%)</title><rect x="46.9962%" y="725" width="0.6685%" height="15" fill="rgb(211,180,21)" fg:x="15395" fg:w="219"/><text x="47.2462%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (219 samples, 0.67%)</title><rect x="46.9962%" y="709" width="0.6685%" height="15" fill="rgb(229,72,13)" fg:x="15395" fg:w="219"/><text x="47.2462%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (219 samples, 0.67%)</title><rect x="46.9962%" y="693" width="0.6685%" height="15" fill="rgb(240,211,49)" fg:x="15395" fg:w="219"/><text x="47.2462%" y="703.50"></text></g><g><title>alloc::alloc::alloc (218 samples, 0.67%)</title><rect x="46.9992%" y="677" width="0.6655%" height="15" fill="rgb(219,149,40)" fg:x="15396" fg:w="218"/><text x="47.2492%" y="687.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="47.6494%" y="661" width="0.0153%" height="15" fill="rgb(210,127,46)" fg:x="15609" fg:w="5"/><text x="47.8994%" y="671.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (4 samples, 0.01%)</title><rect x="47.6677%" y="773" width="0.0122%" height="15" fill="rgb(220,106,7)" fg:x="15615" fg:w="4"/><text x="47.9177%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,497 samples, 7.62%)</title><rect x="40.0696%" y="805" width="7.6226%" height="15" fill="rgb(249,31,22)" fg:x="13126" fg:w="2497"/><text x="40.3196%" y="815.50">&lt;core::fut..</text></g><g><title>scylla::frame::read_response_frame::{{closure}} (2,490 samples, 7.60%)</title><rect x="40.0910%" y="789" width="7.6012%" height="15" fill="rgb(253,1,49)" fg:x="13133" fg:w="2490"/><text x="40.3410%" y="799.50">scylla::fr..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="47.6922%" y="805" width="0.0183%" height="15" fill="rgb(227,144,33)" fg:x="15623" fg:w="6"/><text x="47.9422%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.01%)</title><rect x="47.7166%" y="741" width="0.0122%" height="15" fill="rgb(249,163,44)" fg:x="15631" fg:w="4"/><text x="47.9666%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;scylla::transport::connection::ResponseHandlerMap&gt;&gt; (13 samples, 0.04%)</title><rect x="47.7105%" y="805" width="0.0397%" height="15" fill="rgb(234,15,39)" fg:x="15629" fg:w="13"/><text x="47.9605%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="47.7105%" y="789" width="0.0397%" height="15" fill="rgb(207,66,16)" fg:x="15629" fg:w="13"/><text x="47.9605%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (13 samples, 0.04%)</title><rect x="47.7105%" y="773" width="0.0397%" height="15" fill="rgb(233,112,24)" fg:x="15629" fg:w="13"/><text x="47.9605%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (12 samples, 0.04%)</title><rect x="47.7135%" y="757" width="0.0366%" height="15" fill="rgb(230,90,22)" fg:x="15630" fg:w="12"/><text x="47.9635%" y="767.50"></text></g><g><title>pthread_mutex_unlock (7 samples, 0.02%)</title><rect x="47.7288%" y="741" width="0.0214%" height="15" fill="rgb(229,61,13)" fg:x="15635" fg:w="7"/><text x="47.9788%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="47.7837%" y="677" width="0.0153%" height="15" fill="rgb(225,57,24)" fg:x="15653" fg:w="5"/><text x="48.0337%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="47.8021%" y="661" width="0.0244%" height="15" fill="rgb(208,169,48)" fg:x="15659" fg:w="8"/><text x="48.0521%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (19 samples, 0.06%)</title><rect x="47.7746%" y="725" width="0.0580%" height="15" fill="rgb(244,218,51)" fg:x="15650" fg:w="19"/><text x="48.0246%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (19 samples, 0.06%)</title><rect x="47.7746%" y="709" width="0.0580%" height="15" fill="rgb(214,148,10)" fg:x="15650" fg:w="19"/><text x="48.0246%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (19 samples, 0.06%)</title><rect x="47.7746%" y="693" width="0.0580%" height="15" fill="rgb(225,174,27)" fg:x="15650" fg:w="19"/><text x="48.0246%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.03%)</title><rect x="47.7990%" y="677" width="0.0336%" height="15" fill="rgb(230,96,26)" fg:x="15658" fg:w="11"/><text x="48.0490%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.08%)</title><rect x="47.7715%" y="741" width="0.0824%" height="15" fill="rgb(232,10,30)" fg:x="15649" fg:w="27"/><text x="48.0215%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (4 samples, 0.01%)</title><rect x="47.8417%" y="725" width="0.0122%" height="15" fill="rgb(222,8,50)" fg:x="15672" fg:w="4"/><text x="48.0917%" y="735.50"></text></g><g><title>core::hash::Hasher::write_i16 (4 samples, 0.01%)</title><rect x="47.8417%" y="709" width="0.0122%" height="15" fill="rgb(213,81,27)" fg:x="15672" fg:w="4"/><text x="48.0917%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u16 (4 samples, 0.01%)</title><rect x="47.8417%" y="693" width="0.0122%" height="15" fill="rgb(245,50,10)" fg:x="15672" fg:w="4"/><text x="48.0917%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.10%)</title><rect x="47.8570%" y="725" width="0.1007%" height="15" fill="rgb(216,100,18)" fg:x="15677" fg:w="33"/><text x="48.1070%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (10 samples, 0.03%)</title><rect x="47.9272%" y="709" width="0.0305%" height="15" fill="rgb(236,147,54)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (10 samples, 0.03%)</title><rect x="47.9272%" y="693" width="0.0305%" height="15" fill="rgb(205,143,26)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (10 samples, 0.03%)</title><rect x="47.9272%" y="677" width="0.0305%" height="15" fill="rgb(236,26,9)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.03%)</title><rect x="47.9272%" y="661" width="0.0305%" height="15" fill="rgb(221,165,53)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.03%)</title><rect x="47.9272%" y="645" width="0.0305%" height="15" fill="rgb(214,110,17)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.03%)</title><rect x="47.9272%" y="629" width="0.0305%" height="15" fill="rgb(237,197,12)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (10 samples, 0.03%)</title><rect x="47.9272%" y="613" width="0.0305%" height="15" fill="rgb(205,84,17)" fg:x="15700" fg:w="10"/><text x="48.1772%" y="623.50"></text></g><g><title>scylla::transport::connection::ResponseHandlerMap::take (72 samples, 0.22%)</title><rect x="47.7502%" y="805" width="0.2198%" height="15" fill="rgb(237,18,45)" fg:x="15642" fg:w="72"/><text x="48.0002%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (71 samples, 0.22%)</title><rect x="47.7532%" y="789" width="0.2167%" height="15" fill="rgb(221,87,14)" fg:x="15643" fg:w="71"/><text x="48.0032%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (71 samples, 0.22%)</title><rect x="47.7532%" y="773" width="0.2167%" height="15" fill="rgb(238,186,15)" fg:x="15643" fg:w="71"/><text x="48.0032%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (67 samples, 0.20%)</title><rect x="47.7654%" y="757" width="0.2045%" height="15" fill="rgb(208,115,11)" fg:x="15647" fg:w="67"/><text x="48.0154%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (38 samples, 0.12%)</title><rect x="47.8540%" y="741" width="0.1160%" height="15" fill="rgb(254,175,0)" fg:x="15676" fg:w="38"/><text x="48.1040%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (4 samples, 0.01%)</title><rect x="47.9578%" y="725" width="0.0122%" height="15" fill="rgb(227,24,42)" fg:x="15710" fg:w="4"/><text x="48.2078%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (4 samples, 0.01%)</title><rect x="47.9578%" y="709" width="0.0122%" height="15" fill="rgb(223,211,37)" fg:x="15710" fg:w="4"/><text x="48.2078%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (4 samples, 0.01%)</title><rect x="47.9578%" y="693" width="0.0122%" height="15" fill="rgb(235,49,27)" fg:x="15710" fg:w="4"/><text x="48.2078%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (13 samples, 0.04%)</title><rect x="47.9700%" y="805" width="0.0397%" height="15" fill="rgb(254,97,51)" fg:x="15714" fg:w="13"/><text x="48.2200%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (12 samples, 0.04%)</title><rect x="47.9730%" y="789" width="0.0366%" height="15" fill="rgb(249,51,40)" fg:x="15715" fg:w="12"/><text x="48.2230%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (12 samples, 0.04%)</title><rect x="47.9730%" y="773" width="0.0366%" height="15" fill="rgb(210,128,45)" fg:x="15715" fg:w="12"/><text x="48.2230%" y="783.50"></text></g><g><title>__GI___pthread_mutex_trylock (12 samples, 0.04%)</title><rect x="47.9730%" y="757" width="0.0366%" height="15" fill="rgb(224,137,50)" fg:x="15715" fg:w="12"/><text x="48.2230%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="48.0463%" y="789" width="0.0153%" height="15" fill="rgb(242,15,9)" fg:x="15739" fg:w="5"/><text x="48.2963%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="48.0463%" y="773" width="0.0153%" height="15" fill="rgb(233,187,41)" fg:x="15739" fg:w="5"/><text x="48.2963%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (140 samples, 0.43%)</title><rect x="48.0646%" y="789" width="0.4274%" height="15" fill="rgb(227,2,29)" fg:x="15745" fg:w="140"/><text x="48.3146%" y="799.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (140 samples, 0.43%)</title><rect x="48.0646%" y="773" width="0.4274%" height="15" fill="rgb(222,70,3)" fg:x="15745" fg:w="140"/><text x="48.3146%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::result::Result&lt;scylla::transport::connection::TaskResponse,scylla::transport::errors::QueryError&gt;&gt;&gt; (137 samples, 0.42%)</title><rect x="48.0738%" y="757" width="0.4182%" height="15" fill="rgb(213,11,42)" fg:x="15748" fg:w="137"/><text x="48.3238%" y="767.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (5 samples, 0.02%)</title><rect x="48.4950%" y="773" width="0.0153%" height="15" fill="rgb(225,150,9)" fg:x="15886" fg:w="5"/><text x="48.7450%" y="783.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (13 samples, 0.04%)</title><rect x="48.5194%" y="773" width="0.0397%" height="15" fill="rgb(230,162,45)" fg:x="15894" fg:w="13"/><text x="48.7694%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (96 samples, 0.29%)</title><rect x="48.7911%" y="645" width="0.2931%" height="15" fill="rgb(222,14,52)" fg:x="15983" fg:w="96"/><text x="49.0411%" y="655.50"></text></g><g><title>alloc::rc::is_dangling (96 samples, 0.29%)</title><rect x="48.7911%" y="629" width="0.2931%" height="15" fill="rgb(254,198,14)" fg:x="15983" fg:w="96"/><text x="49.0411%" y="639.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (143 samples, 0.44%)</title><rect x="48.6507%" y="661" width="0.4365%" height="15" fill="rgb(220,217,30)" fg:x="15937" fg:w="143"/><text x="48.9007%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="49.0872%" y="661" width="0.0214%" height="15" fill="rgb(215,146,41)" fg:x="16080" fg:w="7"/><text x="49.3372%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="49.0872%" y="645" width="0.0214%" height="15" fill="rgb(217,27,36)" fg:x="16080" fg:w="7"/><text x="49.3372%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (16 samples, 0.05%)</title><rect x="49.1086%" y="661" width="0.0488%" height="15" fill="rgb(219,218,39)" fg:x="16087" fg:w="16"/><text x="49.3586%" y="671.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (44 samples, 0.13%)</title><rect x="49.1575%" y="661" width="0.1343%" height="15" fill="rgb(219,4,42)" fg:x="16103" fg:w="44"/><text x="49.4075%" y="671.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (33 samples, 0.10%)</title><rect x="49.1910%" y="645" width="0.1007%" height="15" fill="rgb(249,119,36)" fg:x="16114" fg:w="33"/><text x="49.4410%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (32 samples, 0.10%)</title><rect x="49.1941%" y="629" width="0.0977%" height="15" fill="rgb(209,23,33)" fg:x="16115" fg:w="32"/><text x="49.4441%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_or (32 samples, 0.10%)</title><rect x="49.1941%" y="613" width="0.0977%" height="15" fill="rgb(211,10,0)" fg:x="16115" fg:w="32"/><text x="49.4441%" y="623.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (21 samples, 0.06%)</title><rect x="49.2918%" y="661" width="0.0641%" height="15" fill="rgb(208,99,37)" fg:x="16147" fg:w="21"/><text x="49.5418%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (21 samples, 0.06%)</title><rect x="49.2918%" y="645" width="0.0641%" height="15" fill="rgb(213,132,31)" fg:x="16147" fg:w="21"/><text x="49.5418%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_store (21 samples, 0.06%)</title><rect x="49.2918%" y="629" width="0.0641%" height="15" fill="rgb(243,129,40)" fg:x="16147" fg:w="21"/><text x="49.5418%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (4 samples, 0.01%)</title><rect x="49.3589%" y="645" width="0.0122%" height="15" fill="rgb(210,66,33)" fg:x="16169" fg:w="4"/><text x="49.6089%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (4 samples, 0.01%)</title><rect x="49.3589%" y="629" width="0.0122%" height="15" fill="rgb(209,189,4)" fg:x="16169" fg:w="4"/><text x="49.6089%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::load (4 samples, 0.01%)</title><rect x="49.3589%" y="613" width="0.0122%" height="15" fill="rgb(214,107,37)" fg:x="16169" fg:w="4"/><text x="49.6089%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="49.3589%" y="597" width="0.0122%" height="15" fill="rgb(245,88,54)" fg:x="16169" fg:w="4"/><text x="49.6089%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="49.3589%" y="581" width="0.0122%" height="15" fill="rgb(205,146,20)" fg:x="16169" fg:w="4"/><text x="49.6089%" y="591.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.01%)</title><rect x="49.3742%" y="485" width="0.0122%" height="15" fill="rgb(220,161,25)" fg:x="16174" fg:w="4"/><text x="49.6242%" y="495.50"></text></g><g><title>do_futex (4 samples, 0.01%)</title><rect x="49.3742%" y="469" width="0.0122%" height="15" fill="rgb(215,152,15)" fg:x="16174" fg:w="4"/><text x="49.6242%" y="479.50"></text></g><g><title>futex_wake (4 samples, 0.01%)</title><rect x="49.3742%" y="453" width="0.0122%" height="15" fill="rgb(233,192,44)" fg:x="16174" fg:w="4"/><text x="49.6242%" y="463.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.02%)</title><rect x="49.3742%" y="581" width="0.0183%" height="15" fill="rgb(240,170,46)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 0.02%)</title><rect x="49.3742%" y="565" width="0.0183%" height="15" fill="rgb(207,104,33)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="575.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (6 samples, 0.02%)</title><rect x="49.3742%" y="549" width="0.0183%" height="15" fill="rgb(219,21,39)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="559.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="49.3742%" y="533" width="0.0183%" height="15" fill="rgb(214,133,29)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="49.3742%" y="517" width="0.0183%" height="15" fill="rgb(226,93,6)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="527.50"></text></g><g><title>do_syscall_64 (6 samples, 0.02%)</title><rect x="49.3742%" y="501" width="0.0183%" height="15" fill="rgb(252,222,34)" fg:x="16174" fg:w="6"/><text x="49.6242%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (13 samples, 0.04%)</title><rect x="49.3559%" y="661" width="0.0397%" height="15" fill="rgb(252,92,48)" fg:x="16168" fg:w="13"/><text x="49.6059%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (8 samples, 0.02%)</title><rect x="49.3711%" y="645" width="0.0244%" height="15" fill="rgb(245,223,24)" fg:x="16173" fg:w="8"/><text x="49.6211%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (8 samples, 0.02%)</title><rect x="49.3711%" y="629" width="0.0244%" height="15" fill="rgb(205,176,3)" fg:x="16173" fg:w="8"/><text x="49.6211%" y="639.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="49.3711%" y="613" width="0.0244%" height="15" fill="rgb(235,151,15)" fg:x="16173" fg:w="8"/><text x="49.6211%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (8 samples, 0.02%)</title><rect x="49.3711%" y="597" width="0.0244%" height="15" fill="rgb(237,209,11)" fg:x="16173" fg:w="8"/><text x="49.6211%" y="607.50"></text></g><g><title>scylla::transport::connection::Connection::reader::{{closure}} (3,069 samples, 9.37%)</title><rect x="40.0299%" y="821" width="9.3687%" height="15" fill="rgb(243,227,24)" fg:x="13113" fg:w="3069"/><text x="40.2799%" y="831.50">scylla::trans..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (455 samples, 1.39%)</title><rect x="48.0096%" y="805" width="1.3890%" height="15" fill="rgb(239,193,16)" fg:x="15727" fg:w="455"/><text x="48.2596%" y="815.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (297 samples, 0.91%)</title><rect x="48.4920%" y="789" width="0.9066%" height="15" fill="rgb(231,27,9)" fg:x="15885" fg:w="297"/><text x="48.7420%" y="799.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (275 samples, 0.84%)</title><rect x="48.5591%" y="773" width="0.8395%" height="15" fill="rgb(219,169,10)" fg:x="15907" fg:w="275"/><text x="48.8091%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (275 samples, 0.84%)</title><rect x="48.5591%" y="757" width="0.8395%" height="15" fill="rgb(244,229,43)" fg:x="15907" fg:w="275"/><text x="48.8091%" y="767.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (275 samples, 0.84%)</title><rect x="48.5591%" y="741" width="0.8395%" height="15" fill="rgb(254,38,20)" fg:x="15907" fg:w="275"/><text x="48.8091%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (275 samples, 0.84%)</title><rect x="48.5591%" y="725" width="0.8395%" height="15" fill="rgb(250,47,30)" fg:x="15907" fg:w="275"/><text x="48.8091%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (275 samples, 0.84%)</title><rect x="48.5591%" y="709" width="0.8395%" height="15" fill="rgb(224,124,36)" fg:x="15907" fg:w="275"/><text x="48.8091%" y="719.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (245 samples, 0.75%)</title><rect x="48.6507%" y="693" width="0.7479%" height="15" fill="rgb(246,68,51)" fg:x="15937" fg:w="245"/><text x="48.9007%" y="703.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (245 samples, 0.75%)</title><rect x="48.6507%" y="677" width="0.7479%" height="15" fill="rgb(253,43,49)" fg:x="15937" fg:w="245"/><text x="48.9007%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (5 samples, 0.02%)</title><rect x="49.5604%" y="725" width="0.0153%" height="15" fill="rgb(219,54,36)" fg:x="16235" fg:w="5"/><text x="49.8104%" y="735.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="49.5604%" y="709" width="0.0153%" height="15" fill="rgb(227,133,34)" fg:x="16235" fg:w="5"/><text x="49.8104%" y="719.50"></text></g><g><title>tokio::coop::CURRENT::__getit (11 samples, 0.03%)</title><rect x="49.5848%" y="677" width="0.0336%" height="15" fill="rgb(247,227,15)" fg:x="16243" fg:w="11"/><text x="49.8348%" y="687.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="49.6062%" y="661" width="0.0122%" height="15" fill="rgb(229,96,14)" fg:x="16250" fg:w="4"/><text x="49.8562%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (5 samples, 0.02%)</title><rect x="49.6276%" y="661" width="0.0153%" height="15" fill="rgb(220,79,17)" fg:x="16257" fg:w="5"/><text x="49.8776%" y="671.50"></text></g><g><title>tokio::coop::poll_proceed (28 samples, 0.09%)</title><rect x="49.5757%" y="725" width="0.0855%" height="15" fill="rgb(205,131,53)" fg:x="16240" fg:w="28"/><text x="49.8257%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.09%)</title><rect x="49.5757%" y="709" width="0.0855%" height="15" fill="rgb(209,50,29)" fg:x="16240" fg:w="28"/><text x="49.8257%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.08%)</title><rect x="49.5848%" y="693" width="0.0763%" height="15" fill="rgb(245,86,46)" fg:x="16243" fg:w="25"/><text x="49.8348%" y="703.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (14 samples, 0.04%)</title><rect x="49.6184%" y="677" width="0.0427%" height="15" fill="rgb(235,66,46)" fg:x="16254" fg:w="14"/><text x="49.8684%" y="687.50"></text></g><g><title>tokio::coop::Budget::decrement (6 samples, 0.02%)</title><rect x="49.6428%" y="661" width="0.0183%" height="15" fill="rgb(232,148,31)" fg:x="16262" fg:w="6"/><text x="49.8928%" y="671.50"></text></g><g><title>&lt;(tokio::sync::batch_semaphore::Semaphore,usize) as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (21 samples, 0.06%)</title><rect x="49.7253%" y="693" width="0.0641%" height="15" fill="rgb(217,149,8)" fg:x="16289" fg:w="21"/><text x="49.9753%" y="703.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (20 samples, 0.06%)</title><rect x="49.7283%" y="677" width="0.0611%" height="15" fill="rgb(209,183,11)" fg:x="16290" fg:w="20"/><text x="49.9783%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.06%)</title><rect x="49.7283%" y="661" width="0.0611%" height="15" fill="rgb(208,55,20)" fg:x="16290" fg:w="20"/><text x="49.9783%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.06%)</title><rect x="49.7283%" y="645" width="0.0611%" height="15" fill="rgb(218,39,14)" fg:x="16290" fg:w="20"/><text x="49.9783%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.06%)</title><rect x="49.7283%" y="629" width="0.0611%" height="15" fill="rgb(216,169,33)" fg:x="16290" fg:w="20"/><text x="49.9783%" y="639.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (9 samples, 0.03%)</title><rect x="49.7894%" y="693" width="0.0275%" height="15" fill="rgb(233,80,24)" fg:x="16310" fg:w="9"/><text x="50.0394%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.02%)</title><rect x="49.8016%" y="677" width="0.0153%" height="15" fill="rgb(213,179,31)" fg:x="16314" fg:w="5"/><text x="50.0516%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.02%)</title><rect x="49.8016%" y="661" width="0.0153%" height="15" fill="rgb(209,19,5)" fg:x="16314" fg:w="5"/><text x="50.0516%" y="671.50"></text></g><g><title>core::mem::replace (5 samples, 0.02%)</title><rect x="49.8016%" y="645" width="0.0153%" height="15" fill="rgb(219,18,35)" fg:x="16314" fg:w="5"/><text x="50.0516%" y="655.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="49.8016%" y="629" width="0.0153%" height="15" fill="rgb(209,169,16)" fg:x="16314" fg:w="5"/><text x="50.0516%" y="639.50"></text></g><g><title>core::mem::drop (11 samples, 0.03%)</title><rect x="49.8229%" y="677" width="0.0336%" height="15" fill="rgb(245,90,51)" fg:x="16321" fg:w="11"/><text x="50.0729%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (11 samples, 0.03%)</title><rect x="49.8229%" y="661" width="0.0336%" height="15" fill="rgb(220,99,45)" fg:x="16321" fg:w="11"/><text x="50.0729%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="49.8229%" y="645" width="0.0336%" height="15" fill="rgb(249,89,25)" fg:x="16321" fg:w="11"/><text x="50.0729%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.03%)</title><rect x="49.8229%" y="629" width="0.0336%" height="15" fill="rgb(239,193,0)" fg:x="16321" fg:w="11"/><text x="50.0729%" y="639.50"></text></g><g><title>tokio::sync::batch_semaphore::Waiter::assign_permits (147 samples, 0.45%)</title><rect x="49.8626%" y="677" width="0.4487%" height="15" fill="rgb(231,126,1)" fg:x="16334" fg:w="147"/><text x="50.1126%" y="687.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (20 samples, 0.06%)</title><rect x="50.3114%" y="677" width="0.0611%" height="15" fill="rgb(243,166,3)" fg:x="16481" fg:w="20"/><text x="50.5614%" y="687.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (18 samples, 0.05%)</title><rect x="50.3175%" y="661" width="0.0549%" height="15" fill="rgb(223,22,34)" fg:x="16483" fg:w="18"/><text x="50.5675%" y="671.50"></text></g><g><title>core::ptr::write (18 samples, 0.05%)</title><rect x="50.3175%" y="645" width="0.0549%" height="15" fill="rgb(251,52,51)" fg:x="16483" fg:w="18"/><text x="50.5675%" y="655.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (45 samples, 0.14%)</title><rect x="50.5678%" y="597" width="0.1374%" height="15" fill="rgb(221,165,28)" fg:x="16565" fg:w="45"/><text x="50.8178%" y="607.50"></text></g><g><title>alloc::rc::is_dangling (45 samples, 0.14%)</title><rect x="50.5678%" y="581" width="0.1374%" height="15" fill="rgb(218,121,47)" fg:x="16565" fg:w="45"/><text x="50.8178%" y="591.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (102 samples, 0.31%)</title><rect x="50.4030%" y="613" width="0.3114%" height="15" fill="rgb(209,120,9)" fg:x="16511" fg:w="102"/><text x="50.6530%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="50.7143%" y="613" width="0.0153%" height="15" fill="rgb(236,68,12)" fg:x="16613" fg:w="5"/><text x="50.9643%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="50.7143%" y="597" width="0.0153%" height="15" fill="rgb(225,194,26)" fg:x="16613" fg:w="5"/><text x="50.9643%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (8 samples, 0.02%)</title><rect x="50.7296%" y="613" width="0.0244%" height="15" fill="rgb(231,84,39)" fg:x="16618" fg:w="8"/><text x="50.9796%" y="623.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (58 samples, 0.18%)</title><rect x="50.7540%" y="613" width="0.1771%" height="15" fill="rgb(210,11,45)" fg:x="16626" fg:w="58"/><text x="51.0040%" y="623.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (51 samples, 0.16%)</title><rect x="50.7754%" y="597" width="0.1557%" height="15" fill="rgb(224,54,52)" fg:x="16633" fg:w="51"/><text x="51.0254%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (50 samples, 0.15%)</title><rect x="50.7784%" y="581" width="0.1526%" height="15" fill="rgb(238,102,14)" fg:x="16634" fg:w="50"/><text x="51.0284%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (50 samples, 0.15%)</title><rect x="50.7784%" y="565" width="0.1526%" height="15" fill="rgb(243,160,52)" fg:x="16634" fg:w="50"/><text x="51.0284%" y="575.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (9 samples, 0.03%)</title><rect x="50.9311%" y="613" width="0.0275%" height="15" fill="rgb(216,114,19)" fg:x="16684" fg:w="9"/><text x="51.1811%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (9 samples, 0.03%)</title><rect x="50.9311%" y="597" width="0.0275%" height="15" fill="rgb(244,166,37)" fg:x="16684" fg:w="9"/><text x="51.1811%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_store (9 samples, 0.03%)</title><rect x="50.9311%" y="581" width="0.0275%" height="15" fill="rgb(246,29,44)" fg:x="16684" fg:w="9"/><text x="51.1811%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (6 samples, 0.02%)</title><rect x="50.9646%" y="597" width="0.0183%" height="15" fill="rgb(215,56,53)" fg:x="16695" fg:w="6"/><text x="51.2146%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.02%)</title><rect x="50.9677%" y="581" width="0.0153%" height="15" fill="rgb(217,60,2)" fg:x="16696" fg:w="5"/><text x="51.2177%" y="591.50"></text></g><g><title>__wake_up_common_lock (10 samples, 0.03%)</title><rect x="51.0074%" y="309" width="0.0305%" height="15" fill="rgb(207,26,24)" fg:x="16709" fg:w="10"/><text x="51.2574%" y="319.50"></text></g><g><title>__wake_up_common (9 samples, 0.03%)</title><rect x="51.0104%" y="293" width="0.0275%" height="15" fill="rgb(252,210,15)" fg:x="16710" fg:w="9"/><text x="51.2604%" y="303.50"></text></g><g><title>autoremove_wake_function (9 samples, 0.03%)</title><rect x="51.0104%" y="277" width="0.0275%" height="15" fill="rgb(253,209,26)" fg:x="16710" fg:w="9"/><text x="51.2604%" y="287.50"></text></g><g><title>try_to_wake_up (9 samples, 0.03%)</title><rect x="51.0104%" y="261" width="0.0275%" height="15" fill="rgb(238,170,14)" fg:x="16710" fg:w="9"/><text x="51.2604%" y="271.50"></text></g><g><title>__wake_up_common (11 samples, 0.03%)</title><rect x="51.0074%" y="341" width="0.0336%" height="15" fill="rgb(216,178,15)" fg:x="16709" fg:w="11"/><text x="51.2574%" y="351.50"></text></g><g><title>ep_poll_callback (11 samples, 0.03%)</title><rect x="51.0074%" y="325" width="0.0336%" height="15" fill="rgb(250,197,2)" fg:x="16709" fg:w="11"/><text x="51.2574%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (21 samples, 0.06%)</title><rect x="50.9921%" y="421" width="0.0641%" height="15" fill="rgb(212,70,42)" fg:x="16704" fg:w="21"/><text x="51.2421%" y="431.50"></text></g><g><title>do_syscall_64 (21 samples, 0.06%)</title><rect x="50.9921%" y="405" width="0.0641%" height="15" fill="rgb(227,213,9)" fg:x="16704" fg:w="21"/><text x="51.2421%" y="415.50"></text></g><g><title>ksys_write (21 samples, 0.06%)</title><rect x="50.9921%" y="389" width="0.0641%" height="15" fill="rgb(245,99,25)" fg:x="16704" fg:w="21"/><text x="51.2421%" y="399.50"></text></g><g><title>vfs_write (17 samples, 0.05%)</title><rect x="51.0043%" y="373" width="0.0519%" height="15" fill="rgb(250,82,29)" fg:x="16708" fg:w="17"/><text x="51.2543%" y="383.50"></text></g><g><title>eventfd_write (17 samples, 0.05%)</title><rect x="51.0043%" y="357" width="0.0519%" height="15" fill="rgb(241,226,54)" fg:x="16708" fg:w="17"/><text x="51.2543%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (4 samples, 0.01%)</title><rect x="51.0440%" y="341" width="0.0122%" height="15" fill="rgb(221,99,41)" fg:x="16721" fg:w="4"/><text x="51.2940%" y="351.50"></text></g><g><title>__GI___libc_write (22 samples, 0.07%)</title><rect x="50.9921%" y="437" width="0.0672%" height="15" fill="rgb(213,90,21)" fg:x="16704" fg:w="22"/><text x="51.2421%" y="447.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (23 samples, 0.07%)</title><rect x="50.9921%" y="533" width="0.0702%" height="15" fill="rgb(205,208,24)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="543.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (23 samples, 0.07%)</title><rect x="50.9921%" y="517" width="0.0702%" height="15" fill="rgb(246,31,12)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="527.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (23 samples, 0.07%)</title><rect x="50.9921%" y="501" width="0.0702%" height="15" fill="rgb(213,154,6)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="511.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (23 samples, 0.07%)</title><rect x="50.9921%" y="485" width="0.0702%" height="15" fill="rgb(222,163,29)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::write (23 samples, 0.07%)</title><rect x="50.9921%" y="469" width="0.0702%" height="15" fill="rgb(227,201,8)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (23 samples, 0.07%)</title><rect x="50.9921%" y="453" width="0.0702%" height="15" fill="rgb(233,9,32)" fg:x="16704" fg:w="23"/><text x="51.2421%" y="463.50"></text></g><g><title>select_task_rq_fair (7 samples, 0.02%)</title><rect x="51.1112%" y="357" width="0.0214%" height="15" fill="rgb(217,54,24)" fg:x="16743" fg:w="7"/><text x="51.3612%" y="367.50"></text></g><g><title>ttwu_do_activate (4 samples, 0.01%)</title><rect x="51.1325%" y="357" width="0.0122%" height="15" fill="rgb(235,192,0)" fg:x="16750" fg:w="4"/><text x="51.3825%" y="367.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.08%)</title><rect x="51.0807%" y="437" width="0.0794%" height="15" fill="rgb(235,45,9)" fg:x="16733" fg:w="26"/><text x="51.3307%" y="447.50"></text></g><g><title>do_futex (25 samples, 0.08%)</title><rect x="51.0837%" y="421" width="0.0763%" height="15" fill="rgb(246,42,40)" fg:x="16734" fg:w="25"/><text x="51.3337%" y="431.50"></text></g><g><title>futex_wake (24 samples, 0.07%)</title><rect x="51.0868%" y="405" width="0.0733%" height="15" fill="rgb(248,111,24)" fg:x="16735" fg:w="24"/><text x="51.3368%" y="415.50"></text></g><g><title>wake_up_q (20 samples, 0.06%)</title><rect x="51.0990%" y="389" width="0.0611%" height="15" fill="rgb(249,65,22)" fg:x="16739" fg:w="20"/><text x="51.3490%" y="399.50"></text></g><g><title>try_to_wake_up (20 samples, 0.06%)</title><rect x="51.0990%" y="373" width="0.0611%" height="15" fill="rgb(238,111,51)" fg:x="16739" fg:w="20"/><text x="51.3490%" y="383.50"></text></g><g><title>ttwu_queue_wakelist (4 samples, 0.01%)</title><rect x="51.1478%" y="357" width="0.0122%" height="15" fill="rgb(250,118,22)" fg:x="16755" fg:w="4"/><text x="51.3978%" y="367.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (30 samples, 0.09%)</title><rect x="51.0776%" y="501" width="0.0916%" height="15" fill="rgb(234,84,26)" fg:x="16732" fg:w="30"/><text x="51.3276%" y="511.50"></text></g><g><title>syscall (30 samples, 0.09%)</title><rect x="51.0776%" y="485" width="0.0916%" height="15" fill="rgb(243,172,12)" fg:x="16732" fg:w="30"/><text x="51.3276%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.09%)</title><rect x="51.0807%" y="469" width="0.0885%" height="15" fill="rgb(236,150,49)" fg:x="16733" fg:w="29"/><text x="51.3307%" y="479.50"></text></g><g><title>do_syscall_64 (29 samples, 0.09%)</title><rect x="51.0807%" y="453" width="0.0885%" height="15" fill="rgb(225,197,26)" fg:x="16733" fg:w="29"/><text x="51.3307%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4 samples, 0.01%)</title><rect x="51.1692%" y="501" width="0.0122%" height="15" fill="rgb(214,17,42)" fg:x="16762" fg:w="4"/><text x="51.4192%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (39 samples, 0.12%)</title><rect x="51.0776%" y="533" width="0.1191%" height="15" fill="rgb(224,165,40)" fg:x="16732" fg:w="39"/><text x="51.3276%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (39 samples, 0.12%)</title><rect x="51.0776%" y="517" width="0.1191%" height="15" fill="rgb(246,100,4)" fg:x="16732" fg:w="39"/><text x="51.3276%" y="527.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (4 samples, 0.01%)</title><rect x="51.2028%" y="517" width="0.0122%" height="15" fill="rgb(222,103,0)" fg:x="16773" fg:w="4"/><text x="51.4528%" y="527.50"></text></g><g><title>tokio::runtime::queue::unpack (4 samples, 0.01%)</title><rect x="51.2028%" y="501" width="0.0122%" height="15" fill="rgb(227,189,26)" fg:x="16773" fg:w="4"/><text x="51.4528%" y="511.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (283 samples, 0.86%)</title><rect x="50.3968%" y="629" width="0.8639%" height="15" fill="rgb(214,202,17)" fg:x="16509" fg:w="283"/><text x="50.6468%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (99 samples, 0.30%)</title><rect x="50.9585%" y="613" width="0.3022%" height="15" fill="rgb(229,111,3)" fg:x="16693" fg:w="99"/><text x="51.2085%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (91 samples, 0.28%)</title><rect x="50.9830%" y="597" width="0.2778%" height="15" fill="rgb(229,172,15)" fg:x="16701" fg:w="91"/><text x="51.2330%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (89 samples, 0.27%)</title><rect x="50.9891%" y="581" width="0.2717%" height="15" fill="rgb(230,224,35)" fg:x="16703" fg:w="89"/><text x="51.2391%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (89 samples, 0.27%)</title><rect x="50.9891%" y="565" width="0.2717%" height="15" fill="rgb(251,141,6)" fg:x="16703" fg:w="89"/><text x="51.2391%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (88 samples, 0.27%)</title><rect x="50.9921%" y="549" width="0.2686%" height="15" fill="rgb(225,208,6)" fg:x="16704" fg:w="88"/><text x="51.2421%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (21 samples, 0.06%)</title><rect x="51.1967%" y="533" width="0.0641%" height="15" fill="rgb(246,181,16)" fg:x="16771" fg:w="21"/><text x="51.4467%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (15 samples, 0.05%)</title><rect x="51.2150%" y="517" width="0.0458%" height="15" fill="rgb(227,129,36)" fg:x="16777" fg:w="15"/><text x="51.4650%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (15 samples, 0.05%)</title><rect x="51.2150%" y="501" width="0.0458%" height="15" fill="rgb(248,117,24)" fg:x="16777" fg:w="15"/><text x="51.4650%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (12 samples, 0.04%)</title><rect x="51.2241%" y="485" width="0.0366%" height="15" fill="rgb(214,185,35)" fg:x="16780" fg:w="12"/><text x="51.4741%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.03%)</title><rect x="51.2302%" y="469" width="0.0305%" height="15" fill="rgb(236,150,34)" fg:x="16782" fg:w="10"/><text x="51.4802%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.03%)</title><rect x="51.2302%" y="453" width="0.0305%" height="15" fill="rgb(243,228,27)" fg:x="16782" fg:w="10"/><text x="51.4802%" y="463.50"></text></g><g><title>futures_task::arc_wake::ArcWake::wake (313 samples, 0.96%)</title><rect x="50.3938%" y="645" width="0.9555%" height="15" fill="rgb(245,77,44)" fg:x="16508" fg:w="313"/><text x="50.6438%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;core::future::from_generator::GenFuture&lt;latte::req_stream&lt;latte::par_execute&lt;latte::run::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}},dyn latte::workload::Workload,core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;latte::workload::WorkloadStats,latte::workload::WorkloadError&gt;+core::marker::Send&gt;&gt;,latte::workload::WorkloadError&gt;::{{closure}}::{{closure}}::{{closure}}&gt;&gt;&gt;&gt; (29 samples, 0.09%)</title><rect x="51.2608%" y="629" width="0.0885%" height="15" fill="rgb(235,214,42)" fg:x="16792" fg:w="29"/><text x="51.5108%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.09%)</title><rect x="51.2608%" y="613" width="0.0885%" height="15" fill="rgb(221,74,3)" fg:x="16792" fg:w="29"/><text x="51.5108%" y="623.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (505 samples, 1.54%)</title><rect x="49.8168%" y="693" width="1.5416%" height="15" fill="rgb(206,121,29)" fg:x="16319" fg:w="505"/><text x="50.0668%" y="703.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (320 samples, 0.98%)</title><rect x="50.3816%" y="677" width="0.9769%" height="15" fill="rgb(249,131,53)" fg:x="16504" fg:w="320"/><text x="50.6316%" y="687.50"></text></g><g><title>core::task::wake::Waker::wake (317 samples, 0.97%)</title><rect x="50.3907%" y="661" width="0.9677%" height="15" fill="rgb(236,170,29)" fg:x="16507" fg:w="317"/><text x="50.6407%" y="671.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (57 samples, 0.17%)</title><rect x="51.3890%" y="661" width="0.1740%" height="15" fill="rgb(247,96,15)" fg:x="16834" fg:w="57"/><text x="51.6390%" y="671.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::{{closure}} (57 samples, 0.17%)</title><rect x="51.3890%" y="645" width="0.1740%" height="15" fill="rgb(211,210,7)" fg:x="16834" fg:w="57"/><text x="51.6390%" y="655.50"></text></g><g><title>core::ptr::read (57 samples, 0.17%)</title><rect x="51.3890%" y="629" width="0.1740%" height="15" fill="rgb(240,88,50)" fg:x="16834" fg:w="57"/><text x="51.6390%" y="639.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (62 samples, 0.19%)</title><rect x="51.3768%" y="677" width="0.1893%" height="15" fill="rgb(209,229,26)" fg:x="16830" fg:w="62"/><text x="51.6268%" y="687.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (15 samples, 0.05%)</title><rect x="51.5660%" y="677" width="0.0458%" height="15" fill="rgb(210,68,23)" fg:x="16892" fg:w="15"/><text x="51.8160%" y="687.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::reclaim_block (11 samples, 0.03%)</title><rect x="51.5782%" y="661" width="0.0336%" height="15" fill="rgb(229,180,13)" fg:x="16896" fg:w="11"/><text x="51.8282%" y="671.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::try_push (10 samples, 0.03%)</title><rect x="51.5813%" y="645" width="0.0305%" height="15" fill="rgb(236,53,44)" fg:x="16897" fg:w="10"/><text x="51.8313%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (9 samples, 0.03%)</title><rect x="51.5843%" y="629" width="0.0275%" height="15" fill="rgb(244,214,29)" fg:x="16898" fg:w="9"/><text x="51.8343%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (755 samples, 2.30%)</title><rect x="49.5207%" y="805" width="2.3048%" height="15" fill="rgb(220,75,29)" fg:x="16222" fg:w="755"/><text x="49.7707%" y="815.50">&lt;..</text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (753 samples, 2.30%)</title><rect x="49.5268%" y="789" width="2.2987%" height="15" fill="rgb(214,183,37)" fg:x="16224" fg:w="753"/><text x="49.7768%" y="799.50">t..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (751 samples, 2.29%)</title><rect x="49.5329%" y="773" width="2.2926%" height="15" fill="rgb(239,117,29)" fg:x="16226" fg:w="751"/><text x="49.7829%" y="783.50">&lt;..</text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (751 samples, 2.29%)</title><rect x="49.5329%" y="757" width="2.2926%" height="15" fill="rgb(237,171,35)" fg:x="16226" fg:w="751"/><text x="49.7829%" y="767.50">t..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (751 samples, 2.29%)</title><rect x="49.5329%" y="741" width="2.2926%" height="15" fill="rgb(229,178,53)" fg:x="16226" fg:w="751"/><text x="49.7829%" y="751.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (709 samples, 2.16%)</title><rect x="49.6612%" y="725" width="2.1644%" height="15" fill="rgb(210,102,19)" fg:x="16268" fg:w="709"/><text x="49.9112%" y="735.50">t..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (703 samples, 2.15%)</title><rect x="49.6795%" y="709" width="2.1460%" height="15" fill="rgb(235,127,22)" fg:x="16274" fg:w="703"/><text x="49.9295%" y="719.50">t..</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (153 samples, 0.47%)</title><rect x="51.3584%" y="693" width="0.4671%" height="15" fill="rgb(244,31,31)" fg:x="16824" fg:w="153"/><text x="51.6084%" y="703.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (70 samples, 0.21%)</title><rect x="51.6118%" y="677" width="0.2137%" height="15" fill="rgb(231,43,21)" fg:x="16907" fg:w="70"/><text x="51.8618%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="52.4269%" y="677" width="0.0153%" height="15" fill="rgb(217,131,35)" fg:x="17174" fg:w="5"/><text x="52.6769%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="52.4696%" y="661" width="0.0305%" height="15" fill="rgb(221,149,4)" fg:x="17188" fg:w="10"/><text x="52.7196%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::io::driver::Inner&gt;&gt; (10 samples, 0.03%)</title><rect x="52.4696%" y="645" width="0.0305%" height="15" fill="rgb(232,170,28)" fg:x="17188" fg:w="10"/><text x="52.7196%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="52.4696%" y="629" width="0.0305%" height="15" fill="rgb(238,56,10)" fg:x="17188" fg:w="10"/><text x="52.7196%" y="639.50"></text></g><g><title>tokio::coop::poll_proceed (7 samples, 0.02%)</title><rect x="52.5002%" y="661" width="0.0214%" height="15" fill="rgb(235,196,14)" fg:x="17198" fg:w="7"/><text x="52.7502%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="52.5002%" y="645" width="0.0214%" height="15" fill="rgb(216,45,48)" fg:x="17198" fg:w="7"/><text x="52.7502%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="52.5002%" y="629" width="0.0214%" height="15" fill="rgb(238,213,17)" fg:x="17198" fg:w="7"/><text x="52.7502%" y="639.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (5 samples, 0.02%)</title><rect x="52.5063%" y="613" width="0.0153%" height="15" fill="rgb(212,13,2)" fg:x="17200" fg:w="5"/><text x="52.7563%" y="623.50"></text></g><g><title>tokio::io::driver::Handle::inner (11 samples, 0.03%)</title><rect x="52.5215%" y="661" width="0.0336%" height="15" fill="rgb(240,114,20)" fg:x="17205" fg:w="11"/><text x="52.7715%" y="671.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (11 samples, 0.03%)</title><rect x="52.5215%" y="645" width="0.0336%" height="15" fill="rgb(228,41,40)" fg:x="17205" fg:w="11"/><text x="52.7715%" y="655.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_ready (78 samples, 0.24%)</title><rect x="52.4422%" y="677" width="0.2381%" height="15" fill="rgb(244,132,35)" fg:x="17179" fg:w="78"/><text x="52.6922%" y="687.50"></text></g><g><title>tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (41 samples, 0.13%)</title><rect x="52.5551%" y="661" width="0.1252%" height="15" fill="rgb(253,189,4)" fg:x="17216" fg:w="41"/><text x="52.8051%" y="671.50"></text></g><g><title>tokio::io::driver::Direction::mask (38 samples, 0.12%)</title><rect x="52.5643%" y="645" width="0.1160%" height="15" fill="rgb(224,37,19)" fg:x="17219" fg:w="38"/><text x="52.8143%" y="655.50"></text></g><g><title>__entry_text_start (23 samples, 0.07%)</title><rect x="52.8085%" y="549" width="0.0702%" height="15" fill="rgb(235,223,18)" fg:x="17299" fg:w="23"/><text x="53.0585%" y="559.50"></text></g><g><title>__libc_disable_asynccancel (12 samples, 0.04%)</title><rect x="52.8787%" y="549" width="0.0366%" height="15" fill="rgb(235,163,25)" fg:x="17322" fg:w="12"/><text x="53.1287%" y="559.50"></text></g><g><title>fput (10 samples, 0.03%)</title><rect x="53.1565%" y="485" width="0.0305%" height="15" fill="rgb(217,145,28)" fg:x="17413" fg:w="10"/><text x="53.4065%" y="495.50"></text></g><g><title>fput_many (25 samples, 0.08%)</title><rect x="53.1870%" y="485" width="0.0763%" height="15" fill="rgb(223,223,32)" fg:x="17423" fg:w="25"/><text x="53.4370%" y="495.50"></text></g><g><title>import_single_range (8 samples, 0.02%)</title><rect x="53.2633%" y="485" width="0.0244%" height="15" fill="rgb(227,189,39)" fg:x="17448" fg:w="8"/><text x="53.5133%" y="495.50"></text></g><g><title>inet_sendmsg (9 samples, 0.03%)</title><rect x="53.3519%" y="469" width="0.0275%" height="15" fill="rgb(248,10,22)" fg:x="17477" fg:w="9"/><text x="53.6019%" y="479.50"></text></g><g><title>__x86_indirect_thunk_rax (16 samples, 0.05%)</title><rect x="53.4190%" y="453" width="0.0488%" height="15" fill="rgb(248,46,39)" fg:x="17499" fg:w="16"/><text x="53.6690%" y="463.50"></text></g><g><title>bpf_lsm_socket_sendmsg (8 samples, 0.02%)</title><rect x="53.4679%" y="453" width="0.0244%" height="15" fill="rgb(248,113,48)" fg:x="17515" fg:w="8"/><text x="53.7179%" y="463.50"></text></g><g><title>avc_lookup (35 samples, 0.11%)</title><rect x="53.7090%" y="421" width="0.1068%" height="15" fill="rgb(245,16,25)" fg:x="17594" fg:w="35"/><text x="53.9590%" y="431.50"></text></g><g><title>security_socket_sendmsg (146 samples, 0.45%)</title><rect x="53.3793%" y="469" width="0.4457%" height="15" fill="rgb(249,152,16)" fg:x="17486" fg:w="146"/><text x="53.6293%" y="479.50"></text></g><g><title>selinux_socket_sendmsg (109 samples, 0.33%)</title><rect x="53.4923%" y="453" width="0.3327%" height="15" fill="rgb(250,16,1)" fg:x="17523" fg:w="109"/><text x="53.7423%" y="463.50"></text></g><g><title>avc_has_perm (47 samples, 0.14%)</title><rect x="53.6815%" y="437" width="0.1435%" height="15" fill="rgb(249,138,3)" fg:x="17585" fg:w="47"/><text x="53.9315%" y="447.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.04%)</title><rect x="53.8555%" y="453" width="0.0366%" height="15" fill="rgb(227,71,41)" fg:x="17642" fg:w="12"/><text x="54.1055%" y="463.50"></text></g><g><title>__cond_resched (5 samples, 0.02%)</title><rect x="53.9013%" y="437" width="0.0153%" height="15" fill="rgb(209,184,23)" fg:x="17657" fg:w="5"/><text x="54.1513%" y="447.50"></text></g><g><title>lock_sock_nested (325 samples, 0.99%)</title><rect x="53.8922%" y="453" width="0.9921%" height="15" fill="rgb(223,215,31)" fg:x="17654" fg:w="325"/><text x="54.1422%" y="463.50"></text></g><g><title>_raw_spin_lock_bh (317 samples, 0.97%)</title><rect x="53.9166%" y="437" width="0.9677%" height="15" fill="rgb(210,146,28)" fg:x="17662" fg:w="317"/><text x="54.1666%" y="447.50"></text></g><g><title>native_queued_spin_lock_slowpath (297 samples, 0.91%)</title><rect x="53.9777%" y="421" width="0.9066%" height="15" fill="rgb(209,183,41)" fg:x="17682" fg:w="297"/><text x="54.2277%" y="431.50"></text></g><g><title>__cond_resched (32 samples, 0.10%)</title><rect x="55.0186%" y="421" width="0.0977%" height="15" fill="rgb(209,224,45)" fg:x="18023" fg:w="32"/><text x="55.2686%" y="431.50"></text></g><g><title>ipv4_dst_check (15 samples, 0.05%)</title><rect x="55.2445%" y="405" width="0.0458%" height="15" fill="rgb(224,209,51)" fg:x="18097" fg:w="15"/><text x="55.4945%" y="415.50"></text></g><g><title>__slab_free (13 samples, 0.04%)</title><rect x="55.4826%" y="357" width="0.0397%" height="15" fill="rgb(223,17,39)" fg:x="18175" fg:w="13"/><text x="55.7326%" y="367.50"></text></g><g><title>kfree (38 samples, 0.12%)</title><rect x="55.4368%" y="373" width="0.1160%" height="15" fill="rgb(234,204,37)" fg:x="18160" fg:w="38"/><text x="55.6868%" y="383.50"></text></g><g><title>slab_free_freelist_hook (10 samples, 0.03%)</title><rect x="55.5223%" y="357" width="0.0305%" height="15" fill="rgb(236,120,5)" fg:x="18188" fg:w="10"/><text x="55.7723%" y="367.50"></text></g><g><title>__kfree_skb (50 samples, 0.15%)</title><rect x="55.4368%" y="389" width="0.1526%" height="15" fill="rgb(248,97,27)" fg:x="18160" fg:w="50"/><text x="55.6868%" y="399.50"></text></g><g><title>skb_release_data (12 samples, 0.04%)</title><rect x="55.5528%" y="373" width="0.0366%" height="15" fill="rgb(240,66,17)" fg:x="18198" fg:w="12"/><text x="55.8028%" y="383.50"></text></g><g><title>kfree_skb_partial (4 samples, 0.01%)</title><rect x="55.5986%" y="389" width="0.0122%" height="15" fill="rgb(210,79,3)" fg:x="18213" fg:w="4"/><text x="55.8486%" y="399.50"></text></g><g><title>kfree_skbmem (16 samples, 0.05%)</title><rect x="55.6108%" y="389" width="0.0488%" height="15" fill="rgb(214,176,27)" fg:x="18217" fg:w="16"/><text x="55.8608%" y="399.50"></text></g><g><title>__slab_free (6 samples, 0.02%)</title><rect x="55.6749%" y="373" width="0.0183%" height="15" fill="rgb(235,185,3)" fg:x="18238" fg:w="6"/><text x="55.9249%" y="383.50"></text></g><g><title>kmem_cache_free (13 samples, 0.04%)</title><rect x="55.6597%" y="389" width="0.0397%" height="15" fill="rgb(227,24,12)" fg:x="18233" fg:w="13"/><text x="55.9097%" y="399.50"></text></g><g><title>sk_reset_timer (6 samples, 0.02%)</title><rect x="55.7024%" y="389" width="0.0183%" height="15" fill="rgb(252,169,48)" fg:x="18247" fg:w="6"/><text x="55.9524%" y="399.50"></text></g><g><title>__mod_timer (6 samples, 0.02%)</title><rect x="55.7024%" y="373" width="0.0183%" height="15" fill="rgb(212,65,1)" fg:x="18247" fg:w="6"/><text x="55.9524%" y="383.50"></text></g><g><title>_raw_spin_lock_irqsave (22 samples, 0.07%)</title><rect x="55.8856%" y="261" width="0.0672%" height="15" fill="rgb(242,39,24)" fg:x="18307" fg:w="22"/><text x="56.1356%" y="271.50"></text></g><g><title>available_idle_cpu (32 samples, 0.10%)</title><rect x="56.0321%" y="245" width="0.0977%" height="15" fill="rgb(249,32,23)" fg:x="18355" fg:w="32"/><text x="56.2821%" y="255.50"></text></g><g><title>select_task_rq_fair (62 samples, 0.19%)</title><rect x="55.9558%" y="261" width="0.1893%" height="15" fill="rgb(251,195,23)" fg:x="18330" fg:w="62"/><text x="56.2058%" y="271.50"></text></g><g><title>update_cfs_group (8 samples, 0.02%)</title><rect x="56.2092%" y="213" width="0.0244%" height="15" fill="rgb(236,174,8)" fg:x="18413" fg:w="8"/><text x="56.4592%" y="223.50"></text></g><g><title>__update_load_avg_cfs_rq (7 samples, 0.02%)</title><rect x="56.2519%" y="197" width="0.0214%" height="15" fill="rgb(220,197,8)" fg:x="18427" fg:w="7"/><text x="56.5019%" y="207.50"></text></g><g><title>enqueue_task_fair (41 samples, 0.13%)</title><rect x="56.1512%" y="245" width="0.1252%" height="15" fill="rgb(240,108,37)" fg:x="18394" fg:w="41"/><text x="56.4012%" y="255.50"></text></g><g><title>enqueue_entity (35 samples, 0.11%)</title><rect x="56.1695%" y="229" width="0.1068%" height="15" fill="rgb(232,176,24)" fg:x="18400" fg:w="35"/><text x="56.4195%" y="239.50"></text></g><g><title>update_load_avg (12 samples, 0.04%)</title><rect x="56.2397%" y="213" width="0.0366%" height="15" fill="rgb(243,35,29)" fg:x="18423" fg:w="12"/><text x="56.4897%" y="223.50"></text></g><g><title>ttwu_do_activate (71 samples, 0.22%)</title><rect x="56.1451%" y="261" width="0.2167%" height="15" fill="rgb(210,37,18)" fg:x="18392" fg:w="71"/><text x="56.3951%" y="271.50"></text></g><g><title>psi_task_change (28 samples, 0.09%)</title><rect x="56.2763%" y="245" width="0.0855%" height="15" fill="rgb(224,184,40)" fg:x="18435" fg:w="28"/><text x="56.5263%" y="255.50"></text></g><g><title>psi_group_change (22 samples, 0.07%)</title><rect x="56.2946%" y="229" width="0.0672%" height="15" fill="rgb(236,39,29)" fg:x="18441" fg:w="22"/><text x="56.5446%" y="239.50"></text></g><g><title>ttwu_do_wakeup (4 samples, 0.01%)</title><rect x="56.3618%" y="261" width="0.0122%" height="15" fill="rgb(232,48,39)" fg:x="18463" fg:w="4"/><text x="56.6118%" y="271.50"></text></g><g><title>check_preempt_curr (4 samples, 0.01%)</title><rect x="56.3618%" y="245" width="0.0122%" height="15" fill="rgb(236,34,42)" fg:x="18463" fg:w="4"/><text x="56.6118%" y="255.50"></text></g><g><title>__smp_call_single_queue (15 samples, 0.05%)</title><rect x="56.4412%" y="245" width="0.0458%" height="15" fill="rgb(243,106,37)" fg:x="18489" fg:w="15"/><text x="56.6912%" y="255.50"></text></g><g><title>llist_add_batch (14 samples, 0.04%)</title><rect x="56.4442%" y="229" width="0.0427%" height="15" fill="rgb(218,96,6)" fg:x="18490" fg:w="14"/><text x="56.6942%" y="239.50"></text></g><g><title>default_send_IPI_single_phys (16 samples, 0.05%)</title><rect x="56.4961%" y="245" width="0.0488%" height="15" fill="rgb(235,130,12)" fg:x="18507" fg:w="16"/><text x="56.7461%" y="255.50"></text></g><g><title>__default_send_IPI_dest_field (13 samples, 0.04%)</title><rect x="56.5053%" y="229" width="0.0397%" height="15" fill="rgb(231,95,0)" fg:x="18510" fg:w="13"/><text x="56.7553%" y="239.50"></text></g><g><title>ttwu_queue_wakelist (68 samples, 0.21%)</title><rect x="56.3740%" y="261" width="0.2076%" height="15" fill="rgb(228,12,23)" fg:x="18467" fg:w="68"/><text x="56.6240%" y="271.50"></text></g><g><title>send_call_function_single_ipi (8 samples, 0.02%)</title><rect x="56.5572%" y="245" width="0.0244%" height="15" fill="rgb(216,12,1)" fg:x="18527" fg:w="8"/><text x="56.8072%" y="255.50"></text></g><g><title>__wake_up_common (265 samples, 0.81%)</title><rect x="55.7910%" y="309" width="0.8090%" height="15" fill="rgb(219,59,3)" fg:x="18276" fg:w="265"/><text x="56.0410%" y="319.50"></text></g><g><title>autoremove_wake_function (243 samples, 0.74%)</title><rect x="55.8581%" y="293" width="0.7418%" height="15" fill="rgb(215,208,46)" fg:x="18298" fg:w="243"/><text x="56.1081%" y="303.50"></text></g><g><title>try_to_wake_up (242 samples, 0.74%)</title><rect x="55.8612%" y="277" width="0.7388%" height="15" fill="rgb(254,224,29)" fg:x="18299" fg:w="242"/><text x="56.1112%" y="287.50"></text></g><g><title>update_rq_clock (6 samples, 0.02%)</title><rect x="56.5816%" y="261" width="0.0183%" height="15" fill="rgb(232,14,29)" fg:x="18535" fg:w="6"/><text x="56.8316%" y="271.50"></text></g><g><title>__wake_up_common_lock (270 samples, 0.82%)</title><rect x="55.7910%" y="325" width="0.8242%" height="15" fill="rgb(208,45,52)" fg:x="18276" fg:w="270"/><text x="56.0410%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.02%)</title><rect x="56.5999%" y="309" width="0.0153%" height="15" fill="rgb(234,191,28)" fg:x="18541" fg:w="5"/><text x="56.8499%" y="319.50"></text></g><g><title>__wake_up_common (321 samples, 0.98%)</title><rect x="55.7482%" y="357" width="0.9799%" height="15" fill="rgb(244,67,43)" fg:x="18262" fg:w="321"/><text x="55.9982%" y="367.50"></text></g><g><title>ep_poll_callback (318 samples, 0.97%)</title><rect x="55.7574%" y="341" width="0.9708%" height="15" fill="rgb(236,189,24)" fg:x="18265" fg:w="318"/><text x="56.0074%" y="351.50"></text></g><g><title>_raw_read_lock_irqsave (37 samples, 0.11%)</title><rect x="56.6152%" y="325" width="0.1129%" height="15" fill="rgb(239,214,33)" fg:x="18546" fg:w="37"/><text x="56.8652%" y="335.50"></text></g><g><title>sock_def_readable (335 samples, 1.02%)</title><rect x="55.7207%" y="389" width="1.0227%" height="15" fill="rgb(226,176,41)" fg:x="18253" fg:w="335"/><text x="55.9707%" y="399.50"></text></g><g><title>__wake_up_common_lock (328 samples, 1.00%)</title><rect x="55.7421%" y="373" width="1.0013%" height="15" fill="rgb(248,47,8)" fg:x="18260" fg:w="328"/><text x="55.9921%" y="383.50"></text></g><g><title>_raw_spin_unlock_irqrestore (5 samples, 0.02%)</title><rect x="56.7281%" y="357" width="0.0153%" height="15" fill="rgb(218,81,44)" fg:x="18583" fg:w="5"/><text x="56.9781%" y="367.50"></text></g><g><title>kfree (20 samples, 0.06%)</title><rect x="57.1311%" y="357" width="0.0611%" height="15" fill="rgb(213,98,6)" fg:x="18715" fg:w="20"/><text x="57.3811%" y="367.50"></text></g><g><title>skb_release_data (105 samples, 0.32%)</title><rect x="57.1921%" y="357" width="0.3205%" height="15" fill="rgb(222,85,22)" fg:x="18735" fg:w="105"/><text x="57.4421%" y="367.50"></text></g><g><title>__kfree_skb (128 samples, 0.39%)</title><rect x="57.1250%" y="373" width="0.3907%" height="15" fill="rgb(239,46,39)" fg:x="18713" fg:w="128"/><text x="57.3750%" y="383.50"></text></g><g><title>kfree_skbmem (27 samples, 0.08%)</title><rect x="57.5493%" y="373" width="0.0824%" height="15" fill="rgb(237,12,29)" fg:x="18852" fg:w="27"/><text x="57.7993%" y="383.50"></text></g><g><title>kmem_cache_free (20 samples, 0.06%)</title><rect x="57.6317%" y="373" width="0.0611%" height="15" fill="rgb(214,77,8)" fg:x="18879" fg:w="20"/><text x="57.8817%" y="383.50"></text></g><g><title>slab_free_freelist_hook (4 samples, 0.01%)</title><rect x="57.6806%" y="357" width="0.0122%" height="15" fill="rgb(217,168,37)" fg:x="18895" fg:w="4"/><text x="57.9306%" y="367.50"></text></g><g><title>rb_erase (15 samples, 0.05%)</title><rect x="57.6928%" y="373" width="0.0458%" height="15" fill="rgb(221,217,23)" fg:x="18899" fg:w="15"/><text x="57.9428%" y="383.50"></text></g><g><title>rb_next (5 samples, 0.02%)</title><rect x="57.7447%" y="373" width="0.0153%" height="15" fill="rgb(243,229,36)" fg:x="18916" fg:w="5"/><text x="57.9947%" y="383.50"></text></g><g><title>tcp_ack_update_rtt (17 samples, 0.05%)</title><rect x="57.7691%" y="373" width="0.0519%" height="15" fill="rgb(251,163,40)" fg:x="18924" fg:w="17"/><text x="58.0191%" y="383.50"></text></g><g><title>tcp_newly_delivered (5 samples, 0.02%)</title><rect x="57.8210%" y="373" width="0.0153%" height="15" fill="rgb(237,222,12)" fg:x="18941" fg:w="5"/><text x="58.0710%" y="383.50"></text></g><g><title>tcp_rate_skb_delivered (9 samples, 0.03%)</title><rect x="57.8454%" y="373" width="0.0275%" height="15" fill="rgb(248,132,6)" fg:x="18949" fg:w="9"/><text x="58.0954%" y="383.50"></text></g><g><title>__mod_timer (7 samples, 0.02%)</title><rect x="57.9095%" y="341" width="0.0214%" height="15" fill="rgb(227,167,50)" fg:x="18970" fg:w="7"/><text x="58.1595%" y="351.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (19 samples, 0.06%)</title><rect x="57.8759%" y="373" width="0.0580%" height="15" fill="rgb(242,84,37)" fg:x="18959" fg:w="19"/><text x="58.1259%" y="383.50"></text></g><g><title>sk_reset_timer (9 samples, 0.03%)</title><rect x="57.9065%" y="357" width="0.0275%" height="15" fill="rgb(212,4,50)" fg:x="18969" fg:w="9"/><text x="58.1565%" y="367.50"></text></g><g><title>tcp_ack (394 samples, 1.20%)</title><rect x="56.7434%" y="389" width="1.2028%" height="15" fill="rgb(230,228,32)" fg:x="18588" fg:w="394"/><text x="56.9934%" y="399.50"></text></g><g><title>tcp_mstamp_refresh (16 samples, 0.05%)</title><rect x="57.9584%" y="389" width="0.0488%" height="15" fill="rgb(248,217,23)" fg:x="18986" fg:w="16"/><text x="58.2084%" y="399.50"></text></g><g><title>ktime_get (15 samples, 0.05%)</title><rect x="57.9614%" y="373" width="0.0458%" height="15" fill="rgb(238,197,32)" fg:x="18987" fg:w="15"/><text x="58.2114%" y="383.50"></text></g><g><title>read_tsc (14 samples, 0.04%)</title><rect x="57.9645%" y="357" width="0.0427%" height="15" fill="rgb(236,106,1)" fg:x="18988" fg:w="14"/><text x="58.2145%" y="367.50"></text></g><g><title>tcp_queue_rcv (61 samples, 0.19%)</title><rect x="58.0072%" y="389" width="0.1862%" height="15" fill="rgb(219,228,13)" fg:x="19002" fg:w="61"/><text x="58.2572%" y="399.50"></text></g><g><title>tcp_try_coalesce (58 samples, 0.18%)</title><rect x="58.0164%" y="373" width="0.1771%" height="15" fill="rgb(238,30,35)" fg:x="19005" fg:w="58"/><text x="58.2664%" y="383.50"></text></g><g><title>skb_try_coalesce (56 samples, 0.17%)</title><rect x="58.0225%" y="357" width="0.1710%" height="15" fill="rgb(236,70,23)" fg:x="19007" fg:w="56"/><text x="58.2725%" y="367.50"></text></g><g><title>__release_sock (1,076 samples, 3.28%)</title><rect x="54.9118%" y="437" width="3.2847%" height="15" fill="rgb(249,104,48)" fg:x="17988" fg:w="1076"/><text x="55.1618%" y="447.50">__r..</text></g><g><title>tcp_v4_do_rcv (1,006 samples, 3.07%)</title><rect x="55.1255%" y="421" width="3.0710%" height="15" fill="rgb(254,117,50)" fg:x="18058" fg:w="1006"/><text x="55.3755%" y="431.50">tcp..</text></g><g><title>tcp_rcv_established (952 samples, 2.91%)</title><rect x="55.2903%" y="405" width="2.9062%" height="15" fill="rgb(223,152,4)" fg:x="18112" fg:w="952"/><text x="55.5403%" y="415.50">tc..</text></g><g><title>__x86_indirect_thunk_rax (11 samples, 0.03%)</title><rect x="58.1965%" y="437" width="0.0336%" height="15" fill="rgb(245,6,2)" fg:x="19064" fg:w="11"/><text x="58.4465%" y="447.50"></text></g><g><title>_raw_spin_lock_bh (79 samples, 0.24%)</title><rect x="58.2301%" y="437" width="0.2412%" height="15" fill="rgb(249,150,24)" fg:x="19075" fg:w="79"/><text x="58.4801%" y="447.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.02%)</title><rect x="58.4559%" y="421" width="0.0153%" height="15" fill="rgb(228,185,42)" fg:x="19149" fg:w="5"/><text x="58.7059%" y="431.50"></text></g><g><title>release_sock (1,184 samples, 3.61%)</title><rect x="54.8843%" y="453" width="3.6144%" height="15" fill="rgb(226,39,33)" fg:x="17979" fg:w="1184"/><text x="55.1343%" y="463.50">rele..</text></g><g><title>tcp_release_cb (9 samples, 0.03%)</title><rect x="58.4712%" y="437" width="0.0275%" height="15" fill="rgb(221,166,19)" fg:x="19154" fg:w="9"/><text x="58.7212%" y="447.50"></text></g><g><title>ip_skb_dst_mtu (13 samples, 0.04%)</title><rect x="59.8846%" y="357" width="0.0397%" height="15" fill="rgb(209,109,2)" fg:x="19617" fg:w="13"/><text x="60.1346%" y="367.50"></text></g><g><title>__ip_finish_output (51 samples, 0.16%)</title><rect x="59.8510%" y="373" width="0.1557%" height="15" fill="rgb(252,216,26)" fg:x="19606" fg:w="51"/><text x="60.1010%" y="383.50"></text></g><g><title>ipv4_mtu (27 samples, 0.08%)</title><rect x="59.9243%" y="357" width="0.0824%" height="15" fill="rgb(227,173,36)" fg:x="19630" fg:w="27"/><text x="60.1743%" y="367.50"></text></g><g><title>__sk_dst_check (44 samples, 0.13%)</title><rect x="60.0067%" y="373" width="0.1343%" height="15" fill="rgb(209,90,7)" fg:x="19657" fg:w="44"/><text x="60.2567%" y="383.50"></text></g><g><title>ipv4_dst_check (37 samples, 0.11%)</title><rect x="60.0281%" y="357" width="0.1129%" height="15" fill="rgb(250,194,11)" fg:x="19664" fg:w="37"/><text x="60.2781%" y="367.50"></text></g><g><title>ip_finish_output (4 samples, 0.01%)</title><rect x="60.1410%" y="373" width="0.0122%" height="15" fill="rgb(220,72,50)" fg:x="19701" fg:w="4"/><text x="60.3910%" y="383.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 0.02%)</title><rect x="60.6234%" y="341" width="0.0244%" height="15" fill="rgb(222,106,48)" fg:x="19859" fg:w="8"/><text x="60.8734%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (10 samples, 0.03%)</title><rect x="60.7577%" y="309" width="0.0305%" height="15" fill="rgb(216,220,45)" fg:x="19903" fg:w="10"/><text x="61.0077%" y="319.50"></text></g><g><title>eth_type_trans (10 samples, 0.03%)</title><rect x="60.7913%" y="309" width="0.0305%" height="15" fill="rgb(234,112,18)" fg:x="19914" fg:w="10"/><text x="61.0413%" y="319.50"></text></g><g><title>__raise_softirq_irqoff (4 samples, 0.01%)</title><rect x="60.9836%" y="261" width="0.0122%" height="15" fill="rgb(206,179,9)" fg:x="19977" fg:w="4"/><text x="61.2336%" y="271.50"></text></g><g><title>netif_rx (60 samples, 0.18%)</title><rect x="60.8218%" y="309" width="0.1832%" height="15" fill="rgb(215,115,40)" fg:x="19924" fg:w="60"/><text x="61.0718%" y="319.50"></text></g><g><title>netif_rx_internal (55 samples, 0.17%)</title><rect x="60.8370%" y="293" width="0.1679%" height="15" fill="rgb(222,69,34)" fg:x="19929" fg:w="55"/><text x="61.0870%" y="303.50"></text></g><g><title>enqueue_to_backlog (51 samples, 0.16%)</title><rect x="60.8493%" y="277" width="0.1557%" height="15" fill="rgb(209,161,10)" fg:x="19933" fg:w="51"/><text x="61.0993%" y="287.50"></text></g><g><title>sk_free (6 samples, 0.02%)</title><rect x="61.0049%" y="309" width="0.0183%" height="15" fill="rgb(217,6,38)" fg:x="19984" fg:w="6"/><text x="61.2549%" y="319.50"></text></g><g><title>skb_clone_tx_timestamp (8 samples, 0.02%)</title><rect x="61.0233%" y="309" width="0.0244%" height="15" fill="rgb(229,229,48)" fg:x="19990" fg:w="8"/><text x="61.2733%" y="319.50"></text></g><g><title>dev_hard_start_xmit (154 samples, 0.47%)</title><rect x="60.6478%" y="341" width="0.4701%" height="15" fill="rgb(225,21,28)" fg:x="19867" fg:w="154"/><text x="60.8978%" y="351.50"></text></g><g><title>loopback_xmit (138 samples, 0.42%)</title><rect x="60.6966%" y="325" width="0.4213%" height="15" fill="rgb(206,33,13)" fg:x="19883" fg:w="138"/><text x="60.9466%" y="335.50"></text></g><g><title>tcp_wfree (23 samples, 0.07%)</title><rect x="61.0477%" y="309" width="0.0702%" height="15" fill="rgb(242,178,17)" fg:x="19998" fg:w="23"/><text x="61.2977%" y="319.50"></text></g><g><title>netdev_core_pick_tx (13 samples, 0.04%)</title><rect x="61.1179%" y="341" width="0.0397%" height="15" fill="rgb(220,162,5)" fg:x="20021" fg:w="13"/><text x="61.3679%" y="351.50"></text></g><g><title>netif_skb_features (12 samples, 0.04%)</title><rect x="61.2034%" y="325" width="0.0366%" height="15" fill="rgb(210,33,43)" fg:x="20049" fg:w="12"/><text x="61.4534%" y="335.50"></text></g><g><title>skb_network_protocol (4 samples, 0.01%)</title><rect x="61.2278%" y="309" width="0.0122%" height="15" fill="rgb(216,116,54)" fg:x="20057" fg:w="4"/><text x="61.4778%" y="319.50"></text></g><g><title>validate_xmit_skb (30 samples, 0.09%)</title><rect x="61.1576%" y="341" width="0.0916%" height="15" fill="rgb(249,92,24)" fg:x="20034" fg:w="30"/><text x="61.4076%" y="351.50"></text></g><g><title>__dev_queue_xmit (300 samples, 0.92%)</title><rect x="60.3425%" y="357" width="0.9158%" height="15" fill="rgb(231,189,14)" fg:x="19767" fg:w="300"/><text x="60.5925%" y="367.50"></text></g><g><title>__x86_indirect_thunk_rax (6 samples, 0.02%)</title><rect x="61.5575%" y="309" width="0.0183%" height="15" fill="rgb(230,8,41)" fg:x="20165" fg:w="6"/><text x="61.8075%" y="319.50"></text></g><g><title>irqtime_account_irq (76 samples, 0.23%)</title><rect x="61.5789%" y="309" width="0.2320%" height="15" fill="rgb(249,7,27)" fg:x="20172" fg:w="76"/><text x="61.8289%" y="319.50"></text></g><g><title>sched_clock_cpu (58 samples, 0.18%)</title><rect x="61.6338%" y="293" width="0.1771%" height="15" fill="rgb(232,86,5)" fg:x="20190" fg:w="58"/><text x="61.8838%" y="303.50"></text></g><g><title>native_sched_clock (53 samples, 0.16%)</title><rect x="61.6491%" y="277" width="0.1618%" height="15" fill="rgb(224,175,18)" fg:x="20195" fg:w="53"/><text x="61.8991%" y="287.50"></text></g><g><title>__x86_indirect_thunk_rax (6 samples, 0.02%)</title><rect x="62.0001%" y="277" width="0.0183%" height="15" fill="rgb(220,129,12)" fg:x="20310" fg:w="6"/><text x="62.2501%" y="287.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (68 samples, 0.21%)</title><rect x="62.1802%" y="245" width="0.2076%" height="15" fill="rgb(210,19,36)" fg:x="20369" fg:w="68"/><text x="62.4302%" y="255.50"></text></g><g><title>__x86_indirect_thunk_rax (42 samples, 0.13%)</title><rect x="62.4824%" y="213" width="0.1282%" height="15" fill="rgb(219,96,14)" fg:x="20468" fg:w="42"/><text x="62.7324%" y="223.50"></text></g><g><title>__local_bh_enable_ip (8 samples, 0.02%)</title><rect x="63.1449%" y="197" width="0.0244%" height="15" fill="rgb(249,106,1)" fg:x="20685" fg:w="8"/><text x="63.3949%" y="207.50"></text></g><g><title>ipt_do_table (184 samples, 0.56%)</title><rect x="62.6107%" y="213" width="0.5617%" height="15" fill="rgb(249,155,20)" fg:x="20510" fg:w="184"/><text x="62.8607%" y="223.50"></text></g><g><title>iptable_filter_hook (13 samples, 0.04%)</title><rect x="63.1724%" y="213" width="0.0397%" height="15" fill="rgb(244,168,9)" fg:x="20694" fg:w="13"/><text x="63.4224%" y="223.50"></text></g><g><title>iptable_mangle_hook (7 samples, 0.02%)</title><rect x="63.2120%" y="213" width="0.0214%" height="15" fill="rgb(216,23,50)" fg:x="20707" fg:w="7"/><text x="63.4620%" y="223.50"></text></g><g><title>ipv4_confirm (9 samples, 0.03%)</title><rect x="63.2365%" y="213" width="0.0275%" height="15" fill="rgb(224,219,20)" fg:x="20715" fg:w="9"/><text x="63.4865%" y="223.50"></text></g><g><title>nf_confirm (31 samples, 0.09%)</title><rect x="63.2639%" y="213" width="0.0946%" height="15" fill="rgb(222,156,15)" fg:x="20724" fg:w="31"/><text x="63.5139%" y="223.50"></text></g><g><title>nf_ct_deliver_cached_events (25 samples, 0.08%)</title><rect x="63.2823%" y="197" width="0.0763%" height="15" fill="rgb(231,97,17)" fg:x="20730" fg:w="25"/><text x="63.5323%" y="207.50"></text></g><g><title>nf_nat_ipv4_local_in (51 samples, 0.16%)</title><rect x="63.3586%" y="213" width="0.1557%" height="15" fill="rgb(218,70,48)" fg:x="20755" fg:w="51"/><text x="63.6086%" y="223.50"></text></g><g><title>nf_nat_inet_fn (36 samples, 0.11%)</title><rect x="63.4044%" y="197" width="0.1099%" height="15" fill="rgb(212,196,52)" fg:x="20770" fg:w="36"/><text x="63.6544%" y="207.50"></text></g><g><title>__x86_indirect_thunk_rcx (6 samples, 0.02%)</title><rect x="63.7737%" y="181" width="0.0183%" height="15" fill="rgb(243,203,18)" fg:x="20891" fg:w="6"/><text x="64.0237%" y="191.50"></text></g><g><title>nft_ct_get_eval (14 samples, 0.04%)</title><rect x="63.7921%" y="181" width="0.0427%" height="15" fill="rgb(252,125,41)" fg:x="20897" fg:w="14"/><text x="64.0421%" y="191.50"></text></g><g><title>nft_immediate_eval (11 samples, 0.03%)</title><rect x="63.8348%" y="181" width="0.0336%" height="15" fill="rgb(223,180,33)" fg:x="20911" fg:w="11"/><text x="64.0848%" y="191.50"></text></g><g><title>__x86_indirect_thunk_rax (8 samples, 0.02%)</title><rect x="63.9264%" y="165" width="0.0244%" height="15" fill="rgb(254,159,46)" fg:x="20941" fg:w="8"/><text x="64.1764%" y="175.50"></text></g><g><title>__x86_indirect_thunk_rax (7 samples, 0.02%)</title><rect x="64.0760%" y="149" width="0.0214%" height="15" fill="rgb(254,38,10)" fg:x="20990" fg:w="7"/><text x="64.3260%" y="159.50"></text></g><g><title>jhash (27 samples, 0.08%)</title><rect x="64.1004%" y="149" width="0.0824%" height="15" fill="rgb(208,217,32)" fg:x="20998" fg:w="27"/><text x="64.3504%" y="159.50"></text></g><g><title>memcmp (5 samples, 0.02%)</title><rect x="64.1828%" y="149" width="0.0153%" height="15" fill="rgb(221,120,13)" fg:x="21025" fg:w="5"/><text x="64.4328%" y="159.50"></text></g><g><title>nft_rhash_key (4 samples, 0.01%)</title><rect x="64.1981%" y="149" width="0.0122%" height="15" fill="rgb(246,54,52)" fg:x="21030" fg:w="4"/><text x="64.4481%" y="159.50"></text></g><g><title>nf_hook_slow (587 samples, 1.79%)</title><rect x="62.4214%" y="229" width="1.7919%" height="15" fill="rgb(242,34,25)" fg:x="20448" fg:w="587"/><text x="62.6714%" y="239.50">n..</text></g><g><title>nft_do_chain_inet (229 samples, 0.70%)</title><rect x="63.5143%" y="213" width="0.6991%" height="15" fill="rgb(247,209,9)" fg:x="20806" fg:w="229"/><text x="63.7643%" y="223.50"></text></g><g><title>nft_do_chain (205 samples, 0.63%)</title><rect x="63.5875%" y="197" width="0.6258%" height="15" fill="rgb(228,71,26)" fg:x="20830" fg:w="205"/><text x="63.8375%" y="207.50"></text></g><g><title>nft_lookup_eval (113 samples, 0.34%)</title><rect x="63.8684%" y="181" width="0.3450%" height="15" fill="rgb(222,145,49)" fg:x="20922" fg:w="113"/><text x="64.1184%" y="191.50"></text></g><g><title>nft_rhash_lookup (86 samples, 0.26%)</title><rect x="63.9508%" y="165" width="0.2625%" height="15" fill="rgb(218,121,17)" fg:x="20949" fg:w="86"/><text x="64.2008%" y="175.50"></text></g><g><title>ip_local_deliver (599 samples, 1.83%)</title><rect x="62.3909%" y="245" width="1.8286%" height="15" fill="rgb(244,50,7)" fg:x="20438" fg:w="599"/><text x="62.6409%" y="255.50">i..</text></g><g><title>raw_local_deliver (8 samples, 0.02%)</title><rect x="64.3110%" y="213" width="0.0244%" height="15" fill="rgb(246,229,37)" fg:x="21067" fg:w="8"/><text x="64.5610%" y="223.50"></text></g><g><title>__inet_lookup_established (115 samples, 0.35%)</title><rect x="64.9185%" y="197" width="0.3511%" height="15" fill="rgb(225,18,5)" fg:x="21266" fg:w="115"/><text x="65.1685%" y="207.50"></text></g><g><title>inet_ehashfn (15 samples, 0.05%)</title><rect x="65.2238%" y="181" width="0.0458%" height="15" fill="rgb(213,204,8)" fg:x="21366" fg:w="15"/><text x="65.4738%" y="191.50"></text></g><g><title>_raw_spin_lock (5 samples, 0.02%)</title><rect x="65.2696%" y="197" width="0.0153%" height="15" fill="rgb(238,103,6)" fg:x="21381" fg:w="5"/><text x="65.5196%" y="207.50"></text></g><g><title>migrate_disable (8 samples, 0.02%)</title><rect x="65.3794%" y="165" width="0.0244%" height="15" fill="rgb(222,25,35)" fg:x="21417" fg:w="8"/><text x="65.6294%" y="175.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (28 samples, 0.09%)</title><rect x="65.3276%" y="181" width="0.0855%" height="15" fill="rgb(213,203,35)" fg:x="21400" fg:w="28"/><text x="65.5776%" y="191.50"></text></g><g><title>__x86_indirect_thunk_rax (10 samples, 0.03%)</title><rect x="65.4619%" y="165" width="0.0305%" height="15" fill="rgb(221,79,53)" fg:x="21444" fg:w="10"/><text x="65.7119%" y="175.50"></text></g><g><title>sk_filter_trim_cap (120 samples, 0.37%)</title><rect x="65.2909%" y="197" width="0.3663%" height="15" fill="rgb(243,200,35)" fg:x="21388" fg:w="120"/><text x="65.5409%" y="207.50"></text></g><g><title>security_sock_rcv_skb (80 samples, 0.24%)</title><rect x="65.4130%" y="181" width="0.2442%" height="15" fill="rgb(248,60,25)" fg:x="21428" fg:w="80"/><text x="65.6630%" y="191.50"></text></g><g><title>selinux_socket_sock_rcv_skb (50 samples, 0.15%)</title><rect x="65.5046%" y="165" width="0.1526%" height="15" fill="rgb(227,53,46)" fg:x="21458" fg:w="50"/><text x="65.7546%" y="175.50"></text></g><g><title>sock_put (22 samples, 0.07%)</title><rect x="65.6572%" y="197" width="0.0672%" height="15" fill="rgb(216,120,32)" fg:x="21508" fg:w="22"/><text x="65.9072%" y="207.50"></text></g><g><title>dst_release (28 samples, 0.09%)</title><rect x="65.8618%" y="181" width="0.0855%" height="15" fill="rgb(220,134,1)" fg:x="21575" fg:w="28"/><text x="66.1118%" y="191.50"></text></g><g><title>tcp_add_backlog (74 samples, 0.23%)</title><rect x="65.7244%" y="197" width="0.2259%" height="15" fill="rgb(237,168,5)" fg:x="21530" fg:w="74"/><text x="65.9744%" y="207.50"></text></g><g><title>__tcp_ack_snd_check (13 samples, 0.04%)</title><rect x="66.1793%" y="165" width="0.0397%" height="15" fill="rgb(231,100,33)" fg:x="21679" fg:w="13"/><text x="66.4293%" y="175.50"></text></g><g><title>kfree_skb_partial (7 samples, 0.02%)</title><rect x="66.2220%" y="165" width="0.0214%" height="15" fill="rgb(236,177,47)" fg:x="21693" fg:w="7"/><text x="66.4720%" y="175.50"></text></g><g><title>__mod_timer (20 samples, 0.06%)</title><rect x="66.2556%" y="149" width="0.0611%" height="15" fill="rgb(235,7,49)" fg:x="21704" fg:w="20"/><text x="66.5056%" y="159.50"></text></g><g><title>sk_reset_timer (22 samples, 0.07%)</title><rect x="66.2525%" y="165" width="0.0672%" height="15" fill="rgb(232,119,22)" fg:x="21703" fg:w="22"/><text x="66.5025%" y="175.50"></text></g><g><title>_raw_spin_lock_irqsave (4 samples, 0.01%)</title><rect x="66.5517%" y="37" width="0.0122%" height="15" fill="rgb(254,73,53)" fg:x="21801" fg:w="4"/><text x="66.8017%" y="47.50"></text></g><g><title>select_task_rq_fair (6 samples, 0.02%)</title><rect x="66.5639%" y="37" width="0.0183%" height="15" fill="rgb(251,35,20)" fg:x="21805" fg:w="6"/><text x="66.8139%" y="47.50"></text></g><g><title>ttwu_do_activate (5 samples, 0.02%)</title><rect x="66.5822%" y="37" width="0.0153%" height="15" fill="rgb(241,119,20)" fg:x="21811" fg:w="5"/><text x="66.8322%" y="47.50"></text></g><g><title>__wake_up_common (30 samples, 0.09%)</title><rect x="66.5334%" y="85" width="0.0916%" height="15" fill="rgb(207,102,14)" fg:x="21795" fg:w="30"/><text x="66.7834%" y="95.50"></text></g><g><title>autoremove_wake_function (26 samples, 0.08%)</title><rect x="66.5456%" y="69" width="0.0794%" height="15" fill="rgb(248,201,50)" fg:x="21799" fg:w="26"/><text x="66.7956%" y="79.50"></text></g><g><title>try_to_wake_up (26 samples, 0.08%)</title><rect x="66.5456%" y="53" width="0.0794%" height="15" fill="rgb(222,185,44)" fg:x="21799" fg:w="26"/><text x="66.7956%" y="63.50"></text></g><g><title>ttwu_queue_wakelist (7 samples, 0.02%)</title><rect x="66.6036%" y="37" width="0.0214%" height="15" fill="rgb(218,107,18)" fg:x="21818" fg:w="7"/><text x="66.8536%" y="47.50"></text></g><g><title>__wake_up_common_lock (32 samples, 0.10%)</title><rect x="66.5334%" y="101" width="0.0977%" height="15" fill="rgb(237,177,39)" fg:x="21795" fg:w="32"/><text x="66.7834%" y="111.50"></text></g><g><title>_raw_read_lock_irqsave (39 samples, 0.12%)</title><rect x="66.6311%" y="101" width="0.1191%" height="15" fill="rgb(246,69,6)" fg:x="21827" fg:w="39"/><text x="66.8811%" y="111.50"></text></g><g><title>__wake_up_common (103 samples, 0.31%)</title><rect x="66.4448%" y="133" width="0.3144%" height="15" fill="rgb(234,208,37)" fg:x="21766" fg:w="103"/><text x="66.6948%" y="143.50"></text></g><g><title>ep_poll_callback (88 samples, 0.27%)</title><rect x="66.4906%" y="117" width="0.2686%" height="15" fill="rgb(225,4,6)" fg:x="21781" fg:w="88"/><text x="66.7406%" y="127.50"></text></g><g><title>_raw_spin_lock_irqsave (9 samples, 0.03%)</title><rect x="66.7593%" y="133" width="0.0275%" height="15" fill="rgb(233,45,0)" fg:x="21869" fg:w="9"/><text x="67.0093%" y="143.50"></text></g><g><title>__wake_up_common_lock (121 samples, 0.37%)</title><rect x="66.4296%" y="149" width="0.3694%" height="15" fill="rgb(226,136,5)" fg:x="21761" fg:w="121"/><text x="66.6796%" y="159.50"></text></g><g><title>_raw_spin_unlock_irqrestore (4 samples, 0.01%)</title><rect x="66.7867%" y="133" width="0.0122%" height="15" fill="rgb(211,91,47)" fg:x="21878" fg:w="4"/><text x="67.0367%" y="143.50"></text></g><g><title>sock_def_readable (158 samples, 0.48%)</title><rect x="66.3197%" y="165" width="0.4823%" height="15" fill="rgb(242,88,51)" fg:x="21725" fg:w="158"/><text x="66.5697%" y="175.50"></text></g><g><title>__slab_free (18 samples, 0.05%)</title><rect x="67.0310%" y="117" width="0.0549%" height="15" fill="rgb(230,91,28)" fg:x="21958" fg:w="18"/><text x="67.2810%" y="127.50"></text></g><g><title>kfree (43 samples, 0.13%)</title><rect x="67.0035%" y="133" width="0.1313%" height="15" fill="rgb(254,186,29)" fg:x="21949" fg:w="43"/><text x="67.2535%" y="143.50"></text></g><g><title>slab_free_freelist_hook (16 samples, 0.05%)</title><rect x="67.0859%" y="117" width="0.0488%" height="15" fill="rgb(238,6,4)" fg:x="21976" fg:w="16"/><text x="67.3359%" y="127.50"></text></g><g><title>skb_release_data (23 samples, 0.07%)</title><rect x="67.1347%" y="133" width="0.0702%" height="15" fill="rgb(221,151,16)" fg:x="21992" fg:w="23"/><text x="67.3847%" y="143.50"></text></g><g><title>__kfree_skb (67 samples, 0.20%)</title><rect x="67.0035%" y="149" width="0.2045%" height="15" fill="rgb(251,143,52)" fg:x="21949" fg:w="67"/><text x="67.2535%" y="159.50"></text></g><g><title>__slab_free (9 samples, 0.03%)</title><rect x="67.2599%" y="133" width="0.0275%" height="15" fill="rgb(206,90,15)" fg:x="22033" fg:w="9"/><text x="67.5099%" y="143.50"></text></g><g><title>kmem_cache_free (20 samples, 0.06%)</title><rect x="67.2294%" y="149" width="0.0611%" height="15" fill="rgb(218,35,8)" fg:x="22023" fg:w="20"/><text x="67.4794%" y="159.50"></text></g><g><title>rb_first (5 samples, 0.02%)</title><rect x="67.2904%" y="149" width="0.0153%" height="15" fill="rgb(239,215,6)" fg:x="22043" fg:w="5"/><text x="67.5404%" y="159.50"></text></g><g><title>rb_next (4 samples, 0.01%)</title><rect x="67.3057%" y="149" width="0.0122%" height="15" fill="rgb(245,116,39)" fg:x="22048" fg:w="4"/><text x="67.5557%" y="159.50"></text></g><g><title>tcp_ack_update_rtt (9 samples, 0.03%)</title><rect x="67.3210%" y="149" width="0.0275%" height="15" fill="rgb(242,65,28)" fg:x="22053" fg:w="9"/><text x="67.5710%" y="159.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (9 samples, 0.03%)</title><rect x="67.3698%" y="149" width="0.0275%" height="15" fill="rgb(252,132,53)" fg:x="22069" fg:w="9"/><text x="67.6198%" y="159.50"></text></g><g><title>sk_reset_timer (6 samples, 0.02%)</title><rect x="67.3790%" y="133" width="0.0183%" height="15" fill="rgb(224,159,50)" fg:x="22072" fg:w="6"/><text x="67.6290%" y="143.50"></text></g><g><title>__mod_timer (6 samples, 0.02%)</title><rect x="67.3790%" y="117" width="0.0183%" height="15" fill="rgb(224,93,4)" fg:x="22072" fg:w="6"/><text x="67.6290%" y="127.50"></text></g><g><title>tcp_ack (210 samples, 0.64%)</title><rect x="66.8020%" y="165" width="0.6411%" height="15" fill="rgb(208,81,34)" fg:x="21883" fg:w="210"/><text x="67.0520%" y="175.50"></text></g><g><title>tcp_update_pacing_rate (15 samples, 0.05%)</title><rect x="67.3973%" y="149" width="0.0458%" height="15" fill="rgb(233,92,54)" fg:x="22078" fg:w="15"/><text x="67.6473%" y="159.50"></text></g><g><title>tcp_data_queue (6 samples, 0.02%)</title><rect x="67.4461%" y="165" width="0.0183%" height="15" fill="rgb(237,21,14)" fg:x="22094" fg:w="6"/><text x="67.6961%" y="175.50"></text></g><g><title>tcp_data_ready (9 samples, 0.03%)</title><rect x="67.4644%" y="165" width="0.0275%" height="15" fill="rgb(249,128,51)" fg:x="22100" fg:w="9"/><text x="67.7144%" y="175.50"></text></g><g><title>tcp_event_data_recv (28 samples, 0.09%)</title><rect x="67.4919%" y="165" width="0.0855%" height="15" fill="rgb(223,129,24)" fg:x="22109" fg:w="28"/><text x="67.7419%" y="175.50"></text></g><g><title>tcp_mstamp_refresh (30 samples, 0.09%)</title><rect x="67.5774%" y="165" width="0.0916%" height="15" fill="rgb(231,168,25)" fg:x="22137" fg:w="30"/><text x="67.8274%" y="175.50"></text></g><g><title>ktime_get (29 samples, 0.09%)</title><rect x="67.5804%" y="149" width="0.0885%" height="15" fill="rgb(224,39,20)" fg:x="22138" fg:w="29"/><text x="67.8304%" y="159.50"></text></g><g><title>read_tsc (16 samples, 0.05%)</title><rect x="67.6201%" y="133" width="0.0488%" height="15" fill="rgb(225,152,53)" fg:x="22151" fg:w="16"/><text x="67.8701%" y="143.50"></text></g><g><title>tcp_queue_rcv (71 samples, 0.22%)</title><rect x="67.6690%" y="165" width="0.2167%" height="15" fill="rgb(252,17,24)" fg:x="22167" fg:w="71"/><text x="67.9190%" y="175.50"></text></g><g><title>tcp_try_coalesce (62 samples, 0.19%)</title><rect x="67.6964%" y="149" width="0.1893%" height="15" fill="rgb(250,114,30)" fg:x="22176" fg:w="62"/><text x="67.9464%" y="159.50"></text></g><g><title>skb_try_coalesce (57 samples, 0.17%)</title><rect x="67.7117%" y="133" width="0.1740%" height="15" fill="rgb(229,5,4)" fg:x="22181" fg:w="57"/><text x="67.9617%" y="143.50"></text></g><g><title>tcp_send_delayed_ack (4 samples, 0.01%)</title><rect x="67.8857%" y="165" width="0.0122%" height="15" fill="rgb(225,176,49)" fg:x="22238" fg:w="4"/><text x="68.1357%" y="175.50"></text></g><g><title>tcp_v4_do_rcv (639 samples, 1.95%)</title><rect x="65.9534%" y="197" width="1.9507%" height="15" fill="rgb(224,221,49)" fg:x="21605" fg:w="639"/><text x="66.2034%" y="207.50">t..</text></g><g><title>tcp_rcv_established (632 samples, 1.93%)</title><rect x="65.9747%" y="181" width="1.9293%" height="15" fill="rgb(253,169,27)" fg:x="21612" fg:w="632"/><text x="66.2247%" y="191.50">t..</text></g><g><title>tcp_v4_fill_cb (8 samples, 0.02%)</title><rect x="67.9040%" y="197" width="0.0244%" height="15" fill="rgb(211,206,16)" fg:x="22244" fg:w="8"/><text x="68.1540%" y="207.50"></text></g><g><title>ip_protocol_deliver_rcu (1,219 samples, 3.72%)</title><rect x="64.2500%" y="229" width="3.7212%" height="15" fill="rgb(244,87,35)" fg:x="21047" fg:w="1219"/><text x="64.5000%" y="239.50">ip_p..</text></g><g><title>tcp_v4_rcv (1,191 samples, 3.64%)</title><rect x="64.3354%" y="213" width="3.6358%" height="15" fill="rgb(246,28,10)" fg:x="21075" fg:w="1191"/><text x="64.5854%" y="223.50">tcp_..</text></g><g><title>tcp_v4_inbound_md5_hash (14 samples, 0.04%)</title><rect x="67.9284%" y="197" width="0.0427%" height="15" fill="rgb(229,12,44)" fg:x="22252" fg:w="14"/><text x="68.1784%" y="207.50"></text></g><g><title>ip_local_deliver_finish (1,230 samples, 3.75%)</title><rect x="64.2194%" y="245" width="3.7548%" height="15" fill="rgb(210,145,37)" fg:x="21037" fg:w="1230"/><text x="64.4694%" y="255.50">ip_l..</text></g><g><title>ip_rcv_core (37 samples, 0.11%)</title><rect x="68.0109%" y="229" width="0.1129%" height="15" fill="rgb(227,112,52)" fg:x="22279" fg:w="37"/><text x="68.2609%" y="239.50"></text></g><g><title>ip_rcv_finish_core.constprop.0 (56 samples, 0.17%)</title><rect x="68.1238%" y="229" width="0.1710%" height="15" fill="rgb(238,155,34)" fg:x="22316" fg:w="56"/><text x="68.3738%" y="239.50"></text></g><g><title>__x86_indirect_thunk_rax (42 samples, 0.13%)</title><rect x="68.4016%" y="213" width="0.1282%" height="15" fill="rgb(239,226,36)" fg:x="22407" fg:w="42"/><text x="68.6516%" y="223.50"></text></g><g><title>ip_sabotage_in (11 samples, 0.03%)</title><rect x="68.5298%" y="213" width="0.0336%" height="15" fill="rgb(230,16,23)" fg:x="22449" fg:w="11"/><text x="68.7798%" y="223.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.02%)</title><rect x="68.8900%" y="197" width="0.0183%" height="15" fill="rgb(236,171,36)" fg:x="22567" fg:w="6"/><text x="69.1400%" y="207.50"></text></g><g><title>ipt_do_table (115 samples, 0.35%)</title><rect x="68.5634%" y="213" width="0.3511%" height="15" fill="rgb(221,22,14)" fg:x="22460" fg:w="115"/><text x="68.8134%" y="223.50"></text></g><g><title>ipv4_conntrack_defrag (7 samples, 0.02%)</title><rect x="68.9236%" y="213" width="0.0214%" height="15" fill="rgb(242,43,11)" fg:x="22578" fg:w="7"/><text x="69.1736%" y="223.50"></text></g><g><title>ipv4_conntrack_in (13 samples, 0.04%)</title><rect x="68.9450%" y="213" width="0.0397%" height="15" fill="rgb(232,69,23)" fg:x="22585" fg:w="13"/><text x="69.1950%" y="223.50"></text></g><g><title>nf_conntrack_in (23 samples, 0.07%)</title><rect x="68.9847%" y="213" width="0.0702%" height="15" fill="rgb(216,180,54)" fg:x="22598" fg:w="23"/><text x="69.2347%" y="223.50"></text></g><g><title>nf_nat_ipv4_pre_routing (57 samples, 0.17%)</title><rect x="69.0549%" y="213" width="0.1740%" height="15" fill="rgb(216,5,24)" fg:x="22621" fg:w="57"/><text x="69.3049%" y="223.50"></text></g><g><title>nf_nat_inet_fn (44 samples, 0.13%)</title><rect x="69.0946%" y="197" width="0.1343%" height="15" fill="rgb(225,89,9)" fg:x="22634" fg:w="44"/><text x="69.3446%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (7 samples, 0.02%)</title><rect x="71.2162%" y="181" width="0.0214%" height="15" fill="rgb(243,75,33)" fg:x="23329" fg:w="7"/><text x="71.4662%" y="191.50"></text></g><g><title>sysvec_apic_timer_interrupt (7 samples, 0.02%)</title><rect x="71.2162%" y="165" width="0.0214%" height="15" fill="rgb(247,141,45)" fg:x="23329" fg:w="7"/><text x="71.4662%" y="175.50"></text></g><g><title>__sysvec_apic_timer_interrupt (7 samples, 0.02%)</title><rect x="71.2162%" y="149" width="0.0214%" height="15" fill="rgb(232,177,36)" fg:x="23329" fg:w="7"/><text x="71.4662%" y="159.50"></text></g><g><title>hrtimer_interrupt (6 samples, 0.02%)</title><rect x="71.2192%" y="133" width="0.0183%" height="15" fill="rgb(219,125,36)" fg:x="23330" fg:w="6"/><text x="71.4692%" y="143.50"></text></g><g><title>__hrtimer_run_queues (5 samples, 0.02%)</title><rect x="71.2223%" y="117" width="0.0153%" height="15" fill="rgb(227,94,9)" fg:x="23331" fg:w="5"/><text x="71.4723%" y="127.50"></text></g><g><title>tick_sched_timer (5 samples, 0.02%)</title><rect x="71.2223%" y="101" width="0.0153%" height="15" fill="rgb(240,34,52)" fg:x="23331" fg:w="5"/><text x="71.4723%" y="111.50"></text></g><g><title>tick_sched_handle (5 samples, 0.02%)</title><rect x="71.2223%" y="85" width="0.0153%" height="15" fill="rgb(216,45,12)" fg:x="23331" fg:w="5"/><text x="71.4723%" y="95.50"></text></g><g><title>update_process_times (5 samples, 0.02%)</title><rect x="71.2223%" y="69" width="0.0153%" height="15" fill="rgb(246,21,19)" fg:x="23331" fg:w="5"/><text x="71.4723%" y="79.50"></text></g><g><title>scheduler_tick (4 samples, 0.01%)</title><rect x="71.2253%" y="53" width="0.0122%" height="15" fill="rgb(213,98,42)" fg:x="23332" fg:w="4"/><text x="71.4753%" y="63.50"></text></g><g><title>nft_cmp_eval (27 samples, 0.08%)</title><rect x="71.2376%" y="181" width="0.0824%" height="15" fill="rgb(250,136,47)" fg:x="23336" fg:w="27"/><text x="71.4876%" y="191.50"></text></g><g><title>memcmp (6 samples, 0.02%)</title><rect x="71.3017%" y="165" width="0.0183%" height="15" fill="rgb(251,124,27)" fg:x="23357" fg:w="6"/><text x="71.5517%" y="175.50"></text></g><g><title>nft_immediate_eval (251 samples, 0.77%)</title><rect x="71.3200%" y="181" width="0.7662%" height="15" fill="rgb(229,180,14)" fg:x="23363" fg:w="251"/><text x="71.5700%" y="191.50"></text></g><g><title>nft_meta_get_eval (36 samples, 0.11%)</title><rect x="72.0862%" y="181" width="0.1099%" height="15" fill="rgb(245,216,25)" fg:x="23614" fg:w="36"/><text x="72.3362%" y="191.50"></text></g><g><title>__netif_receive_skb_one_core (3,453 samples, 10.54%)</title><rect x="62.1375%" y="261" width="10.5409%" height="15" fill="rgb(251,43,5)" fg:x="20355" fg:w="3453"/><text x="62.3875%" y="271.50">__netif_receive..</text></g><g><title>ip_rcv (1,541 samples, 4.70%)</title><rect x="67.9742%" y="245" width="4.7042%" height="15" fill="rgb(250,128,24)" fg:x="22267" fg:w="1541"/><text x="68.2242%" y="255.50">ip_rcv</text></g><g><title>nf_hook_slow (1,436 samples, 4.38%)</title><rect x="68.2948%" y="229" width="4.3837%" height="15" fill="rgb(217,117,27)" fg:x="22372" fg:w="1436"/><text x="68.5448%" y="239.50">nf_ho..</text></g><g><title>nft_do_chain_inet (1,130 samples, 3.45%)</title><rect x="69.2289%" y="213" width="3.4495%" height="15" fill="rgb(245,147,4)" fg:x="22678" fg:w="1130"/><text x="69.4789%" y="223.50">nft..</text></g><g><title>nft_do_chain (1,090 samples, 3.33%)</title><rect x="69.3510%" y="197" width="3.3274%" height="15" fill="rgb(242,201,35)" fg:x="22718" fg:w="1090"/><text x="69.6010%" y="207.50">nft..</text></g><g><title>strncpy (158 samples, 0.48%)</title><rect x="72.1961%" y="181" width="0.4823%" height="15" fill="rgb(218,181,1)" fg:x="23650" fg:w="158"/><text x="72.4461%" y="191.50"></text></g><g><title>_raw_spin_lock (34 samples, 0.10%)</title><rect x="72.6784%" y="261" width="0.1038%" height="15" fill="rgb(222,6,29)" fg:x="23808" fg:w="34"/><text x="72.9284%" y="271.50"></text></g><g><title>__napi_poll (3,544 samples, 10.82%)</title><rect x="61.9696%" y="293" width="10.8187%" height="15" fill="rgb(208,186,3)" fg:x="20300" fg:w="3544"/><text x="62.2196%" y="303.50">__napi_poll</text></g><g><title>process_backlog (3,528 samples, 10.77%)</title><rect x="62.0184%" y="277" width="10.7699%" height="15" fill="rgb(216,36,26)" fg:x="20316" fg:w="3528"/><text x="62.2684%" y="287.50">process_backlog</text></g><g><title>net_rx_action (3,600 samples, 10.99%)</title><rect x="61.8109%" y="309" width="10.9897%" height="15" fill="rgb(248,201,23)" fg:x="20248" fg:w="3600"/><text x="62.0609%" y="319.50">net_rx_action</text></g><g><title>__usecs_to_jiffies (4 samples, 0.01%)</title><rect x="72.7883%" y="293" width="0.0122%" height="15" fill="rgb(251,170,31)" fg:x="23844" fg:w="4"/><text x="73.0383%" y="303.50"></text></g><g><title>__local_bh_enable_ip (3,783 samples, 11.55%)</title><rect x="61.2583%" y="357" width="11.5483%" height="15" fill="rgb(207,110,25)" fg:x="20067" fg:w="3783"/><text x="61.5083%" y="367.50">__local_bh_enable..</text></g><g><title>do_softirq (3,757 samples, 11.47%)</title><rect x="61.3377%" y="341" width="11.4690%" height="15" fill="rgb(250,54,15)" fg:x="20093" fg:w="3757"/><text x="61.5877%" y="351.50">do_softirq</text></g><g><title>__softirqentry_text_start (3,718 samples, 11.35%)</title><rect x="61.4567%" y="325" width="11.3499%" height="15" fill="rgb(227,68,33)" fg:x="20132" fg:w="3718"/><text x="61.7067%" y="335.50">__softirqentry_te..</text></g><g><title>ip_finish_output2 (4,147 samples, 12.66%)</title><rect x="60.1532%" y="373" width="12.6595%" height="15" fill="rgb(238,34,41)" fg:x="19705" fg:w="4147"/><text x="60.4032%" y="383.50">ip_finish_output2</text></g><g><title>migrate_disable (7 samples, 0.02%)</title><rect x="72.8799%" y="341" width="0.0214%" height="15" fill="rgb(220,11,15)" fg:x="23874" fg:w="7"/><text x="73.1299%" y="351.50"></text></g><g><title>migrate_enable (6 samples, 0.02%)</title><rect x="72.9013%" y="341" width="0.0183%" height="15" fill="rgb(246,111,35)" fg:x="23881" fg:w="6"/><text x="73.1513%" y="351.50"></text></g><g><title>ip_finish_output (37 samples, 0.11%)</title><rect x="72.8127%" y="373" width="0.1129%" height="15" fill="rgb(209,88,53)" fg:x="23852" fg:w="37"/><text x="73.0627%" y="383.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (37 samples, 0.11%)</title><rect x="72.8127%" y="357" width="0.1129%" height="15" fill="rgb(231,185,47)" fg:x="23852" fg:w="37"/><text x="73.0627%" y="367.50"></text></g><g><title>ip_send_check (43 samples, 0.13%)</title><rect x="72.9868%" y="341" width="0.1313%" height="15" fill="rgb(233,154,1)" fg:x="23909" fg:w="43"/><text x="73.2368%" y="351.50"></text></g><g><title>__x86_indirect_thunk_rax (54 samples, 0.16%)</title><rect x="73.2127%" y="325" width="0.1648%" height="15" fill="rgb(225,15,46)" fg:x="23983" fg:w="54"/><text x="73.4627%" y="335.50"></text></g><g><title>__local_bh_enable_ip (9 samples, 0.03%)</title><rect x="74.0186%" y="309" width="0.0275%" height="15" fill="rgb(211,135,41)" fg:x="24247" fg:w="9"/><text x="74.2686%" y="319.50"></text></g><g><title>ipt_do_table (222 samples, 0.68%)</title><rect x="73.3775%" y="325" width="0.6777%" height="15" fill="rgb(208,54,0)" fg:x="24037" fg:w="222"/><text x="73.6275%" y="335.50"></text></g><g><title>iptable_mangle_hook (91 samples, 0.28%)</title><rect x="74.0552%" y="325" width="0.2778%" height="15" fill="rgb(244,136,14)" fg:x="24259" fg:w="91"/><text x="74.3052%" y="335.50"></text></g><g><title>ipt_do_table (71 samples, 0.22%)</title><rect x="74.1162%" y="309" width="0.2167%" height="15" fill="rgb(241,56,14)" fg:x="24279" fg:w="71"/><text x="74.3662%" y="319.50"></text></g><g><title>ipv4_conntrack_defrag (14 samples, 0.04%)</title><rect x="74.3421%" y="325" width="0.0427%" height="15" fill="rgb(205,80,24)" fg:x="24353" fg:w="14"/><text x="74.5921%" y="335.50"></text></g><g><title>ipv4_conntrack_local (7 samples, 0.02%)</title><rect x="74.3849%" y="325" width="0.0214%" height="15" fill="rgb(220,57,4)" fg:x="24367" fg:w="7"/><text x="74.6349%" y="335.50"></text></g><g><title>__nf_conntrack_find_get (78 samples, 0.24%)</title><rect x="74.4734%" y="309" width="0.2381%" height="15" fill="rgb(226,193,50)" fg:x="24396" fg:w="78"/><text x="74.7234%" y="319.50"></text></g><g><title>get_l4proto (7 samples, 0.02%)</title><rect x="74.7115%" y="309" width="0.0214%" height="15" fill="rgb(231,168,22)" fg:x="24474" fg:w="7"/><text x="74.9615%" y="319.50"></text></g><g><title>hash_conntrack_raw (48 samples, 0.15%)</title><rect x="74.7329%" y="309" width="0.1465%" height="15" fill="rgb(254,215,14)" fg:x="24481" fg:w="48"/><text x="74.9829%" y="319.50"></text></g><g><title>__local_bh_enable_ip (6 samples, 0.02%)</title><rect x="75.3007%" y="293" width="0.0183%" height="15" fill="rgb(211,115,16)" fg:x="24667" fg:w="6"/><text x="75.5507%" y="303.50"></text></g><g><title>__nf_ct_refresh_acct (13 samples, 0.04%)</title><rect x="75.3190%" y="293" width="0.0397%" height="15" fill="rgb(236,210,16)" fg:x="24673" fg:w="13"/><text x="75.5690%" y="303.50"></text></g><g><title>_raw_spin_lock_bh (12 samples, 0.04%)</title><rect x="75.3587%" y="293" width="0.0366%" height="15" fill="rgb(221,94,12)" fg:x="24686" fg:w="12"/><text x="75.6087%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (5 samples, 0.02%)</title><rect x="75.3801%" y="277" width="0.0153%" height="15" fill="rgb(235,218,49)" fg:x="24693" fg:w="5"/><text x="75.6301%" y="287.50"></text></g><g><title>nf_ct_acct_add (7 samples, 0.02%)</title><rect x="75.4075%" y="293" width="0.0214%" height="15" fill="rgb(217,114,14)" fg:x="24702" fg:w="7"/><text x="75.6575%" y="303.50"></text></g><g><title>nf_conntrack_tcp_packet (254 samples, 0.78%)</title><rect x="74.8794%" y="309" width="0.7754%" height="15" fill="rgb(216,145,22)" fg:x="24529" fg:w="254"/><text x="75.1294%" y="319.50"></text></g><g><title>nf_ct_seq_offset (74 samples, 0.23%)</title><rect x="75.4289%" y="293" width="0.2259%" height="15" fill="rgb(217,112,39)" fg:x="24709" fg:w="74"/><text x="75.6789%" y="303.50"></text></g><g><title>nf_conntrack_in (428 samples, 1.31%)</title><rect x="74.4063%" y="325" width="1.3066%" height="15" fill="rgb(225,85,32)" fg:x="24374" fg:w="428"/><text x="74.6563%" y="335.50"></text></g><g><title>nf_ct_get_tuple (19 samples, 0.06%)</title><rect x="75.6548%" y="309" width="0.0580%" height="15" fill="rgb(245,209,47)" fg:x="24783" fg:w="19"/><text x="75.9048%" y="319.50"></text></g><g><title>nf_ct_get_tuple_ports.constprop.0 (6 samples, 0.02%)</title><rect x="75.6945%" y="293" width="0.0183%" height="15" fill="rgb(218,220,15)" fg:x="24796" fg:w="6"/><text x="75.9445%" y="303.50"></text></g><g><title>nf_nat_ipv4_local_fn (33 samples, 0.10%)</title><rect x="75.7128%" y="325" width="0.1007%" height="15" fill="rgb(222,202,31)" fg:x="24802" fg:w="33"/><text x="75.9628%" y="335.50"></text></g><g><title>nf_nat_inet_fn (14 samples, 0.04%)</title><rect x="75.7708%" y="309" width="0.0427%" height="15" fill="rgb(243,203,4)" fg:x="24821" fg:w="14"/><text x="76.0208%" y="319.50"></text></g><g><title>nft_cmp_eval (22 samples, 0.07%)</title><rect x="76.0974%" y="293" width="0.0672%" height="15" fill="rgb(237,92,17)" fg:x="24928" fg:w="22"/><text x="76.3474%" y="303.50"></text></g><g><title>memcmp (13 samples, 0.04%)</title><rect x="76.1249%" y="277" width="0.0397%" height="15" fill="rgb(231,119,7)" fg:x="24937" fg:w="13"/><text x="76.3749%" y="287.50"></text></g><g><title>nft_immediate_eval (21 samples, 0.06%)</title><rect x="76.1646%" y="293" width="0.0641%" height="15" fill="rgb(237,82,41)" fg:x="24950" fg:w="21"/><text x="76.4146%" y="303.50"></text></g><g><title>nft_meta_get_eval (9 samples, 0.03%)</title><rect x="76.2287%" y="293" width="0.0275%" height="15" fill="rgb(226,81,48)" fg:x="24971" fg:w="9"/><text x="76.4787%" y="303.50"></text></g><g><title>nft_do_chain_inet (187 samples, 0.57%)</title><rect x="75.8135%" y="325" width="0.5709%" height="15" fill="rgb(234,70,51)" fg:x="24835" fg:w="187"/><text x="76.0635%" y="335.50"></text></g><g><title>nft_do_chain (163 samples, 0.50%)</title><rect x="75.8868%" y="309" width="0.4976%" height="15" fill="rgb(251,86,4)" fg:x="24859" fg:w="163"/><text x="76.1368%" y="319.50"></text></g><g><title>strncpy (42 samples, 0.13%)</title><rect x="76.2562%" y="293" width="0.1282%" height="15" fill="rgb(244,144,28)" fg:x="24980" fg:w="42"/><text x="76.5062%" y="303.50"></text></g><g><title>ip_local_out (1,148 samples, 3.50%)</title><rect x="72.9257%" y="373" width="3.5045%" height="15" fill="rgb(232,161,39)" fg:x="23889" fg:w="1148"/><text x="73.1757%" y="383.50">ip_..</text></g><g><title>__ip_local_out (1,138 samples, 3.47%)</title><rect x="72.9562%" y="357" width="3.4740%" height="15" fill="rgb(247,34,51)" fg:x="23899" fg:w="1138"/><text x="73.2062%" y="367.50">__i..</text></g><g><title>nf_hook_slow (1,085 samples, 3.31%)</title><rect x="73.1180%" y="341" width="3.3122%" height="15" fill="rgb(225,132,2)" fg:x="23952" fg:w="1085"/><text x="73.3680%" y="351.50">nf_..</text></g><g><title>selinux_ipv4_output (15 samples, 0.05%)</title><rect x="76.3844%" y="325" width="0.0458%" height="15" fill="rgb(209,159,44)" fg:x="25022" fg:w="15"/><text x="76.6344%" y="335.50"></text></g><g><title>netlbl_enabled (5 samples, 0.02%)</title><rect x="76.4149%" y="309" width="0.0153%" height="15" fill="rgb(251,214,1)" fg:x="25032" fg:w="5"/><text x="76.6649%" y="319.50"></text></g><g><title>__x86_indirect_thunk_rax (19 samples, 0.06%)</title><rect x="76.5645%" y="341" width="0.0580%" height="15" fill="rgb(247,84,47)" fg:x="25081" fg:w="19"/><text x="76.8145%" y="351.50"></text></g><g><title>ipt_do_table (43 samples, 0.13%)</title><rect x="76.6225%" y="341" width="0.1313%" height="15" fill="rgb(240,111,43)" fg:x="25100" fg:w="43"/><text x="76.8725%" y="351.50"></text></g><g><title>iptable_mangle_hook (16 samples, 0.05%)</title><rect x="76.7538%" y="341" width="0.0488%" height="15" fill="rgb(215,214,35)" fg:x="25143" fg:w="16"/><text x="77.0038%" y="351.50"></text></g><g><title>ipv4_confirm (11 samples, 0.03%)</title><rect x="76.8026%" y="341" width="0.0336%" height="15" fill="rgb(248,207,23)" fg:x="25159" fg:w="11"/><text x="77.0526%" y="351.50"></text></g><g><title>nf_confirm (33 samples, 0.10%)</title><rect x="76.8362%" y="341" width="0.1007%" height="15" fill="rgb(214,186,4)" fg:x="25170" fg:w="33"/><text x="77.0862%" y="351.50"></text></g><g><title>nf_ct_deliver_cached_events (27 samples, 0.08%)</title><rect x="76.8545%" y="325" width="0.0824%" height="15" fill="rgb(220,133,22)" fg:x="25176" fg:w="27"/><text x="77.1045%" y="335.50"></text></g><g><title>nf_nat_ipv4_out (58 samples, 0.18%)</title><rect x="76.9369%" y="341" width="0.1771%" height="15" fill="rgb(239,134,19)" fg:x="25203" fg:w="58"/><text x="77.1869%" y="351.50"></text></g><g><title>nf_nat_inet_fn (33 samples, 0.10%)</title><rect x="77.0132%" y="325" width="0.1007%" height="15" fill="rgb(250,140,9)" fg:x="25228" fg:w="33"/><text x="77.2632%" y="335.50"></text></g><g><title>selinux_ip_postroute (30 samples, 0.09%)</title><rect x="77.1140%" y="341" width="0.0916%" height="15" fill="rgb(225,59,14)" fg:x="25261" fg:w="30"/><text x="77.3640%" y="351.50"></text></g><g><title>nf_hook_slow (243 samples, 0.74%)</title><rect x="76.4729%" y="357" width="0.7418%" height="15" fill="rgb(214,152,51)" fg:x="25051" fg:w="243"/><text x="76.7229%" y="367.50"></text></g><g><title>ip_output (258 samples, 0.79%)</title><rect x="76.4302%" y="373" width="0.7876%" height="15" fill="rgb(251,227,43)" fg:x="25037" fg:w="258"/><text x="76.6802%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (10 samples, 0.03%)</title><rect x="77.2178%" y="373" width="0.0305%" height="15" fill="rgb(241,96,17)" fg:x="25295" fg:w="10"/><text x="77.4678%" y="383.50"></text></g><g><title>__ip_queue_xmit (5,732 samples, 17.50%)</title><rect x="59.7533%" y="389" width="17.4980%" height="15" fill="rgb(234,198,43)" fg:x="19574" fg:w="5732"/><text x="60.0033%" y="399.50">__ip_queue_xmit</text></g><g><title>__tcp_select_window (22 samples, 0.07%)</title><rect x="77.2514%" y="389" width="0.0672%" height="15" fill="rgb(220,108,29)" fg:x="25306" fg:w="22"/><text x="77.5014%" y="399.50"></text></g><g><title>bpf_skops_write_hdr_opt.isra.0 (4 samples, 0.01%)</title><rect x="77.3277%" y="389" width="0.0122%" height="15" fill="rgb(226,163,33)" fg:x="25331" fg:w="4"/><text x="77.5777%" y="399.50"></text></g><g><title>__copy_skb_header (27 samples, 0.08%)</title><rect x="77.7367%" y="373" width="0.0824%" height="15" fill="rgb(205,194,45)" fg:x="25465" fg:w="27"/><text x="77.9867%" y="383.50"></text></g><g><title>skb_clone (156 samples, 0.48%)</title><rect x="77.3490%" y="389" width="0.4762%" height="15" fill="rgb(206,143,44)" fg:x="25338" fg:w="156"/><text x="77.5990%" y="399.50"></text></g><g><title>tcp_established_options (9 samples, 0.03%)</title><rect x="77.8314%" y="389" width="0.0275%" height="15" fill="rgb(236,136,36)" fg:x="25496" fg:w="9"/><text x="78.0814%" y="399.50"></text></g><g><title>tcp_options_write (83 samples, 0.25%)</title><rect x="77.8588%" y="389" width="0.2534%" height="15" fill="rgb(249,172,42)" fg:x="25505" fg:w="83"/><text x="78.1088%" y="399.50"></text></g><g><title>tcp_rate_skb_sent (7 samples, 0.02%)</title><rect x="78.1122%" y="389" width="0.0214%" height="15" fill="rgb(216,139,23)" fg:x="25588" fg:w="7"/><text x="78.3622%" y="399.50"></text></g><g><title>__list_add_valid (22 samples, 0.07%)</title><rect x="78.2069%" y="373" width="0.0672%" height="15" fill="rgb(207,166,20)" fg:x="25619" fg:w="22"/><text x="78.4569%" y="383.50"></text></g><g><title>tcp_update_skb_after_send (50 samples, 0.15%)</title><rect x="78.1336%" y="389" width="0.1526%" height="15" fill="rgb(210,209,22)" fg:x="25595" fg:w="50"/><text x="78.3836%" y="399.50"></text></g><g><title>__list_del_entry_valid (4 samples, 0.01%)</title><rect x="78.2740%" y="373" width="0.0122%" height="15" fill="rgb(232,118,20)" fg:x="25641" fg:w="4"/><text x="78.5240%" y="383.50"></text></g><g><title>__tcp_transmit_skb (6,230 samples, 19.02%)</title><rect x="59.2924%" y="405" width="19.0183%" height="15" fill="rgb(238,113,42)" fg:x="19423" fg:w="6230"/><text x="59.5424%" y="415.50">__tcp_transmit_skb</text></g><g><title>tcp_v4_send_check (8 samples, 0.02%)</title><rect x="78.2862%" y="389" width="0.0244%" height="15" fill="rgb(231,42,5)" fg:x="25645" fg:w="8"/><text x="78.5362%" y="399.50"></text></g><g><title>__x86_indirect_thunk_rax (6 samples, 0.02%)</title><rect x="78.3534%" y="389" width="0.0183%" height="15" fill="rgb(243,166,24)" fg:x="25667" fg:w="6"/><text x="78.6034%" y="399.50"></text></g><g><title>ktime_get (53 samples, 0.16%)</title><rect x="78.3167%" y="405" width="0.1618%" height="15" fill="rgb(237,226,12)" fg:x="25655" fg:w="53"/><text x="78.5667%" y="415.50"></text></g><g><title>read_tsc (35 samples, 0.11%)</title><rect x="78.3717%" y="389" width="0.1068%" height="15" fill="rgb(229,133,24)" fg:x="25673" fg:w="35"/><text x="78.6217%" y="399.50"></text></g><g><title>rb_insert_color (30 samples, 0.09%)</title><rect x="78.6342%" y="389" width="0.0916%" height="15" fill="rgb(238,33,43)" fg:x="25759" fg:w="30"/><text x="78.8842%" y="399.50"></text></g><g><title>_raw_spin_unlock_irqrestore (6 samples, 0.02%)</title><rect x="78.8449%" y="357" width="0.0183%" height="15" fill="rgb(227,59,38)" fg:x="25828" fg:w="6"/><text x="79.0949%" y="367.50"></text></g><g><title>detach_if_pending (6 samples, 0.02%)</title><rect x="78.8754%" y="357" width="0.0183%" height="15" fill="rgb(230,97,0)" fg:x="25838" fg:w="6"/><text x="79.1254%" y="367.50"></text></g><g><title>enqueue_timer (7 samples, 0.02%)</title><rect x="78.8937%" y="357" width="0.0214%" height="15" fill="rgb(250,173,50)" fg:x="25844" fg:w="7"/><text x="79.1437%" y="367.50"></text></g><g><title>get_nohz_timer_target (8 samples, 0.02%)</title><rect x="78.9151%" y="357" width="0.0244%" height="15" fill="rgb(240,15,50)" fg:x="25851" fg:w="8"/><text x="79.1651%" y="367.50"></text></g><g><title>sk_reset_timer (88 samples, 0.27%)</title><rect x="78.7258%" y="389" width="0.2686%" height="15" fill="rgb(221,93,22)" fg:x="25789" fg:w="88"/><text x="78.9758%" y="399.50"></text></g><g><title>__mod_timer (87 samples, 0.27%)</title><rect x="78.7289%" y="373" width="0.2656%" height="15" fill="rgb(245,180,53)" fg:x="25790" fg:w="87"/><text x="78.9789%" y="383.50"></text></g><g><title>lock_timer_base (18 samples, 0.05%)</title><rect x="78.9395%" y="357" width="0.0549%" height="15" fill="rgb(231,88,51)" fg:x="25859" fg:w="18"/><text x="79.1895%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (10 samples, 0.03%)</title><rect x="78.9639%" y="341" width="0.0305%" height="15" fill="rgb(240,58,21)" fg:x="25867" fg:w="10"/><text x="79.2139%" y="351.50"></text></g><g><title>tcp_rbtree_insert (27 samples, 0.08%)</title><rect x="78.9944%" y="389" width="0.0824%" height="15" fill="rgb(237,21,10)" fg:x="25877" fg:w="27"/><text x="79.2444%" y="399.50"></text></g><g><title>__usecs_to_jiffies (4 samples, 0.01%)</title><rect x="79.1959%" y="373" width="0.0122%" height="15" fill="rgb(218,43,11)" fg:x="25943" fg:w="4"/><text x="79.4459%" y="383.50"></text></g><g><title>tcp_event_new_data_sent (243 samples, 0.74%)</title><rect x="78.4785%" y="405" width="0.7418%" height="15" fill="rgb(218,221,29)" fg:x="25708" fg:w="243"/><text x="78.7285%" y="415.50"></text></g><g><title>tcp_rearm_rto (47 samples, 0.14%)</title><rect x="79.0769%" y="389" width="0.1435%" height="15" fill="rgb(214,118,42)" fg:x="25904" fg:w="47"/><text x="79.3269%" y="399.50"></text></g><g><title>rb_first (4 samples, 0.01%)</title><rect x="79.2081%" y="373" width="0.0122%" height="15" fill="rgb(251,200,26)" fg:x="25947" fg:w="4"/><text x="79.4581%" y="383.50"></text></g><g><title>__usecs_to_jiffies (6 samples, 0.02%)</title><rect x="79.2692%" y="389" width="0.0183%" height="15" fill="rgb(237,101,39)" fg:x="25967" fg:w="6"/><text x="79.5192%" y="399.50"></text></g><g><title>rb_first (14 samples, 0.04%)</title><rect x="79.2875%" y="389" width="0.0427%" height="15" fill="rgb(251,117,11)" fg:x="25973" fg:w="14"/><text x="79.5375%" y="399.50"></text></g><g><title>_raw_spin_lock (6 samples, 0.02%)</title><rect x="79.4218%" y="357" width="0.0183%" height="15" fill="rgb(216,223,23)" fg:x="26017" fg:w="6"/><text x="79.6718%" y="367.50"></text></g><g><title>detach_if_pending (15 samples, 0.05%)</title><rect x="79.4493%" y="357" width="0.0458%" height="15" fill="rgb(251,54,12)" fg:x="26026" fg:w="15"/><text x="79.6993%" y="367.50"></text></g><g><title>enqueue_timer (13 samples, 0.04%)</title><rect x="79.4951%" y="357" width="0.0397%" height="15" fill="rgb(254,176,54)" fg:x="26041" fg:w="13"/><text x="79.7451%" y="367.50"></text></g><g><title>get_nohz_timer_target (10 samples, 0.03%)</title><rect x="79.5348%" y="357" width="0.0305%" height="15" fill="rgb(210,32,8)" fg:x="26054" fg:w="10"/><text x="79.7848%" y="367.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (136 samples, 0.42%)</title><rect x="79.2203%" y="405" width="0.4152%" height="15" fill="rgb(235,52,38)" fg:x="25951" fg:w="136"/><text x="79.4703%" y="415.50"></text></g><g><title>sk_reset_timer (100 samples, 0.31%)</title><rect x="79.3302%" y="389" width="0.3053%" height="15" fill="rgb(231,4,44)" fg:x="25987" fg:w="100"/><text x="79.5802%" y="399.50"></text></g><g><title>__mod_timer (99 samples, 0.30%)</title><rect x="79.3333%" y="373" width="0.3022%" height="15" fill="rgb(249,2,32)" fg:x="25988" fg:w="99"/><text x="79.5833%" y="383.50"></text></g><g><title>lock_timer_base (23 samples, 0.07%)</title><rect x="79.5653%" y="357" width="0.0702%" height="15" fill="rgb(224,65,26)" fg:x="26064" fg:w="23"/><text x="79.8153%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (21 samples, 0.06%)</title><rect x="79.5714%" y="341" width="0.0641%" height="15" fill="rgb(250,73,40)" fg:x="26066" fg:w="21"/><text x="79.8214%" y="351.50"></text></g><g><title>__tcp_push_pending_frames (6,831 samples, 20.85%)</title><rect x="58.8040%" y="437" width="20.8529%" height="15" fill="rgb(253,177,16)" fg:x="19263" fg:w="6831"/><text x="59.0540%" y="447.50">__tcp_push_pending_frames</text></g><g><title>tcp_write_xmit (6,817 samples, 20.81%)</title><rect x="58.8467%" y="421" width="20.8102%" height="15" fill="rgb(217,32,34)" fg:x="19277" fg:w="6817"/><text x="59.0967%" y="431.50">tcp_write_xmit</text></g><g><title>tcp_small_queue_check.isra.0 (7 samples, 0.02%)</title><rect x="79.6355%" y="405" width="0.0214%" height="15" fill="rgb(212,7,10)" fg:x="26087" fg:w="7"/><text x="79.8855%" y="415.50"></text></g><g><title>sk_page_frag_refill (48 samples, 0.15%)</title><rect x="79.6630%" y="437" width="0.1465%" height="15" fill="rgb(245,89,8)" fg:x="26096" fg:w="48"/><text x="79.9130%" y="447.50"></text></g><g><title>skb_page_frag_refill (47 samples, 0.14%)</title><rect x="79.6660%" y="421" width="0.1435%" height="15" fill="rgb(237,16,53)" fg:x="26097" fg:w="47"/><text x="79.9160%" y="431.50"></text></g><g><title>__ksize (13 samples, 0.04%)</title><rect x="80.4017%" y="389" width="0.0397%" height="15" fill="rgb(250,204,30)" fg:x="26338" fg:w="13"/><text x="80.6517%" y="399.50"></text></g><g><title>__build_skb_around (39 samples, 0.12%)</title><rect x="80.3498%" y="405" width="0.1191%" height="15" fill="rgb(208,77,27)" fg:x="26321" fg:w="39"/><text x="80.5998%" y="415.50"></text></g><g><title>ksize (9 samples, 0.03%)</title><rect x="80.4414%" y="389" width="0.0275%" height="15" fill="rgb(250,204,28)" fg:x="26351" fg:w="9"/><text x="80.6914%" y="399.50"></text></g><g><title>kmalloc_slab (22 samples, 0.07%)</title><rect x="80.6429%" y="389" width="0.0672%" height="15" fill="rgb(244,63,21)" fg:x="26417" fg:w="22"/><text x="80.8929%" y="399.50"></text></g><g><title>memcg_slab_post_alloc_hook (5 samples, 0.02%)</title><rect x="80.7101%" y="389" width="0.0153%" height="15" fill="rgb(236,85,44)" fg:x="26439" fg:w="5"/><text x="80.9601%" y="399.50"></text></g><g><title>__kmalloc_node_track_caller (94 samples, 0.29%)</title><rect x="80.4689%" y="405" width="0.2870%" height="15" fill="rgb(215,98,4)" fg:x="26360" fg:w="94"/><text x="80.7189%" y="415.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (10 samples, 0.03%)</title><rect x="80.7253%" y="389" width="0.0305%" height="15" fill="rgb(235,38,11)" fg:x="26444" fg:w="10"/><text x="80.9753%" y="399.50"></text></g><g><title>__cond_resched (4 samples, 0.01%)</title><rect x="80.7436%" y="373" width="0.0122%" height="15" fill="rgb(254,186,25)" fg:x="26450" fg:w="4"/><text x="80.9936%" y="383.50"></text></g><g><title>__ksize (52 samples, 0.16%)</title><rect x="80.7558%" y="405" width="0.1587%" height="15" fill="rgb(225,55,31)" fg:x="26454" fg:w="52"/><text x="81.0058%" y="415.50"></text></g><g><title>___slab_alloc (8 samples, 0.02%)</title><rect x="81.0977%" y="389" width="0.0244%" height="15" fill="rgb(211,15,21)" fg:x="26566" fg:w="8"/><text x="81.3477%" y="399.50"></text></g><g><title>__cond_resched (6 samples, 0.02%)</title><rect x="81.1466%" y="373" width="0.0183%" height="15" fill="rgb(215,187,41)" fg:x="26582" fg:w="6"/><text x="81.3966%" y="383.50"></text></g><g><title>kmem_cache_alloc_node (83 samples, 0.25%)</title><rect x="80.9146%" y="405" width="0.2534%" height="15" fill="rgb(248,69,32)" fg:x="26506" fg:w="83"/><text x="81.1646%" y="415.50"></text></g><g><title>slab_pre_alloc_hook.constprop.0 (14 samples, 0.04%)</title><rect x="81.1252%" y="389" width="0.0427%" height="15" fill="rgb(252,102,52)" fg:x="26575" fg:w="14"/><text x="81.3752%" y="399.50"></text></g><g><title>sk_stream_alloc_skb (451 samples, 1.38%)</title><rect x="79.8095%" y="437" width="1.3768%" height="15" fill="rgb(253,140,32)" fg:x="26144" fg:w="451"/><text x="80.0595%" y="447.50"></text></g><g><title>__alloc_skb (436 samples, 1.33%)</title><rect x="79.8553%" y="421" width="1.3310%" height="15" fill="rgb(216,56,42)" fg:x="26159" fg:w="436"/><text x="80.1053%" y="431.50"></text></g><g><title>ksize (6 samples, 0.02%)</title><rect x="81.1680%" y="405" width="0.0183%" height="15" fill="rgb(216,184,14)" fg:x="26589" fg:w="6"/><text x="81.4180%" y="415.50"></text></g><g><title>kfence_ksize (5 samples, 0.02%)</title><rect x="81.1710%" y="389" width="0.0153%" height="15" fill="rgb(237,187,27)" fg:x="26590" fg:w="5"/><text x="81.4210%" y="399.50"></text></g><g><title>__virt_addr_valid (21 samples, 0.06%)</title><rect x="81.2351%" y="405" width="0.0641%" height="15" fill="rgb(219,65,3)" fg:x="26611" fg:w="21"/><text x="81.4851%" y="415.50"></text></g><g><title>__check_object_size (34 samples, 0.10%)</title><rect x="81.2168%" y="421" width="0.1038%" height="15" fill="rgb(245,83,25)" fg:x="26605" fg:w="34"/><text x="81.4668%" y="431.50"></text></g><g><title>check_stack_object (7 samples, 0.02%)</title><rect x="81.2992%" y="405" width="0.0214%" height="15" fill="rgb(214,205,45)" fg:x="26632" fg:w="7"/><text x="81.5492%" y="415.50"></text></g><g><title>copy_user_generic_string (255 samples, 0.78%)</title><rect x="81.3786%" y="405" width="0.7784%" height="15" fill="rgb(241,20,18)" fg:x="26658" fg:w="255"/><text x="81.6286%" y="415.50"></text></g><g><title>skb_do_copy_data_nocache (346 samples, 1.06%)</title><rect x="81.1863%" y="437" width="1.0562%" height="15" fill="rgb(232,163,23)" fg:x="26595" fg:w="346"/><text x="81.4363%" y="447.50"></text></g><g><title>_copy_from_iter_full (302 samples, 0.92%)</title><rect x="81.3206%" y="421" width="0.9219%" height="15" fill="rgb(214,5,46)" fg:x="26639" fg:w="302"/><text x="81.5706%" y="431.50"></text></g><g><title>iov_iter_advance (28 samples, 0.09%)</title><rect x="82.1570%" y="405" width="0.0855%" height="15" fill="rgb(229,78,17)" fg:x="26913" fg:w="28"/><text x="82.4070%" y="415.50"></text></g><g><title>skb_entail (81 samples, 0.25%)</title><rect x="82.2425%" y="437" width="0.2473%" height="15" fill="rgb(248,89,10)" fg:x="26941" fg:w="81"/><text x="82.4925%" y="447.50"></text></g><g><title>tcp_chrono_start (30 samples, 0.09%)</title><rect x="82.3982%" y="421" width="0.0916%" height="15" fill="rgb(248,54,15)" fg:x="26992" fg:w="30"/><text x="82.6482%" y="431.50"></text></g><g><title>tcp_push (13 samples, 0.04%)</title><rect x="82.4898%" y="437" width="0.0397%" height="15" fill="rgb(223,116,6)" fg:x="27022" fg:w="13"/><text x="82.7398%" y="447.50"></text></g><g><title>tcp_rate_check_app_limited (16 samples, 0.05%)</title><rect x="82.5295%" y="437" width="0.0488%" height="15" fill="rgb(205,125,38)" fg:x="27035" fg:w="16"/><text x="82.7795%" y="447.50"></text></g><g><title>ipv4_mtu (42 samples, 0.13%)</title><rect x="82.7065%" y="405" width="0.1282%" height="15" fill="rgb(251,78,38)" fg:x="27093" fg:w="42"/><text x="82.9565%" y="415.50"></text></g><g><title>tcp_send_mss (91 samples, 0.28%)</title><rect x="82.5783%" y="437" width="0.2778%" height="15" fill="rgb(253,78,28)" fg:x="27051" fg:w="91"/><text x="82.8283%" y="447.50"></text></g><g><title>tcp_current_mss (83 samples, 0.25%)</title><rect x="82.6027%" y="421" width="0.2534%" height="15" fill="rgb(209,120,3)" fg:x="27059" fg:w="83"/><text x="82.8527%" y="431.50"></text></g><g><title>tcp_established_options (7 samples, 0.02%)</title><rect x="82.8347%" y="405" width="0.0214%" height="15" fill="rgb(238,229,9)" fg:x="27135" fg:w="7"/><text x="83.0847%" y="415.50"></text></g><g><title>tcp_stream_memory_free (6 samples, 0.02%)</title><rect x="82.8561%" y="437" width="0.0183%" height="15" fill="rgb(253,159,18)" fg:x="27142" fg:w="6"/><text x="83.1061%" y="447.50"></text></g><g><title>sock_sendmsg (9,698 samples, 29.60%)</title><rect x="53.2877%" y="485" width="29.6050%" height="15" fill="rgb(244,42,34)" fg:x="17456" fg:w="9698"/><text x="53.5377%" y="495.50">sock_sendmsg</text></g><g><title>tcp_sendmsg (9,522 samples, 29.07%)</title><rect x="53.8250%" y="469" width="29.0677%" height="15" fill="rgb(224,8,7)" fg:x="17632" fg:w="9522"/><text x="54.0750%" y="479.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (7,991 samples, 24.39%)</title><rect x="58.4987%" y="453" width="24.3940%" height="15" fill="rgb(210,201,45)" fg:x="19163" fg:w="7991"/><text x="58.7487%" y="463.50">tcp_sendmsg_locked</text></g><g><title>tcp_tx_timestamp (6 samples, 0.02%)</title><rect x="82.8744%" y="437" width="0.0183%" height="15" fill="rgb(252,185,21)" fg:x="27148" fg:w="6"/><text x="83.1244%" y="447.50"></text></g><g><title>__x64_sys_sendto (9,813 samples, 29.96%)</title><rect x="53.0466%" y="517" width="29.9560%" height="15" fill="rgb(223,131,1)" fg:x="17377" fg:w="9813"/><text x="53.2966%" y="527.50">__x64_sys_sendto</text></g><g><title>__sys_sendto (9,801 samples, 29.92%)</title><rect x="53.0832%" y="501" width="29.9194%" height="15" fill="rgb(245,141,16)" fg:x="17389" fg:w="9801"/><text x="53.3332%" y="511.50">__sys_sendto</text></g><g><title>sockfd_lookup_light (36 samples, 0.11%)</title><rect x="82.8927%" y="485" width="0.1099%" height="15" fill="rgb(229,55,45)" fg:x="27154" fg:w="36"/><text x="83.1427%" y="495.50"></text></g><g><title>__fget_light (34 samples, 0.10%)</title><rect x="82.8988%" y="469" width="0.1038%" height="15" fill="rgb(208,92,15)" fg:x="27156" fg:w="34"/><text x="83.1488%" y="479.50"></text></g><g><title>__fget_files (22 samples, 0.07%)</title><rect x="82.9355%" y="453" width="0.0672%" height="15" fill="rgb(234,185,47)" fg:x="27168" fg:w="22"/><text x="83.1855%" y="463.50"></text></g><g><title>__x86_indirect_thunk_rax (7 samples, 0.02%)</title><rect x="83.0026%" y="517" width="0.0214%" height="15" fill="rgb(253,104,50)" fg:x="27190" fg:w="7"/><text x="83.2526%" y="527.50"></text></g><g><title>syscall_enter_from_user_mode (5 samples, 0.02%)</title><rect x="83.0240%" y="517" width="0.0153%" height="15" fill="rgb(205,70,7)" fg:x="27197" fg:w="5"/><text x="83.2740%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.02%)</title><rect x="83.0728%" y="501" width="0.0153%" height="15" fill="rgb(240,178,43)" fg:x="27213" fg:w="5"/><text x="83.3228%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9,883 samples, 30.17%)</title><rect x="52.9214%" y="549" width="30.1697%" height="15" fill="rgb(214,112,2)" fg:x="17336" fg:w="9883"/><text x="53.1714%" y="559.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (9,863 samples, 30.11%)</title><rect x="52.9825%" y="533" width="30.1087%" height="15" fill="rgb(206,46,17)" fg:x="17356" fg:w="9863"/><text x="53.2325%" y="543.50">do_syscall_64</text></g><g><title>syscall_exit_to_user_mode (17 samples, 0.05%)</title><rect x="83.0393%" y="517" width="0.0519%" height="15" fill="rgb(225,220,16)" fg:x="27202" fg:w="17"/><text x="83.2893%" y="527.50"></text></g><g><title>__libc_send (9,958 samples, 30.40%)</title><rect x="52.7383%" y="565" width="30.3987%" height="15" fill="rgb(238,65,40)" fg:x="17276" fg:w="9958"/><text x="52.9883%" y="575.50">__libc_send</text></g><g><title>syscall_return_via_sysret (15 samples, 0.05%)</title><rect x="83.0912%" y="549" width="0.0458%" height="15" fill="rgb(230,151,21)" fg:x="27219" fg:w="15"/><text x="83.3412%" y="559.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (9,988 samples, 30.49%)</title><rect x="52.6803%" y="661" width="30.4903%" height="15" fill="rgb(218,58,49)" fg:x="17257" fg:w="9988"/><text x="52.9303%" y="671.50">&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Wr..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9,982 samples, 30.47%)</title><rect x="52.6986%" y="645" width="30.4719%" height="15" fill="rgb(219,179,14)" fg:x="17263" fg:w="9982"/><text x="52.9486%" y="655.50">mio::io_source::IoSource&lt;T&gt;::do_io</text></g><g><title>mio::sys::unix::IoSourceState::do_io (9,982 samples, 30.47%)</title><rect x="52.6986%" y="629" width="30.4719%" height="15" fill="rgb(223,72,1)" fg:x="17263" fg:w="9982"/><text x="52.9486%" y="639.50">mio::sys::unix::IoSourceState::do_io</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (9,982 samples, 30.47%)</title><rect x="52.6986%" y="613" width="30.4719%" height="15" fill="rgb(238,126,10)" fg:x="17263" fg:w="9982"/><text x="52.9486%" y="623.50">&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Wr..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (9,982 samples, 30.47%)</title><rect x="52.6986%" y="597" width="30.4719%" height="15" fill="rgb(224,206,38)" fg:x="17263" fg:w="9982"/><text x="52.9486%" y="607.50">&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::wr..</text></g><g><title>std::sys_common::net::TcpStream::write (9,974 samples, 30.45%)</title><rect x="52.7230%" y="581" width="30.4475%" height="15" fill="rgb(212,201,54)" fg:x="17271" fg:w="9974"/><text x="52.9730%" y="591.50">std::sys_common::net::TcpStream::write</text></g><g><title>std::sys::unix::cvt (10 samples, 0.03%)</title><rect x="83.1400%" y="565" width="0.0305%" height="15" fill="rgb(218,154,48)" fg:x="27235" fg:w="10"/><text x="83.3900%" y="575.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (10,230 samples, 31.23%)</title><rect x="51.9446%" y="757" width="31.2290%" height="15" fill="rgb(232,93,24)" fg:x="17016" fg:w="10230"/><text x="52.1946%" y="767.50">&lt;tokio::net::tcp::stream::TcpStream as tokio::io::..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (10,215 samples, 31.18%)</title><rect x="51.9904%" y="741" width="31.1832%" height="15" fill="rgb(245,30,21)" fg:x="17031" fg:w="10215"/><text x="52.2404%" y="751.50">tokio::net::tcp::stream::TcpStream::poll_write_priv</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (10,215 samples, 31.18%)</title><rect x="51.9904%" y="725" width="31.1832%" height="15" fill="rgb(242,148,29)" fg:x="17031" fg:w="10215"/><text x="52.2404%" y="735.50">tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write</text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (10,131 samples, 30.93%)</title><rect x="52.2468%" y="709" width="30.9268%" height="15" fill="rgb(244,153,54)" fg:x="17115" fg:w="10131"/><text x="52.4968%" y="719.50">tokio::io::driver::registration::Registration::pol..</text></g><g><title>tokio::io::driver::registration::Registration::poll_io (10,091 samples, 30.80%)</title><rect x="52.3689%" y="693" width="30.8047%" height="15" fill="rgb(252,87,22)" fg:x="17155" fg:w="10091"/><text x="52.6189%" y="703.50">tokio::io::driver::registration::Registration::pol..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (9,989 samples, 30.49%)</title><rect x="52.6803%" y="677" width="30.4933%" height="15" fill="rgb(210,51,29)" fg:x="17257" fg:w="9989"/><text x="52.9303%" y="687.50">tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_wri..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (10,243 samples, 31.27%)</title><rect x="51.9415%" y="789" width="31.2687%" height="15" fill="rgb(242,136,47)" fg:x="17015" fg:w="10243"/><text x="52.1915%" y="799.50">&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::po..</text></g><g><title>&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (10,243 samples, 31.27%)</title><rect x="51.9415%" y="773" width="31.2687%" height="15" fill="rgb(238,68,4)" fg:x="17015" fg:w="10243"/><text x="52.1915%" y="783.50">&lt;tokio::io::split::WriteHalf&lt;T&gt; as tokio::io::asyn..</text></g><g><title>tokio::io::split::Inner&lt;T&gt;::poll_lock (12 samples, 0.04%)</title><rect x="83.1736%" y="757" width="0.0366%" height="15" fill="rgb(242,161,30)" fg:x="27246" fg:w="12"/><text x="83.4236%" y="767.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (10,287 samples, 31.40%)</title><rect x="51.8255%" y="805" width="31.4030%" height="15" fill="rgb(218,58,44)" fg:x="16977" fg:w="10287"/><text x="52.0755%" y="815.50">&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::f..</text></g><g><title>_int_free (55 samples, 0.17%)</title><rect x="83.4605%" y="693" width="0.1679%" height="15" fill="rgb(252,125,32)" fg:x="27340" fg:w="55"/><text x="83.7105%" y="703.50"></text></g><g><title>__GI___libc_free (129 samples, 0.39%)</title><rect x="83.2407%" y="709" width="0.3938%" height="15" fill="rgb(219,178,0)" fg:x="27268" fg:w="129"/><text x="83.4907%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (139 samples, 0.42%)</title><rect x="83.2316%" y="741" width="0.4243%" height="15" fill="rgb(213,152,7)" fg:x="27265" fg:w="139"/><text x="83.4816%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (139 samples, 0.42%)</title><rect x="83.2316%" y="725" width="0.4243%" height="15" fill="rgb(249,109,34)" fg:x="27265" fg:w="139"/><text x="83.4816%" y="735.50"></text></g><g><title>__rust_dealloc (6 samples, 0.02%)</title><rect x="83.6376%" y="709" width="0.0183%" height="15" fill="rgb(232,96,21)" fg:x="27398" fg:w="6"/><text x="83.8876%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::SerializedRequest&gt; (143 samples, 0.44%)</title><rect x="83.2316%" y="805" width="0.4365%" height="15" fill="rgb(228,27,39)" fg:x="27265" fg:w="143"/><text x="83.4816%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (143 samples, 0.44%)</title><rect x="83.2316%" y="789" width="0.4365%" height="15" fill="rgb(211,182,52)" fg:x="27265" fg:w="143"/><text x="83.4816%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (143 samples, 0.44%)</title><rect x="83.2316%" y="773" width="0.4365%" height="15" fill="rgb(234,178,38)" fg:x="27265" fg:w="143"/><text x="83.4816%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.44%)</title><rect x="83.2316%" y="757" width="0.4365%" height="15" fill="rgb(221,111,3)" fg:x="27265" fg:w="143"/><text x="83.4816%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="83.6559%" y="741" width="0.0122%" height="15" fill="rgb(228,175,21)" fg:x="27404" fg:w="4"/><text x="83.9059%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (6 samples, 0.02%)</title><rect x="83.6742%" y="741" width="0.0183%" height="15" fill="rgb(228,174,43)" fg:x="27410" fg:w="6"/><text x="83.9242%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;scylla::transport::connection::ResponseHandlerMap&gt;&gt; (9 samples, 0.03%)</title><rect x="83.6681%" y="805" width="0.0275%" height="15" fill="rgb(211,191,0)" fg:x="27408" fg:w="9"/><text x="83.9181%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="83.6681%" y="789" width="0.0275%" height="15" fill="rgb(253,117,3)" fg:x="27408" fg:w="9"/><text x="83.9181%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (8 samples, 0.02%)</title><rect x="83.6712%" y="773" width="0.0244%" height="15" fill="rgb(241,127,19)" fg:x="27409" fg:w="8"/><text x="83.9212%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (8 samples, 0.02%)</title><rect x="83.6712%" y="757" width="0.0244%" height="15" fill="rgb(218,103,12)" fg:x="27409" fg:w="8"/><text x="83.9212%" y="767.50"></text></g><g><title>scylla::frame::SerializedRequest::get_data (12 samples, 0.04%)</title><rect x="83.6956%" y="805" width="0.0366%" height="15" fill="rgb(236,214,43)" fg:x="27417" fg:w="12"/><text x="83.9456%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.04%)</title><rect x="83.6956%" y="789" width="0.0366%" height="15" fill="rgb(244,144,19)" fg:x="27417" fg:w="12"/><text x="83.9456%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.04%)</title><rect x="83.6956%" y="773" width="0.0366%" height="15" fill="rgb(246,188,10)" fg:x="27417" fg:w="12"/><text x="83.9456%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.04%)</title><rect x="83.6956%" y="757" width="0.0366%" height="15" fill="rgb(212,193,33)" fg:x="27417" fg:w="12"/><text x="83.9456%" y="767.50"></text></g><g><title>scylla::transport::connection::StreamIdSet::allocate (8 samples, 0.02%)</title><rect x="83.7444%" y="789" width="0.0244%" height="15" fill="rgb(241,51,29)" fg:x="27433" fg:w="8"/><text x="83.9944%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_ones (6 samples, 0.02%)</title><rect x="83.7505%" y="773" width="0.0183%" height="15" fill="rgb(211,58,19)" fg:x="27435" fg:w="6"/><text x="84.0005%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (6 samples, 0.02%)</title><rect x="83.7505%" y="757" width="0.0183%" height="15" fill="rgb(229,111,26)" fg:x="27435" fg:w="6"/><text x="84.0005%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="83.7719%" y="741" width="0.0275%" height="15" fill="rgb(213,115,40)" fg:x="27442" fg:w="9"/><text x="84.0219%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="83.7719%" y="725" width="0.0275%" height="15" fill="rgb(209,56,44)" fg:x="27442" fg:w="9"/><text x="84.0219%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.03%)</title><rect x="83.7719%" y="709" width="0.0275%" height="15" fill="rgb(230,108,32)" fg:x="27442" fg:w="9"/><text x="84.0219%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.02%)</title><rect x="83.7780%" y="693" width="0.0214%" height="15" fill="rgb(216,165,31)" fg:x="27444" fg:w="7"/><text x="84.0280%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="83.7872%" y="677" width="0.0122%" height="15" fill="rgb(218,122,21)" fg:x="27447" fg:w="4"/><text x="84.0372%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.03%)</title><rect x="83.7994%" y="741" width="0.0275%" height="15" fill="rgb(223,224,47)" fg:x="27451" fg:w="9"/><text x="84.0494%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.02%)</title><rect x="83.8024%" y="725" width="0.0244%" height="15" fill="rgb(238,102,44)" fg:x="27452" fg:w="8"/><text x="84.0524%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.02%)</title><rect x="83.8024%" y="709" width="0.0244%" height="15" fill="rgb(236,46,40)" fg:x="27452" fg:w="8"/><text x="84.0524%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (8 samples, 0.02%)</title><rect x="83.8024%" y="693" width="0.0244%" height="15" fill="rgb(247,202,50)" fg:x="27452" fg:w="8"/><text x="84.0524%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="83.8330%" y="661" width="0.0336%" height="15" fill="rgb(209,99,20)" fg:x="27462" fg:w="11"/><text x="84.0830%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.02%)</title><rect x="83.8482%" y="645" width="0.0183%" height="15" fill="rgb(252,27,34)" fg:x="27467" fg:w="6"/><text x="84.0982%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (33 samples, 0.10%)</title><rect x="83.7719%" y="757" width="0.1007%" height="15" fill="rgb(215,206,23)" fg:x="27442" fg:w="33"/><text x="84.0219%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i16&gt;::hash (15 samples, 0.05%)</title><rect x="83.8269%" y="741" width="0.0458%" height="15" fill="rgb(212,135,36)" fg:x="27460" fg:w="15"/><text x="84.0769%" y="751.50"></text></g><g><title>core::hash::Hasher::write_i16 (15 samples, 0.05%)</title><rect x="83.8269%" y="725" width="0.0458%" height="15" fill="rgb(240,189,1)" fg:x="27460" fg:w="15"/><text x="84.0769%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u16 (15 samples, 0.05%)</title><rect x="83.8269%" y="709" width="0.0458%" height="15" fill="rgb(242,56,20)" fg:x="27460" fg:w="15"/><text x="84.0769%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.05%)</title><rect x="83.8269%" y="693" width="0.0458%" height="15" fill="rgb(247,132,33)" fg:x="27460" fg:w="15"/><text x="84.0769%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="83.8330%" y="677" width="0.0397%" height="15" fill="rgb(208,149,11)" fg:x="27462" fg:w="13"/><text x="84.0830%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (18 samples, 0.05%)</title><rect x="83.8726%" y="757" width="0.0549%" height="15" fill="rgb(211,33,11)" fg:x="27475" fg:w="18"/><text x="84.1226%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.05%)</title><rect x="83.8726%" y="741" width="0.0549%" height="15" fill="rgb(221,29,38)" fg:x="27475" fg:w="18"/><text x="84.1226%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (15 samples, 0.05%)</title><rect x="83.8818%" y="725" width="0.0458%" height="15" fill="rgb(206,182,49)" fg:x="27478" fg:w="15"/><text x="84.1318%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (15 samples, 0.05%)</title><rect x="83.8818%" y="709" width="0.0458%" height="15" fill="rgb(216,140,1)" fg:x="27478" fg:w="15"/><text x="84.1318%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (15 samples, 0.05%)</title><rect x="83.8818%" y="693" width="0.0458%" height="15" fill="rgb(232,57,40)" fg:x="27478" fg:w="15"/><text x="84.1318%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.04%)</title><rect x="83.8849%" y="677" width="0.0427%" height="15" fill="rgb(224,186,18)" fg:x="27479" fg:w="14"/><text x="84.1349%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (14 samples, 0.04%)</title><rect x="83.8849%" y="661" width="0.0427%" height="15" fill="rgb(215,121,11)" fg:x="27479" fg:w="14"/><text x="84.1349%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.04%)</title><rect x="83.8849%" y="645" width="0.0427%" height="15" fill="rgb(245,147,10)" fg:x="27479" fg:w="14"/><text x="84.1349%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x16::new (14 samples, 0.04%)</title><rect x="83.8849%" y="629" width="0.0427%" height="15" fill="rgb(238,153,13)" fg:x="27479" fg:w="14"/><text x="84.1349%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.02%)</title><rect x="83.9367%" y="741" width="0.0244%" height="15" fill="rgb(233,108,0)" fg:x="27496" fg:w="8"/><text x="84.1867%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.02%)</title><rect x="83.9367%" y="725" width="0.0244%" height="15" fill="rgb(212,157,17)" fg:x="27496" fg:w="8"/><text x="84.1867%" y="735.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="83.9367%" y="709" width="0.0244%" height="15" fill="rgb(225,213,38)" fg:x="27496" fg:w="8"/><text x="84.1867%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.01%)</title><rect x="83.9642%" y="741" width="0.0122%" height="15" fill="rgb(248,16,11)" fg:x="27505" fg:w="4"/><text x="84.2142%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (71 samples, 0.22%)</title><rect x="83.7689%" y="773" width="0.2167%" height="15" fill="rgb(241,33,4)" fg:x="27441" fg:w="71"/><text x="84.0189%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 0.06%)</title><rect x="83.9276%" y="757" width="0.0580%" height="15" fill="rgb(222,26,43)" fg:x="27493" fg:w="19"/><text x="84.1776%" y="767.50"></text></g><g><title>scylla::transport::connection::ResponseHandlerMap::allocate (84 samples, 0.26%)</title><rect x="83.7322%" y="805" width="0.2564%" height="15" fill="rgb(243,29,36)" fg:x="27429" fg:w="84"/><text x="83.9822%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (72 samples, 0.22%)</title><rect x="83.7689%" y="789" width="0.2198%" height="15" fill="rgb(241,9,27)" fg:x="27441" fg:w="72"/><text x="84.0189%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,437 samples, 44.07%)</title><rect x="40.0147%" y="1029" width="44.0717%" height="15" fill="rgb(205,117,26)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="1039.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::f..</text></g><g><title>std::panic::catch_unwind (14,437 samples, 44.07%)</title><rect x="40.0147%" y="1013" width="44.0717%" height="15" fill="rgb(209,80,39)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (14,437 samples, 44.07%)</title><rect x="40.0147%" y="997" width="44.0717%" height="15" fill="rgb(239,155,6)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (14,437 samples, 44.07%)</title><rect x="40.0147%" y="981" width="44.0717%" height="15" fill="rgb(212,104,12)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="991.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14,437 samples, 44.07%)</title><rect x="40.0147%" y="965" width="44.0717%" height="15" fill="rgb(234,204,3)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="975.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::F..</text></g><g><title>&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::future::future::Future&gt;::poll::{{closure}} (14,437 samples, 44.07%)</title><rect x="40.0147%" y="949" width="44.0717%" height="15" fill="rgb(251,218,7)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="959.50">&lt;futures_util::future::future::catch_unwind::CatchUnwind&lt;Fut&gt; as core::f..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::Future&gt;::poll (14,437 samples, 44.07%)</title><rect x="40.0147%" y="933" width="44.0717%" height="15" fill="rgb(221,81,32)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="943.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::future::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,437 samples, 44.07%)</title><rect x="40.0147%" y="917" width="44.0717%" height="15" fill="rgb(214,152,26)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="927.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Fut..</text></g><g><title>scylla::transport::connection::Connection::router::{{closure}} (14,437 samples, 44.07%)</title><rect x="40.0147%" y="901" width="44.0717%" height="15" fill="rgb(223,22,3)" fg:x="13108" fg:w="14437"/><text x="40.2647%" y="911.50">scylla::transport::connection::Connection::router::{{closure}}</text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (14,433 samples, 44.06%)</title><rect x="40.0269%" y="885" width="44.0595%" height="15" fill="rgb(207,174,7)" fg:x="13112" fg:w="14433"/><text x="40.2769%" y="895.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Futur..</text></g><g><title>scylla::transport::connection::Connection::router::{{closure}}::{{closure}} (14,433 samples, 44.06%)</title><rect x="40.0269%" y="869" width="44.0595%" height="15" fill="rgb(224,19,52)" fg:x="13112" fg:w="14433"/><text x="40.2769%" y="879.50">scylla::transport::connection::Connection::router::{{closure}}::{{closur..</text></g><g><title>&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,433 samples, 44.06%)</title><rect x="40.0269%" y="853" width="44.0595%" height="15" fill="rgb(228,24,14)" fg:x="13112" fg:w="14433"/><text x="40.2769%" y="863.50">&lt;futures_util::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,433 samples, 44.06%)</title><rect x="40.0269%" y="837" width="44.0595%" height="15" fill="rgb(230,153,43)" fg:x="13112" fg:w="14433"/><text x="40.2769%" y="847.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Fut..</text></g><g><title>scylla::transport::connection::Connection::writer::{{closure}} (11,363 samples, 34.69%)</title><rect x="49.3986%" y="821" width="34.6877%" height="15" fill="rgb(231,106,12)" fg:x="16182" fg:w="11363"/><text x="49.6486%" y="831.50">scylla::transport::connection::Connection::writer::{{clo..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (32 samples, 0.10%)</title><rect x="83.9886%" y="805" width="0.0977%" height="15" fill="rgb(215,92,2)" fg:x="27513" fg:w="32"/><text x="84.2386%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (29 samples, 0.09%)</title><rect x="83.9978%" y="789" width="0.0885%" height="15" fill="rgb(249,143,25)" fg:x="27516" fg:w="29"/><text x="84.2478%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (28 samples, 0.09%)</title><rect x="84.0009%" y="773" width="0.0855%" height="15" fill="rgb(252,7,35)" fg:x="27517" fg:w="28"/><text x="84.2509%" y="783.50"></text></g><g><title>__GI___pthread_mutex_trylock (28 samples, 0.09%)</title><rect x="84.0009%" y="757" width="0.0855%" height="15" fill="rgb(216,69,40)" fg:x="27517" fg:w="28"/><text x="84.2509%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1189" width="59.5274%" height="15" fill="rgb(240,36,33)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1199.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1173" width="59.5274%" height="15" fill="rgb(231,128,14)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1157" width="59.5274%" height="15" fill="rgb(245,143,14)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1141" width="59.5274%" height="15" fill="rgb(222,130,28)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1151.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1125" width="59.5274%" height="15" fill="rgb(212,10,48)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1135.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1109" width="59.5274%" height="15" fill="rgb(254,118,45)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1119.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (19,500 samples, 59.53%)</title><rect x="24.5711%" y="1093" width="59.5274%" height="15" fill="rgb(228,6,45)" fg:x="8049" fg:w="19500"/><text x="24.8211%" y="1103.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (19,497 samples, 59.52%)</title><rect x="24.5803%" y="1077" width="59.5183%" height="15" fill="rgb(241,18,35)" fg:x="8052" fg:w="19497"/><text x="24.8303%" y="1087.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (19,497 samples, 59.52%)</title><rect x="24.5803%" y="1061" width="59.5183%" height="15" fill="rgb(227,214,53)" fg:x="8052" fg:w="19497"/><text x="24.8303%" y="1071.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;futures_util::future::future::remote_handle::Remote&lt;Fut&gt; as core::future::future::Future&gt;::poll (14,442 samples, 44.09%)</title><rect x="40.0116%" y="1045" width="44.0869%" height="15" fill="rgb(224,107,51)" fg:x="13107" fg:w="14442"/><text x="40.2616%" y="1055.50">&lt;futures_util::future::future::remote_handle::Remote&lt;Fut&gt; as core::futur..</text></g><g><title>futures_channel::oneshot::Sender&lt;T&gt;::poll_canceled (4 samples, 0.01%)</title><rect x="84.0863%" y="1029" width="0.0122%" height="15" fill="rgb(248,60,28)" fg:x="27545" fg:w="4"/><text x="84.3363%" y="1039.50"></text></g><g><title>futures_channel::oneshot::Inner&lt;T&gt;::poll_canceled (4 samples, 0.01%)</title><rect x="84.0863%" y="1013" width="0.0122%" height="15" fill="rgb(249,101,23)" fg:x="27545" fg:w="4"/><text x="84.3363%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (10 samples, 0.03%)</title><rect x="84.0985%" y="1189" width="0.0305%" height="15" fill="rgb(228,51,19)" fg:x="27549" fg:w="10"/><text x="84.3485%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.02%)</title><rect x="84.1138%" y="1173" width="0.0153%" height="15" fill="rgb(213,20,6)" fg:x="27554" fg:w="5"/><text x="84.3638%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (19,525 samples, 59.60%)</title><rect x="24.5345%" y="1205" width="59.6038%" height="15" fill="rgb(212,124,10)" fg:x="8037" fg:w="19525"/><text x="24.7845%" y="1215.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>__fdget_pos (13 samples, 0.04%)</title><rect x="84.2023%" y="981" width="0.0397%" height="15" fill="rgb(248,3,40)" fg:x="27583" fg:w="13"/><text x="84.4523%" y="991.50"></text></g><g><title>__fget_light (12 samples, 0.04%)</title><rect x="84.2054%" y="965" width="0.0366%" height="15" fill="rgb(223,178,23)" fg:x="27584" fg:w="12"/><text x="84.4554%" y="975.50"></text></g><g><title>__fget_files (10 samples, 0.03%)</title><rect x="84.2115%" y="949" width="0.0305%" height="15" fill="rgb(240,132,45)" fg:x="27586" fg:w="10"/><text x="84.4615%" y="959.50"></text></g><g><title>_raw_spin_lock_irqsave (5 samples, 0.02%)</title><rect x="84.3000%" y="853" width="0.0153%" height="15" fill="rgb(245,164,36)" fg:x="27615" fg:w="5"/><text x="84.5500%" y="863.50"></text></g><g><title>select_task_rq_fair (12 samples, 0.04%)</title><rect x="84.3183%" y="853" width="0.0366%" height="15" fill="rgb(231,188,53)" fg:x="27621" fg:w="12"/><text x="84.5683%" y="863.50"></text></g><g><title>enqueue_task_fair (7 samples, 0.02%)</title><rect x="84.3580%" y="837" width="0.0214%" height="15" fill="rgb(237,198,39)" fg:x="27634" fg:w="7"/><text x="84.6080%" y="847.50"></text></g><g><title>enqueue_entity (6 samples, 0.02%)</title><rect x="84.3611%" y="821" width="0.0183%" height="15" fill="rgb(223,120,35)" fg:x="27635" fg:w="6"/><text x="84.6111%" y="831.50"></text></g><g><title>ttwu_do_activate (11 samples, 0.03%)</title><rect x="84.3550%" y="853" width="0.0336%" height="15" fill="rgb(253,107,49)" fg:x="27633" fg:w="11"/><text x="84.6050%" y="863.50"></text></g><g><title>__smp_call_single_queue (5 samples, 0.02%)</title><rect x="84.4008%" y="837" width="0.0153%" height="15" fill="rgb(216,44,31)" fg:x="27648" fg:w="5"/><text x="84.6508%" y="847.50"></text></g><g><title>llist_add_batch (5 samples, 0.02%)</title><rect x="84.4008%" y="821" width="0.0153%" height="15" fill="rgb(253,87,21)" fg:x="27648" fg:w="5"/><text x="84.6508%" y="831.50"></text></g><g><title>__wake_up_common_lock (45 samples, 0.14%)</title><rect x="84.2878%" y="917" width="0.1374%" height="15" fill="rgb(226,18,2)" fg:x="27611" fg:w="45"/><text x="84.5378%" y="927.50"></text></g><g><title>__wake_up_common (45 samples, 0.14%)</title><rect x="84.2878%" y="901" width="0.1374%" height="15" fill="rgb(216,8,46)" fg:x="27611" fg:w="45"/><text x="84.5378%" y="911.50"></text></g><g><title>autoremove_wake_function (43 samples, 0.13%)</title><rect x="84.2939%" y="885" width="0.1313%" height="15" fill="rgb(226,140,39)" fg:x="27613" fg:w="43"/><text x="84.5439%" y="895.50"></text></g><g><title>try_to_wake_up (42 samples, 0.13%)</title><rect x="84.2970%" y="869" width="0.1282%" height="15" fill="rgb(221,194,54)" fg:x="27614" fg:w="42"/><text x="84.5470%" y="879.50"></text></g><g><title>ttwu_queue_wakelist (9 samples, 0.03%)</title><rect x="84.3977%" y="853" width="0.0275%" height="15" fill="rgb(213,92,11)" fg:x="27647" fg:w="9"/><text x="84.6477%" y="863.50"></text></g><g><title>__wake_up_common (59 samples, 0.18%)</title><rect x="84.2664%" y="949" width="0.1801%" height="15" fill="rgb(229,162,46)" fg:x="27604" fg:w="59"/><text x="84.5164%" y="959.50"></text></g><g><title>ep_poll_callback (58 samples, 0.18%)</title><rect x="84.2695%" y="933" width="0.1771%" height="15" fill="rgb(214,111,36)" fg:x="27605" fg:w="58"/><text x="84.5195%" y="943.50"></text></g><g><title>_raw_read_lock_irqsave (7 samples, 0.02%)</title><rect x="84.4252%" y="917" width="0.0214%" height="15" fill="rgb(207,6,21)" fg:x="27656" fg:w="7"/><text x="84.6752%" y="927.50"></text></g><g><title>_copy_from_user (5 samples, 0.02%)</title><rect x="84.4465%" y="949" width="0.0153%" height="15" fill="rgb(213,127,38)" fg:x="27663" fg:w="5"/><text x="84.6965%" y="959.50"></text></g><g><title>copy_user_generic_string (5 samples, 0.02%)</title><rect x="84.4465%" y="933" width="0.0153%" height="15" fill="rgb(238,118,32)" fg:x="27663" fg:w="5"/><text x="84.6965%" y="943.50"></text></g><g><title>_raw_spin_lock_irq (4 samples, 0.01%)</title><rect x="84.4618%" y="949" width="0.0122%" height="15" fill="rgb(240,139,39)" fg:x="27668" fg:w="4"/><text x="84.7118%" y="959.50"></text></g><g><title>eventfd_write (70 samples, 0.21%)</title><rect x="84.2634%" y="965" width="0.2137%" height="15" fill="rgb(235,10,37)" fg:x="27603" fg:w="70"/><text x="84.5134%" y="975.50"></text></g><g><title>fsnotify (6 samples, 0.02%)</title><rect x="84.4771%" y="965" width="0.0183%" height="15" fill="rgb(249,171,38)" fg:x="27673" fg:w="6"/><text x="84.7271%" y="975.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (112 samples, 0.34%)</title><rect x="84.1840%" y="1029" width="0.3419%" height="15" fill="rgb(242,144,32)" fg:x="27577" fg:w="112"/><text x="84.4340%" y="1039.50"></text></g><g><title>do_syscall_64 (112 samples, 0.34%)</title><rect x="84.1840%" y="1013" width="0.3419%" height="15" fill="rgb(217,117,21)" fg:x="27577" fg:w="112"/><text x="84.4340%" y="1023.50"></text></g><g><title>ksys_write (108 samples, 0.33%)</title><rect x="84.1962%" y="997" width="0.3297%" height="15" fill="rgb(249,87,1)" fg:x="27581" fg:w="108"/><text x="84.4462%" y="1007.50"></text></g><g><title>vfs_write (92 samples, 0.28%)</title><rect x="84.2451%" y="981" width="0.2808%" height="15" fill="rgb(248,196,48)" fg:x="27597" fg:w="92"/><text x="84.4951%" y="991.50"></text></g><g><title>security_file_permission (10 samples, 0.03%)</title><rect x="84.4954%" y="965" width="0.0305%" height="15" fill="rgb(251,206,33)" fg:x="27679" fg:w="10"/><text x="84.7454%" y="975.50"></text></g><g><title>selinux_file_permission (7 samples, 0.02%)</title><rect x="84.5045%" y="949" width="0.0214%" height="15" fill="rgb(232,141,28)" fg:x="27682" fg:w="7"/><text x="84.7545%" y="959.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (119 samples, 0.36%)</title><rect x="84.1657%" y="1109" width="0.3633%" height="15" fill="rgb(209,167,14)" fg:x="27571" fg:w="119"/><text x="84.4157%" y="1119.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (117 samples, 0.36%)</title><rect x="84.1718%" y="1093" width="0.3572%" height="15" fill="rgb(225,11,50)" fg:x="27573" fg:w="117"/><text x="84.4218%" y="1103.50"></text></g><g><title>std::sys::unix::fs::File::write (114 samples, 0.35%)</title><rect x="84.1810%" y="1077" width="0.3480%" height="15" fill="rgb(209,50,20)" fg:x="27576" fg:w="114"/><text x="84.4310%" y="1087.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (114 samples, 0.35%)</title><rect x="84.1810%" y="1061" width="0.3480%" height="15" fill="rgb(212,17,46)" fg:x="27576" fg:w="114"/><text x="84.4310%" y="1071.50"></text></g><g><title>__GI___libc_write (114 samples, 0.35%)</title><rect x="84.1810%" y="1045" width="0.3480%" height="15" fill="rgb(216,101,39)" fg:x="27576" fg:w="114"/><text x="84.4310%" y="1055.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (125 samples, 0.38%)</title><rect x="84.1626%" y="1141" width="0.3816%" height="15" fill="rgb(212,228,48)" fg:x="27570" fg:w="125"/><text x="84.4126%" y="1151.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (125 samples, 0.38%)</title><rect x="84.1626%" y="1125" width="0.3816%" height="15" fill="rgb(250,6,50)" fg:x="27570" fg:w="125"/><text x="84.4126%" y="1135.50"></text></g><g><title>tokio::io::driver::Handle::inner (5 samples, 0.02%)</title><rect x="84.5290%" y="1109" width="0.0153%" height="15" fill="rgb(250,160,48)" fg:x="27690" fg:w="5"/><text x="84.7790%" y="1119.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (5 samples, 0.02%)</title><rect x="84.5290%" y="1093" width="0.0153%" height="15" fill="rgb(244,216,33)" fg:x="27690" fg:w="5"/><text x="84.7790%" y="1103.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Unpark&gt;::unpark (4 samples, 0.01%)</title><rect x="84.5442%" y="1141" width="0.0122%" height="15" fill="rgb(207,157,5)" fg:x="27695" fg:w="4"/><text x="84.7942%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (17 samples, 0.05%)</title><rect x="84.5564%" y="1141" width="0.0519%" height="15" fill="rgb(228,199,8)" fg:x="27699" fg:w="17"/><text x="84.8064%" y="1151.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (11 samples, 0.03%)</title><rect x="84.5748%" y="1125" width="0.0336%" height="15" fill="rgb(227,80,20)" fg:x="27705" fg:w="11"/><text x="84.8248%" y="1135.50"></text></g><g><title>mark_wake_futex (11 samples, 0.03%)</title><rect x="84.6602%" y="997" width="0.0336%" height="15" fill="rgb(222,9,33)" fg:x="27733" fg:w="11"/><text x="84.9102%" y="1007.50"></text></g><g><title>wake_q_add_safe (5 samples, 0.02%)</title><rect x="84.6938%" y="997" width="0.0153%" height="15" fill="rgb(239,44,28)" fg:x="27744" fg:w="5"/><text x="84.9438%" y="1007.50"></text></g><g><title>select_task_rq_fair (9 samples, 0.03%)</title><rect x="84.7335%" y="965" width="0.0275%" height="15" fill="rgb(249,187,43)" fg:x="27757" fg:w="9"/><text x="84.9835%" y="975.50"></text></g><g><title>available_idle_cpu (4 samples, 0.01%)</title><rect x="84.7488%" y="949" width="0.0122%" height="15" fill="rgb(216,141,28)" fg:x="27762" fg:w="4"/><text x="84.9988%" y="959.50"></text></g><g><title>enqueue_task_fair (5 samples, 0.02%)</title><rect x="84.7610%" y="949" width="0.0153%" height="15" fill="rgb(230,154,53)" fg:x="27766" fg:w="5"/><text x="85.0110%" y="959.50"></text></g><g><title>enqueue_entity (4 samples, 0.01%)</title><rect x="84.7640%" y="933" width="0.0122%" height="15" fill="rgb(227,82,4)" fg:x="27767" fg:w="4"/><text x="85.0140%" y="943.50"></text></g><g><title>ttwu_do_activate (12 samples, 0.04%)</title><rect x="84.7610%" y="965" width="0.0366%" height="15" fill="rgb(220,107,16)" fg:x="27766" fg:w="12"/><text x="85.0110%" y="975.50"></text></g><g><title>psi_task_change (7 samples, 0.02%)</title><rect x="84.7762%" y="949" width="0.0214%" height="15" fill="rgb(207,187,2)" fg:x="27771" fg:w="7"/><text x="85.0262%" y="959.50"></text></g><g><title>psi_group_change (6 samples, 0.02%)</title><rect x="84.7793%" y="933" width="0.0183%" height="15" fill="rgb(210,162,52)" fg:x="27772" fg:w="6"/><text x="85.0293%" y="943.50"></text></g><g><title>default_send_IPI_single_phys (4 samples, 0.01%)</title><rect x="84.8190%" y="949" width="0.0122%" height="15" fill="rgb(217,216,49)" fg:x="27785" fg:w="4"/><text x="85.0690%" y="959.50"></text></g><g><title>native_send_call_func_single_ipi (4 samples, 0.01%)</title><rect x="84.8312%" y="949" width="0.0122%" height="15" fill="rgb(218,146,49)" fg:x="27789" fg:w="4"/><text x="85.0812%" y="959.50"></text></g><g><title>__x64_sys_futex (75 samples, 0.23%)</title><rect x="84.6267%" y="1045" width="0.2290%" height="15" fill="rgb(216,55,40)" fg:x="27722" fg:w="75"/><text x="84.8767%" y="1055.50"></text></g><g><title>do_futex (74 samples, 0.23%)</title><rect x="84.6297%" y="1029" width="0.2259%" height="15" fill="rgb(208,196,21)" fg:x="27723" fg:w="74"/><text x="84.8797%" y="1039.50"></text></g><g><title>futex_wake (71 samples, 0.22%)</title><rect x="84.6389%" y="1013" width="0.2167%" height="15" fill="rgb(242,117,42)" fg:x="27726" fg:w="71"/><text x="84.8889%" y="1023.50"></text></g><g><title>wake_up_q (48 samples, 0.15%)</title><rect x="84.7091%" y="997" width="0.1465%" height="15" fill="rgb(210,11,23)" fg:x="27749" fg:w="48"/><text x="84.9591%" y="1007.50"></text></g><g><title>try_to_wake_up (48 samples, 0.15%)</title><rect x="84.7091%" y="981" width="0.1465%" height="15" fill="rgb(217,110,2)" fg:x="27749" fg:w="48"/><text x="84.9591%" y="991.50"></text></g><g><title>ttwu_queue_wakelist (19 samples, 0.06%)</title><rect x="84.7976%" y="965" width="0.0580%" height="15" fill="rgb(229,77,54)" fg:x="27778" fg:w="19"/><text x="85.0476%" y="975.50"></text></g><g><title>send_call_function_single_ipi (4 samples, 0.01%)</title><rect x="84.8434%" y="949" width="0.0122%" height="15" fill="rgb(218,53,16)" fg:x="27793" fg:w="4"/><text x="85.0934%" y="959.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (93 samples, 0.28%)</title><rect x="84.6267%" y="1109" width="0.2839%" height="15" fill="rgb(215,38,13)" fg:x="27722" fg:w="93"/><text x="84.8767%" y="1119.50"></text></g><g><title>syscall (93 samples, 0.28%)</title><rect x="84.6267%" y="1093" width="0.2839%" height="15" fill="rgb(235,42,18)" fg:x="27722" fg:w="93"/><text x="84.8767%" y="1103.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (93 samples, 0.28%)</title><rect x="84.6267%" y="1077" width="0.2839%" height="15" fill="rgb(219,66,54)" fg:x="27722" fg:w="93"/><text x="84.8767%" y="1087.50"></text></g><g><title>do_syscall_64 (93 samples, 0.28%)</title><rect x="84.6267%" y="1061" width="0.2839%" height="15" fill="rgb(222,205,4)" fg:x="27722" fg:w="93"/><text x="84.8767%" y="1071.50"></text></g><g><title>syscall_exit_to_user_mode (15 samples, 0.05%)</title><rect x="84.8648%" y="1045" width="0.0458%" height="15" fill="rgb(227,213,46)" fg:x="27800" fg:w="15"/><text x="85.1148%" y="1055.50"></text></g><g><title>exit_to_user_mode_prepare (7 samples, 0.02%)</title><rect x="84.8892%" y="1029" width="0.0214%" height="15" fill="rgb(250,145,42)" fg:x="27808" fg:w="7"/><text x="85.1392%" y="1039.50"></text></g><g><title>schedule (7 samples, 0.02%)</title><rect x="84.8892%" y="1013" width="0.0214%" height="15" fill="rgb(219,15,2)" fg:x="27808" fg:w="7"/><text x="85.1392%" y="1023.50"></text></g><g><title>__schedule (7 samples, 0.02%)</title><rect x="84.8892%" y="997" width="0.0214%" height="15" fill="rgb(231,181,52)" fg:x="27808" fg:w="7"/><text x="85.1392%" y="1007.50"></text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="84.8892%" y="981" width="0.0214%" height="15" fill="rgb(235,1,42)" fg:x="27808" fg:w="7"/><text x="85.1392%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4 samples, 0.01%)</title><rect x="84.9106%" y="1109" width="0.0122%" height="15" fill="rgb(249,88,27)" fg:x="27815" fg:w="4"/><text x="85.1606%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="84.9228%" y="1109" width="0.0153%" height="15" fill="rgb(235,145,16)" fg:x="27819" fg:w="5"/><text x="85.1728%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4 samples, 0.01%)</title><rect x="84.9258%" y="1093" width="0.0122%" height="15" fill="rgb(237,114,19)" fg:x="27820" fg:w="4"/><text x="85.1758%" y="1103.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (110 samples, 0.34%)</title><rect x="84.6083%" y="1141" width="0.3358%" height="15" fill="rgb(238,51,50)" fg:x="27716" fg:w="110"/><text x="84.8583%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (108 samples, 0.33%)</title><rect x="84.6144%" y="1125" width="0.3297%" height="15" fill="rgb(205,194,25)" fg:x="27718" fg:w="108"/><text x="84.8644%" y="1135.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (4 samples, 0.01%)</title><rect x="84.9594%" y="1125" width="0.0122%" height="15" fill="rgb(215,203,17)" fg:x="27831" fg:w="4"/><text x="85.2094%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.04%)</title><rect x="84.9777%" y="1093" width="0.0397%" height="15" fill="rgb(233,112,49)" fg:x="27837" fg:w="13"/><text x="85.2277%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19,853 samples, 60.61%)</title><rect x="24.4978%" y="1221" width="60.6050%" height="15" fill="rgb(241,130,26)" fg:x="8025" fg:w="19853"/><text x="24.7478%" y="1231.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::yield_now (316 samples, 0.96%)</title><rect x="84.1382%" y="1205" width="0.9646%" height="15" fill="rgb(252,223,19)" fg:x="27562" fg:w="316"/><text x="84.3882%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (313 samples, 0.96%)</title><rect x="84.1474%" y="1189" width="0.9555%" height="15" fill="rgb(211,95,25)" fg:x="27565" fg:w="313"/><text x="84.3974%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (313 samples, 0.96%)</title><rect x="84.1474%" y="1173" width="0.9555%" height="15" fill="rgb(251,182,27)" fg:x="27565" fg:w="313"/><text x="84.3974%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (311 samples, 0.95%)</title><rect x="84.1535%" y="1157" width="0.9494%" height="15" fill="rgb(238,24,4)" fg:x="27567" fg:w="311"/><text x="84.4035%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (52 samples, 0.16%)</title><rect x="84.9441%" y="1141" width="0.1587%" height="15" fill="rgb(224,220,25)" fg:x="27826" fg:w="52"/><text x="85.1941%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (43 samples, 0.13%)</title><rect x="84.9716%" y="1125" width="0.1313%" height="15" fill="rgb(239,133,26)" fg:x="27835" fg:w="43"/><text x="85.2216%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (42 samples, 0.13%)</title><rect x="84.9747%" y="1109" width="0.1282%" height="15" fill="rgb(211,94,48)" fg:x="27836" fg:w="42"/><text x="85.2247%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (26 samples, 0.08%)</title><rect x="85.0235%" y="1093" width="0.0794%" height="15" fill="rgb(239,87,6)" fg:x="27852" fg:w="26"/><text x="85.2735%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.05%)</title><rect x="85.0479%" y="1077" width="0.0549%" height="15" fill="rgb(227,62,0)" fg:x="27860" fg:w="18"/><text x="85.2979%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.05%)</title><rect x="85.0479%" y="1061" width="0.0549%" height="15" fill="rgb(211,226,4)" fg:x="27860" fg:w="18"/><text x="85.2979%" y="1071.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (19,860 samples, 60.63%)</title><rect x="24.4887%" y="1253" width="60.6264%" height="15" fill="rgb(253,38,52)" fg:x="8022" fg:w="19860"/><text x="24.7387%" y="1263.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (19,860 samples, 60.63%)</title><rect x="24.4887%" y="1237" width="60.6264%" height="15" fill="rgb(229,126,40)" fg:x="8022" fg:w="19860"/><text x="24.7387%" y="1247.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.01%)</title><rect x="85.1029%" y="1221" width="0.0122%" height="15" fill="rgb(229,165,44)" fg:x="27878" fg:w="4"/><text x="85.3529%" y="1231.50"></text></g><g><title>tokio::coop::budget (19,887 samples, 60.71%)</title><rect x="24.4093%" y="1349" width="60.7088%" height="15" fill="rgb(247,95,47)" fg:x="7996" fg:w="19887"/><text x="24.6593%" y="1359.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (19,887 samples, 60.71%)</title><rect x="24.4093%" y="1333" width="60.7088%" height="15" fill="rgb(216,140,30)" fg:x="7996" fg:w="19887"/><text x="24.6593%" y="1343.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19,875 samples, 60.67%)</title><rect x="24.4459%" y="1317" width="60.6722%" height="15" fill="rgb(246,214,8)" fg:x="8008" fg:w="19875"/><text x="24.6959%" y="1327.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19,873 samples, 60.67%)</title><rect x="24.4520%" y="1301" width="60.6661%" height="15" fill="rgb(227,224,15)" fg:x="8010" fg:w="19873"/><text x="24.7020%" y="1311.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (19,870 samples, 60.66%)</title><rect x="24.4612%" y="1285" width="60.6569%" height="15" fill="rgb(233,175,4)" fg:x="8013" fg:w="19870"/><text x="24.7112%" y="1295.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (19,864 samples, 60.64%)</title><rect x="24.4795%" y="1269" width="60.6386%" height="15" fill="rgb(221,66,45)" fg:x="8019" fg:w="19864"/><text x="24.7295%" y="1279.50">tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner (10 samples, 0.03%)</title><rect x="85.1181%" y="1349" width="0.0305%" height="15" fill="rgb(221,178,18)" fg:x="27883" fg:w="10"/><text x="85.3681%" y="1359.50"></text></g><g><title>__wake_up_common (16 samples, 0.05%)</title><rect x="85.1914%" y="1061" width="0.0488%" height="15" fill="rgb(213,81,29)" fg:x="27907" fg:w="16"/><text x="85.4414%" y="1071.50"></text></g><g><title>autoremove_wake_function (13 samples, 0.04%)</title><rect x="85.2006%" y="1045" width="0.0397%" height="15" fill="rgb(220,89,49)" fg:x="27910" fg:w="13"/><text x="85.4506%" y="1055.50"></text></g><g><title>try_to_wake_up (13 samples, 0.04%)</title><rect x="85.2006%" y="1029" width="0.0397%" height="15" fill="rgb(227,60,33)" fg:x="27910" fg:w="13"/><text x="85.4506%" y="1039.50"></text></g><g><title>__wake_up_common_lock (17 samples, 0.05%)</title><rect x="85.1914%" y="1077" width="0.0519%" height="15" fill="rgb(205,113,12)" fg:x="27907" fg:w="17"/><text x="85.4414%" y="1087.50"></text></g><g><title>__wake_up_common (20 samples, 0.06%)</title><rect x="85.1884%" y="1109" width="0.0611%" height="15" fill="rgb(211,32,1)" fg:x="27906" fg:w="20"/><text x="85.4384%" y="1119.50"></text></g><g><title>ep_poll_callback (19 samples, 0.06%)</title><rect x="85.1914%" y="1093" width="0.0580%" height="15" fill="rgb(246,2,12)" fg:x="27907" fg:w="19"/><text x="85.4414%" y="1103.50"></text></g><g><title>eventfd_write (23 samples, 0.07%)</title><rect x="85.1853%" y="1125" width="0.0702%" height="15" fill="rgb(243,37,27)" fg:x="27905" fg:w="23"/><text x="85.4353%" y="1135.50"></text></g><g><title>fsnotify (5 samples, 0.02%)</title><rect x="85.2555%" y="1125" width="0.0153%" height="15" fill="rgb(248,211,31)" fg:x="27928" fg:w="5"/><text x="85.5055%" y="1135.50"></text></g><g><title>ksys_write (47 samples, 0.14%)</title><rect x="85.1670%" y="1157" width="0.1435%" height="15" fill="rgb(242,146,47)" fg:x="27899" fg:w="47"/><text x="85.4170%" y="1167.50"></text></g><g><title>vfs_write (43 samples, 0.13%)</title><rect x="85.1792%" y="1141" width="0.1313%" height="15" fill="rgb(206,70,20)" fg:x="27903" fg:w="43"/><text x="85.4292%" y="1151.50"></text></g><g><title>security_file_permission (13 samples, 0.04%)</title><rect x="85.2708%" y="1125" width="0.0397%" height="15" fill="rgb(215,10,51)" fg:x="27933" fg:w="13"/><text x="85.5208%" y="1135.50"></text></g><g><title>selinux_file_permission (7 samples, 0.02%)</title><rect x="85.2891%" y="1109" width="0.0214%" height="15" fill="rgb(243,178,53)" fg:x="27939" fg:w="7"/><text x="85.5391%" y="1119.50"></text></g><g><title>__GI___libc_write (48 samples, 0.15%)</title><rect x="85.1670%" y="1205" width="0.1465%" height="15" fill="rgb(233,221,20)" fg:x="27899" fg:w="48"/><text x="85.4170%" y="1215.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (48 samples, 0.15%)</title><rect x="85.1670%" y="1189" width="0.1465%" height="15" fill="rgb(218,95,35)" fg:x="27899" fg:w="48"/><text x="85.4170%" y="1199.50"></text></g><g><title>do_syscall_64 (48 samples, 0.15%)</title><rect x="85.1670%" y="1173" width="0.1465%" height="15" fill="rgb(229,13,5)" fg:x="27899" fg:w="48"/><text x="85.4170%" y="1183.50"></text></g><g><title>mio::sys::unix::waker::eventfd::Waker::wake (52 samples, 0.16%)</title><rect x="85.1578%" y="1269" width="0.1587%" height="15" fill="rgb(252,164,30)" fg:x="27896" fg:w="52"/><text x="85.4078%" y="1279.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (51 samples, 0.16%)</title><rect x="85.1609%" y="1253" width="0.1557%" height="15" fill="rgb(232,68,36)" fg:x="27897" fg:w="51"/><text x="85.4109%" y="1263.50"></text></g><g><title>std::sys::unix::fs::File::write (49 samples, 0.15%)</title><rect x="85.1670%" y="1237" width="0.1496%" height="15" fill="rgb(219,59,54)" fg:x="27899" fg:w="49"/><text x="85.4170%" y="1247.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (49 samples, 0.15%)</title><rect x="85.1670%" y="1221" width="0.1496%" height="15" fill="rgb(250,92,33)" fg:x="27899" fg:w="49"/><text x="85.4170%" y="1231.50"></text></g><g><title>&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (59 samples, 0.18%)</title><rect x="85.1548%" y="1301" width="0.1801%" height="15" fill="rgb(229,162,54)" fg:x="27895" fg:w="59"/><text x="85.4048%" y="1311.50"></text></g><g><title>tokio::io::driver::Handle::wakeup (59 samples, 0.18%)</title><rect x="85.1548%" y="1285" width="0.1801%" height="15" fill="rgb(244,114,52)" fg:x="27895" fg:w="59"/><text x="85.4048%" y="1295.50"></text></g><g><title>tokio::io::driver::Handle::inner (6 samples, 0.02%)</title><rect x="85.3166%" y="1269" width="0.0183%" height="15" fill="rgb(212,211,43)" fg:x="27948" fg:w="6"/><text x="85.5666%" y="1279.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.02%)</title><rect x="85.3166%" y="1253" width="0.0183%" height="15" fill="rgb(226,147,8)" fg:x="27948" fg:w="6"/><text x="85.5666%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (11 samples, 0.03%)</title><rect x="85.3379%" y="1301" width="0.0336%" height="15" fill="rgb(226,23,13)" fg:x="27955" fg:w="11"/><text x="85.5879%" y="1311.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (10 samples, 0.03%)</title><rect x="85.3410%" y="1285" width="0.0305%" height="15" fill="rgb(240,63,4)" fg:x="27956" fg:w="10"/><text x="85.5910%" y="1295.50"></text></g><g><title>mark_wake_futex (4 samples, 0.01%)</title><rect x="85.4509%" y="1157" width="0.0122%" height="15" fill="rgb(221,1,32)" fg:x="27992" fg:w="4"/><text x="85.7009%" y="1167.50"></text></g><g><title>available_idle_cpu (10 samples, 0.03%)</title><rect x="85.5577%" y="1109" width="0.0305%" height="15" fill="rgb(242,117,10)" fg:x="28027" fg:w="10"/><text x="85.8077%" y="1119.50"></text></g><g><title>select_task_rq_fair (31 samples, 0.09%)</title><rect x="85.5119%" y="1125" width="0.0946%" height="15" fill="rgb(249,172,44)" fg:x="28012" fg:w="31"/><text x="85.7619%" y="1135.50"></text></g><g><title>task_h_load (5 samples, 0.02%)</title><rect x="85.5913%" y="1109" width="0.0153%" height="15" fill="rgb(244,46,45)" fg:x="28038" fg:w="5"/><text x="85.8413%" y="1119.50"></text></g><g><title>enqueue_entity (10 samples, 0.03%)</title><rect x="85.6218%" y="1093" width="0.0305%" height="15" fill="rgb(206,43,17)" fg:x="28048" fg:w="10"/><text x="85.8718%" y="1103.50"></text></g><g><title>update_load_avg (6 samples, 0.02%)</title><rect x="85.6340%" y="1077" width="0.0183%" height="15" fill="rgb(239,218,39)" fg:x="28052" fg:w="6"/><text x="85.8840%" y="1087.50"></text></g><g><title>enqueue_task_fair (16 samples, 0.05%)</title><rect x="85.6096%" y="1109" width="0.0488%" height="15" fill="rgb(208,169,54)" fg:x="28044" fg:w="16"/><text x="85.8596%" y="1119.50"></text></g><g><title>ttwu_do_activate (23 samples, 0.07%)</title><rect x="85.6096%" y="1125" width="0.0702%" height="15" fill="rgb(247,25,42)" fg:x="28044" fg:w="23"/><text x="85.8596%" y="1135.50"></text></g><g><title>psi_task_change (7 samples, 0.02%)</title><rect x="85.6585%" y="1109" width="0.0214%" height="15" fill="rgb(226,23,31)" fg:x="28060" fg:w="7"/><text x="85.9085%" y="1119.50"></text></g><g><title>psi_group_change (7 samples, 0.02%)</title><rect x="85.6585%" y="1093" width="0.0214%" height="15" fill="rgb(247,16,28)" fg:x="28060" fg:w="7"/><text x="85.9085%" y="1103.50"></text></g><g><title>__smp_call_single_queue (4 samples, 0.01%)</title><rect x="85.6982%" y="1109" width="0.0122%" height="15" fill="rgb(231,147,38)" fg:x="28073" fg:w="4"/><text x="85.9482%" y="1119.50"></text></g><g><title>llist_add_batch (4 samples, 0.01%)</title><rect x="85.6982%" y="1093" width="0.0122%" height="15" fill="rgb(253,81,48)" fg:x="28073" fg:w="4"/><text x="85.9482%" y="1103.50"></text></g><g><title>default_send_IPI_single_phys (6 samples, 0.02%)</title><rect x="85.7104%" y="1109" width="0.0183%" height="15" fill="rgb(249,222,43)" fg:x="28077" fg:w="6"/><text x="85.9604%" y="1119.50"></text></g><g><title>__default_send_IPI_dest_field (5 samples, 0.02%)</title><rect x="85.7134%" y="1093" width="0.0153%" height="15" fill="rgb(221,3,27)" fg:x="28078" fg:w="5"/><text x="85.9634%" y="1103.50"></text></g><g><title>ttwu_queue_wakelist (17 samples, 0.05%)</title><rect x="85.6829%" y="1125" width="0.0519%" height="15" fill="rgb(228,180,5)" fg:x="28068" fg:w="17"/><text x="85.9329%" y="1135.50"></text></g><g><title>__x64_sys_futex (115 samples, 0.35%)</title><rect x="85.3898%" y="1205" width="0.3511%" height="15" fill="rgb(227,131,42)" fg:x="27972" fg:w="115"/><text x="85.6398%" y="1215.50"></text></g><g><title>do_futex (115 samples, 0.35%)</title><rect x="85.3898%" y="1189" width="0.3511%" height="15" fill="rgb(212,3,39)" fg:x="27972" fg:w="115"/><text x="85.6398%" y="1199.50"></text></g><g><title>futex_wake (114 samples, 0.35%)</title><rect x="85.3929%" y="1173" width="0.3480%" height="15" fill="rgb(226,45,5)" fg:x="27973" fg:w="114"/><text x="85.6429%" y="1183.50"></text></g><g><title>wake_up_q (90 samples, 0.27%)</title><rect x="85.4661%" y="1157" width="0.2747%" height="15" fill="rgb(215,167,45)" fg:x="27997" fg:w="90"/><text x="85.7161%" y="1167.50"></text></g><g><title>try_to_wake_up (89 samples, 0.27%)</title><rect x="85.4692%" y="1141" width="0.2717%" height="15" fill="rgb(250,218,53)" fg:x="27998" fg:w="89"/><text x="85.7192%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (131 samples, 0.40%)</title><rect x="85.3868%" y="1269" width="0.3999%" height="15" fill="rgb(207,140,0)" fg:x="27971" fg:w="131"/><text x="85.6368%" y="1279.50"></text></g><g><title>syscall (131 samples, 0.40%)</title><rect x="85.3868%" y="1253" width="0.3999%" height="15" fill="rgb(238,133,51)" fg:x="27971" fg:w="131"/><text x="85.6368%" y="1263.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (131 samples, 0.40%)</title><rect x="85.3868%" y="1237" width="0.3999%" height="15" fill="rgb(218,203,53)" fg:x="27971" fg:w="131"/><text x="85.6368%" y="1247.50"></text></g><g><title>do_syscall_64 (130 samples, 0.40%)</title><rect x="85.3898%" y="1221" width="0.3968%" height="15" fill="rgb(226,184,25)" fg:x="27972" fg:w="130"/><text x="85.6398%" y="1231.50"></text></g><g><title>syscall_exit_to_user_mode (12 samples, 0.04%)</title><rect x="85.7500%" y="1205" width="0.0366%" height="15" fill="rgb(231,121,21)" fg:x="28090" fg:w="12"/><text x="86.0000%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (7 samples, 0.02%)</title><rect x="85.7867%" y="1269" width="0.0214%" height="15" fill="rgb(251,14,34)" fg:x="28102" fg:w="7"/><text x="86.0367%" y="1279.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.02%)</title><rect x="85.7928%" y="1253" width="0.0153%" height="15" fill="rgb(249,193,11)" fg:x="28104" fg:w="5"/><text x="86.0428%" y="1263.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.02%)</title><rect x="85.7928%" y="1237" width="0.0153%" height="15" fill="rgb(220,172,37)" fg:x="28104" fg:w="5"/><text x="86.0428%" y="1247.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.02%)</title><rect x="85.7928%" y="1221" width="0.0153%" height="15" fill="rgb(231,229,43)" fg:x="28104" fg:w="5"/><text x="86.0428%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.02%)</title><rect x="85.8080%" y="1269" width="0.0153%" height="15" fill="rgb(250,161,5)" fg:x="28109" fg:w="5"/><text x="86.0580%" y="1279.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5 samples, 0.02%)</title><rect x="85.8080%" y="1253" width="0.0153%" height="15" fill="rgb(218,225,18)" fg:x="28109" fg:w="5"/><text x="86.0580%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (152 samples, 0.46%)</title><rect x="85.3715%" y="1301" width="0.4640%" height="15" fill="rgb(245,45,42)" fg:x="27966" fg:w="152"/><text x="85.6215%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (152 samples, 0.46%)</title><rect x="85.3715%" y="1285" width="0.4640%" height="15" fill="rgb(211,115,1)" fg:x="27966" fg:w="152"/><text x="85.6215%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (4 samples, 0.01%)</title><rect x="85.8233%" y="1269" width="0.0122%" height="15" fill="rgb(248,133,52)" fg:x="28114" fg:w="4"/><text x="86.0733%" y="1279.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (4 samples, 0.01%)</title><rect x="85.8233%" y="1253" width="0.0122%" height="15" fill="rgb(238,100,21)" fg:x="28114" fg:w="4"/><text x="86.0733%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.01%)</title><rect x="85.8233%" y="1237" width="0.0122%" height="15" fill="rgb(247,144,11)" fg:x="28114" fg:w="4"/><text x="86.0733%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.01%)</title><rect x="85.8233%" y="1221" width="0.0122%" height="15" fill="rgb(206,164,16)" fg:x="28114" fg:w="4"/><text x="86.0733%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (20,140 samples, 61.48%)</title><rect x="24.3788%" y="1365" width="61.4812%" height="15" fill="rgb(222,34,3)" fg:x="7986" fg:w="20140"/><text x="24.6288%" y="1375.50">tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (233 samples, 0.71%)</title><rect x="85.1487%" y="1349" width="0.7113%" height="15" fill="rgb(248,82,4)" fg:x="27893" fg:w="233"/><text x="85.3987%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (233 samples, 0.71%)</title><rect x="85.1487%" y="1333" width="0.7113%" height="15" fill="rgb(228,81,46)" fg:x="27893" fg:w="233"/><text x="85.3987%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (233 samples, 0.71%)</title><rect x="85.1487%" y="1317" width="0.7113%" height="15" fill="rgb(227,67,47)" fg:x="27893" fg:w="233"/><text x="85.3987%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (8 samples, 0.02%)</title><rect x="85.8355%" y="1301" width="0.0244%" height="15" fill="rgb(215,93,53)" fg:x="28118" fg:w="8"/><text x="86.0855%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (7 samples, 0.02%)</title><rect x="85.8386%" y="1285" width="0.0214%" height="15" fill="rgb(248,194,39)" fg:x="28119" fg:w="7"/><text x="86.0886%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.02%)</title><rect x="85.8447%" y="1269" width="0.0153%" height="15" fill="rgb(215,5,19)" fg:x="28121" fg:w="5"/><text x="86.0947%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.02%)</title><rect x="85.8447%" y="1253" width="0.0153%" height="15" fill="rgb(226,215,51)" fg:x="28121" fg:w="5"/><text x="86.0947%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (8 samples, 0.02%)</title><rect x="85.8599%" y="1365" width="0.0244%" height="15" fill="rgb(225,56,26)" fg:x="28126" fg:w="8"/><text x="86.1099%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (4 samples, 0.01%)</title><rect x="85.8722%" y="1349" width="0.0122%" height="15" fill="rgb(222,75,29)" fg:x="28130" fg:w="4"/><text x="86.1222%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (4 samples, 0.01%)</title><rect x="85.8722%" y="1333" width="0.0122%" height="15" fill="rgb(236,139,6)" fg:x="28130" fg:w="4"/><text x="86.1222%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (4 samples, 0.01%)</title><rect x="85.8722%" y="1317" width="0.0122%" height="15" fill="rgb(223,137,36)" fg:x="28130" fg:w="4"/><text x="86.1222%" y="1327.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (4 samples, 0.01%)</title><rect x="85.8722%" y="1301" width="0.0122%" height="15" fill="rgb(226,99,2)" fg:x="28130" fg:w="4"/><text x="86.1222%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.02%)</title><rect x="86.0156%" y="1317" width="0.0214%" height="15" fill="rgb(206,133,23)" fg:x="28177" fg:w="7"/><text x="86.2656%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="86.0156%" y="1301" width="0.0214%" height="15" fill="rgb(243,173,15)" fg:x="28177" fg:w="7"/><text x="86.2656%" y="1311.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (67 samples, 0.20%)</title><rect x="85.9821%" y="1333" width="0.2045%" height="15" fill="rgb(228,69,28)" fg:x="28166" fg:w="67"/><text x="86.2321%" y="1343.50"></text></g><g><title>tokio::runtime::queue::unpack (49 samples, 0.15%)</title><rect x="86.0370%" y="1317" width="0.1496%" height="15" fill="rgb(212,51,22)" fg:x="28184" fg:w="49"/><text x="86.2870%" y="1327.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (84 samples, 0.26%)</title><rect x="85.9363%" y="1349" width="0.2564%" height="15" fill="rgb(227,113,0)" fg:x="28151" fg:w="84"/><text x="86.1863%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (105 samples, 0.32%)</title><rect x="85.8844%" y="1365" width="0.3205%" height="15" fill="rgb(252,84,27)" fg:x="28134" fg:w="105"/><text x="86.1344%" y="1375.50"></text></g><g><title>std::panic::catch_unwind (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1797" width="71.8786%" height="15" fill="rgb(223,145,39)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1807.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1781" width="71.8786%" height="15" fill="rgb(239,219,30)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1791.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1765" width="71.8786%" height="15" fill="rgb(224,196,39)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1775.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1749" width="71.8786%" height="15" fill="rgb(205,35,43)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1759.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1733" width="71.8786%" height="15" fill="rgb(228,201,21)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1743.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1717" width="71.8786%" height="15" fill="rgb(237,118,16)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1727.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (23,546 samples, 71.88%)</title><rect x="14.3324%" y="1701" width="71.8786%" height="15" fill="rgb(241,17,19)" fg:x="4695" fg:w="23546"/><text x="14.5824%" y="1711.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (23,545 samples, 71.88%)</title><rect x="14.3354%" y="1685" width="71.8756%" height="15" fill="rgb(214,10,25)" fg:x="4696" fg:w="23545"/><text x="14.5854%" y="1695.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (23,482 samples, 71.68%)</title><rect x="14.5277%" y="1669" width="71.6833%" height="15" fill="rgb(238,37,29)" fg:x="4759" fg:w="23482"/><text x="14.7777%" y="1679.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (23,482 samples, 71.68%)</title><rect x="14.5277%" y="1653" width="71.6833%" height="15" fill="rgb(253,83,25)" fg:x="4759" fg:w="23482"/><text x="14.7777%" y="1663.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (23,482 samples, 71.68%)</title><rect x="14.5277%" y="1637" width="71.6833%" height="15" fill="rgb(234,192,12)" fg:x="4759" fg:w="23482"/><text x="14.7777%" y="1647.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1621" width="71.6802%" height="15" fill="rgb(241,216,45)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1631.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1605" width="71.6802%" height="15" fill="rgb(242,22,33)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1615.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1589" width="71.6802%" height="15" fill="rgb(231,105,49)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1599.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1573" width="71.6802%" height="15" fill="rgb(218,204,15)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1583.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1557" width="71.6802%" height="15" fill="rgb(235,138,41)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1567.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1541" width="71.6802%" height="15" fill="rgb(246,0,9)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1551.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1525" width="71.6802%" height="15" fill="rgb(210,74,4)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1535.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1509" width="71.6802%" height="15" fill="rgb(250,60,41)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1519.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1493" width="71.6802%" height="15" fill="rgb(220,115,12)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1503.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1477" width="71.6802%" height="15" fill="rgb(237,100,13)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1487.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (23,481 samples, 71.68%)</title><rect x="14.5308%" y="1461" width="71.6802%" height="15" fill="rgb(213,55,26)" fg:x="4760" fg:w="23481"/><text x="14.7808%" y="1471.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (23,480 samples, 71.68%)</title><rect x="14.5339%" y="1445" width="71.6771%" height="15" fill="rgb(216,17,4)" fg:x="4761" fg:w="23480"/><text x="14.7839%" y="1455.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (23,480 samples, 71.68%)</title><rect x="14.5339%" y="1429" width="71.6771%" height="15" fill="rgb(220,153,47)" fg:x="4761" fg:w="23480"/><text x="14.7839%" y="1439.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (23,480 samples, 71.68%)</title><rect x="14.5339%" y="1413" width="71.6771%" height="15" fill="rgb(215,131,9)" fg:x="4761" fg:w="23480"/><text x="14.7839%" y="1423.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (23,480 samples, 71.68%)</title><rect x="14.5339%" y="1397" width="71.6771%" height="15" fill="rgb(233,46,42)" fg:x="4761" fg:w="23480"/><text x="14.7839%" y="1407.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (23,480 samples, 71.68%)</title><rect x="14.5339%" y="1381" width="71.6771%" height="15" fill="rgb(226,86,7)" fg:x="4761" fg:w="23480"/><text x="14.7839%" y="1391.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23,549 samples, 71.89%)</title><rect x="14.3324%" y="1861" width="71.8878%" height="15" fill="rgb(239,226,21)" fg:x="4695" fg:w="23549"/><text x="14.5824%" y="1871.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23,549 samples, 71.89%)</title><rect x="14.3324%" y="1845" width="71.8878%" height="15" fill="rgb(244,137,22)" fg:x="4695" fg:w="23549"/><text x="14.5824%" y="1855.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (23,549 samples, 71.89%)</title><rect x="14.3324%" y="1829" width="71.8878%" height="15" fill="rgb(211,139,35)" fg:x="4695" fg:w="23549"/><text x="14.5824%" y="1839.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (23,549 samples, 71.89%)</title><rect x="14.3324%" y="1813" width="71.8878%" height="15" fill="rgb(214,62,50)" fg:x="4695" fg:w="23549"/><text x="14.5824%" y="1823.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>finish_task_switch.isra.0 (7 samples, 0.02%)</title><rect x="86.2293%" y="1669" width="0.0214%" height="15" fill="rgb(212,113,44)" fg:x="28247" fg:w="7"/><text x="86.4793%" y="1679.50"></text></g><g><title>__GI___clone (23,578 samples, 71.98%)</title><rect x="14.2774%" y="1909" width="71.9763%" height="15" fill="rgb(226,150,43)" fg:x="4677" fg:w="23578"/><text x="14.5274%" y="1919.50">__GI___clone</text></g><g><title>start_thread (23,578 samples, 71.98%)</title><rect x="14.2774%" y="1893" width="71.9763%" height="15" fill="rgb(250,71,37)" fg:x="4677" fg:w="23578"/><text x="14.5274%" y="1903.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (23,560 samples, 71.92%)</title><rect x="14.3324%" y="1877" width="71.9214%" height="15" fill="rgb(219,76,19)" fg:x="4695" fg:w="23560"/><text x="14.5824%" y="1887.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (11 samples, 0.03%)</title><rect x="86.2202%" y="1861" width="0.0336%" height="15" fill="rgb(250,39,11)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1871.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="86.2202%" y="1845" width="0.0336%" height="15" fill="rgb(230,64,31)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1855.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (11 samples, 0.03%)</title><rect x="86.2202%" y="1829" width="0.0336%" height="15" fill="rgb(208,222,23)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1839.50"></text></g><g><title>__GI_munmap (11 samples, 0.03%)</title><rect x="86.2202%" y="1813" width="0.0336%" height="15" fill="rgb(227,125,18)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1823.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.03%)</title><rect x="86.2202%" y="1797" width="0.0336%" height="15" fill="rgb(234,210,9)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1807.50"></text></g><g><title>do_syscall_64 (11 samples, 0.03%)</title><rect x="86.2202%" y="1781" width="0.0336%" height="15" fill="rgb(217,127,24)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1791.50"></text></g><g><title>__x64_sys_munmap (11 samples, 0.03%)</title><rect x="86.2202%" y="1765" width="0.0336%" height="15" fill="rgb(239,141,48)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1775.50"></text></g><g><title>__vm_munmap (11 samples, 0.03%)</title><rect x="86.2202%" y="1749" width="0.0336%" height="15" fill="rgb(227,109,8)" fg:x="28244" fg:w="11"/><text x="86.4702%" y="1759.50"></text></g><g><title>down_write_killable (10 samples, 0.03%)</title><rect x="86.2232%" y="1733" width="0.0305%" height="15" fill="rgb(235,184,23)" fg:x="28245" fg:w="10"/><text x="86.4732%" y="1743.50"></text></g><g><title>rwsem_down_write_slowpath (10 samples, 0.03%)</title><rect x="86.2232%" y="1717" width="0.0305%" height="15" fill="rgb(227,226,48)" fg:x="28245" fg:w="10"/><text x="86.4732%" y="1727.50"></text></g><g><title>schedule (8 samples, 0.02%)</title><rect x="86.2293%" y="1701" width="0.0244%" height="15" fill="rgb(206,150,11)" fg:x="28247" fg:w="8"/><text x="86.4793%" y="1711.50"></text></g><g><title>__schedule (8 samples, 0.02%)</title><rect x="86.2293%" y="1685" width="0.0244%" height="15" fill="rgb(254,2,33)" fg:x="28247" fg:w="8"/><text x="86.4793%" y="1695.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.06%)</title><rect x="86.2721%" y="917" width="0.0641%" height="15" fill="rgb(243,160,20)" fg:x="28261" fg:w="21"/><text x="86.5221%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.20%)</title><rect x="86.9070%" y="885" width="0.2045%" height="15" fill="rgb(218,208,30)" fg:x="28469" fg:w="67"/><text x="87.1570%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.04%)</title><rect x="88.0670%" y="853" width="0.0397%" height="15" fill="rgb(224,120,49)" fg:x="28849" fg:w="13"/><text x="88.3170%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.17%)</title><rect x="88.5799%" y="821" width="0.1679%" height="15" fill="rgb(246,12,2)" fg:x="29017" fg:w="55"/><text x="88.8299%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="90.0085%" y="805" width="0.0366%" height="15" fill="rgb(236,117,3)" fg:x="29485" fg:w="12"/><text x="90.2585%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="90.0085%" y="789" width="0.0366%" height="15" fill="rgb(216,128,52)" fg:x="29485" fg:w="12"/><text x="90.2585%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="90.0452%" y="805" width="0.0275%" height="15" fill="rgb(246,145,19)" fg:x="29497" fg:w="9"/><text x="90.2952%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="90.0757%" y="805" width="0.0275%" height="15" fill="rgb(222,11,46)" fg:x="29507" fg:w="9"/><text x="90.3257%" y="815.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="90.1032%" y="805" width="0.0153%" height="15" fill="rgb(245,82,36)" fg:x="29516" fg:w="5"/><text x="90.3532%" y="815.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.02%)</title><rect x="90.1032%" y="789" width="0.0153%" height="15" fill="rgb(250,73,51)" fg:x="29516" fg:w="5"/><text x="90.3532%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (24 samples, 0.07%)</title><rect x="90.1184%" y="805" width="0.0733%" height="15" fill="rgb(221,189,23)" fg:x="29521" fg:w="24"/><text x="90.3684%" y="815.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.02%)</title><rect x="90.2100%" y="789" width="0.0153%" height="15" fill="rgb(210,33,7)" fg:x="29551" fg:w="5"/><text x="90.4600%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="90.2100%" y="773" width="0.0153%" height="15" fill="rgb(210,107,22)" fg:x="29551" fg:w="5"/><text x="90.4600%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="90.2100%" y="757" width="0.0153%" height="15" fill="rgb(222,116,37)" fg:x="29551" fg:w="5"/><text x="90.4600%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (13 samples, 0.04%)</title><rect x="90.1917%" y="805" width="0.0397%" height="15" fill="rgb(254,17,48)" fg:x="29545" fg:w="13"/><text x="90.4417%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn scylla::transport::retry_policy::RetrySession&gt;&gt; (9 samples, 0.03%)</title><rect x="90.2314%" y="805" width="0.0275%" height="15" fill="rgb(224,36,32)" fg:x="29558" fg:w="9"/><text x="90.4814%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&amp;tokio::sync::oneshot::Sender&lt;core::result::Result&lt;(),scylla::transport::errors::QueryError&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="90.2314%" y="789" width="0.0275%" height="15" fill="rgb(232,90,46)" fg:x="29558" fg:w="9"/><text x="90.4814%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (49 samples, 0.15%)</title><rect x="90.2589%" y="805" width="0.1496%" height="15" fill="rgb(241,66,40)" fg:x="29567" fg:w="49"/><text x="90.5089%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.15%)</title><rect x="90.2589%" y="789" width="0.1496%" height="15" fill="rgb(249,184,29)" fg:x="29567" fg:w="49"/><text x="90.5089%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;scylla::transport::errors::QueryError&gt;&gt; (118 samples, 0.36%)</title><rect x="90.4146%" y="805" width="0.3602%" height="15" fill="rgb(231,181,1)" fg:x="29618" fg:w="118"/><text x="90.6646%" y="815.50"></text></g><g><title>scylla::transport::metrics::Metrics::inc_total_nonpaged_queries (37 samples, 0.11%)</title><rect x="90.7870%" y="805" width="0.1129%" height="15" fill="rgb(224,94,2)" fg:x="29740" fg:w="37"/><text x="91.0370%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (769 samples, 2.35%)</title><rect x="88.5799%" y="837" width="2.3475%" height="15" fill="rgb(229,170,15)" fg:x="29017" fg:w="769"/><text x="88.8299%" y="847.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (714 samples, 2.18%)</title><rect x="88.7478%" y="821" width="2.1796%" height="15" fill="rgb(240,127,35)" fg:x="29072" fg:w="714"/><text x="88.9978%" y="831.50">s..</text></g><g><title>std::time::Instant::now (5 samples, 0.02%)</title><rect x="90.9121%" y="805" width="0.0153%" height="15" fill="rgb(248,196,34)" fg:x="29781" fg:w="5"/><text x="91.1621%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.02%)</title><rect x="90.9121%" y="789" width="0.0153%" height="15" fill="rgb(236,137,7)" fg:x="29781" fg:w="5"/><text x="91.1621%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.02%)</title><rect x="90.9121%" y="773" width="0.0153%" height="15" fill="rgb(235,127,16)" fg:x="29781" fg:w="5"/><text x="91.1621%" y="783.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (5 samples, 0.02%)</title><rect x="90.9274%" y="837" width="0.0153%" height="15" fill="rgb(250,192,54)" fg:x="29786" fg:w="5"/><text x="91.1774%" y="847.50"></text></g><g><title>&lt;scylla::transport::retry_policy::DefaultRetryPolicy as scylla::transport::retry_policy::RetryPolicy&gt;::new_session (13 samples, 0.04%)</title><rect x="90.9427%" y="837" width="0.0397%" height="15" fill="rgb(218,98,20)" fg:x="29791" fg:w="13"/><text x="91.1927%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="90.9610%" y="821" width="0.0214%" height="15" fill="rgb(230,176,47)" fg:x="29797" fg:w="7"/><text x="91.2110%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="90.9610%" y="805" width="0.0214%" height="15" fill="rgb(244,2,33)" fg:x="29797" fg:w="7"/><text x="91.2110%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="90.9610%" y="789" width="0.0214%" height="15" fill="rgb(231,100,17)" fg:x="29797" fg:w="7"/><text x="91.2110%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="90.9610%" y="773" width="0.0214%" height="15" fill="rgb(245,23,12)" fg:x="29797" fg:w="7"/><text x="91.2110%" y="783.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="90.9610%" y="757" width="0.0214%" height="15" fill="rgb(249,55,22)" fg:x="29797" fg:w="7"/><text x="91.2110%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (19 samples, 0.06%)</title><rect x="90.9885%" y="837" width="0.0580%" height="15" fill="rgb(207,134,9)" fg:x="29806" fg:w="19"/><text x="91.2385%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;scylla::transport::connection::QueryResponse,scylla::transport::errors::QueryError&gt;&gt; (10 samples, 0.03%)</title><rect x="91.0159%" y="821" width="0.0305%" height="15" fill="rgb(218,134,0)" fg:x="29815" fg:w="10"/><text x="91.2659%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::transport::errors::QueryError&gt; (10 samples, 0.03%)</title><rect x="91.0159%" y="805" width="0.0305%" height="15" fill="rgb(213,212,33)" fg:x="29815" fg:w="10"/><text x="91.2659%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::cluster::ClusterData&gt;&gt; (47 samples, 0.14%)</title><rect x="91.0465%" y="837" width="0.1435%" height="15" fill="rgb(252,106,18)" fg:x="29825" fg:w="47"/><text x="91.2965%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.14%)</title><rect x="91.0465%" y="821" width="0.1435%" height="15" fill="rgb(208,126,42)" fg:x="29825" fg:w="47"/><text x="91.2965%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;,&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}},&amp;scylla::transport::session::Session::execute_paged&lt;alloc::vec::Vec&lt;i64&gt;&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt;&gt; (8 samples, 0.02%)</title><rect x="91.1899%" y="837" width="0.0244%" height="15" fill="rgb(246,175,29)" fg:x="29872" fg:w="8"/><text x="91.4399%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,061 samples, 3.24%)</title><rect x="88.0151%" y="869" width="3.2389%" height="15" fill="rgb(215,13,50)" fg:x="28832" fg:w="1061"/><text x="88.2651%" y="879.50">&lt;co..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (1,031 samples, 3.15%)</title><rect x="88.1067%" y="853" width="3.1473%" height="15" fill="rgb(216,172,15)" fg:x="28862" fg:w="1031"/><text x="88.3567%" y="863.50">scy..</text></g><g><title>scylla::transport::cluster::Cluster::get_data (13 samples, 0.04%)</title><rect x="91.2144%" y="837" width="0.0397%" height="15" fill="rgb(212,103,13)" fg:x="29880" fg:w="13"/><text x="91.4644%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (108 samples, 0.33%)</title><rect x="91.2540%" y="869" width="0.3297%" height="15" fill="rgb(231,171,36)" fg:x="29893" fg:w="108"/><text x="91.5040%" y="879.50"></text></g><g><title>&lt;scylla::frame::value::SerializedValues as scylla::frame::value::ValueList&gt;::serialized (7 samples, 0.02%)</title><rect x="91.5837%" y="869" width="0.0214%" height="15" fill="rgb(250,123,20)" fg:x="30001" fg:w="7"/><text x="91.8337%" y="879.50"></text></g><g><title>__memmove_avx_unaligned_erms (70 samples, 0.21%)</title><rect x="91.6143%" y="869" width="0.2137%" height="15" fill="rgb(212,53,50)" fg:x="30011" fg:w="70"/><text x="91.8643%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt; (154 samples, 0.47%)</title><rect x="91.8310%" y="869" width="0.4701%" height="15" fill="rgb(243,54,12)" fg:x="30082" fg:w="154"/><text x="92.0810%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::run_query&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}::{{closure}}&gt;,scylla::transport::connection::QueryResponse,scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}},scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}::{{closure}}&gt;::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="92.3042%" y="869" width="0.0122%" height="15" fill="rgb(234,101,34)" fg:x="30237" fg:w="4"/><text x="92.5542%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="92.3194%" y="805" width="0.0122%" height="15" fill="rgb(254,67,22)" fg:x="30242" fg:w="4"/><text x="92.5694%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="92.3194%" y="789" width="0.0122%" height="15" fill="rgb(250,35,47)" fg:x="30242" fg:w="4"/><text x="92.5694%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::value::SerializedValues&gt; (7 samples, 0.02%)</title><rect x="92.3164%" y="869" width="0.0214%" height="15" fill="rgb(226,126,38)" fg:x="30241" fg:w="7"/><text x="92.5664%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="92.3164%" y="853" width="0.0214%" height="15" fill="rgb(216,138,53)" fg:x="30241" fg:w="7"/><text x="92.5664%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="92.3164%" y="837" width="0.0214%" height="15" fill="rgb(246,199,43)" fg:x="30241" fg:w="7"/><text x="92.5664%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="92.3164%" y="821" width="0.0214%" height="15" fill="rgb(232,125,11)" fg:x="30241" fg:w="7"/><text x="92.5664%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.04%)</title><rect x="92.3377%" y="853" width="0.0427%" height="15" fill="rgb(218,219,45)" fg:x="30248" fg:w="14"/><text x="92.5877%" y="863.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_keyspace_name::{{closure}} (5 samples, 0.02%)</title><rect x="92.3652%" y="837" width="0.0153%" height="15" fill="rgb(216,102,54)" fg:x="30257" fg:w="5"/><text x="92.6152%" y="847.50"></text></g><g><title>alloc::string::String::as_str (5 samples, 0.02%)</title><rect x="92.3652%" y="821" width="0.0153%" height="15" fill="rgb(250,228,7)" fg:x="30257" fg:w="5"/><text x="92.6152%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="92.3652%" y="805" width="0.0153%" height="15" fill="rgb(226,125,25)" fg:x="30257" fg:w="5"/><text x="92.6152%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="92.3652%" y="789" width="0.0153%" height="15" fill="rgb(224,165,27)" fg:x="30257" fg:w="5"/><text x="92.6152%" y="799.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::get_keyspace_name (16 samples, 0.05%)</title><rect x="92.3377%" y="869" width="0.0488%" height="15" fill="rgb(233,86,3)" fg:x="30248" fg:w="16"/><text x="92.5877%" y="879.50"></text></g><g><title>scylla::transport::connection::QueryResponse::into_query_result (7 samples, 0.02%)</title><rect x="92.3866%" y="869" width="0.0214%" height="15" fill="rgb(228,116,20)" fg:x="30264" fg:w="7"/><text x="92.6366%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,814 samples, 5.54%)</title><rect x="86.8826%" y="901" width="5.5376%" height="15" fill="rgb(209,192,17)" fg:x="28461" fg:w="1814"/><text x="87.1326%" y="911.50">&lt;core::..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (1,739 samples, 5.31%)</title><rect x="87.1115%" y="885" width="5.3086%" height="15" fill="rgb(224,88,34)" fg:x="28536" fg:w="1739"/><text x="87.3615%" y="895.50">scylla..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1909" width="6.1664%" height="15" fill="rgb(233,38,6)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1919.50">core::op..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1893" width="6.1664%" height="15" fill="rgb(212,59,30)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1903.50">std::thr..</text></g><g><title>std::panic::catch_unwind (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1877" width="6.1664%" height="15" fill="rgb(213,80,3)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1887.50">std::pan..</text></g><g><title>std::panicking::try (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1861" width="6.1664%" height="15" fill="rgb(251,178,7)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1871.50">std::pan..</text></g><g><title>std::panicking::try::do_call (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1845" width="6.1664%" height="15" fill="rgb(213,154,26)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1855.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1829" width="6.1664%" height="15" fill="rgb(238,165,49)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1839.50">&lt;core::p..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1813" width="6.1664%" height="15" fill="rgb(248,91,46)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1823.50">std::thr..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1797" width="6.1664%" height="15" fill="rgb(244,21,52)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1807.50">std::sys..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1781" width="6.1664%" height="15" fill="rgb(247,122,20)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1791.50">tokio::r..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1765" width="6.1664%" height="15" fill="rgb(218,27,9)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1775.50">tokio::r..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1749" width="6.1664%" height="15" fill="rgb(246,7,6)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1759.50">tokio::r..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1733" width="6.1664%" height="15" fill="rgb(227,135,54)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1743.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1717" width="6.1664%" height="15" fill="rgb(247,14,11)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1727.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1701" width="6.1664%" height="15" fill="rgb(206,149,34)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1711.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::poll_future (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1685" width="6.1664%" height="15" fill="rgb(227,228,4)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1695.50">tokio::r..</text></g><g><title>std::panic::catch_unwind (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1669" width="6.1664%" height="15" fill="rgb(238,218,28)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1679.50">std::pan..</text></g><g><title>std::panicking::try (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1653" width="6.1664%" height="15" fill="rgb(252,86,40)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1663.50">std::pan..</text></g><g><title>std::panicking::try::do_call (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1637" width="6.1664%" height="15" fill="rgb(251,225,11)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1647.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1621" width="6.1664%" height="15" fill="rgb(206,46,49)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1631.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1605" width="6.1664%" height="15" fill="rgb(245,128,24)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1615.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1589" width="6.1664%" height="15" fill="rgb(219,177,34)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1599.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1573" width="6.1664%" height="15" fill="rgb(218,60,48)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1583.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1557" width="6.1664%" height="15" fill="rgb(221,11,5)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1567.50">tokio::r..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1541" width="6.1664%" height="15" fill="rgb(220,148,13)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1551.50">&lt;tokio::..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1525" width="6.1664%" height="15" fill="rgb(210,16,3)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1535.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::worker::run (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1509" width="6.1664%" height="15" fill="rgb(236,80,2)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1519.50">tokio::r..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1493" width="6.1664%" height="15" fill="rgb(239,129,19)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1503.50">tokio::m..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1477" width="6.1664%" height="15" fill="rgb(220,106,35)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1487.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1461" width="6.1664%" height="15" fill="rgb(252,139,45)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1471.50">tokio::r..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1445" width="6.1664%" height="15" fill="rgb(229,8,36)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1455.50">tokio::r..</text></g><g><title>tokio::coop::budget (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1429" width="6.1664%" height="15" fill="rgb(230,126,33)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1439.50">tokio::c..</text></g><g><title>tokio::coop::with_budget (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1413" width="6.1664%" height="15" fill="rgb(239,140,21)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1423.50">tokio::c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1397" width="6.1664%" height="15" fill="rgb(254,104,9)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1407.50">std::thr..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1381" width="6.1664%" height="15" fill="rgb(239,52,14)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1391.50">std::thr..</text></g><g><title>tokio::coop::with_budget::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1365" width="6.1664%" height="15" fill="rgb(208,227,44)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1375.50">tokio::c..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1349" width="6.1664%" height="15" fill="rgb(246,18,19)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1359.50">tokio::r..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1333" width="6.1664%" height="15" fill="rgb(235,228,25)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1343.50">tokio::r..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1317" width="6.1664%" height="15" fill="rgb(240,156,20)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1327.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1301" width="6.1664%" height="15" fill="rgb(224,8,20)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1311.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1285" width="6.1664%" height="15" fill="rgb(214,12,52)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1295.50">tokio::r..</text></g><g><title>tokio::runtime::task::harness::poll_future (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1269" width="6.1664%" height="15" fill="rgb(211,220,47)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1279.50">tokio::r..</text></g><g><title>std::panic::catch_unwind (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1253" width="6.1664%" height="15" fill="rgb(250,173,5)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1263.50">std::pan..</text></g><g><title>std::panicking::try (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1237" width="6.1664%" height="15" fill="rgb(250,125,52)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1247.50">std::pan..</text></g><g><title>std::panicking::try::do_call (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1221" width="6.1664%" height="15" fill="rgb(209,133,18)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1231.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1205" width="6.1664%" height="15" fill="rgb(216,173,22)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1215.50">&lt;core::p..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1189" width="6.1664%" height="15" fill="rgb(205,3,22)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1199.50">tokio::r..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1173" width="6.1664%" height="15" fill="rgb(248,22,20)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1183.50">tokio::r..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1157" width="6.1664%" height="15" fill="rgb(233,6,29)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1167.50">tokio::l..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1141" width="6.1664%" height="15" fill="rgb(240,22,54)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1151.50">tokio::r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1125" width="6.1664%" height="15" fill="rgb(231,133,32)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1135.50">&lt;core::f..</text></g><g><title>latte::req_stream::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1109" width="6.1664%" height="15" fill="rgb(248,193,4)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1119.50">latte::r..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1093" width="6.1664%" height="15" fill="rgb(211,178,46)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1103.50">&lt;futures..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1077" width="6.1664%" height="15" fill="rgb(224,5,42)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1087.50">futures_..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1061" width="6.1664%" height="15" fill="rgb(239,176,25)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1071.50">&lt;futures..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1045" width="6.1664%" height="15" fill="rgb(245,187,50)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1055.50">futures_..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1029" width="6.1664%" height="15" fill="rgb(248,24,15)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1039.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="1013" width="6.1664%" height="15" fill="rgb(205,166,13)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1023.50">&lt;core::f..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="997" width="6.1664%" height="15" fill="rgb(208,114,23)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="1007.50">latte::r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="981" width="6.1664%" height="15" fill="rgb(239,127,18)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="991.50">&lt;core::p..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="965" width="6.1664%" height="15" fill="rgb(219,154,28)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="975.50">&lt;core::f..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (2,020 samples, 6.17%)</title><rect x="86.2629%" y="949" width="6.1664%" height="15" fill="rgb(225,157,23)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="959.50">&lt;latte::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,020 samples, 6.17%)</title><rect x="86.2629%" y="933" width="6.1664%" height="15" fill="rgb(219,8,6)" fg:x="28258" fg:w="2020"/><text x="86.5129%" y="943.50">&lt;core::f..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (1,996 samples, 6.09%)</title><rect x="86.3362%" y="917" width="6.0932%" height="15" fill="rgb(212,47,6)" fg:x="28282" fg:w="1996"/><text x="86.5862%" y="927.50">scylla::..</text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="92.4293%" y="1909" width="0.0153%" height="15" fill="rgb(224,190,4)" fg:x="30278" fg:w="5"/><text x="92.6793%" y="1919.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (14 samples, 0.04%)</title><rect x="92.4446%" y="1909" width="0.0427%" height="15" fill="rgb(239,183,29)" fg:x="30283" fg:w="14"/><text x="92.6946%" y="1919.50"></text></g><g><title>_int_free (25 samples, 0.08%)</title><rect x="92.7773%" y="901" width="0.0763%" height="15" fill="rgb(213,57,7)" fg:x="30392" fg:w="25"/><text x="93.0273%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 0.35%)</title><rect x="92.5056%" y="933" width="0.3511%" height="15" fill="rgb(216,148,1)" fg:x="30303" fg:w="115"/><text x="92.7556%" y="943.50"></text></g><g><title>__GI___libc_free (115 samples, 0.35%)</title><rect x="92.5056%" y="917" width="0.3511%" height="15" fill="rgb(236,182,29)" fg:x="30303" fg:w="115"/><text x="92.7556%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="92.8567%" y="917" width="0.0153%" height="15" fill="rgb(244,120,48)" fg:x="30418" fg:w="5"/><text x="93.1067%" y="927.50"></text></g><g><title>__GI___libc_free (117 samples, 0.36%)</title><rect x="92.8720%" y="901" width="0.3572%" height="15" fill="rgb(206,71,34)" fg:x="30423" fg:w="117"/><text x="93.1220%" y="911.50"></text></g><g><title>_int_free (33 samples, 0.10%)</title><rect x="93.1284%" y="885" width="0.1007%" height="15" fill="rgb(242,32,6)" fg:x="30507" fg:w="33"/><text x="93.3784%" y="895.50"></text></g><g><title>alloc::alloc::box_free (71 samples, 0.22%)</title><rect x="93.2291%" y="901" width="0.2167%" height="15" fill="rgb(241,35,3)" fg:x="30540" fg:w="71"/><text x="93.4791%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71 samples, 0.22%)</title><rect x="93.2291%" y="885" width="0.2167%" height="15" fill="rgb(222,62,19)" fg:x="30540" fg:w="71"/><text x="93.4791%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (71 samples, 0.22%)</title><rect x="93.2291%" y="869" width="0.2167%" height="15" fill="rgb(223,110,41)" fg:x="30540" fg:w="71"/><text x="93.4791%" y="879.50"></text></g><g><title>__GI___libc_free (71 samples, 0.22%)</title><rect x="93.2291%" y="853" width="0.2167%" height="15" fill="rgb(208,224,4)" fg:x="30540" fg:w="71"/><text x="93.4791%" y="863.50"></text></g><g><title>_int_free (54 samples, 0.16%)</title><rect x="93.2810%" y="837" width="0.1648%" height="15" fill="rgb(241,137,19)" fg:x="30557" fg:w="54"/><text x="93.5310%" y="847.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (80 samples, 0.24%)</title><rect x="93.4459%" y="869" width="0.2442%" height="15" fill="rgb(244,24,17)" fg:x="30611" fg:w="80"/><text x="93.6959%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::iter::traits::iterator::Iterator+Item = alloc::sync::Arc&lt;scylla::transport::node::Node&gt;+core::marker::Send+core::marker::Sync&gt;&gt; (274 samples, 0.84%)</title><rect x="92.8720%" y="917" width="0.8364%" height="15" fill="rgb(245,178,49)" fg:x="30423" fg:w="274"/><text x="93.1220%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt; (86 samples, 0.26%)</title><rect x="93.4459%" y="901" width="0.2625%" height="15" fill="rgb(219,160,38)" fg:x="30611" fg:w="86"/><text x="93.6959%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.26%)</title><rect x="93.4459%" y="885" width="0.2625%" height="15" fill="rgb(228,137,14)" fg:x="30611" fg:w="86"/><text x="93.6959%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,alloc::alloc::Global&gt;&gt; (6 samples, 0.02%)</title><rect x="93.6901%" y="869" width="0.0183%" height="15" fill="rgb(237,134,11)" fg:x="30691" fg:w="6"/><text x="93.9401%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="93.6901%" y="853" width="0.0183%" height="15" fill="rgb(211,126,44)" fg:x="30691" fg:w="6"/><text x="93.9401%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="93.6901%" y="837" width="0.0183%" height="15" fill="rgb(226,171,33)" fg:x="30691" fg:w="6"/><text x="93.9401%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="93.6901%" y="821" width="0.0183%" height="15" fill="rgb(253,99,13)" fg:x="30691" fg:w="6"/><text x="93.9401%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.02%)</title><rect x="93.6901%" y="805" width="0.0183%" height="15" fill="rgb(244,48,7)" fg:x="30691" fg:w="6"/><text x="93.9401%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (9 samples, 0.03%)</title><rect x="93.7267%" y="901" width="0.0275%" height="15" fill="rgb(244,217,54)" fg:x="30703" fg:w="9"/><text x="93.9767%" y="911.50"></text></g><g><title>histogram::Histogram::increment (17 samples, 0.05%)</title><rect x="93.7573%" y="885" width="0.0519%" height="15" fill="rgb(224,15,18)" fg:x="30713" fg:w="17"/><text x="94.0073%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (6 samples, 0.02%)</title><rect x="93.8214%" y="869" width="0.0183%" height="15" fill="rgb(244,99,12)" fg:x="30734" fg:w="6"/><text x="94.0714%" y="879.50"></text></g><g><title>histogram::Histogram::increment (31 samples, 0.09%)</title><rect x="93.7542%" y="901" width="0.0946%" height="15" fill="rgb(233,226,8)" fg:x="30712" fg:w="31"/><text x="94.0042%" y="911.50"></text></g><g><title>histogram::Histogram::increment_by (13 samples, 0.04%)</title><rect x="93.8091%" y="885" width="0.0397%" height="15" fill="rgb(229,211,3)" fg:x="30730" fg:w="13"/><text x="94.0591%" y="895.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="93.8580%" y="885" width="0.0122%" height="15" fill="rgb(216,140,21)" fg:x="30746" fg:w="4"/><text x="94.1080%" y="895.50"></text></g><g><title>std::sync::poison::Flag::borrow (4 samples, 0.01%)</title><rect x="93.8580%" y="869" width="0.0122%" height="15" fill="rgb(234,122,30)" fg:x="30746" fg:w="4"/><text x="94.1080%" y="879.50"></text></g><g><title>std::thread::panicking (4 samples, 0.01%)</title><rect x="93.8580%" y="853" width="0.0122%" height="15" fill="rgb(236,25,46)" fg:x="30746" fg:w="4"/><text x="94.1080%" y="863.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.01%)</title><rect x="93.8580%" y="837" width="0.0122%" height="15" fill="rgb(217,52,54)" fg:x="30746" fg:w="4"/><text x="94.1080%" y="847.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.01%)</title><rect x="93.8580%" y="821" width="0.0122%" height="15" fill="rgb(222,29,26)" fg:x="30746" fg:w="4"/><text x="94.1080%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (35 samples, 0.11%)</title><rect x="93.9618%" y="853" width="0.1068%" height="15" fill="rgb(216,177,29)" fg:x="30780" fg:w="35"/><text x="94.2118%" y="863.50"></text></g><g><title>scylla::transport::metrics::Metrics::log_query_latency (119 samples, 0.36%)</title><rect x="93.7084%" y="917" width="0.3633%" height="15" fill="rgb(247,136,51)" fg:x="30697" fg:w="119"/><text x="93.9584%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (70 samples, 0.21%)</title><rect x="93.8580%" y="901" width="0.2137%" height="15" fill="rgb(231,47,47)" fg:x="30746" fg:w="70"/><text x="94.1080%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.20%)</title><rect x="93.8702%" y="885" width="0.2015%" height="15" fill="rgb(211,192,36)" fg:x="30750" fg:w="66"/><text x="94.1202%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (41 samples, 0.13%)</title><rect x="93.9465%" y="869" width="0.1252%" height="15" fill="rgb(229,156,32)" fg:x="30775" fg:w="41"/><text x="94.1965%" y="879.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (14 samples, 0.04%)</title><rect x="94.1053%" y="901" width="0.0427%" height="15" fill="rgb(248,213,20)" fg:x="30827" fg:w="14"/><text x="94.3553%" y="911.50"></text></g><g><title>std::time::Instant::duration_since (14 samples, 0.04%)</title><rect x="94.1053%" y="885" width="0.0427%" height="15" fill="rgb(217,64,7)" fg:x="30827" fg:w="14"/><text x="94.3553%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (14 samples, 0.04%)</title><rect x="94.1053%" y="869" width="0.0427%" height="15" fill="rgb(232,142,8)" fg:x="30827" fg:w="14"/><text x="94.3553%" y="879.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (13 samples, 0.04%)</title><rect x="94.1083%" y="853" width="0.0397%" height="15" fill="rgb(224,92,44)" fg:x="30828" fg:w="13"/><text x="94.3583%" y="863.50"></text></g><g><title>std::time::Instant::elapsed (76 samples, 0.23%)</title><rect x="94.0717%" y="917" width="0.2320%" height="15" fill="rgb(214,169,17)" fg:x="30816" fg:w="76"/><text x="94.3217%" y="927.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.16%)</title><rect x="94.1480%" y="901" width="0.1557%" height="15" fill="rgb(210,59,37)" fg:x="30841" fg:w="51"/><text x="94.3980%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (51 samples, 0.16%)</title><rect x="94.1480%" y="885" width="0.1557%" height="15" fill="rgb(214,116,48)" fg:x="30841" fg:w="51"/><text x="94.3980%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::now (51 samples, 0.16%)</title><rect x="94.1480%" y="869" width="0.1557%" height="15" fill="rgb(244,191,6)" fg:x="30841" fg:w="51"/><text x="94.3980%" y="879.50"></text></g><g><title>__clock_gettime_2 (50 samples, 0.15%)</title><rect x="94.1510%" y="853" width="0.1526%" height="15" fill="rgb(241,50,52)" fg:x="30842" fg:w="50"/><text x="94.4010%" y="863.50"></text></g><g><title>__vdso_clock_gettime (49 samples, 0.15%)</title><rect x="94.1541%" y="837" width="0.1496%" height="15" fill="rgb(236,75,39)" fg:x="30843" fg:w="49"/><text x="94.4041%" y="847.50"></text></g><g><title>[[vdso]] (45 samples, 0.14%)</title><rect x="94.1663%" y="821" width="0.1374%" height="15" fill="rgb(236,99,0)" fg:x="30847" fg:w="45"/><text x="94.4163%" y="831.50"></text></g><g><title>__clock_gettime_2 (40 samples, 0.12%)</title><rect x="94.3159%" y="869" width="0.1221%" height="15" fill="rgb(207,202,15)" fg:x="30896" fg:w="40"/><text x="94.5659%" y="879.50"></text></g><g><title>__vdso_clock_gettime (40 samples, 0.12%)</title><rect x="94.3159%" y="853" width="0.1221%" height="15" fill="rgb(233,207,14)" fg:x="30896" fg:w="40"/><text x="94.5659%" y="863.50"></text></g><g><title>[[vdso]] (27 samples, 0.08%)</title><rect x="94.3556%" y="837" width="0.0824%" height="15" fill="rgb(226,27,51)" fg:x="30909" fg:w="27"/><text x="94.6056%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (634 samples, 1.94%)</title><rect x="92.5056%" y="949" width="1.9354%" height="15" fill="rgb(206,104,42)" fg:x="30303" fg:w="634"/><text x="92.7556%" y="959.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (519 samples, 1.58%)</title><rect x="92.8567%" y="933" width="1.5843%" height="15" fill="rgb(212,225,4)" fg:x="30418" fg:w="519"/><text x="93.1067%" y="943.50"></text></g><g><title>std::time::Instant::now (45 samples, 0.14%)</title><rect x="94.3037%" y="917" width="0.1374%" height="15" fill="rgb(233,96,42)" fg:x="30892" fg:w="45"/><text x="94.5537%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (43 samples, 0.13%)</title><rect x="94.3098%" y="901" width="0.1313%" height="15" fill="rgb(229,21,32)" fg:x="30894" fg:w="43"/><text x="94.5598%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::now (43 samples, 0.13%)</title><rect x="94.3098%" y="885" width="0.1313%" height="15" fill="rgb(226,216,24)" fg:x="30894" fg:w="43"/><text x="94.5598%" y="895.50"></text></g><g><title>&lt;scylla::transport::retry_policy::DefaultRetryPolicy as scylla::transport::retry_policy::RetryPolicy&gt;::new_session (19 samples, 0.06%)</title><rect x="94.4411%" y="949" width="0.0580%" height="15" fill="rgb(221,163,17)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.06%)</title><rect x="94.4411%" y="933" width="0.0580%" height="15" fill="rgb(216,216,42)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (19 samples, 0.06%)</title><rect x="94.4411%" y="917" width="0.0580%" height="15" fill="rgb(240,118,7)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.06%)</title><rect x="94.4411%" y="901" width="0.0580%" height="15" fill="rgb(221,67,37)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.06%)</title><rect x="94.4411%" y="885" width="0.0580%" height="15" fill="rgb(241,32,44)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="895.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.06%)</title><rect x="94.4411%" y="869" width="0.0580%" height="15" fill="rgb(235,204,43)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="879.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.06%)</title><rect x="94.4411%" y="853" width="0.0580%" height="15" fill="rgb(213,116,10)" fg:x="30937" fg:w="19"/><text x="94.6911%" y="863.50"></text></g><g><title>_int_malloc (5 samples, 0.02%)</title><rect x="94.4838%" y="837" width="0.0153%" height="15" fill="rgb(239,15,48)" fg:x="30951" fg:w="5"/><text x="94.7338%" y="847.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (10 samples, 0.03%)</title><rect x="94.5113%" y="853" width="0.0305%" height="15" fill="rgb(207,123,36)" fg:x="30960" fg:w="10"/><text x="94.7613%" y="863.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (13 samples, 0.04%)</title><rect x="94.5052%" y="885" width="0.0397%" height="15" fill="rgb(209,103,30)" fg:x="30958" fg:w="13"/><text x="94.7552%" y="895.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (11 samples, 0.03%)</title><rect x="94.5113%" y="869" width="0.0336%" height="15" fill="rgb(238,100,19)" fg:x="30960" fg:w="11"/><text x="94.7613%" y="879.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (18 samples, 0.05%)</title><rect x="94.5052%" y="917" width="0.0549%" height="15" fill="rgb(244,30,14)" fg:x="30958" fg:w="18"/><text x="94.7552%" y="927.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (18 samples, 0.05%)</title><rect x="94.5052%" y="901" width="0.0549%" height="15" fill="rgb(249,174,6)" fg:x="30958" fg:w="18"/><text x="94.7552%" y="911.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (5 samples, 0.02%)</title><rect x="94.5448%" y="885" width="0.0153%" height="15" fill="rgb(235,213,41)" fg:x="30971" fg:w="5"/><text x="94.7948%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="94.5448%" y="869" width="0.0153%" height="15" fill="rgb(213,118,6)" fg:x="30971" fg:w="5"/><text x="94.7948%" y="879.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (36 samples, 0.11%)</title><rect x="94.6212%" y="885" width="0.1099%" height="15" fill="rgb(235,44,51)" fg:x="30996" fg:w="36"/><text x="94.8712%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.11%)</title><rect x="94.6212%" y="869" width="0.1099%" height="15" fill="rgb(217,9,53)" fg:x="30996" fg:w="36"/><text x="94.8712%" y="879.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (75 samples, 0.23%)</title><rect x="94.5052%" y="933" width="0.2290%" height="15" fill="rgb(237,172,34)" fg:x="30958" fg:w="75"/><text x="94.7552%" y="943.50"></text></g><g><title>arc_swap::Guard&lt;T,S&gt;::into_inner (57 samples, 0.17%)</title><rect x="94.5601%" y="917" width="0.1740%" height="15" fill="rgb(206,206,11)" fg:x="30976" fg:w="57"/><text x="94.8101%" y="927.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as arc_swap::strategy::sealed::Protected&lt;T&gt;&gt;::into_inner (57 samples, 0.17%)</title><rect x="94.5601%" y="901" width="0.1740%" height="15" fill="rgb(214,149,29)" fg:x="30976" fg:w="57"/><text x="94.8101%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (734 samples, 2.24%)</title><rect x="92.5056%" y="981" width="2.2407%" height="15" fill="rgb(208,123,3)" fg:x="30303" fg:w="734"/><text x="92.7556%" y="991.50">&lt;..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (734 samples, 2.24%)</title><rect x="92.5056%" y="965" width="2.2407%" height="15" fill="rgb(229,126,4)" fg:x="30303" fg:w="734"/><text x="92.7556%" y="975.50">s..</text></g><g><title>scylla::transport::cluster::Cluster::get_data (81 samples, 0.25%)</title><rect x="94.4991%" y="949" width="0.2473%" height="15" fill="rgb(222,92,36)" fg:x="30956" fg:w="81"/><text x="94.7491%" y="959.50"></text></g><g><title>scylla::transport::cluster::Cluster::get_data (4 samples, 0.01%)</title><rect x="94.7341%" y="933" width="0.0122%" height="15" fill="rgb(216,39,41)" fg:x="31033" fg:w="4"/><text x="94.9841%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::value::SerializedValues&gt; (94 samples, 0.29%)</title><rect x="94.7463%" y="981" width="0.2870%" height="15" fill="rgb(253,127,28)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (94 samples, 0.29%)</title><rect x="94.7463%" y="965" width="0.2870%" height="15" fill="rgb(249,152,51)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (94 samples, 0.29%)</title><rect x="94.7463%" y="949" width="0.2870%" height="15" fill="rgb(209,123,42)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.29%)</title><rect x="94.7463%" y="933" width="0.2870%" height="15" fill="rgb(241,118,22)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (94 samples, 0.29%)</title><rect x="94.7463%" y="917" width="0.2870%" height="15" fill="rgb(208,25,7)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (94 samples, 0.29%)</title><rect x="94.7463%" y="901" width="0.2870%" height="15" fill="rgb(243,144,39)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="911.50"></text></g><g><title>__GI___libc_free (94 samples, 0.29%)</title><rect x="94.7463%" y="885" width="0.2870%" height="15" fill="rgb(250,50,5)" fg:x="31037" fg:w="94"/><text x="94.9963%" y="895.50"></text></g><g><title>_int_free (66 samples, 0.20%)</title><rect x="94.8318%" y="869" width="0.2015%" height="15" fill="rgb(207,67,11)" fg:x="31065" fg:w="66"/><text x="95.0818%" y="879.50"></text></g><g><title>scylla::transport::connection::QueryResponse::into_query_result (23 samples, 0.07%)</title><rect x="95.0333%" y="981" width="0.0702%" height="15" fill="rgb(245,204,40)" fg:x="31131" fg:w="23"/><text x="95.2833%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;scylla::frame::response::result::Result&gt; (8 samples, 0.02%)</title><rect x="95.0791%" y="965" width="0.0244%" height="15" fill="rgb(238,228,24)" fg:x="31146" fg:w="8"/><text x="95.3291%" y="975.50"></text></g><g><title>__GI___libc_free (14 samples, 0.04%)</title><rect x="95.1340%" y="917" width="0.0427%" height="15" fill="rgb(217,116,22)" fg:x="31164" fg:w="14"/><text x="95.3840%" y="927.50"></text></g><g><title>_int_free (4 samples, 0.01%)</title><rect x="95.1645%" y="901" width="0.0122%" height="15" fill="rgb(234,98,12)" fg:x="31174" fg:w="4"/><text x="95.4145%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (22 samples, 0.07%)</title><rect x="95.1340%" y="949" width="0.0672%" height="15" fill="rgb(242,170,50)" fg:x="31164" fg:w="22"/><text x="95.3840%" y="959.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (22 samples, 0.07%)</title><rect x="95.1340%" y="933" width="0.0672%" height="15" fill="rgb(235,7,5)" fg:x="31164" fg:w="22"/><text x="95.3840%" y="943.50"></text></g><g><title>bytes::bytes::promotable_even_drop (7 samples, 0.02%)</title><rect x="95.1798%" y="917" width="0.0214%" height="15" fill="rgb(241,114,28)" fg:x="31179" fg:w="7"/><text x="95.4298%" y="927.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7 samples, 0.02%)</title><rect x="95.1798%" y="901" width="0.0214%" height="15" fill="rgb(246,112,42)" fg:x="31179" fg:w="7"/><text x="95.4298%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.05%)</title><rect x="95.2256%" y="933" width="0.0458%" height="15" fill="rgb(248,228,14)" fg:x="31194" fg:w="15"/><text x="95.4756%" y="943.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (15 samples, 0.05%)</title><rect x="95.2256%" y="917" width="0.0458%" height="15" fill="rgb(208,133,18)" fg:x="31194" fg:w="15"/><text x="95.4756%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (15 samples, 0.05%)</title><rect x="95.2256%" y="901" width="0.0458%" height="15" fill="rgb(207,35,49)" fg:x="31194" fg:w="15"/><text x="95.4756%" y="911.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;i64&gt; as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (7 samples, 0.02%)</title><rect x="95.2866%" y="933" width="0.0214%" height="15" fill="rgb(205,68,36)" fg:x="31214" fg:w="7"/><text x="95.5366%" y="943.50"></text></g><g><title>core::num::&lt;impl i64&gt;::wrapping_shl (7 samples, 0.02%)</title><rect x="95.2866%" y="917" width="0.0214%" height="15" fill="rgb(245,62,40)" fg:x="31214" fg:w="7"/><text x="95.5366%" y="927.50"></text></g><g><title>scylla::routing::murmur3_token (68 samples, 0.21%)</title><rect x="95.1249%" y="965" width="0.2076%" height="15" fill="rgb(228,27,24)" fg:x="31161" fg:w="68"/><text x="95.3749%" y="975.50"></text></g><g><title>scylla::routing::hash3_x64_128 (43 samples, 0.13%)</title><rect x="95.2012%" y="949" width="0.1313%" height="15" fill="rgb(253,19,12)" fg:x="31186" fg:w="43"/><text x="95.4512%" y="959.50"></text></g><g><title>scylla::routing::fmix (7 samples, 0.02%)</title><rect x="95.3111%" y="933" width="0.0214%" height="15" fill="rgb(232,28,20)" fg:x="31222" fg:w="7"/><text x="95.5611%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (939 samples, 2.87%)</title><rect x="92.5056%" y="1013" width="2.8665%" height="15" fill="rgb(218,35,51)" fg:x="30303" fg:w="939"/><text x="92.7556%" y="1023.50">&lt;c..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (939 samples, 2.87%)</title><rect x="92.5056%" y="997" width="2.8665%" height="15" fill="rgb(212,90,40)" fg:x="30303" fg:w="939"/><text x="92.7556%" y="1007.50">sc..</text></g><g><title>scylla::transport::session::calculate_token (88 samples, 0.27%)</title><rect x="95.1035%" y="981" width="0.2686%" height="15" fill="rgb(220,172,12)" fg:x="31154" fg:w="88"/><text x="95.3535%" y="991.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (13 samples, 0.04%)</title><rect x="95.3324%" y="965" width="0.0397%" height="15" fill="rgb(226,159,20)" fg:x="31229" fg:w="13"/><text x="95.5824%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (945 samples, 2.88%)</title><rect x="92.5056%" y="1909" width="2.8848%" height="15" fill="rgb(234,205,16)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1919.50">st..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1893" width="2.8848%" height="15" fill="rgb(207,9,39)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1903.50">to..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (945 samples, 2.88%)</title><rect x="92.5056%" y="1877" width="2.8848%" height="15" fill="rgb(249,143,15)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1887.50">to..</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (945 samples, 2.88%)</title><rect x="92.5056%" y="1861" width="2.8848%" height="15" fill="rgb(253,133,29)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1871.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1845" width="2.8848%" height="15" fill="rgb(221,187,0)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1855.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1829" width="2.8848%" height="15" fill="rgb(205,204,26)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1839.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (945 samples, 2.88%)</title><rect x="92.5056%" y="1813" width="2.8848%" height="15" fill="rgb(224,68,54)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1823.50">to..</text></g><g><title>tokio::runtime::task::harness::poll_future (945 samples, 2.88%)</title><rect x="92.5056%" y="1797" width="2.8848%" height="15" fill="rgb(209,67,4)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1807.50">to..</text></g><g><title>std::panic::catch_unwind (945 samples, 2.88%)</title><rect x="92.5056%" y="1781" width="2.8848%" height="15" fill="rgb(228,229,18)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1791.50">st..</text></g><g><title>std::panicking::try (945 samples, 2.88%)</title><rect x="92.5056%" y="1765" width="2.8848%" height="15" fill="rgb(231,89,13)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1775.50">st..</text></g><g><title>std::panicking::try::do_call (945 samples, 2.88%)</title><rect x="92.5056%" y="1749" width="2.8848%" height="15" fill="rgb(210,182,18)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1759.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (945 samples, 2.88%)</title><rect x="92.5056%" y="1733" width="2.8848%" height="15" fill="rgb(240,105,2)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1743.50">&lt;c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1717" width="2.8848%" height="15" fill="rgb(207,170,50)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1727.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1701" width="2.8848%" height="15" fill="rgb(232,133,24)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1711.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (945 samples, 2.88%)</title><rect x="92.5056%" y="1685" width="2.8848%" height="15" fill="rgb(235,166,27)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1695.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1669" width="2.8848%" height="15" fill="rgb(209,19,13)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1679.50">to..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1653" width="2.8848%" height="15" fill="rgb(226,79,39)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1663.50">&lt;t..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1637" width="2.8848%" height="15" fill="rgb(222,163,10)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1647.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::run (945 samples, 2.88%)</title><rect x="92.5056%" y="1621" width="2.8848%" height="15" fill="rgb(214,44,19)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1631.50">to..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (945 samples, 2.88%)</title><rect x="92.5056%" y="1605" width="2.8848%" height="15" fill="rgb(210,217,13)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1615.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1589" width="2.8848%" height="15" fill="rgb(237,61,54)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1599.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (945 samples, 2.88%)</title><rect x="92.5056%" y="1573" width="2.8848%" height="15" fill="rgb(226,184,24)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1583.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (945 samples, 2.88%)</title><rect x="92.5056%" y="1557" width="2.8848%" height="15" fill="rgb(223,226,4)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1567.50">to..</text></g><g><title>tokio::coop::budget (945 samples, 2.88%)</title><rect x="92.5056%" y="1541" width="2.8848%" height="15" fill="rgb(210,26,41)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1551.50">to..</text></g><g><title>tokio::coop::with_budget (945 samples, 2.88%)</title><rect x="92.5056%" y="1525" width="2.8848%" height="15" fill="rgb(220,221,6)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1535.50">to..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (945 samples, 2.88%)</title><rect x="92.5056%" y="1509" width="2.8848%" height="15" fill="rgb(225,89,49)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1519.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (945 samples, 2.88%)</title><rect x="92.5056%" y="1493" width="2.8848%" height="15" fill="rgb(218,70,45)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1503.50">st..</text></g><g><title>tokio::coop::with_budget::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1477" width="2.8848%" height="15" fill="rgb(238,166,21)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1487.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1461" width="2.8848%" height="15" fill="rgb(224,141,44)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1471.50">to..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (945 samples, 2.88%)</title><rect x="92.5056%" y="1445" width="2.8848%" height="15" fill="rgb(230,12,49)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1455.50">to..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1429" width="2.8848%" height="15" fill="rgb(212,174,12)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1439.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1413" width="2.8848%" height="15" fill="rgb(246,67,9)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1423.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (945 samples, 2.88%)</title><rect x="92.5056%" y="1397" width="2.8848%" height="15" fill="rgb(239,35,23)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1407.50">to..</text></g><g><title>tokio::runtime::task::harness::poll_future (945 samples, 2.88%)</title><rect x="92.5056%" y="1381" width="2.8848%" height="15" fill="rgb(211,167,0)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1391.50">to..</text></g><g><title>std::panic::catch_unwind (945 samples, 2.88%)</title><rect x="92.5056%" y="1365" width="2.8848%" height="15" fill="rgb(225,119,45)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1375.50">st..</text></g><g><title>std::panicking::try (945 samples, 2.88%)</title><rect x="92.5056%" y="1349" width="2.8848%" height="15" fill="rgb(210,162,6)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1359.50">st..</text></g><g><title>std::panicking::try::do_call (945 samples, 2.88%)</title><rect x="92.5056%" y="1333" width="2.8848%" height="15" fill="rgb(208,118,35)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1343.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (945 samples, 2.88%)</title><rect x="92.5056%" y="1317" width="2.8848%" height="15" fill="rgb(239,4,53)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1327.50">&lt;c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1301" width="2.8848%" height="15" fill="rgb(213,130,21)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1311.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1285" width="2.8848%" height="15" fill="rgb(235,148,0)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1295.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (945 samples, 2.88%)</title><rect x="92.5056%" y="1269" width="2.8848%" height="15" fill="rgb(244,224,18)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1279.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1253" width="2.8848%" height="15" fill="rgb(211,214,4)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1263.50">to..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1237" width="2.8848%" height="15" fill="rgb(206,119,25)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1247.50">&lt;c..</text></g><g><title>latte::req_stream::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1221" width="2.8848%" height="15" fill="rgb(243,93,47)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1231.50">la..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1205" width="2.8848%" height="15" fill="rgb(224,194,6)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1215.50">&lt;f..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (945 samples, 2.88%)</title><rect x="92.5056%" y="1189" width="2.8848%" height="15" fill="rgb(243,229,6)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1199.50">fu..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (945 samples, 2.88%)</title><rect x="92.5056%" y="1173" width="2.8848%" height="15" fill="rgb(207,23,50)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1183.50">&lt;f..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (945 samples, 2.88%)</title><rect x="92.5056%" y="1157" width="2.8848%" height="15" fill="rgb(253,192,32)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1167.50">fu..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (945 samples, 2.88%)</title><rect x="92.5056%" y="1141" width="2.8848%" height="15" fill="rgb(213,21,6)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1151.50">&lt;f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1125" width="2.8848%" height="15" fill="rgb(243,151,13)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1135.50">&lt;c..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1109" width="2.8848%" height="15" fill="rgb(233,165,41)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1119.50">la..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1093" width="2.8848%" height="15" fill="rgb(246,176,45)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1103.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1077" width="2.8848%" height="15" fill="rgb(217,170,52)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1087.50">&lt;c..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1061" width="2.8848%" height="15" fill="rgb(214,203,54)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1071.50">&lt;l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (945 samples, 2.88%)</title><rect x="92.5056%" y="1045" width="2.8848%" height="15" fill="rgb(248,215,49)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1055.50">&lt;c..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (945 samples, 2.88%)</title><rect x="92.5056%" y="1029" width="2.8848%" height="15" fill="rgb(208,46,10)" fg:x="30303" fg:w="945"/><text x="92.7556%" y="1039.50">sc..</text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::session::Session::execute_paged&lt;scylla::frame::value::SerializedValues&gt;::{{closure}}&gt;&gt; (6 samples, 0.02%)</title><rect x="95.3721%" y="1013" width="0.0183%" height="15" fill="rgb(254,5,31)" fg:x="31242" fg:w="6"/><text x="95.6221%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="95.4393%" y="1173" width="0.0153%" height="15" fill="rgb(222,104,33)" fg:x="31264" fg:w="5"/><text x="95.6893%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="95.4301%" y="1221" width="0.0458%" height="15" fill="rgb(248,49,16)" fg:x="31261" fg:w="15"/><text x="95.6801%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="95.4301%" y="1205" width="0.0458%" height="15" fill="rgb(232,198,41)" fg:x="31261" fg:w="15"/><text x="95.6801%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (15 samples, 0.05%)</title><rect x="95.4301%" y="1189" width="0.0458%" height="15" fill="rgb(214,125,3)" fg:x="31261" fg:w="15"/><text x="95.6801%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.02%)</title><rect x="95.4545%" y="1173" width="0.0214%" height="15" fill="rgb(229,220,28)" fg:x="31269" fg:w="7"/><text x="95.7045%" y="1183.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.06%)</title><rect x="95.4210%" y="1237" width="0.0611%" height="15" fill="rgb(222,64,37)" fg:x="31258" fg:w="20"/><text x="95.6710%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="95.4820%" y="1221" width="0.0122%" height="15" fill="rgb(249,184,13)" fg:x="31278" fg:w="4"/><text x="95.7320%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="95.4820%" y="1205" width="0.0122%" height="15" fill="rgb(252,176,6)" fg:x="31278" fg:w="4"/><text x="95.7320%" y="1215.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="95.5003%" y="1173" width="0.0244%" height="15" fill="rgb(228,153,7)" fg:x="31284" fg:w="8"/><text x="95.7503%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (8 samples, 0.02%)</title><rect x="95.5003%" y="1157" width="0.0244%" height="15" fill="rgb(242,193,5)" fg:x="31284" fg:w="8"/><text x="95.7503%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (8 samples, 0.02%)</title><rect x="95.5003%" y="1141" width="0.0244%" height="15" fill="rgb(232,140,9)" fg:x="31284" fg:w="8"/><text x="95.7503%" y="1151.50"></text></g><g><title>core::core_arch::simd::i8x16::new (8 samples, 0.02%)</title><rect x="95.5003%" y="1125" width="0.0244%" height="15" fill="rgb(213,222,16)" fg:x="31284" fg:w="8"/><text x="95.7503%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.14%)</title><rect x="95.3904%" y="1301" width="0.1374%" height="15" fill="rgb(222,75,50)" fg:x="31248" fg:w="45"/><text x="95.6404%" y="1311.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.14%)</title><rect x="95.3904%" y="1285" width="0.1374%" height="15" fill="rgb(205,180,2)" fg:x="31248" fg:w="45"/><text x="95.6404%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (45 samples, 0.14%)</title><rect x="95.3904%" y="1269" width="0.1374%" height="15" fill="rgb(216,34,7)" fg:x="31248" fg:w="45"/><text x="95.6404%" y="1279.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (45 samples, 0.14%)</title><rect x="95.3904%" y="1253" width="0.1374%" height="15" fill="rgb(253,16,32)" fg:x="31248" fg:w="45"/><text x="95.6404%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.05%)</title><rect x="95.4820%" y="1237" width="0.0458%" height="15" fill="rgb(208,97,28)" fg:x="31278" fg:w="15"/><text x="95.7320%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.03%)</title><rect x="95.4942%" y="1221" width="0.0336%" height="15" fill="rgb(225,92,11)" fg:x="31282" fg:w="11"/><text x="95.7442%" y="1231.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.03%)</title><rect x="95.4942%" y="1205" width="0.0336%" height="15" fill="rgb(243,38,12)" fg:x="31282" fg:w="11"/><text x="95.7442%" y="1215.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.03%)</title><rect x="95.4942%" y="1189" width="0.0336%" height="15" fill="rgb(208,139,16)" fg:x="31282" fg:w="11"/><text x="95.7442%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.14%)</title><rect x="95.3904%" y="1909" width="0.1435%" height="15" fill="rgb(227,24,9)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1919.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.14%)</title><rect x="95.3904%" y="1893" width="0.1435%" height="15" fill="rgb(206,62,11)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1903.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1877" width="0.1435%" height="15" fill="rgb(228,134,27)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1861" width="0.1435%" height="15" fill="rgb(205,55,33)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1871.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (47 samples, 0.14%)</title><rect x="95.3904%" y="1845" width="0.1435%" height="15" fill="rgb(243,75,43)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1855.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1829" width="0.1435%" height="15" fill="rgb(223,27,42)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1813" width="0.1435%" height="15" fill="rgb(232,189,33)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (47 samples, 0.14%)</title><rect x="95.3904%" y="1797" width="0.1435%" height="15" fill="rgb(210,9,39)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1807.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (47 samples, 0.14%)</title><rect x="95.3904%" y="1781" width="0.1435%" height="15" fill="rgb(242,85,26)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.14%)</title><rect x="95.3904%" y="1765" width="0.1435%" height="15" fill="rgb(248,44,4)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1775.50"></text></g><g><title>std::panicking::try (47 samples, 0.14%)</title><rect x="95.3904%" y="1749" width="0.1435%" height="15" fill="rgb(250,96,46)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.14%)</title><rect x="95.3904%" y="1733" width="0.1435%" height="15" fill="rgb(229,116,26)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47 samples, 0.14%)</title><rect x="95.3904%" y="1717" width="0.1435%" height="15" fill="rgb(246,94,34)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1701" width="0.1435%" height="15" fill="rgb(251,73,21)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1711.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1685" width="0.1435%" height="15" fill="rgb(254,121,25)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1695.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (47 samples, 0.14%)</title><rect x="95.3904%" y="1669" width="0.1435%" height="15" fill="rgb(215,161,49)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1679.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1653" width="0.1435%" height="15" fill="rgb(221,43,13)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1663.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1637" width="0.1435%" height="15" fill="rgb(249,5,37)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1647.50"></text></g><g><title>latte::req_stream::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1621" width="0.1435%" height="15" fill="rgb(226,25,44)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1631.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1605" width="0.1435%" height="15" fill="rgb(238,189,16)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1615.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (47 samples, 0.14%)</title><rect x="95.3904%" y="1589" width="0.1435%" height="15" fill="rgb(251,186,8)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1599.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.14%)</title><rect x="95.3904%" y="1573" width="0.1435%" height="15" fill="rgb(254,34,31)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1583.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (47 samples, 0.14%)</title><rect x="95.3904%" y="1557" width="0.1435%" height="15" fill="rgb(225,215,27)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (47 samples, 0.14%)</title><rect x="95.3904%" y="1541" width="0.1435%" height="15" fill="rgb(221,192,48)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1551.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1525" width="0.1435%" height="15" fill="rgb(219,137,20)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1535.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1509" width="0.1435%" height="15" fill="rgb(219,84,11)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1519.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1493" width="0.1435%" height="15" fill="rgb(224,10,23)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1477" width="0.1435%" height="15" fill="rgb(248,22,39)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1487.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1461" width="0.1435%" height="15" fill="rgb(212,154,20)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1445" width="0.1435%" height="15" fill="rgb(236,199,50)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1455.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1429" width="0.1435%" height="15" fill="rgb(211,9,17)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1413" width="0.1435%" height="15" fill="rgb(243,216,36)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1423.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1397" width="0.1435%" height="15" fill="rgb(250,2,10)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.14%)</title><rect x="95.3904%" y="1381" width="0.1435%" height="15" fill="rgb(226,50,48)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1391.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (47 samples, 0.14%)</title><rect x="95.3904%" y="1365" width="0.1435%" height="15" fill="rgb(243,81,16)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1375.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (47 samples, 0.14%)</title><rect x="95.3904%" y="1349" width="0.1435%" height="15" fill="rgb(250,14,2)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.14%)</title><rect x="95.3904%" y="1333" width="0.1435%" height="15" fill="rgb(233,135,29)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (47 samples, 0.14%)</title><rect x="95.3904%" y="1317" width="0.1435%" height="15" fill="rgb(224,64,43)" fg:x="31248" fg:w="47"/><text x="95.6404%" y="1327.50"></text></g><g><title>syscall_return_via_sysret (5 samples, 0.02%)</title><rect x="95.5400%" y="1909" width="0.0153%" height="15" fill="rgb(238,84,13)" fg:x="31297" fg:w="5"/><text x="95.7900%" y="1919.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="95.5614%" y="1173" width="0.0153%" height="15" fill="rgb(253,48,26)" fg:x="31304" fg:w="5"/><text x="95.8114%" y="1183.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (5 samples, 0.02%)</title><rect x="95.5614%" y="1157" width="0.0153%" height="15" fill="rgb(205,223,31)" fg:x="31304" fg:w="5"/><text x="95.8114%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="95.5614%" y="1141" width="0.0153%" height="15" fill="rgb(221,41,32)" fg:x="31304" fg:w="5"/><text x="95.8114%" y="1151.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="95.5614%" y="1125" width="0.0153%" height="15" fill="rgb(213,158,31)" fg:x="31304" fg:w="5"/><text x="95.8114%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="95.5614%" y="1109" width="0.0153%" height="15" fill="rgb(245,126,43)" fg:x="31304" fg:w="5"/><text x="95.8114%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.06%)</title><rect x="95.5767%" y="1141" width="0.0611%" height="15" fill="rgb(227,7,22)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.06%)</title><rect x="95.5767%" y="1125" width="0.0611%" height="15" fill="rgb(252,90,44)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.06%)</title><rect x="95.5767%" y="1109" width="0.0611%" height="15" fill="rgb(253,91,0)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.06%)</title><rect x="95.5767%" y="1093" width="0.0611%" height="15" fill="rgb(252,175,49)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.06%)</title><rect x="95.5767%" y="1077" width="0.0611%" height="15" fill="rgb(246,150,1)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1087.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.06%)</title><rect x="95.5767%" y="1061" width="0.0611%" height="15" fill="rgb(241,192,25)" fg:x="31309" fg:w="20"/><text x="95.8267%" y="1071.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (22 samples, 0.07%)</title><rect x="95.5767%" y="1157" width="0.0672%" height="15" fill="rgb(239,187,11)" fg:x="31309" fg:w="22"/><text x="95.8267%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="95.6560%" y="1061" width="0.0214%" height="15" fill="rgb(218,202,51)" fg:x="31335" fg:w="7"/><text x="95.9060%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="95.6560%" y="1045" width="0.0214%" height="15" fill="rgb(225,176,8)" fg:x="31335" fg:w="7"/><text x="95.9060%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="95.6560%" y="1029" width="0.0214%" height="15" fill="rgb(219,122,41)" fg:x="31335" fg:w="7"/><text x="95.9060%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="95.6835%" y="1045" width="0.0519%" height="15" fill="rgb(248,140,20)" fg:x="31344" fg:w="17"/><text x="95.9335%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="95.6835%" y="1029" width="0.0519%" height="15" fill="rgb(245,41,37)" fg:x="31344" fg:w="17"/><text x="95.9335%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="95.6835%" y="1013" width="0.0519%" height="15" fill="rgb(235,82,39)" fg:x="31344" fg:w="17"/><text x="95.9335%" y="1023.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.03%)</title><rect x="95.7049%" y="997" width="0.0305%" height="15" fill="rgb(230,108,42)" fg:x="31351" fg:w="10"/><text x="95.9549%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="95.7171%" y="981" width="0.0183%" height="15" fill="rgb(215,150,50)" fg:x="31355" fg:w="6"/><text x="95.9671%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (23 samples, 0.07%)</title><rect x="95.6804%" y="1061" width="0.0702%" height="15" fill="rgb(233,212,5)" fg:x="31343" fg:w="23"/><text x="95.9304%" y="1071.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.02%)</title><rect x="95.7354%" y="1045" width="0.0153%" height="15" fill="rgb(245,80,22)" fg:x="31361" fg:w="5"/><text x="95.9854%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="95.7354%" y="1029" width="0.0153%" height="15" fill="rgb(238,129,16)" fg:x="31361" fg:w="5"/><text x="95.9854%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="95.7384%" y="1013" width="0.0122%" height="15" fill="rgb(240,19,0)" fg:x="31362" fg:w="4"/><text x="95.9884%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (36 samples, 0.11%)</title><rect x="95.6438%" y="1157" width="0.1099%" height="15" fill="rgb(232,42,35)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1167.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan::{{closure}} (36 samples, 0.11%)</title><rect x="95.6438%" y="1141" width="0.1099%" height="15" fill="rgb(223,130,24)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.11%)</title><rect x="95.6438%" y="1125" width="0.1099%" height="15" fill="rgb(237,16,22)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.11%)</title><rect x="95.6438%" y="1109" width="0.1099%" height="15" fill="rgb(248,192,20)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.11%)</title><rect x="95.6438%" y="1093" width="0.1099%" height="15" fill="rgb(233,167,2)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (36 samples, 0.11%)</title><rect x="95.6438%" y="1077" width="0.1099%" height="15" fill="rgb(252,71,44)" fg:x="31331" fg:w="36"/><text x="95.8938%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_lower_bound_edge (15 samples, 0.05%)</title><rect x="95.7659%" y="1077" width="0.0458%" height="15" fill="rgb(238,37,47)" fg:x="31371" fg:w="15"/><text x="96.0159%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (14 samples, 0.04%)</title><rect x="95.7690%" y="1061" width="0.0427%" height="15" fill="rgb(214,202,54)" fg:x="31372" fg:w="14"/><text x="96.0190%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.04%)</title><rect x="95.7690%" y="1045" width="0.0427%" height="15" fill="rgb(254,165,40)" fg:x="31372" fg:w="14"/><text x="96.0190%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="95.8636%" y="1013" width="0.0244%" height="15" fill="rgb(246,173,38)" fg:x="31403" fg:w="8"/><text x="96.1136%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="95.8636%" y="1029" width="0.0275%" height="15" fill="rgb(215,3,27)" fg:x="31403" fg:w="9"/><text x="96.1136%" y="1039.50"></text></g><g><title>&lt;scylla::routing::Token as core::cmp::Ord&gt;::cmp (5 samples, 0.02%)</title><rect x="95.8911%" y="1029" width="0.0153%" height="15" fill="rgb(239,169,51)" fg:x="31412" fg:w="5"/><text x="96.1411%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (5 samples, 0.02%)</title><rect x="95.8911%" y="1013" width="0.0153%" height="15" fill="rgb(212,5,25)" fg:x="31412" fg:w="5"/><text x="96.1411%" y="1023.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (4 samples, 0.01%)</title><rect x="95.9063%" y="1029" width="0.0122%" height="15" fill="rgb(243,45,17)" fg:x="31417" fg:w="4"/><text x="96.1563%" y="1039.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::find_leaf_edges_spanning_range (56 samples, 0.17%)</title><rect x="95.7537%" y="1093" width="0.1710%" height="15" fill="rgb(242,97,9)" fg:x="31367" fg:w="56"/><text x="96.0037%" y="1103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree_for_bifurcation (36 samples, 0.11%)</title><rect x="95.8148%" y="1077" width="0.1099%" height="15" fill="rgb(228,71,31)" fg:x="31387" fg:w="36"/><text x="96.0648%" y="1087.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_lower_bound_index (31 samples, 0.09%)</title><rect x="95.8300%" y="1061" width="0.0946%" height="15" fill="rgb(252,184,16)" fg:x="31392" fg:w="31"/><text x="96.0800%" y="1071.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (31 samples, 0.09%)</title><rect x="95.8300%" y="1045" width="0.0946%" height="15" fill="rgb(236,169,46)" fg:x="31392" fg:w="31"/><text x="96.0800%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (120 samples, 0.37%)</title><rect x="95.5614%" y="1205" width="0.3663%" height="15" fill="rgb(207,17,47)" fg:x="31304" fg:w="120"/><text x="95.8114%" y="1215.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (120 samples, 0.37%)</title><rect x="95.5614%" y="1189" width="0.3663%" height="15" fill="rgb(206,201,28)" fg:x="31304" fg:w="120"/><text x="95.8114%" y="1199.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (115 samples, 0.35%)</title><rect x="95.5767%" y="1173" width="0.3511%" height="15" fill="rgb(224,184,23)" fg:x="31309" fg:w="115"/><text x="95.8267%" y="1183.50"></text></g><g><title>scylla::transport::load_balancing::token_aware::TokenAwarePolicy::simple_strategy_replicas (57 samples, 0.17%)</title><rect x="95.7537%" y="1157" width="0.1740%" height="15" fill="rgb(208,139,48)" fg:x="31367" fg:w="57"/><text x="96.0037%" y="1167.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range (57 samples, 0.17%)</title><rect x="95.7537%" y="1141" width="0.1740%" height="15" fill="rgb(208,130,10)" fg:x="31367" fg:w="57"/><text x="96.0037%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::range (57 samples, 0.17%)</title><rect x="95.7537%" y="1125" width="0.1740%" height="15" fill="rgb(211,213,45)" fg:x="31367" fg:w="57"/><text x="96.0037%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (57 samples, 0.17%)</title><rect x="95.7537%" y="1109" width="0.1740%" height="15" fill="rgb(235,100,30)" fg:x="31367" fg:w="57"/><text x="96.0037%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (7 samples, 0.02%)</title><rect x="95.9399%" y="1061" width="0.0214%" height="15" fill="rgb(206,144,31)" fg:x="31428" fg:w="7"/><text x="96.1899%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (147 samples, 0.45%)</title><rect x="95.5614%" y="1909" width="0.4487%" height="15" fill="rgb(224,200,26)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1919.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1893" width="0.4487%" height="15" fill="rgb(247,104,53)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1903.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1877" width="0.4487%" height="15" fill="rgb(220,14,17)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1861" width="0.4487%" height="15" fill="rgb(230,140,40)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1871.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (147 samples, 0.45%)</title><rect x="95.5614%" y="1845" width="0.4487%" height="15" fill="rgb(229,2,41)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1855.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (147 samples, 0.45%)</title><rect x="95.5614%" y="1829" width="0.4487%" height="15" fill="rgb(232,89,16)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1813" width="0.4487%" height="15" fill="rgb(247,59,52)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1823.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (147 samples, 0.45%)</title><rect x="95.5614%" y="1797" width="0.4487%" height="15" fill="rgb(226,110,21)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1807.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (147 samples, 0.45%)</title><rect x="95.5614%" y="1781" width="0.4487%" height="15" fill="rgb(224,176,43)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1791.50"></text></g><g><title>tokio::coop::budget (147 samples, 0.45%)</title><rect x="95.5614%" y="1765" width="0.4487%" height="15" fill="rgb(221,73,6)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1775.50"></text></g><g><title>tokio::coop::with_budget (147 samples, 0.45%)</title><rect x="95.5614%" y="1749" width="0.4487%" height="15" fill="rgb(232,78,19)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (147 samples, 0.45%)</title><rect x="95.5614%" y="1733" width="0.4487%" height="15" fill="rgb(233,112,48)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1743.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (147 samples, 0.45%)</title><rect x="95.5614%" y="1717" width="0.4487%" height="15" fill="rgb(243,131,47)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1727.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1701" width="0.4487%" height="15" fill="rgb(226,51,1)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1711.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1685" width="0.4487%" height="15" fill="rgb(247,58,7)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1695.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (147 samples, 0.45%)</title><rect x="95.5614%" y="1669" width="0.4487%" height="15" fill="rgb(209,7,32)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1679.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1653" width="0.4487%" height="15" fill="rgb(209,39,41)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1637" width="0.4487%" height="15" fill="rgb(226,182,46)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1647.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (147 samples, 0.45%)</title><rect x="95.5614%" y="1621" width="0.4487%" height="15" fill="rgb(230,219,10)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (147 samples, 0.45%)</title><rect x="95.5614%" y="1605" width="0.4487%" height="15" fill="rgb(227,175,30)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (147 samples, 0.45%)</title><rect x="95.5614%" y="1589" width="0.4487%" height="15" fill="rgb(217,2,50)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1599.50"></text></g><g><title>std::panicking::try (147 samples, 0.45%)</title><rect x="95.5614%" y="1573" width="0.4487%" height="15" fill="rgb(229,160,0)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (147 samples, 0.45%)</title><rect x="95.5614%" y="1557" width="0.4487%" height="15" fill="rgb(207,78,37)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1567.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (147 samples, 0.45%)</title><rect x="95.5614%" y="1541" width="0.4487%" height="15" fill="rgb(225,57,0)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1551.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1525" width="0.4487%" height="15" fill="rgb(232,154,2)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1535.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1509" width="0.4487%" height="15" fill="rgb(241,212,25)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1519.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (147 samples, 0.45%)</title><rect x="95.5614%" y="1493" width="0.4487%" height="15" fill="rgb(226,69,20)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1503.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1477" width="0.4487%" height="15" fill="rgb(247,184,54)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1461" width="0.4487%" height="15" fill="rgb(210,145,0)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1471.50"></text></g><g><title>latte::req_stream::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1445" width="0.4487%" height="15" fill="rgb(253,82,12)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1429" width="0.4487%" height="15" fill="rgb(245,42,11)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1439.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (147 samples, 0.45%)</title><rect x="95.5614%" y="1413" width="0.4487%" height="15" fill="rgb(219,147,32)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1423.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (147 samples, 0.45%)</title><rect x="95.5614%" y="1397" width="0.4487%" height="15" fill="rgb(246,12,7)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1407.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (147 samples, 0.45%)</title><rect x="95.5614%" y="1381" width="0.4487%" height="15" fill="rgb(243,50,9)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1391.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (147 samples, 0.45%)</title><rect x="95.5614%" y="1365" width="0.4487%" height="15" fill="rgb(219,149,6)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1349" width="0.4487%" height="15" fill="rgb(241,51,42)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1359.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1333" width="0.4487%" height="15" fill="rgb(226,128,27)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1317" width="0.4487%" height="15" fill="rgb(244,144,4)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1301" width="0.4487%" height="15" fill="rgb(221,4,13)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1311.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1285" width="0.4487%" height="15" fill="rgb(208,170,28)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1269" width="0.4487%" height="15" fill="rgb(226,131,13)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1279.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1253" width="0.4487%" height="15" fill="rgb(215,72,41)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.45%)</title><rect x="95.5614%" y="1237" width="0.4487%" height="15" fill="rgb(243,108,20)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1247.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (147 samples, 0.45%)</title><rect x="95.5614%" y="1221" width="0.4487%" height="15" fill="rgb(230,189,17)" fg:x="31304" fg:w="147"/><text x="95.8114%" y="1231.50"></text></g><g><title>scylla::transport::session::calculate_token (27 samples, 0.08%)</title><rect x="95.9277%" y="1205" width="0.0824%" height="15" fill="rgb(220,50,17)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1215.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (27 samples, 0.08%)</title><rect x="95.9277%" y="1189" width="0.0824%" height="15" fill="rgb(248,152,48)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1199.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (27 samples, 0.08%)</title><rect x="95.9277%" y="1173" width="0.0824%" height="15" fill="rgb(244,91,11)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1183.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (27 samples, 0.08%)</title><rect x="95.9277%" y="1157" width="0.0824%" height="15" fill="rgb(220,157,5)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1167.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (27 samples, 0.08%)</title><rect x="95.9277%" y="1141" width="0.0824%" height="15" fill="rgb(253,137,8)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.08%)</title><rect x="95.9277%" y="1125" width="0.0824%" height="15" fill="rgb(217,137,51)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.08%)</title><rect x="95.9277%" y="1109" width="0.0824%" height="15" fill="rgb(218,209,53)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.08%)</title><rect x="95.9277%" y="1093" width="0.0824%" height="15" fill="rgb(249,137,25)" fg:x="31424" fg:w="27"/><text x="96.1777%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.08%)</title><rect x="95.9338%" y="1077" width="0.0763%" height="15" fill="rgb(239,155,26)" fg:x="31426" fg:w="25"/><text x="96.1838%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.05%)</title><rect x="95.9613%" y="1061" width="0.0488%" height="15" fill="rgb(227,85,46)" fg:x="31435" fg:w="16"/><text x="96.2113%" y="1071.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="95.9949%" y="1045" width="0.0153%" height="15" fill="rgb(251,107,43)" fg:x="31446" fg:w="5"/><text x="96.2449%" y="1055.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (16 samples, 0.05%)</title><rect x="96.0101%" y="1909" width="0.0488%" height="15" fill="rgb(234,170,33)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1919.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1893" width="0.0488%" height="15" fill="rgb(206,29,35)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (16 samples, 0.05%)</title><rect x="96.0101%" y="1877" width="0.0488%" height="15" fill="rgb(227,138,25)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (16 samples, 0.05%)</title><rect x="96.0101%" y="1861" width="0.0488%" height="15" fill="rgb(249,131,35)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1871.50"></text></g><g><title>tokio::coop::budget (16 samples, 0.05%)</title><rect x="96.0101%" y="1845" width="0.0488%" height="15" fill="rgb(239,6,40)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1855.50"></text></g><g><title>tokio::coop::with_budget (16 samples, 0.05%)</title><rect x="96.0101%" y="1829" width="0.0488%" height="15" fill="rgb(246,136,47)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1839.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.05%)</title><rect x="96.0101%" y="1813" width="0.0488%" height="15" fill="rgb(253,58,26)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.05%)</title><rect x="96.0101%" y="1797" width="0.0488%" height="15" fill="rgb(237,141,10)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1807.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1781" width="0.0488%" height="15" fill="rgb(234,156,12)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1791.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1765" width="0.0488%" height="15" fill="rgb(243,224,36)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1775.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (16 samples, 0.05%)</title><rect x="96.0101%" y="1749" width="0.0488%" height="15" fill="rgb(205,229,51)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1759.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1733" width="0.0488%" height="15" fill="rgb(223,189,4)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1717" width="0.0488%" height="15" fill="rgb(249,167,54)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (16 samples, 0.05%)</title><rect x="96.0101%" y="1701" width="0.0488%" height="15" fill="rgb(218,34,28)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (16 samples, 0.05%)</title><rect x="96.0101%" y="1685" width="0.0488%" height="15" fill="rgb(232,109,42)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.05%)</title><rect x="96.0101%" y="1669" width="0.0488%" height="15" fill="rgb(248,214,46)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1679.50"></text></g><g><title>std::panicking::try (16 samples, 0.05%)</title><rect x="96.0101%" y="1653" width="0.0488%" height="15" fill="rgb(244,216,40)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.05%)</title><rect x="96.0101%" y="1637" width="0.0488%" height="15" fill="rgb(231,226,31)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1647.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.05%)</title><rect x="96.0101%" y="1621" width="0.0488%" height="15" fill="rgb(238,38,43)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1631.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1605" width="0.0488%" height="15" fill="rgb(208,88,43)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1589" width="0.0488%" height="15" fill="rgb(205,136,37)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1599.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 0.05%)</title><rect x="96.0101%" y="1573" width="0.0488%" height="15" fill="rgb(237,34,14)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1583.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1557" width="0.0488%" height="15" fill="rgb(236,193,44)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1567.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1541" width="0.0488%" height="15" fill="rgb(231,48,10)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1551.50"></text></g><g><title>latte::req_stream::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1525" width="0.0488%" height="15" fill="rgb(213,141,34)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1509" width="0.0488%" height="15" fill="rgb(249,130,34)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1519.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (16 samples, 0.05%)</title><rect x="96.0101%" y="1493" width="0.0488%" height="15" fill="rgb(219,42,41)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.05%)</title><rect x="96.0101%" y="1477" width="0.0488%" height="15" fill="rgb(224,100,54)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1487.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (16 samples, 0.05%)</title><rect x="96.0101%" y="1461" width="0.0488%" height="15" fill="rgb(229,200,27)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1471.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (16 samples, 0.05%)</title><rect x="96.0101%" y="1445" width="0.0488%" height="15" fill="rgb(217,118,10)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1429" width="0.0488%" height="15" fill="rgb(206,22,3)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1439.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1413" width="0.0488%" height="15" fill="rgb(232,163,46)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1423.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1397" width="0.0488%" height="15" fill="rgb(206,95,13)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1381" width="0.0488%" height="15" fill="rgb(253,154,18)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1391.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1365" width="0.0488%" height="15" fill="rgb(219,32,23)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1349" width="0.0488%" height="15" fill="rgb(230,191,45)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1359.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1333" width="0.0488%" height="15" fill="rgb(229,64,36)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1317" width="0.0488%" height="15" fill="rgb(205,129,25)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1327.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1301" width="0.0488%" height="15" fill="rgb(254,112,7)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.05%)</title><rect x="96.0101%" y="1285" width="0.0488%" height="15" fill="rgb(226,53,48)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1295.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (16 samples, 0.05%)</title><rect x="96.0101%" y="1269" width="0.0488%" height="15" fill="rgb(214,153,38)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1279.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (16 samples, 0.05%)</title><rect x="96.0101%" y="1253" width="0.0488%" height="15" fill="rgb(243,101,7)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1263.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (16 samples, 0.05%)</title><rect x="96.0101%" y="1237" width="0.0488%" height="15" fill="rgb(240,140,22)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1247.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 0.05%)</title><rect x="96.0101%" y="1221" width="0.0488%" height="15" fill="rgb(235,114,2)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1231.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.05%)</title><rect x="96.0101%" y="1205" width="0.0488%" height="15" fill="rgb(242,59,12)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.05%)</title><rect x="96.0101%" y="1189" width="0.0488%" height="15" fill="rgb(252,134,9)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.05%)</title><rect x="96.0101%" y="1173" width="0.0488%" height="15" fill="rgb(236,4,44)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.05%)</title><rect x="96.0101%" y="1157" width="0.0488%" height="15" fill="rgb(254,172,41)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1167.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.05%)</title><rect x="96.0101%" y="1141" width="0.0488%" height="15" fill="rgb(244,63,20)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1151.50"></text></g><g><title>_int_malloc (16 samples, 0.05%)</title><rect x="96.0101%" y="1125" width="0.0488%" height="15" fill="rgb(250,73,31)" fg:x="31451" fg:w="16"/><text x="96.2601%" y="1135.50"></text></g><g><title>unlink_chunk.constprop.0 (6 samples, 0.02%)</title><rect x="96.0407%" y="1109" width="0.0183%" height="15" fill="rgb(241,38,36)" fg:x="31461" fg:w="6"/><text x="96.2907%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.19%)</title><rect x="96.1475%" y="997" width="0.1923%" height="15" fill="rgb(245,211,2)" fg:x="31496" fg:w="63"/><text x="96.3975%" y="1007.50"></text></g><g><title>scylla::transport::session::Session::handle_set_keyspace_response::{{closure}} (26 samples, 0.08%)</title><rect x="96.3429%" y="997" width="0.0794%" height="15" fill="rgb(206,120,28)" fg:x="31560" fg:w="26"/><text x="96.5929%" y="1007.50"></text></g><g><title>scylla::transport::connection::QueryResponse::as_set_keyspace (5 samples, 0.02%)</title><rect x="96.4070%" y="981" width="0.0153%" height="15" fill="rgb(211,59,34)" fg:x="31581" fg:w="5"/><text x="96.6570%" y="991.50"></text></g><g><title>arc_swap::debt::list::LocalNode::new_fast (7 samples, 0.02%)</title><rect x="96.7916%" y="773" width="0.0214%" height="15" fill="rgb(233,168,5)" fg:x="31707" fg:w="7"/><text x="97.0416%" y="783.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load::{{closure}} (10 samples, 0.03%)</title><rect x="96.7886%" y="805" width="0.0305%" height="15" fill="rgb(234,33,13)" fg:x="31706" fg:w="10"/><text x="97.0386%" y="815.50"></text></g><g><title>arc_swap::strategy::hybrid::HybridProtection&lt;T&gt;::attempt (9 samples, 0.03%)</title><rect x="96.7916%" y="789" width="0.0275%" height="15" fill="rgb(231,150,26)" fg:x="31707" fg:w="9"/><text x="97.0416%" y="799.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (13 samples, 0.04%)</title><rect x="96.7886%" y="837" width="0.0397%" height="15" fill="rgb(217,191,4)" fg:x="31706" fg:w="13"/><text x="97.0386%" y="847.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (13 samples, 0.04%)</title><rect x="96.7886%" y="821" width="0.0397%" height="15" fill="rgb(246,198,38)" fg:x="31706" fg:w="13"/><text x="97.0386%" y="831.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (47 samples, 0.14%)</title><rect x="96.7886%" y="853" width="0.1435%" height="15" fill="rgb(245,64,37)" fg:x="31706" fg:w="47"/><text x="97.0386%" y="863.50"></text></g><g><title>arc_swap::Guard&lt;T,S&gt;::into_inner (34 samples, 0.10%)</title><rect x="96.8283%" y="837" width="0.1038%" height="15" fill="rgb(250,30,36)" fg:x="31719" fg:w="34"/><text x="97.0783%" y="847.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridProtection&lt;T&gt; as arc_swap::strategy::sealed::Protected&lt;T&gt;&gt;::into_inner (34 samples, 0.10%)</title><rect x="96.8283%" y="821" width="0.1038%" height="15" fill="rgb(217,86,53)" fg:x="31719" fg:w="34"/><text x="97.0783%" y="831.50"></text></g><g><title>arc_swap::ref_cnt::RefCnt::inc (25 samples, 0.08%)</title><rect x="96.8557%" y="805" width="0.0763%" height="15" fill="rgb(228,157,16)" fg:x="31728" fg:w="25"/><text x="97.1057%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.07%)</title><rect x="96.8588%" y="789" width="0.0733%" height="15" fill="rgb(217,59,31)" fg:x="31729" fg:w="24"/><text x="97.1088%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::connection_pool::MaybePoolConnections&gt;&gt; (8 samples, 0.02%)</title><rect x="96.9320%" y="853" width="0.0244%" height="15" fill="rgb(237,138,41)" fg:x="31753" fg:w="8"/><text x="97.1820%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="96.9320%" y="837" width="0.0244%" height="15" fill="rgb(227,91,49)" fg:x="31753" fg:w="8"/><text x="97.1820%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (72 samples, 0.22%)</title><rect x="96.7458%" y="917" width="0.2198%" height="15" fill="rgb(247,21,44)" fg:x="31692" fg:w="72"/><text x="96.9958%" y="927.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token::{{closure}} (70 samples, 0.21%)</title><rect x="96.7519%" y="901" width="0.2137%" height="15" fill="rgb(219,210,51)" fg:x="31694" fg:w="70"/><text x="97.0019%" y="911.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token (62 samples, 0.19%)</title><rect x="96.7764%" y="885" width="0.1893%" height="15" fill="rgb(209,140,6)" fg:x="31702" fg:w="62"/><text x="97.0264%" y="895.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::with_connections (59 samples, 0.18%)</title><rect x="96.7855%" y="869" width="0.1801%" height="15" fill="rgb(221,188,24)" fg:x="31705" fg:w="59"/><text x="97.0355%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (9 samples, 0.03%)</title><rect x="96.9687%" y="917" width="0.0275%" height="15" fill="rgb(232,154,20)" fg:x="31765" fg:w="9"/><text x="97.2187%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="96.9687%" y="901" width="0.0275%" height="15" fill="rgb(244,137,50)" fg:x="31765" fg:w="9"/><text x="97.2187%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (308 samples, 0.94%)</title><rect x="96.0681%" y="1013" width="0.9402%" height="15" fill="rgb(225,185,43)" fg:x="31470" fg:w="308"/><text x="96.3181%" y="1023.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (192 samples, 0.59%)</title><rect x="96.4222%" y="997" width="0.5861%" height="15" fill="rgb(213,205,38)" fg:x="31586" fg:w="192"/><text x="96.6722%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (192 samples, 0.59%)</title><rect x="96.4222%" y="981" width="0.5861%" height="15" fill="rgb(236,73,12)" fg:x="31586" fg:w="192"/><text x="96.6722%" y="991.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (192 samples, 0.59%)</title><rect x="96.4222%" y="965" width="0.5861%" height="15" fill="rgb(235,219,13)" fg:x="31586" fg:w="192"/><text x="96.6722%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (192 samples, 0.59%)</title><rect x="96.4222%" y="949" width="0.5861%" height="15" fill="rgb(218,59,36)" fg:x="31586" fg:w="192"/><text x="96.6722%" y="959.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (190 samples, 0.58%)</title><rect x="96.4284%" y="933" width="0.5800%" height="15" fill="rgb(205,110,39)" fg:x="31588" fg:w="190"/><text x="96.6784%" y="943.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token (4 samples, 0.01%)</title><rect x="96.9962%" y="917" width="0.0122%" height="15" fill="rgb(218,206,42)" fg:x="31774" fg:w="4"/><text x="97.2462%" y="927.50"></text></g><g><title>scylla::routing::murmur3_token (7 samples, 0.02%)</title><rect x="97.0084%" y="997" width="0.0214%" height="15" fill="rgb(248,125,24)" fg:x="31778" fg:w="7"/><text x="97.2584%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (7 samples, 0.02%)</title><rect x="97.0084%" y="981" width="0.0214%" height="15" fill="rgb(242,28,27)" fg:x="31778" fg:w="7"/><text x="97.2584%" y="991.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="97.0084%" y="965" width="0.0214%" height="15" fill="rgb(216,228,15)" fg:x="31778" fg:w="7"/><text x="97.2584%" y="975.50"></text></g><g><title>__GI___libc_free (7 samples, 0.02%)</title><rect x="97.0084%" y="949" width="0.0214%" height="15" fill="rgb(235,116,46)" fg:x="31778" fg:w="7"/><text x="97.2584%" y="959.50"></text></g><g><title>_int_free (7 samples, 0.02%)</title><rect x="97.0084%" y="933" width="0.0214%" height="15" fill="rgb(224,18,32)" fg:x="31778" fg:w="7"/><text x="97.2584%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.04%)</title><rect x="97.0664%" y="981" width="0.0366%" height="15" fill="rgb(252,5,12)" fg:x="31797" fg:w="12"/><text x="97.3164%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.02%)</title><rect x="97.1152%" y="965" width="0.0183%" height="15" fill="rgb(251,36,5)" fg:x="31813" fg:w="6"/><text x="97.3652%" y="975.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (5 samples, 0.02%)</title><rect x="97.1183%" y="949" width="0.0153%" height="15" fill="rgb(217,53,14)" fg:x="31814" fg:w="5"/><text x="97.3683%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (17 samples, 0.05%)</title><rect x="97.1030%" y="981" width="0.0519%" height="15" fill="rgb(215,86,45)" fg:x="31809" fg:w="17"/><text x="97.3530%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="97.1335%" y="965" width="0.0214%" height="15" fill="rgb(242,169,11)" fg:x="31819" fg:w="7"/><text x="97.3835%" y="975.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (4 samples, 0.01%)</title><rect x="97.1854%" y="933" width="0.0122%" height="15" fill="rgb(211,213,45)" fg:x="31836" fg:w="4"/><text x="97.4354%" y="943.50"></text></g><g><title>bytes::bytes_mut::BytesMut::new (17 samples, 0.05%)</title><rect x="97.1549%" y="981" width="0.0519%" height="15" fill="rgb(205,88,11)" fg:x="31826" fg:w="17"/><text x="97.4049%" y="991.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (17 samples, 0.05%)</title><rect x="97.1549%" y="965" width="0.0519%" height="15" fill="rgb(252,69,26)" fg:x="31826" fg:w="17"/><text x="97.4049%" y="975.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (14 samples, 0.04%)</title><rect x="97.1641%" y="949" width="0.0427%" height="15" fill="rgb(246,123,37)" fg:x="31829" fg:w="14"/><text x="97.4141%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (374 samples, 1.14%)</title><rect x="96.0681%" y="1909" width="1.1417%" height="15" fill="rgb(212,205,5)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1919.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (374 samples, 1.14%)</title><rect x="96.0681%" y="1893" width="1.1417%" height="15" fill="rgb(253,148,0)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1903.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1877" width="1.1417%" height="15" fill="rgb(239,22,4)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1887.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1861" width="1.1417%" height="15" fill="rgb(226,26,53)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1871.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (374 samples, 1.14%)</title><rect x="96.0681%" y="1845" width="1.1417%" height="15" fill="rgb(225,229,45)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1855.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (374 samples, 1.14%)</title><rect x="96.0681%" y="1829" width="1.1417%" height="15" fill="rgb(220,60,37)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (374 samples, 1.14%)</title><rect x="96.0681%" y="1813" width="1.1417%" height="15" fill="rgb(217,180,35)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1823.50"></text></g><g><title>std::panicking::try (374 samples, 1.14%)</title><rect x="96.0681%" y="1797" width="1.1417%" height="15" fill="rgb(229,7,53)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (374 samples, 1.14%)</title><rect x="96.0681%" y="1781" width="1.1417%" height="15" fill="rgb(254,137,3)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (374 samples, 1.14%)</title><rect x="96.0681%" y="1765" width="1.1417%" height="15" fill="rgb(215,140,41)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1749" width="1.1417%" height="15" fill="rgb(250,80,15)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1759.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1733" width="1.1417%" height="15" fill="rgb(252,191,6)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1743.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (374 samples, 1.14%)</title><rect x="96.0681%" y="1717" width="1.1417%" height="15" fill="rgb(246,217,18)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1727.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1701" width="1.1417%" height="15" fill="rgb(223,93,7)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1711.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1685" width="1.1417%" height="15" fill="rgb(225,55,52)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1695.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1669" width="1.1417%" height="15" fill="rgb(240,31,24)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1679.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (374 samples, 1.14%)</title><rect x="96.0681%" y="1653" width="1.1417%" height="15" fill="rgb(205,56,52)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1663.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (374 samples, 1.14%)</title><rect x="96.0681%" y="1637" width="1.1417%" height="15" fill="rgb(246,146,12)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1647.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1621" width="1.1417%" height="15" fill="rgb(239,84,36)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1631.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (374 samples, 1.14%)</title><rect x="96.0681%" y="1605" width="1.1417%" height="15" fill="rgb(207,41,40)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1615.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (374 samples, 1.14%)</title><rect x="96.0681%" y="1589" width="1.1417%" height="15" fill="rgb(241,179,25)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1599.50"></text></g><g><title>tokio::coop::budget (374 samples, 1.14%)</title><rect x="96.0681%" y="1573" width="1.1417%" height="15" fill="rgb(210,0,34)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1583.50"></text></g><g><title>tokio::coop::with_budget (374 samples, 1.14%)</title><rect x="96.0681%" y="1557" width="1.1417%" height="15" fill="rgb(225,217,29)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1567.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (374 samples, 1.14%)</title><rect x="96.0681%" y="1541" width="1.1417%" height="15" fill="rgb(216,191,38)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1551.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (374 samples, 1.14%)</title><rect x="96.0681%" y="1525" width="1.1417%" height="15" fill="rgb(232,140,52)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1535.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1509" width="1.1417%" height="15" fill="rgb(223,158,51)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1519.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1493" width="1.1417%" height="15" fill="rgb(235,29,51)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1503.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (374 samples, 1.14%)</title><rect x="96.0681%" y="1477" width="1.1417%" height="15" fill="rgb(215,181,18)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1487.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1461" width="1.1417%" height="15" fill="rgb(227,125,34)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1471.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1445" width="1.1417%" height="15" fill="rgb(230,197,49)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1455.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (374 samples, 1.14%)</title><rect x="96.0681%" y="1429" width="1.1417%" height="15" fill="rgb(239,141,16)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (374 samples, 1.14%)</title><rect x="96.0681%" y="1413" width="1.1417%" height="15" fill="rgb(225,105,43)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (374 samples, 1.14%)</title><rect x="96.0681%" y="1397" width="1.1417%" height="15" fill="rgb(214,131,14)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1407.50"></text></g><g><title>std::panicking::try (374 samples, 1.14%)</title><rect x="96.0681%" y="1381" width="1.1417%" height="15" fill="rgb(229,177,11)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (374 samples, 1.14%)</title><rect x="96.0681%" y="1365" width="1.1417%" height="15" fill="rgb(231,180,14)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (374 samples, 1.14%)</title><rect x="96.0681%" y="1349" width="1.1417%" height="15" fill="rgb(232,88,2)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1333" width="1.1417%" height="15" fill="rgb(205,220,8)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1317" width="1.1417%" height="15" fill="rgb(225,23,53)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (374 samples, 1.14%)</title><rect x="96.0681%" y="1301" width="1.1417%" height="15" fill="rgb(213,62,29)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1285" width="1.1417%" height="15" fill="rgb(227,75,7)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1269" width="1.1417%" height="15" fill="rgb(207,105,14)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1279.50"></text></g><g><title>latte::req_stream::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1253" width="1.1417%" height="15" fill="rgb(245,62,29)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1263.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1237" width="1.1417%" height="15" fill="rgb(236,202,4)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1247.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (374 samples, 1.14%)</title><rect x="96.0681%" y="1221" width="1.1417%" height="15" fill="rgb(250,67,1)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1231.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (374 samples, 1.14%)</title><rect x="96.0681%" y="1205" width="1.1417%" height="15" fill="rgb(253,115,44)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1215.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (374 samples, 1.14%)</title><rect x="96.0681%" y="1189" width="1.1417%" height="15" fill="rgb(251,139,18)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1199.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (374 samples, 1.14%)</title><rect x="96.0681%" y="1173" width="1.1417%" height="15" fill="rgb(218,22,32)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1157" width="1.1417%" height="15" fill="rgb(243,53,5)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1167.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1141" width="1.1417%" height="15" fill="rgb(227,56,16)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1125" width="1.1417%" height="15" fill="rgb(245,53,0)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1109" width="1.1417%" height="15" fill="rgb(216,170,35)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1119.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1093" width="1.1417%" height="15" fill="rgb(211,200,8)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1077" width="1.1417%" height="15" fill="rgb(228,204,44)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1087.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1061" width="1.1417%" height="15" fill="rgb(214,121,17)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (374 samples, 1.14%)</title><rect x="96.0681%" y="1045" width="1.1417%" height="15" fill="rgb(233,64,38)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1055.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (374 samples, 1.14%)</title><rect x="96.0681%" y="1029" width="1.1417%" height="15" fill="rgb(253,54,19)" fg:x="31470" fg:w="374"/><text x="96.3181%" y="1039.50"></text></g><g><title>scylla::transport::session::calculate_token (66 samples, 0.20%)</title><rect x="97.0084%" y="1013" width="0.2015%" height="15" fill="rgb(253,94,18)" fg:x="31778" fg:w="66"/><text x="97.2584%" y="1023.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (59 samples, 0.18%)</title><rect x="97.0297%" y="997" width="0.1801%" height="15" fill="rgb(227,57,52)" fg:x="31785" fg:w="59"/><text x="97.2797%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.02%)</title><rect x="97.2098%" y="1333" width="0.0183%" height="15" fill="rgb(230,228,50)" fg:x="31844" fg:w="6"/><text x="97.4598%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="97.2098%" y="1317" width="0.0183%" height="15" fill="rgb(217,205,27)" fg:x="31844" fg:w="6"/><text x="97.4598%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="97.2098%" y="1301" width="0.0183%" height="15" fill="rgb(252,71,50)" fg:x="31844" fg:w="6"/><text x="97.4598%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.05%)</title><rect x="97.3014%" y="1237" width="0.0488%" height="15" fill="rgb(209,86,4)" fg:x="31874" fg:w="16"/><text x="97.5514%" y="1247.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="97.3289%" y="1221" width="0.0214%" height="15" fill="rgb(229,94,0)" fg:x="31883" fg:w="7"/><text x="97.5789%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.05%)</title><rect x="97.2984%" y="1269" width="0.0549%" height="15" fill="rgb(252,223,21)" fg:x="31873" fg:w="18"/><text x="97.5484%" y="1279.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="97.3014%" y="1253" width="0.0519%" height="15" fill="rgb(230,210,4)" fg:x="31874" fg:w="17"/><text x="97.5514%" y="1263.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="97.3808%" y="1173" width="0.0153%" height="15" fill="rgb(240,149,38)" fg:x="31900" fg:w="5"/><text x="97.6308%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="97.3747%" y="1189" width="0.0366%" height="15" fill="rgb(254,105,20)" fg:x="31898" fg:w="12"/><text x="97.6247%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1733" width="0.2137%" height="15" fill="rgb(253,87,46)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1743.50"></text></g><g><title>latte::req_stream::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1717" width="0.2137%" height="15" fill="rgb(253,116,33)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1727.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1701" width="0.2137%" height="15" fill="rgb(229,198,5)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1711.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (70 samples, 0.21%)</title><rect x="97.2098%" y="1685" width="0.2137%" height="15" fill="rgb(242,38,37)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1695.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.21%)</title><rect x="97.2098%" y="1669" width="0.2137%" height="15" fill="rgb(242,69,53)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1679.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (70 samples, 0.21%)</title><rect x="97.2098%" y="1653" width="0.2137%" height="15" fill="rgb(249,80,16)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1663.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (70 samples, 0.21%)</title><rect x="97.2098%" y="1637" width="0.2137%" height="15" fill="rgb(206,128,11)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1647.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1621" width="0.2137%" height="15" fill="rgb(212,35,20)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1631.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1605" width="0.2137%" height="15" fill="rgb(236,79,13)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1615.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1589" width="0.2137%" height="15" fill="rgb(233,123,3)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1599.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1573" width="0.2137%" height="15" fill="rgb(214,93,52)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1583.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1557" width="0.2137%" height="15" fill="rgb(251,37,40)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1567.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1541" width="0.2137%" height="15" fill="rgb(227,80,54)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1551.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1525" width="0.2137%" height="15" fill="rgb(254,48,11)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1509" width="0.2137%" height="15" fill="rgb(235,193,26)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1519.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1493" width="0.2137%" height="15" fill="rgb(229,99,21)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.21%)</title><rect x="97.2098%" y="1477" width="0.2137%" height="15" fill="rgb(211,140,41)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1487.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (70 samples, 0.21%)</title><rect x="97.2098%" y="1461" width="0.2137%" height="15" fill="rgb(240,227,30)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1471.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (70 samples, 0.21%)</title><rect x="97.2098%" y="1445" width="0.2137%" height="15" fill="rgb(215,224,45)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (70 samples, 0.21%)</title><rect x="97.2098%" y="1429" width="0.2137%" height="15" fill="rgb(206,123,31)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (70 samples, 0.21%)</title><rect x="97.2098%" y="1413" width="0.2137%" height="15" fill="rgb(210,138,16)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.21%)</title><rect x="97.2098%" y="1397" width="0.2137%" height="15" fill="rgb(228,57,28)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1407.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.21%)</title><rect x="97.2098%" y="1381" width="0.2137%" height="15" fill="rgb(242,170,10)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (70 samples, 0.21%)</title><rect x="97.2098%" y="1365" width="0.2137%" height="15" fill="rgb(228,214,39)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1375.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (70 samples, 0.21%)</title><rect x="97.2098%" y="1349" width="0.2137%" height="15" fill="rgb(218,179,33)" fg:x="31844" fg:w="70"/><text x="97.4598%" y="1359.50"></text></g><g><title>hashbrown::map::make_insert_hash (64 samples, 0.20%)</title><rect x="97.2282%" y="1333" width="0.1954%" height="15" fill="rgb(235,193,39)" fg:x="31850" fg:w="64"/><text x="97.4782%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (64 samples, 0.20%)</title><rect x="97.2282%" y="1317" width="0.1954%" height="15" fill="rgb(219,221,36)" fg:x="31850" fg:w="64"/><text x="97.4782%" y="1327.50"></text></g><g><title>&lt;scylla::transport::node::Node as core::hash::Hash&gt;::hash (64 samples, 0.20%)</title><rect x="97.2282%" y="1301" width="0.1954%" height="15" fill="rgb(248,218,19)" fg:x="31850" fg:w="64"/><text x="97.4782%" y="1311.50"></text></g><g><title>&lt;std::net::addr::SocketAddr as core::hash::Hash&gt;::hash (64 samples, 0.20%)</title><rect x="97.2282%" y="1285" width="0.1954%" height="15" fill="rgb(205,50,9)" fg:x="31850" fg:w="64"/><text x="97.4782%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (22 samples, 0.07%)</title><rect x="97.3564%" y="1269" width="0.0672%" height="15" fill="rgb(238,81,28)" fg:x="31892" fg:w="22"/><text x="97.6064%" y="1279.50"></text></g><g><title>core::hash::Hasher::write_isize (22 samples, 0.07%)</title><rect x="97.3564%" y="1253" width="0.0672%" height="15" fill="rgb(235,110,19)" fg:x="31892" fg:w="22"/><text x="97.6064%" y="1263.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.07%)</title><rect x="97.3564%" y="1237" width="0.0672%" height="15" fill="rgb(214,7,14)" fg:x="31892" fg:w="22"/><text x="97.6064%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.05%)</title><rect x="97.3686%" y="1221" width="0.0549%" height="15" fill="rgb(211,77,3)" fg:x="31896" fg:w="18"/><text x="97.6186%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.05%)</title><rect x="97.3747%" y="1205" width="0.0488%" height="15" fill="rgb(229,5,9)" fg:x="31898" fg:w="16"/><text x="97.6247%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="97.4113%" y="1189" width="0.0122%" height="15" fill="rgb(225,90,11)" fg:x="31910" fg:w="4"/><text x="97.6613%" y="1199.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load_full (4 samples, 0.01%)</title><rect x="98.0585%" y="901" width="0.0122%" height="15" fill="rgb(242,56,8)" fg:x="32122" fg:w="4"/><text x="98.3085%" y="911.50"></text></g><g><title>arc_swap::ArcSwapAny&lt;T,S&gt;::load (4 samples, 0.01%)</title><rect x="98.0585%" y="885" width="0.0122%" height="15" fill="rgb(249,212,39)" fg:x="32122" fg:w="4"/><text x="98.3085%" y="895.50"></text></g><g><title>&lt;arc_swap::strategy::hybrid::HybridStrategy&lt;Cfg&gt; as arc_swap::strategy::sealed::InnerStrategy&lt;T&gt;&gt;::load (4 samples, 0.01%)</title><rect x="98.0585%" y="869" width="0.0122%" height="15" fill="rgb(236,90,9)" fg:x="32122" fg:w="4"/><text x="98.3085%" y="879.50"></text></g><g><title>arc_swap::debt::list::LocalNode::with (4 samples, 0.01%)</title><rect x="98.0585%" y="853" width="0.0122%" height="15" fill="rgb(206,88,35)" fg:x="32122" fg:w="4"/><text x="98.3085%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="98.0585%" y="837" width="0.0122%" height="15" fill="rgb(205,126,30)" fg:x="32122" fg:w="4"/><text x="98.3085%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (69 samples, 0.21%)</title><rect x="98.0219%" y="965" width="0.2106%" height="15" fill="rgb(230,176,12)" fg:x="32110" fg:w="69"/><text x="98.2719%" y="975.50"></text></g><g><title>scylla::transport::node::Node::connection_for_token::{{closure}} (57 samples, 0.17%)</title><rect x="98.0585%" y="949" width="0.1740%" height="15" fill="rgb(243,19,9)" fg:x="32122" fg:w="57"/><text x="98.3085%" y="959.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token (57 samples, 0.17%)</title><rect x="98.0585%" y="933" width="0.1740%" height="15" fill="rgb(245,171,17)" fg:x="32122" fg:w="57"/><text x="98.3085%" y="943.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::with_connections (57 samples, 0.17%)</title><rect x="98.0585%" y="917" width="0.1740%" height="15" fill="rgb(227,52,21)" fg:x="32122" fg:w="57"/><text x="98.3085%" y="927.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::connection_for_token::{{closure}} (53 samples, 0.16%)</title><rect x="98.0707%" y="901" width="0.1618%" height="15" fill="rgb(238,69,14)" fg:x="32126" fg:w="53"/><text x="98.3207%" y="911.50"></text></g><g><title>scylla::transport::connection_pool::NodeConnectionPool::choose_random_connection_from_slice (53 samples, 0.16%)</title><rect x="98.0707%" y="885" width="0.1618%" height="15" fill="rgb(241,156,39)" fg:x="32126" fg:w="53"/><text x="98.3207%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (24 samples, 0.07%)</title><rect x="98.2386%" y="965" width="0.0733%" height="15" fill="rgb(212,227,28)" fg:x="32181" fg:w="24"/><text x="98.4886%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::connection::Connection&gt;&gt; (159 samples, 0.49%)</title><rect x="98.3210%" y="965" width="0.4854%" height="15" fill="rgb(209,118,27)" fg:x="32208" fg:w="159"/><text x="98.5710%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (159 samples, 0.49%)</title><rect x="98.3210%" y="949" width="0.4854%" height="15" fill="rgb(226,102,5)" fg:x="32208" fg:w="159"/><text x="98.5710%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (114 samples, 0.35%)</title><rect x="98.4584%" y="933" width="0.3480%" height="15" fill="rgb(223,34,3)" fg:x="32253" fg:w="114"/><text x="98.7084%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (114 samples, 0.35%)</title><rect x="98.4584%" y="917" width="0.3480%" height="15" fill="rgb(221,81,38)" fg:x="32253" fg:w="114"/><text x="98.7084%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::execute&lt;&amp;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt;::{{closure}}&gt;&gt; (8 samples, 0.02%)</title><rect x="98.8064%" y="949" width="0.0244%" height="15" fill="rgb(236,219,28)" fg:x="32367" fg:w="8"/><text x="99.0564%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (464 samples, 1.42%)</title><rect x="97.4235%" y="1029" width="1.4164%" height="15" fill="rgb(213,200,14)" fg:x="31914" fg:w="464"/><text x="97.6735%" y="1039.50"></text></g><g><title>scylla::transport::session::Session::execute_query::{{closure}} (464 samples, 1.42%)</title><rect x="97.4235%" y="1013" width="1.4164%" height="15" fill="rgb(240,33,19)" fg:x="31914" fg:w="464"/><text x="97.6735%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (464 samples, 1.42%)</title><rect x="97.4235%" y="997" width="1.4164%" height="15" fill="rgb(233,113,27)" fg:x="31914" fg:w="464"/><text x="97.6735%" y="1007.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}}::{{closure}}::{{closure}} (458 samples, 1.40%)</title><rect x="97.4418%" y="981" width="1.3981%" height="15" fill="rgb(220,221,18)" fg:x="31920" fg:w="458"/><text x="97.6918%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;scylla::transport::connection::Connection::execute&lt;&amp;alloc::borrow::Cow&lt;scylla::frame::value::SerializedValues&gt;&gt;::{{closure}}&gt;&gt; (11 samples, 0.03%)</title><rect x="98.8064%" y="965" width="0.0336%" height="15" fill="rgb(238,92,8)" fg:x="32367" fg:w="11"/><text x="99.0564%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="98.8613%" y="1013" width="0.0153%" height="15" fill="rgb(222,164,16)" fg:x="32385" fg:w="5"/><text x="99.1113%" y="1023.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="98.8949%" y="917" width="0.0122%" height="15" fill="rgb(241,119,3)" fg:x="32396" fg:w="4"/><text x="99.1449%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="98.8858%" y="997" width="0.0366%" height="15" fill="rgb(241,44,8)" fg:x="32393" fg:w="12"/><text x="99.1358%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.04%)</title><rect x="98.8858%" y="981" width="0.0366%" height="15" fill="rgb(230,36,40)" fg:x="32393" fg:w="12"/><text x="99.1358%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="98.8858%" y="965" width="0.0366%" height="15" fill="rgb(243,16,36)" fg:x="32393" fg:w="12"/><text x="99.1358%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="98.8858%" y="949" width="0.0366%" height="15" fill="rgb(231,4,26)" fg:x="32393" fg:w="12"/><text x="99.1358%" y="959.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="98.8858%" y="933" width="0.0366%" height="15" fill="rgb(240,9,31)" fg:x="32393" fg:w="12"/><text x="99.1358%" y="943.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="98.9071%" y="917" width="0.0153%" height="15" fill="rgb(207,173,15)" fg:x="32400" fg:w="5"/><text x="99.1571%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.03%)</title><rect x="98.9285%" y="997" width="0.0305%" height="15" fill="rgb(224,192,53)" fg:x="32407" fg:w="10"/><text x="99.1785%" y="1007.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (10 samples, 0.03%)</title><rect x="98.9285%" y="981" width="0.0305%" height="15" fill="rgb(223,67,28)" fg:x="32407" fg:w="10"/><text x="99.1785%" y="991.50"></text></g><g><title>&lt;scylla::transport::load_balancing::round_robin::RoundRobinPolicy as scylla::transport::load_balancing::ChildLoadBalancingPolicy&gt;::apply_child_policy (33 samples, 0.10%)</title><rect x="98.8766%" y="1013" width="0.1007%" height="15" fill="rgb(211,20,47)" fg:x="32390" fg:w="33"/><text x="99.1266%" y="1023.50"></text></g><g><title>scylla::transport::load_balancing::compute_rotation (6 samples, 0.02%)</title><rect x="98.9590%" y="997" width="0.0183%" height="15" fill="rgb(240,228,2)" fg:x="32417" fg:w="6"/><text x="99.2090%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="98.9926%" y="933" width="0.0122%" height="15" fill="rgb(248,151,12)" fg:x="32428" fg:w="4"/><text x="99.2426%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="99.0109%" y="901" width="0.0153%" height="15" fill="rgb(244,8,39)" fg:x="32434" fg:w="5"/><text x="99.2609%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="99.0109%" y="885" width="0.0153%" height="15" fill="rgb(222,26,8)" fg:x="32434" fg:w="5"/><text x="99.2609%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="99.0140%" y="869" width="0.0122%" height="15" fill="rgb(213,106,44)" fg:x="32435" fg:w="4"/><text x="99.2640%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (24 samples, 0.07%)</title><rect x="99.0262%" y="901" width="0.0733%" height="15" fill="rgb(214,129,20)" fg:x="32439" fg:w="24"/><text x="99.2762%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (24 samples, 0.07%)</title><rect x="99.0262%" y="885" width="0.0733%" height="15" fill="rgb(212,32,13)" fg:x="32439" fg:w="24"/><text x="99.2762%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (24 samples, 0.07%)</title><rect x="99.0262%" y="869" width="0.0733%" height="15" fill="rgb(208,168,33)" fg:x="32439" fg:w="24"/><text x="99.2762%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (24 samples, 0.07%)</title><rect x="99.0262%" y="853" width="0.0733%" height="15" fill="rgb(231,207,8)" fg:x="32439" fg:w="24"/><text x="99.2762%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (24 samples, 0.07%)</title><rect x="99.0262%" y="837" width="0.0733%" height="15" fill="rgb(235,219,23)" fg:x="32439" fg:w="24"/><text x="99.2762%" y="847.50"></text></g><g><title>__memcmp_avx2_movbe (15 samples, 0.05%)</title><rect x="99.0537%" y="821" width="0.0458%" height="15" fill="rgb(226,216,26)" fg:x="32448" fg:w="15"/><text x="99.3037%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (49 samples, 0.15%)</title><rect x="98.9773%" y="1013" width="0.1496%" height="15" fill="rgb(239,137,16)" fg:x="32423" fg:w="49"/><text x="99.2273%" y="1023.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan::{{closure}} (48 samples, 0.15%)</title><rect x="98.9804%" y="997" width="0.1465%" height="15" fill="rgb(207,12,36)" fg:x="32424" fg:w="48"/><text x="99.2304%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (48 samples, 0.15%)</title><rect x="98.9804%" y="981" width="0.1465%" height="15" fill="rgb(210,214,24)" fg:x="32424" fg:w="48"/><text x="99.2304%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (48 samples, 0.15%)</title><rect x="98.9804%" y="965" width="0.1465%" height="15" fill="rgb(206,56,30)" fg:x="32424" fg:w="48"/><text x="99.2304%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.14%)</title><rect x="98.9896%" y="949" width="0.1374%" height="15" fill="rgb(228,143,26)" fg:x="32427" fg:w="45"/><text x="99.2396%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.12%)</title><rect x="99.0048%" y="933" width="0.1221%" height="15" fill="rgb(216,218,46)" fg:x="32432" fg:w="40"/><text x="99.2548%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.12%)</title><rect x="99.0109%" y="917" width="0.1160%" height="15" fill="rgb(206,6,19)" fg:x="32434" fg:w="38"/><text x="99.2609%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.03%)</title><rect x="99.0995%" y="901" width="0.0275%" height="15" fill="rgb(239,177,51)" fg:x="32463" fg:w="9"/><text x="99.3495%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.03%)</title><rect x="99.0995%" y="885" width="0.0275%" height="15" fill="rgb(216,55,25)" fg:x="32463" fg:w="9"/><text x="99.3495%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.03%)</title><rect x="99.0995%" y="869" width="0.0275%" height="15" fill="rgb(231,163,29)" fg:x="32463" fg:w="9"/><text x="99.3495%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="99.1025%" y="853" width="0.0244%" height="15" fill="rgb(232,149,50)" fg:x="32464" fg:w="8"/><text x="99.3525%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (8 samples, 0.02%)</title><rect x="99.1025%" y="837" width="0.0244%" height="15" fill="rgb(223,142,48)" fg:x="32464" fg:w="8"/><text x="99.3525%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (8 samples, 0.02%)</title><rect x="99.1025%" y="821" width="0.0244%" height="15" fill="rgb(245,83,23)" fg:x="32464" fg:w="8"/><text x="99.3525%" y="831.50"></text></g><g><title>core::core_arch::simd::i8x16::new (8 samples, 0.02%)</title><rect x="99.1025%" y="805" width="0.0244%" height="15" fill="rgb(224,63,2)" fg:x="32464" fg:w="8"/><text x="99.3525%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="99.1269%" y="997" width="0.0214%" height="15" fill="rgb(218,65,53)" fg:x="32472" fg:w="7"/><text x="99.3769%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="99.1269%" y="981" width="0.0214%" height="15" fill="rgb(221,84,29)" fg:x="32472" fg:w="7"/><text x="99.3769%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (9 samples, 0.03%)</title><rect x="99.1483%" y="933" width="0.0275%" height="15" fill="rgb(234,0,32)" fg:x="32479" fg:w="9"/><text x="99.3983%" y="943.50"></text></g><g><title>std::collections::hash::map::RandomState::new (9 samples, 0.03%)</title><rect x="99.1483%" y="917" width="0.0275%" height="15" fill="rgb(206,20,16)" fg:x="32479" fg:w="9"/><text x="99.3983%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.03%)</title><rect x="99.1483%" y="901" width="0.0275%" height="15" fill="rgb(244,172,18)" fg:x="32479" fg:w="9"/><text x="99.3983%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.03%)</title><rect x="99.1483%" y="885" width="0.0275%" height="15" fill="rgb(254,133,1)" fg:x="32479" fg:w="9"/><text x="99.3983%" y="895.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (7 samples, 0.02%)</title><rect x="99.1544%" y="869" width="0.0214%" height="15" fill="rgb(222,206,41)" fg:x="32481" fg:w="7"/><text x="99.4044%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (7 samples, 0.02%)</title><rect x="99.1544%" y="853" width="0.0214%" height="15" fill="rgb(212,3,42)" fg:x="32481" fg:w="7"/><text x="99.4044%" y="863.50"></text></g><g><title>itertools::Itertools::unique (10 samples, 0.03%)</title><rect x="99.1483%" y="997" width="0.0305%" height="15" fill="rgb(241,11,4)" fg:x="32479" fg:w="10"/><text x="99.3983%" y="1007.50"></text></g><g><title>itertools::unique_impl::unique (10 samples, 0.03%)</title><rect x="99.1483%" y="981" width="0.0305%" height="15" fill="rgb(205,19,26)" fg:x="32479" fg:w="10"/><text x="99.3983%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (10 samples, 0.03%)</title><rect x="99.1483%" y="965" width="0.0305%" height="15" fill="rgb(210,179,32)" fg:x="32479" fg:w="10"/><text x="99.3983%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (10 samples, 0.03%)</title><rect x="99.1483%" y="949" width="0.0305%" height="15" fill="rgb(227,116,49)" fg:x="32479" fg:w="10"/><text x="99.3983%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::range (10 samples, 0.03%)</title><rect x="99.1788%" y="981" width="0.0305%" height="15" fill="rgb(211,146,6)" fg:x="32489" fg:w="10"/><text x="99.4288%" y="991.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::range_search (4 samples, 0.01%)</title><rect x="99.1971%" y="965" width="0.0122%" height="15" fill="rgb(219,44,39)" fg:x="32495" fg:w="4"/><text x="99.4471%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (588 samples, 1.79%)</title><rect x="97.4235%" y="1061" width="1.7950%" height="15" fill="rgb(234,128,11)" fg:x="31914" fg:w="588"/><text x="97.6735%" y="1071.50">&lt;..</text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (588 samples, 1.79%)</title><rect x="97.4235%" y="1045" width="1.7950%" height="15" fill="rgb(220,183,53)" fg:x="31914" fg:w="588"/><text x="97.6735%" y="1055.50">s..</text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (124 samples, 0.38%)</title><rect x="98.8400%" y="1029" width="0.3785%" height="15" fill="rgb(213,219,32)" fg:x="32378" fg:w="124"/><text x="99.0900%" y="1039.50"></text></g><g><title>scylla::transport::load_balancing::token_aware::TokenAwarePolicy::simple_strategy_replicas (30 samples, 0.09%)</title><rect x="99.1269%" y="1013" width="0.0916%" height="15" fill="rgb(232,156,16)" fg:x="32472" fg:w="30"/><text x="99.3769%" y="1023.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range (13 samples, 0.04%)</title><rect x="99.1788%" y="997" width="0.0397%" height="15" fill="rgb(246,135,34)" fg:x="32489" fg:w="13"/><text x="99.4288%" y="1007.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.05%)</title><rect x="99.2185%" y="1029" width="0.0458%" height="15" fill="rgb(241,99,0)" fg:x="32502" fg:w="15"/><text x="99.4685%" y="1039.50"></text></g><g><title>bytes::bytes_mut::&lt;impl core::convert::From&lt;bytes::bytes_mut::BytesMut&gt; for bytes::bytes::Bytes&gt;::from (15 samples, 0.05%)</title><rect x="99.2185%" y="1013" width="0.0458%" height="15" fill="rgb(222,103,45)" fg:x="32502" fg:w="15"/><text x="99.4685%" y="1023.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (14 samples, 0.04%)</title><rect x="99.2216%" y="997" width="0.0427%" height="15" fill="rgb(212,57,4)" fg:x="32503" fg:w="14"/><text x="99.4716%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (4 samples, 0.01%)</title><rect x="99.2796%" y="981" width="0.0122%" height="15" fill="rgb(215,68,47)" fg:x="32522" fg:w="4"/><text x="99.5296%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (687 samples, 2.10%)</title><rect x="97.2098%" y="1909" width="2.0972%" height="15" fill="rgb(230,84,2)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1919.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (687 samples, 2.10%)</title><rect x="97.2098%" y="1893" width="2.0972%" height="15" fill="rgb(220,102,14)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1903.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (687 samples, 2.10%)</title><rect x="97.2098%" y="1877" width="2.0972%" height="15" fill="rgb(240,10,32)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1887.50">t..</text></g><g><title>std::panic::catch_unwind (687 samples, 2.10%)</title><rect x="97.2098%" y="1861" width="2.0972%" height="15" fill="rgb(215,47,27)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1871.50">s..</text></g><g><title>std::panicking::try (687 samples, 2.10%)</title><rect x="97.2098%" y="1845" width="2.0972%" height="15" fill="rgb(233,188,43)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1855.50">s..</text></g><g><title>std::panicking::try::do_call (687 samples, 2.10%)</title><rect x="97.2098%" y="1829" width="2.0972%" height="15" fill="rgb(253,190,1)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1839.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (687 samples, 2.10%)</title><rect x="97.2098%" y="1813" width="2.0972%" height="15" fill="rgb(206,114,52)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1823.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (687 samples, 2.10%)</title><rect x="97.2098%" y="1797" width="2.0972%" height="15" fill="rgb(233,120,37)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1807.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (687 samples, 2.10%)</title><rect x="97.2098%" y="1781" width="2.0972%" height="15" fill="rgb(214,52,39)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1791.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (687 samples, 2.10%)</title><rect x="97.2098%" y="1765" width="2.0972%" height="15" fill="rgb(223,80,29)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1775.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (687 samples, 2.10%)</title><rect x="97.2098%" y="1749" width="2.0972%" height="15" fill="rgb(230,101,40)" fg:x="31844" fg:w="687"/><text x="97.4598%" y="1759.50">t..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1733" width="1.8835%" height="15" fill="rgb(219,211,8)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1743.50">&lt;..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1717" width="1.8835%" height="15" fill="rgb(252,126,28)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1727.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::run (617 samples, 1.88%)</title><rect x="97.4235%" y="1701" width="1.8835%" height="15" fill="rgb(215,56,38)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1711.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (617 samples, 1.88%)</title><rect x="97.4235%" y="1685" width="1.8835%" height="15" fill="rgb(249,55,44)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1695.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1669" width="1.8835%" height="15" fill="rgb(220,221,32)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1679.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (617 samples, 1.88%)</title><rect x="97.4235%" y="1653" width="1.8835%" height="15" fill="rgb(212,216,41)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1663.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (617 samples, 1.88%)</title><rect x="97.4235%" y="1637" width="1.8835%" height="15" fill="rgb(228,213,43)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1647.50">t..</text></g><g><title>tokio::coop::budget (617 samples, 1.88%)</title><rect x="97.4235%" y="1621" width="1.8835%" height="15" fill="rgb(211,31,26)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1631.50">t..</text></g><g><title>tokio::coop::with_budget (617 samples, 1.88%)</title><rect x="97.4235%" y="1605" width="1.8835%" height="15" fill="rgb(229,202,19)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1615.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (617 samples, 1.88%)</title><rect x="97.4235%" y="1589" width="1.8835%" height="15" fill="rgb(229,105,46)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1599.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (617 samples, 1.88%)</title><rect x="97.4235%" y="1573" width="1.8835%" height="15" fill="rgb(235,108,1)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1583.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1557" width="1.8835%" height="15" fill="rgb(245,111,35)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1567.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1541" width="1.8835%" height="15" fill="rgb(219,185,31)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1551.50">t..</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (617 samples, 1.88%)</title><rect x="97.4235%" y="1525" width="1.8835%" height="15" fill="rgb(214,4,43)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1535.50">t..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1509" width="1.8835%" height="15" fill="rgb(235,227,40)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1519.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1493" width="1.8835%" height="15" fill="rgb(230,88,30)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1503.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (617 samples, 1.88%)</title><rect x="97.4235%" y="1477" width="1.8835%" height="15" fill="rgb(216,217,1)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1487.50">t..</text></g><g><title>tokio::runtime::task::harness::poll_future (617 samples, 1.88%)</title><rect x="97.4235%" y="1461" width="1.8835%" height="15" fill="rgb(248,139,50)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1471.50">t..</text></g><g><title>std::panic::catch_unwind (617 samples, 1.88%)</title><rect x="97.4235%" y="1445" width="1.8835%" height="15" fill="rgb(233,1,21)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1455.50">s..</text></g><g><title>std::panicking::try (617 samples, 1.88%)</title><rect x="97.4235%" y="1429" width="1.8835%" height="15" fill="rgb(215,183,12)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1439.50">s..</text></g><g><title>std::panicking::try::do_call (617 samples, 1.88%)</title><rect x="97.4235%" y="1413" width="1.8835%" height="15" fill="rgb(229,104,42)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1423.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (617 samples, 1.88%)</title><rect x="97.4235%" y="1397" width="1.8835%" height="15" fill="rgb(243,34,48)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1407.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1381" width="1.8835%" height="15" fill="rgb(239,11,44)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1391.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1365" width="1.8835%" height="15" fill="rgb(231,98,35)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1375.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (617 samples, 1.88%)</title><rect x="97.4235%" y="1349" width="1.8835%" height="15" fill="rgb(233,28,25)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1359.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1333" width="1.8835%" height="15" fill="rgb(234,123,11)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1343.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1317" width="1.8835%" height="15" fill="rgb(220,69,3)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1327.50">&lt;..</text></g><g><title>latte::req_stream::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1301" width="1.8835%" height="15" fill="rgb(214,64,36)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1311.50">l..</text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1285" width="1.8835%" height="15" fill="rgb(211,138,32)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1295.50">&lt;..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (617 samples, 1.88%)</title><rect x="97.4235%" y="1269" width="1.8835%" height="15" fill="rgb(213,118,47)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1279.50">f..</text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (617 samples, 1.88%)</title><rect x="97.4235%" y="1253" width="1.8835%" height="15" fill="rgb(243,124,49)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1263.50">&lt;..</text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (617 samples, 1.88%)</title><rect x="97.4235%" y="1237" width="1.8835%" height="15" fill="rgb(221,30,28)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1247.50">f..</text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (617 samples, 1.88%)</title><rect x="97.4235%" y="1221" width="1.8835%" height="15" fill="rgb(246,37,13)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1231.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1205" width="1.8835%" height="15" fill="rgb(249,66,14)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1215.50">&lt;..</text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1189" width="1.8835%" height="15" fill="rgb(213,166,5)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1199.50">l..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1173" width="1.8835%" height="15" fill="rgb(221,66,24)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1183.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1157" width="1.8835%" height="15" fill="rgb(210,132,17)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1167.50">&lt;..</text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1141" width="1.8835%" height="15" fill="rgb(243,202,5)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1151.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1125" width="1.8835%" height="15" fill="rgb(233,70,48)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1135.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1109" width="1.8835%" height="15" fill="rgb(238,41,26)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1119.50">s..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 1.88%)</title><rect x="97.4235%" y="1093" width="1.8835%" height="15" fill="rgb(241,19,31)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1103.50">&lt;..</text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (617 samples, 1.88%)</title><rect x="97.4235%" y="1077" width="1.8835%" height="15" fill="rgb(214,76,10)" fg:x="31914" fg:w="617"/><text x="97.6735%" y="1087.50">s..</text></g><g><title>scylla::transport::session::calculate_token (29 samples, 0.09%)</title><rect x="99.2185%" y="1061" width="0.0885%" height="15" fill="rgb(254,202,22)" fg:x="32502" fg:w="29"/><text x="99.4685%" y="1071.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (29 samples, 0.09%)</title><rect x="99.2185%" y="1045" width="0.0885%" height="15" fill="rgb(214,72,24)" fg:x="32502" fg:w="29"/><text x="99.4685%" y="1055.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (14 samples, 0.04%)</title><rect x="99.2643%" y="1029" width="0.0427%" height="15" fill="rgb(221,92,46)" fg:x="32517" fg:w="14"/><text x="99.5143%" y="1039.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (14 samples, 0.04%)</title><rect x="99.2643%" y="1013" width="0.0427%" height="15" fill="rgb(246,13,50)" fg:x="32517" fg:w="14"/><text x="99.5143%" y="1023.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (14 samples, 0.04%)</title><rect x="99.2643%" y="997" width="0.0427%" height="15" fill="rgb(240,165,38)" fg:x="32517" fg:w="14"/><text x="99.5143%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.03%)</title><rect x="99.3284%" y="1221" width="0.0275%" height="15" fill="rgb(241,24,51)" fg:x="32538" fg:w="9"/><text x="99.5784%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="99.3559%" y="1205" width="0.0122%" height="15" fill="rgb(227,51,44)" fg:x="32547" fg:w="4"/><text x="99.6059%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="99.3681%" y="1109" width="0.0122%" height="15" fill="rgb(231,121,3)" fg:x="32551" fg:w="4"/><text x="99.6181%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.07%)</title><rect x="99.3162%" y="1237" width="0.0733%" height="15" fill="rgb(245,3,41)" fg:x="32534" fg:w="24"/><text x="99.5662%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 0.03%)</title><rect x="99.3559%" y="1221" width="0.0336%" height="15" fill="rgb(214,13,26)" fg:x="32547" fg:w="11"/><text x="99.6059%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1205" width="0.0214%" height="15" fill="rgb(252,75,11)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1189" width="0.0214%" height="15" fill="rgb(218,226,17)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::UniqueBy&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1173" width="0.0214%" height="15" fill="rgb(248,89,38)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1157" width="0.0214%" height="15" fill="rgb(237,73,46)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1141" width="0.0214%" height="15" fill="rgb(242,78,33)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt;&gt; (7 samples, 0.02%)</title><rect x="99.3681%" y="1125" width="0.0214%" height="15" fill="rgb(235,60,3)" fg:x="32551" fg:w="7"/><text x="99.6181%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="99.3895%" y="1237" width="0.0244%" height="15" fill="rgb(216,172,19)" fg:x="32558" fg:w="8"/><text x="99.6395%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.02%)</title><rect x="99.4139%" y="1237" width="0.0153%" height="15" fill="rgb(227,6,42)" fg:x="32566" fg:w="5"/><text x="99.6639%" y="1247.50"></text></g><g><title>__GI___libc_malloc (16 samples, 0.05%)</title><rect x="99.4353%" y="1125" width="0.0488%" height="15" fill="rgb(223,207,42)" fg:x="32573" fg:w="16"/><text x="99.6853%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.08%)</title><rect x="99.4291%" y="1173" width="0.0763%" height="15" fill="rgb(246,138,30)" fg:x="32571" fg:w="25"/><text x="99.6791%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.08%)</title><rect x="99.4291%" y="1157" width="0.0763%" height="15" fill="rgb(251,199,47)" fg:x="32571" fg:w="25"/><text x="99.6791%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.07%)</title><rect x="99.4322%" y="1141" width="0.0733%" height="15" fill="rgb(228,218,44)" fg:x="32572" fg:w="24"/><text x="99.6822%" y="1151.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="99.4933%" y="1125" width="0.0122%" height="15" fill="rgb(220,68,6)" fg:x="32592" fg:w="4"/><text x="99.7433%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (27 samples, 0.08%)</title><rect x="99.4291%" y="1237" width="0.0824%" height="15" fill="rgb(240,60,26)" fg:x="32571" fg:w="27"/><text x="99.6791%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.08%)</title><rect x="99.4291%" y="1221" width="0.0824%" height="15" fill="rgb(211,200,19)" fg:x="32571" fg:w="27"/><text x="99.6791%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.08%)</title><rect x="99.4291%" y="1205" width="0.0824%" height="15" fill="rgb(242,145,30)" fg:x="32571" fg:w="27"/><text x="99.6791%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.08%)</title><rect x="99.4291%" y="1189" width="0.0824%" height="15" fill="rgb(225,64,13)" fg:x="32571" fg:w="27"/><text x="99.6791%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 0.20%)</title><rect x="99.3162%" y="1253" width="0.1984%" height="15" fill="rgb(218,103,35)" fg:x="32534" fg:w="65"/><text x="99.5662%" y="1263.50"></text></g><g><title>__memcpy_avx_unaligned (10 samples, 0.03%)</title><rect x="99.5146%" y="1253" width="0.0305%" height="15" fill="rgb(216,93,46)" fg:x="32599" fg:w="10"/><text x="99.7646%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (87 samples, 0.27%)</title><rect x="99.3070%" y="1269" width="0.2656%" height="15" fill="rgb(225,159,27)" fg:x="32531" fg:w="87"/><text x="99.5570%" y="1279.50"></text></g><g><title>__memmove_avx_unaligned_erms (9 samples, 0.03%)</title><rect x="99.5451%" y="1253" width="0.0275%" height="15" fill="rgb(225,204,11)" fg:x="32609" fg:w="9"/><text x="99.7951%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (89 samples, 0.27%)</title><rect x="99.3070%" y="1317" width="0.2717%" height="15" fill="rgb(205,56,4)" fg:x="32531" fg:w="89"/><text x="99.5570%" y="1327.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (89 samples, 0.27%)</title><rect x="99.3070%" y="1301" width="0.2717%" height="15" fill="rgb(206,6,35)" fg:x="32531" fg:w="89"/><text x="99.5570%" y="1311.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (89 samples, 0.27%)</title><rect x="99.3070%" y="1285" width="0.2717%" height="15" fill="rgb(247,73,52)" fg:x="32531" fg:w="89"/><text x="99.5570%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (91 samples, 0.28%)</title><rect x="99.3070%" y="1909" width="0.2778%" height="15" fill="rgb(246,97,4)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1919.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (91 samples, 0.28%)</title><rect x="99.3070%" y="1893" width="0.2778%" height="15" fill="rgb(212,37,15)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1903.50"></text></g><g><title>tokio::coop::budget (91 samples, 0.28%)</title><rect x="99.3070%" y="1877" width="0.2778%" height="15" fill="rgb(208,130,40)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1887.50"></text></g><g><title>tokio::coop::with_budget (91 samples, 0.28%)</title><rect x="99.3070%" y="1861" width="0.2778%" height="15" fill="rgb(236,55,29)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (91 samples, 0.28%)</title><rect x="99.3070%" y="1845" width="0.2778%" height="15" fill="rgb(209,156,45)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1855.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (91 samples, 0.28%)</title><rect x="99.3070%" y="1829" width="0.2778%" height="15" fill="rgb(249,107,4)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1839.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1813" width="0.2778%" height="15" fill="rgb(227,7,13)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1823.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1797" width="0.2778%" height="15" fill="rgb(250,129,14)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1807.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (91 samples, 0.28%)</title><rect x="99.3070%" y="1781" width="0.2778%" height="15" fill="rgb(229,92,13)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1791.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1765" width="0.2778%" height="15" fill="rgb(245,98,39)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1749" width="0.2778%" height="15" fill="rgb(234,135,48)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (91 samples, 0.28%)</title><rect x="99.3070%" y="1733" width="0.2778%" height="15" fill="rgb(230,98,28)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (91 samples, 0.28%)</title><rect x="99.3070%" y="1717" width="0.2778%" height="15" fill="rgb(223,121,0)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1727.50"></text></g><g><title>std::panic::catch_unwind (91 samples, 0.28%)</title><rect x="99.3070%" y="1701" width="0.2778%" height="15" fill="rgb(234,173,33)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1711.50"></text></g><g><title>std::panicking::try (91 samples, 0.28%)</title><rect x="99.3070%" y="1685" width="0.2778%" height="15" fill="rgb(245,47,8)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1695.50"></text></g><g><title>std::panicking::try::do_call (91 samples, 0.28%)</title><rect x="99.3070%" y="1669" width="0.2778%" height="15" fill="rgb(205,17,20)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1679.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (91 samples, 0.28%)</title><rect x="99.3070%" y="1653" width="0.2778%" height="15" fill="rgb(232,151,16)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1663.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1637" width="0.2778%" height="15" fill="rgb(208,30,32)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1647.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1621" width="0.2778%" height="15" fill="rgb(254,26,3)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1631.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (91 samples, 0.28%)</title><rect x="99.3070%" y="1605" width="0.2778%" height="15" fill="rgb(240,177,30)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1615.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1589" width="0.2778%" height="15" fill="rgb(248,76,44)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1599.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1573" width="0.2778%" height="15" fill="rgb(241,186,54)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1583.50"></text></g><g><title>latte::req_stream::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1557" width="0.2778%" height="15" fill="rgb(249,171,29)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1567.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1541" width="0.2778%" height="15" fill="rgb(237,151,44)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1551.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (91 samples, 0.28%)</title><rect x="99.3070%" y="1525" width="0.2778%" height="15" fill="rgb(228,174,30)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1535.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (91 samples, 0.28%)</title><rect x="99.3070%" y="1509" width="0.2778%" height="15" fill="rgb(252,14,37)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1519.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (91 samples, 0.28%)</title><rect x="99.3070%" y="1493" width="0.2778%" height="15" fill="rgb(207,111,40)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1503.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (91 samples, 0.28%)</title><rect x="99.3070%" y="1477" width="0.2778%" height="15" fill="rgb(248,171,54)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1461" width="0.2778%" height="15" fill="rgb(211,127,2)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1471.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1445" width="0.2778%" height="15" fill="rgb(236,87,47)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1455.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1429" width="0.2778%" height="15" fill="rgb(223,190,45)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1413" width="0.2778%" height="15" fill="rgb(215,5,16)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1423.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1397" width="0.2778%" height="15" fill="rgb(252,82,33)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1381" width="0.2778%" height="15" fill="rgb(247,213,44)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1391.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1365" width="0.2778%" height="15" fill="rgb(205,196,44)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.28%)</title><rect x="99.3070%" y="1349" width="0.2778%" height="15" fill="rgb(237,96,54)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1359.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (91 samples, 0.28%)</title><rect x="99.3070%" y="1333" width="0.2778%" height="15" fill="rgb(230,113,34)" fg:x="32531" fg:w="91"/><text x="99.5570%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="99.5848%" y="1093" width="0.0214%" height="15" fill="rgb(221,224,12)" fg:x="32622" fg:w="7"/><text x="99.8348%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="99.5848%" y="1077" width="0.0214%" height="15" fill="rgb(219,112,44)" fg:x="32622" fg:w="7"/><text x="99.8348%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (6 samples, 0.02%)</title><rect x="99.6062%" y="1093" width="0.0183%" height="15" fill="rgb(210,31,13)" fg:x="32629" fg:w="6"/><text x="99.8562%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (6 samples, 0.02%)</title><rect x="99.6062%" y="1077" width="0.0183%" height="15" fill="rgb(230,25,16)" fg:x="32629" fg:w="6"/><text x="99.8562%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt; (6 samples, 0.02%)</title><rect x="99.6062%" y="1061" width="0.0183%" height="15" fill="rgb(246,108,53)" fg:x="32629" fg:w="6"/><text x="99.8562%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt; (6 samples, 0.02%)</title><rect x="99.6062%" y="1045" width="0.0183%" height="15" fill="rgb(241,172,50)" fg:x="32629" fg:w="6"/><text x="99.8562%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="99.6062%" y="1029" width="0.0183%" height="15" fill="rgb(235,141,10)" fg:x="32629" fg:w="6"/><text x="99.8562%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.02%)</title><rect x="99.6093%" y="1013" width="0.0153%" height="15" fill="rgb(220,174,43)" fg:x="32630" fg:w="5"/><text x="99.8593%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.02%)</title><rect x="99.6093%" y="997" width="0.0153%" height="15" fill="rgb(215,181,40)" fg:x="32630" fg:w="5"/><text x="99.8593%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (16 samples, 0.05%)</title><rect x="99.5848%" y="1109" width="0.0488%" height="15" fill="rgb(230,97,2)" fg:x="32622" fg:w="16"/><text x="99.8348%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (5 samples, 0.02%)</title><rect x="99.6337%" y="1109" width="0.0153%" height="15" fill="rgb(211,25,27)" fg:x="32638" fg:w="5"/><text x="99.8837%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.02%)</title><rect x="99.6337%" y="1093" width="0.0153%" height="15" fill="rgb(230,87,26)" fg:x="32638" fg:w="5"/><text x="99.8837%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.07%)</title><rect x="99.5848%" y="1125" width="0.0672%" height="15" fill="rgb(227,160,17)" fg:x="32622" fg:w="22"/><text x="99.8348%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 0.12%)</title><rect x="99.5848%" y="1253" width="0.1191%" height="15" fill="rgb(244,85,34)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 0.12%)</title><rect x="99.5848%" y="1237" width="0.1191%" height="15" fill="rgb(207,70,0)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::take::Take&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1221" width="0.1191%" height="15" fill="rgb(223,129,7)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::Unique&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1205" width="0.1191%" height="15" fill="rgb(246,105,7)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::unique_impl::UniqueBy&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Range&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;,scylla::transport::cluster::ClusterData::ring_range::{{closure}}&gt;,core::iter::adapters::cloned::Cloned&lt;alloc::collections::btree::map::Values&lt;scylla::routing::Token,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;&gt;&gt;&gt;&gt;,alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1189" width="0.1191%" height="15" fill="rgb(215,154,42)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,()&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1173" width="0.1191%" height="15" fill="rgb(220,215,30)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,(),std::collections::hash::map::RandomState&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1157" width="0.1191%" height="15" fill="rgb(228,81,51)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::sync::Arc&lt;scylla::transport::node::Node&gt;,())&gt;&gt; (39 samples, 0.12%)</title><rect x="99.5848%" y="1141" width="0.1191%" height="15" fill="rgb(247,71,54)" fg:x="32622" fg:w="39"/><text x="99.8348%" y="1151.50"></text></g><g><title>__GI___libc_free (17 samples, 0.05%)</title><rect x="99.6520%" y="1125" width="0.0519%" height="15" fill="rgb(234,176,34)" fg:x="32644" fg:w="17"/><text x="99.9020%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (4 samples, 0.01%)</title><rect x="99.7405%" y="1109" width="0.0122%" height="15" fill="rgb(241,103,54)" fg:x="32673" fg:w="4"/><text x="99.9905%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (6 samples, 0.02%)</title><rect x="99.7527%" y="1077" width="0.0183%" height="15" fill="rgb(228,22,34)" fg:x="32677" fg:w="6"/><text x="100.0027%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (6 samples, 0.02%)</title><rect x="99.7527%" y="1061" width="0.0183%" height="15" fill="rgb(241,179,48)" fg:x="32677" fg:w="6"/><text x="100.0027%" y="1071.50"></text></g><g><title>alloc::collections::btree::mem::replace (11 samples, 0.03%)</title><rect x="99.7405%" y="1125" width="0.0336%" height="15" fill="rgb(235,167,37)" fg:x="32673" fg:w="11"/><text x="99.9905%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked::{{closure}} (7 samples, 0.02%)</title><rect x="99.7527%" y="1109" width="0.0214%" height="15" fill="rgb(213,109,30)" fg:x="32677" fg:w="7"/><text x="100.0027%" y="1119.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (7 samples, 0.02%)</title><rect x="99.7527%" y="1093" width="0.0214%" height="15" fill="rgb(222,172,16)" fg:x="32677" fg:w="7"/><text x="100.0027%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::Range&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.06%)</title><rect x="99.7283%" y="1173" width="0.0580%" height="15" fill="rgb(233,192,5)" fg:x="32669" fg:w="19"/><text x="99.9783%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_checked (19 samples, 0.06%)</title><rect x="99.7283%" y="1157" width="0.0580%" height="15" fill="rgb(247,189,41)" fg:x="32669" fg:w="19"/><text x="99.9783%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::perform_next_checked (19 samples, 0.06%)</title><rect x="99.7283%" y="1141" width="0.0580%" height="15" fill="rgb(218,134,47)" fg:x="32669" fg:w="19"/><text x="99.9783%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::LeafRange&lt;BorrowType,K,V&gt;::is_empty (4 samples, 0.01%)</title><rect x="99.7741%" y="1125" width="0.0122%" height="15" fill="rgb(216,29,3)" fg:x="32684" fg:w="4"/><text x="100.0241%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="99.7741%" y="1109" width="0.0122%" height="15" fill="rgb(246,140,12)" fg:x="32684" fg:w="4"/><text x="100.0241%" y="1119.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.13%)</title><rect x="99.7863%" y="1093" width="0.1343%" height="15" fill="rgb(230,136,11)" fg:x="32688" fg:w="44"/><text x="100.0363%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.21%)</title><rect x="99.7253%" y="1221" width="0.2106%" height="15" fill="rgb(247,22,47)" fg:x="32668" fg:w="69"/><text x="99.9753%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.21%)</title><rect x="99.7283%" y="1205" width="0.2076%" height="15" fill="rgb(218,84,22)" fg:x="32669" fg:w="68"/><text x="99.9783%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.21%)</title><rect x="99.7283%" y="1189" width="0.2076%" height="15" fill="rgb(216,87,39)" fg:x="32669" fg:w="68"/><text x="99.9783%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (49 samples, 0.15%)</title><rect x="99.7863%" y="1173" width="0.1496%" height="15" fill="rgb(221,178,8)" fg:x="32688" fg:w="49"/><text x="100.0363%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (49 samples, 0.15%)</title><rect x="99.7863%" y="1157" width="0.1496%" height="15" fill="rgb(230,42,11)" fg:x="32688" fg:w="49"/><text x="100.0363%" y="1167.50"></text></g><g><title>scylla::transport::cluster::ClusterData::ring_range::{{closure}} (49 samples, 0.15%)</title><rect x="99.7863%" y="1141" width="0.1496%" height="15" fill="rgb(237,229,4)" fg:x="32688" fg:w="49"/><text x="100.0363%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.15%)</title><rect x="99.7863%" y="1125" width="0.1496%" height="15" fill="rgb(222,31,33)" fg:x="32688" fg:w="49"/><text x="100.0363%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.15%)</title><rect x="99.7863%" y="1109" width="0.1496%" height="15" fill="rgb(210,17,39)" fg:x="32688" fg:w="49"/><text x="100.0363%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.02%)</title><rect x="99.9206%" y="1093" width="0.0153%" height="15" fill="rgb(244,93,20)" fg:x="32732" fg:w="5"/><text x="100.1706%" y="1103.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="99.9359%" y="1205" width="0.0122%" height="15" fill="rgb(210,40,47)" fg:x="32737" fg:w="4"/><text x="100.1859%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.02%)</title><rect x="99.9359%" y="1221" width="0.0183%" height="15" fill="rgb(239,211,47)" fg:x="32737" fg:w="6"/><text x="100.1859%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.01%)</title><rect x="99.9573%" y="1157" width="0.0122%" height="15" fill="rgb(251,223,49)" fg:x="32744" fg:w="4"/><text x="100.2073%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (128 samples, 0.39%)</title><rect x="99.5848%" y="1909" width="0.3907%" height="15" fill="rgb(221,149,5)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1919.50"></text></g><g><title>tokio::coop::budget (128 samples, 0.39%)</title><rect x="99.5848%" y="1893" width="0.3907%" height="15" fill="rgb(219,224,51)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1903.50"></text></g><g><title>tokio::coop::with_budget (128 samples, 0.39%)</title><rect x="99.5848%" y="1877" width="0.3907%" height="15" fill="rgb(223,7,8)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1887.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (128 samples, 0.39%)</title><rect x="99.5848%" y="1861" width="0.3907%" height="15" fill="rgb(241,217,22)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1871.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (128 samples, 0.39%)</title><rect x="99.5848%" y="1845" width="0.3907%" height="15" fill="rgb(248,209,0)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1855.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1829" width="0.3907%" height="15" fill="rgb(217,205,4)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1839.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1813" width="0.3907%" height="15" fill="rgb(228,124,39)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1823.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (128 samples, 0.39%)</title><rect x="99.5848%" y="1797" width="0.3907%" height="15" fill="rgb(250,116,42)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1807.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1781" width="0.3907%" height="15" fill="rgb(223,202,9)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1791.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1765" width="0.3907%" height="15" fill="rgb(242,222,40)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1775.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (128 samples, 0.39%)</title><rect x="99.5848%" y="1749" width="0.3907%" height="15" fill="rgb(229,99,46)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1759.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (128 samples, 0.39%)</title><rect x="99.5848%" y="1733" width="0.3907%" height="15" fill="rgb(225,56,46)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (128 samples, 0.39%)</title><rect x="99.5848%" y="1717" width="0.3907%" height="15" fill="rgb(227,94,5)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1727.50"></text></g><g><title>std::panicking::try (128 samples, 0.39%)</title><rect x="99.5848%" y="1701" width="0.3907%" height="15" fill="rgb(205,112,38)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (128 samples, 0.39%)</title><rect x="99.5848%" y="1685" width="0.3907%" height="15" fill="rgb(231,133,46)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1695.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (128 samples, 0.39%)</title><rect x="99.5848%" y="1669" width="0.3907%" height="15" fill="rgb(217,16,9)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1679.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1653" width="0.3907%" height="15" fill="rgb(249,173,9)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1663.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1637" width="0.3907%" height="15" fill="rgb(205,163,53)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1647.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (128 samples, 0.39%)</title><rect x="99.5848%" y="1621" width="0.3907%" height="15" fill="rgb(217,54,41)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1631.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1605" width="0.3907%" height="15" fill="rgb(228,216,12)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1615.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1589" width="0.3907%" height="15" fill="rgb(244,228,15)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1599.50"></text></g><g><title>latte::req_stream::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1573" width="0.3907%" height="15" fill="rgb(221,176,53)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1583.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1557" width="0.3907%" height="15" fill="rgb(205,94,34)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1567.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (128 samples, 0.39%)</title><rect x="99.5848%" y="1541" width="0.3907%" height="15" fill="rgb(213,110,48)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1551.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.39%)</title><rect x="99.5848%" y="1525" width="0.3907%" height="15" fill="rgb(236,142,28)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1535.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (128 samples, 0.39%)</title><rect x="99.5848%" y="1509" width="0.3907%" height="15" fill="rgb(225,135,29)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.39%)</title><rect x="99.5848%" y="1493" width="0.3907%" height="15" fill="rgb(252,45,31)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1477" width="0.3907%" height="15" fill="rgb(211,187,50)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1487.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1461" width="0.3907%" height="15" fill="rgb(229,109,7)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1471.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1445" width="0.3907%" height="15" fill="rgb(251,131,51)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1429" width="0.3907%" height="15" fill="rgb(251,180,35)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1439.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1413" width="0.3907%" height="15" fill="rgb(211,46,32)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1423.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1397" width="0.3907%" height="15" fill="rgb(248,123,17)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1407.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1381" width="0.3907%" height="15" fill="rgb(227,141,18)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1365" width="0.3907%" height="15" fill="rgb(216,102,9)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1375.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1349" width="0.3907%" height="15" fill="rgb(253,47,13)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (128 samples, 0.39%)</title><rect x="99.5848%" y="1333" width="0.3907%" height="15" fill="rgb(226,93,23)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1343.50"></text></g><g><title>scylla::transport::session::Session::run_query::{{closure}} (128 samples, 0.39%)</title><rect x="99.5848%" y="1317" width="0.3907%" height="15" fill="rgb(247,104,17)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1327.50"></text></g><g><title>&lt;scylla::transport::load_balancing::token_aware::TokenAwarePolicy as scylla::transport::load_balancing::LoadBalancingPolicy&gt;::plan (128 samples, 0.39%)</title><rect x="99.5848%" y="1301" width="0.3907%" height="15" fill="rgb(233,203,26)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (128 samples, 0.39%)</title><rect x="99.5848%" y="1285" width="0.3907%" height="15" fill="rgb(244,98,49)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (128 samples, 0.39%)</title><rect x="99.5848%" y="1269" width="0.3907%" height="15" fill="rgb(235,134,22)" fg:x="32622" fg:w="128"/><text x="99.8348%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.27%)</title><rect x="99.7039%" y="1253" width="0.2717%" height="15" fill="rgb(221,70,32)" fg:x="32661" fg:w="89"/><text x="99.9539%" y="1263.50"></text></g><g><title>&lt;itertools::unique_impl::Unique&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.27%)</title><rect x="99.7039%" y="1237" width="0.2717%" height="15" fill="rgb(238,15,50)" fg:x="32661" fg:w="89"/><text x="99.9539%" y="1247.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.02%)</title><rect x="99.9542%" y="1221" width="0.0214%" height="15" fill="rgb(215,221,48)" fg:x="32743" fg:w="7"/><text x="100.2042%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.02%)</title><rect x="99.9542%" y="1205" width="0.0214%" height="15" fill="rgb(236,73,3)" fg:x="32743" fg:w="7"/><text x="100.2042%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7 samples, 0.02%)</title><rect x="99.9542%" y="1189" width="0.0214%" height="15" fill="rgb(250,107,11)" fg:x="32743" fg:w="7"/><text x="100.2042%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.02%)</title><rect x="99.9573%" y="1173" width="0.0183%" height="15" fill="rgb(242,39,14)" fg:x="32744" fg:w="6"/><text x="100.2073%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (7 samples, 0.02%)</title><rect x="99.9756%" y="1909" width="0.0214%" height="15" fill="rgb(248,164,37)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1919.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (7 samples, 0.02%)</title><rect x="99.9756%" y="1893" width="0.0214%" height="15" fill="rgb(217,60,12)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1903.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1877" width="0.0214%" height="15" fill="rgb(240,125,29)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1887.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (7 samples, 0.02%)</title><rect x="99.9756%" y="1861" width="0.0214%" height="15" fill="rgb(208,207,28)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1871.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (7 samples, 0.02%)</title><rect x="99.9756%" y="1845" width="0.0214%" height="15" fill="rgb(209,159,27)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1855.50"></text></g><g><title>tokio::coop::budget (7 samples, 0.02%)</title><rect x="99.9756%" y="1829" width="0.0214%" height="15" fill="rgb(251,176,53)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1839.50"></text></g><g><title>tokio::coop::with_budget (7 samples, 0.02%)</title><rect x="99.9756%" y="1813" width="0.0214%" height="15" fill="rgb(211,85,7)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1823.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="99.9756%" y="1797" width="0.0214%" height="15" fill="rgb(216,64,54)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1807.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="99.9756%" y="1781" width="0.0214%" height="15" fill="rgb(217,54,24)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1791.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1765" width="0.0214%" height="15" fill="rgb(208,206,53)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1775.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1749" width="0.0214%" height="15" fill="rgb(251,74,39)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1759.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (7 samples, 0.02%)</title><rect x="99.9756%" y="1733" width="0.0214%" height="15" fill="rgb(226,47,5)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1743.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1717" width="0.0214%" height="15" fill="rgb(234,111,33)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1727.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1701" width="0.0214%" height="15" fill="rgb(251,14,10)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1711.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7 samples, 0.02%)</title><rect x="99.9756%" y="1685" width="0.0214%" height="15" fill="rgb(232,43,0)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1695.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7 samples, 0.02%)</title><rect x="99.9756%" y="1669" width="0.0214%" height="15" fill="rgb(222,68,43)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="99.9756%" y="1653" width="0.0214%" height="15" fill="rgb(217,24,23)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1663.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="99.9756%" y="1637" width="0.0214%" height="15" fill="rgb(229,209,14)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="99.9756%" y="1621" width="0.0214%" height="15" fill="rgb(250,149,48)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="99.9756%" y="1605" width="0.0214%" height="15" fill="rgb(210,120,37)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1589" width="0.0214%" height="15" fill="rgb(210,21,8)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1599.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1573" width="0.0214%" height="15" fill="rgb(243,145,7)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1583.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.02%)</title><rect x="99.9756%" y="1557" width="0.0214%" height="15" fill="rgb(238,178,32)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1567.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1541" width="0.0214%" height="15" fill="rgb(222,4,10)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1551.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1525" width="0.0214%" height="15" fill="rgb(239,7,37)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1535.50"></text></g><g><title>latte::req_stream::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1509" width="0.0214%" height="15" fill="rgb(215,31,37)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1493" width="0.0214%" height="15" fill="rgb(224,83,33)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1503.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (7 samples, 0.02%)</title><rect x="99.9756%" y="1477" width="0.0214%" height="15" fill="rgb(239,55,3)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1487.50"></text></g><g><title>&lt;futures_util::stream::stream::buffer_unordered::BufferUnordered&lt;St&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.02%)</title><rect x="99.9756%" y="1461" width="0.0214%" height="15" fill="rgb(247,92,11)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1471.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (7 samples, 0.02%)</title><rect x="99.9756%" y="1445" width="0.0214%" height="15" fill="rgb(239,200,7)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1455.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (7 samples, 0.02%)</title><rect x="99.9756%" y="1429" width="0.0214%" height="15" fill="rgb(227,115,8)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1413" width="0.0214%" height="15" fill="rgb(215,189,27)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1423.50"></text></g><g><title>latte::req_stream::{{closure}}::{{closure}}::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1397" width="0.0214%" height="15" fill="rgb(251,216,39)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1407.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1381" width="0.0214%" height="15" fill="rgb(207,29,47)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1365" width="0.0214%" height="15" fill="rgb(210,71,34)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1375.50"></text></g><g><title>&lt;latte::workload::write::Write&lt;S&gt; as latte::workload::Workload&gt;::run::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1349" width="0.0214%" height="15" fill="rgb(253,217,51)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1333" width="0.0214%" height="15" fill="rgb(222,117,46)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1343.50"></text></g><g><title>scylla::transport::session::Session::execute::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1317" width="0.0214%" height="15" fill="rgb(226,132,6)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.02%)</title><rect x="99.9756%" y="1301" width="0.0214%" height="15" fill="rgb(254,145,51)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1311.50"></text></g><g><title>scylla::transport::session::Session::execute_paged::{{closure}} (7 samples, 0.02%)</title><rect x="99.9756%" y="1285" width="0.0214%" height="15" fill="rgb(231,199,27)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1295.50"></text></g><g><title>scylla::transport::session::calculate_token (7 samples, 0.02%)</title><rect x="99.9756%" y="1269" width="0.0214%" height="15" fill="rgb(245,158,14)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1279.50"></text></g><g><title>scylla::statement::prepared_statement::PreparedStatement::compute_partition_key (7 samples, 0.02%)</title><rect x="99.9756%" y="1253" width="0.0214%" height="15" fill="rgb(240,113,14)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1263.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (7 samples, 0.02%)</title><rect x="99.9756%" y="1237" width="0.0214%" height="15" fill="rgb(210,20,13)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1247.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (7 samples, 0.02%)</title><rect x="99.9756%" y="1221" width="0.0214%" height="15" fill="rgb(241,144,13)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1231.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (7 samples, 0.02%)</title><rect x="99.9756%" y="1205" width="0.0214%" height="15" fill="rgb(235,43,34)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="99.9756%" y="1189" width="0.0214%" height="15" fill="rgb(208,36,20)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="99.9756%" y="1173" width="0.0214%" height="15" fill="rgb(239,204,10)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="99.9756%" y="1157" width="0.0214%" height="15" fill="rgb(217,84,43)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="99.9756%" y="1141" width="0.0214%" height="15" fill="rgb(241,170,50)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="99.9756%" y="1125" width="0.0214%" height="15" fill="rgb(226,205,29)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1135.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.02%)</title><rect x="99.9756%" y="1109" width="0.0214%" height="15" fill="rgb(233,113,1)" fg:x="32750" fg:w="7"/><text x="100.2256%" y="1119.50"></text></g><g><title>all (32,758 samples, 100%)</title><rect x="0.0000%" y="1941" width="100.0000%" height="15" fill="rgb(253,98,13)" fg:x="0" fg:w="32758"/><text x="0.2500%" y="1951.50"></text></g><g><title>tokio (32,530 samples, 99.30%)</title><rect x="0.6960%" y="1925" width="99.3040%" height="15" fill="rgb(211,115,12)" fg:x="228" fg:w="32530"/><text x="0.9460%" y="1935.50">tokio</text></g></svg></svg>